{"version":3,"file":"950.570544bf043125449182.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/../../libs/common/src/admin-console/models/request/organization-update.request.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/auth/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/organization-settings-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/admin-console/organizations/settings/organization-settings.module.ts"],"sourcesContent":["import { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<div class=\"page-header\">\n  <h1>{{ \"organizationInfo\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted || !canEditSubscription\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted || !canEditSubscription\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <bit-avatar [text]=\"org.name\" [id]=\"org.id\" size=\"large\"></bit-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { lastValueFrom } from \"rxjs\";\n\nimport { DialogServiceAbstraction } from \"@bitwarden/angular/services/dialog\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/admin-console/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/admin-console/models/request/organization-keys.request\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/admin-console/models/request/organization-update.request\";\nimport { OrganizationResponse } from \"@bitwarden/common/admin-console/models/response/organization.response\";\n\nimport { ApiKeyComponent } from \"../../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../../settings/purge-vault.component\";\n\nimport { DeleteOrganizationDialogResult, openDeleteOrganizationDialog } from \"./components\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n\n  selfHosted = false;\n  canEditSubscription = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<OrganizationResponse>;\n  taxFormPromise: Promise<unknown>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private dialogService: DialogServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.canEditSubscription = this.organizationService.get(\n        this.organizationId\n      ).canEditSubscription;\n      try {\n        this.org = await this.organizationApiService.get(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.organizationApiService.save(this.organizationId, request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteOrganization() {\n    const dialog = openDeleteOrganizationDialog(this.dialogService, {\n      data: {\n        organizationId: this.organizationId,\n        requestType: \"RegularDelete\",\n      },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n\n    if (result === DeleteOrganizationDialogResult.Deleted) {\n      this.router.navigate([\"/\"]);\n    }\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.getOrCreateApiKey.bind(\n        this.organizationApiService\n      );\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.rotateApiKey.bind(this.organizationApiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div [ngClass]=\"tabbedHeader ? 'tabbed-header' : 'page-header'\">\n  <h1 *ngIf=\"!organizationId\">{{ \"twoStepLogin\" | i18n }}</h1>\n  <h1 *ngIf=\"organizationId\">{{ \"twoStepLoginEnforcement\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<ng-container *ngIf=\"organizationId\">\n  <p>\n    {{ \"twoStepLoginOrganizationDescStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"twoStepLoginPolicy\" | i18n }}.</a>\n    <br />\n    {{ \"twoStepLoginOrganizationDuoDesc\" | i18n }}\n  </p>\n  <p>{{ \"twoStepLoginOrganizationSsoDesc\" | i18n }}</p>\n</ng-container>\n<bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</bit-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</bit-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        bitButton\n        buttonType=\"secondary\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyService } from \"@bitwarden/common/admin-console/abstractions/policy/policy.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\n\nimport { TwoFactorDuoComponent } from \"../../../auth/settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../../auth/settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../../auth/settings/two-factor-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  tabbedHeader = false;\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(apiService, modalService, messagingService, policyService, stateService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { canAccessSettingsTab } from \"@bitwarden/common/admin-console/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/admin-console/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"../../organizations/guards/org-permissions.guard\";\nimport { OrganizationRedirectGuard } from \"../../organizations/guards/org-redirect.guard\";\nimport { PoliciesComponent } from \"../../organizations/policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SettingsComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: { organizationPermissions: canAccessSettingsTab },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        canActivate: [OrganizationRedirectGuard],\n        data: {\n          autoRedirectCallback: getSettingsRoute,\n        },\n        children: [], // This is required to make the auto redirect work,\n      },\n      { path: \"account\", component: AccountComponent, data: { titleId: \"organizationInfo\" } },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"policies\",\n        component: PoliciesComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: (org: Organization) => org.canManagePolicies,\n          titleId: \"policies\",\n        },\n      },\n      {\n        path: \"tools\",\n        loadChildren: () =>\n          import(\"../tools/import-export/org-import-export.module\").then(\n            (m) => m.OrganizationImportExportModule\n          ),\n      },\n    ],\n  },\n];\n\nfunction getSettingsRoute(organization: Organization) {\n  if (organization.isOwner) {\n    return \"account\";\n  }\n  if (organization.canManagePolicies) {\n    return \"policies\";\n  }\n  if (organization.canAccessImportExport) {\n    return [\"tools\", \"import\"];\n  }\n  if (organization.canManageSso) {\n    return \"sso\";\n  }\n  if (organization.canManageScim) {\n    return \"scim\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationSettingsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../../shared\";\nimport { PoliciesModule } from \"../../organizations/policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { OrganizationSettingsRoutingModule } from \"./organization-settings-routing.module\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\n@NgModule({\n  imports: [SharedModule, LooseComponentsModule, PoliciesModule, OrganizationSettingsRoutingModule],\n  declarations: [SettingsComponent, AccountComponent, TwoFactorSetupComponent],\n})\nexport class OrganizationSettingsModule {}\n"],"names":["OrganizationUpdateRequest","submit","org","viewApiKey","rotateApiKey","AccountComponent","constructor","modalService","i18nService","route","platformUtilsService","cryptoService","logService","router","organizationService","organizationApiService","dialogService","selfHosted","canEditSubscription","loading","canUseApi","ngOnInit","this","isSelfHost","parent","params","subscribe","organizationId","get","useApi","e","error","request","name","businessName","billingEmail","hasPublicAndPrivateKeys","orgShareKey","getOrgKey","orgKeys","makeKeyPair","keys","encryptedString","formPromise","save","showToast","t","deleteOrganization","dialog","data","requestType","lastValueFrom","closed","navigate","purgeVault","openViewRef","purgeModalRef","comp","apiKeyModalRef","keyType","entityId","postKey","getOrCreateApiKey","bind","scope","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKeyModalRef","isRotation","recoveryCode","manage","TwoFactorSetupComponent","apiService","messagingService","policyService","stateService","super","tabbedHeader","type","duoComp","openModal","duoModalRef","onUpdated","enabled","updateStatus","getTwoFactorProviders","getTwoFactorOrganizationProviders","filterProvider","routes","path","component","canActivate","organizationPermissions","children","pathMatch","autoRedirectCallback","organization","isOwner","canManagePolicies","canAccessImportExport","canManageSso","canManageScim","titleId","loadChildren","then","m","OrganizationImportExportModule","OrganizationSettingsRoutingModule","OrganizationSettingsModule"],"sourceRoot":""}