{"version":3,"file":"app/main.13b2a0e59fc7f717ff56.js","mappings":"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YA,GACV,2BACA,iBACA,yBACA,kCACD,CALD,CAAYA,IAAAA,EAAkB,I,+BCA9B,IAAYC,E,iBAAZ,SAAYA,GACV,mBACA,0BACD,CAHD,CAAYA,IAAAA,EAAkB,I,+BCA9B,IAAYC,E,iBAAZ,SAAYA,GACV,qBACA,+BACA,mBACA,0BACD,CALD,CAAYA,IAAAA,EAAU,I,+BCAtB,IAAYC,E,iBAAZ,SAAYA,GACV,yBACA,iBACA,yCACA,2CACA,uCACA,qCACA,uCACA,mCACA,mCACA,qCACA,wCACA,oCACA,kCACA,8BACA,wCACA,sCACA,kBACA,sCACA,wCACA,4CACA,yCACD,CAtBD,CAAYA,IAAAA,EAAU,I,+BCAtB,IAAYC,E,iBAAZ,SAAYA,GACV,qCACA,2DACA,2DACA,uDACA,mDACA,6EACA,wEACD,CARD,CAAYA,IAAAA,EAAc,I,+BCA1B,IAAYC,E,iBAAZ,SAAYA,GACV,uCACA,sDACA,4CACA,8CACA,gDACA,8CACA,oDACA,8DACA,8DACA,0EAEA,0CACA,0CACA,0CACA,8DACA,8DACA,wCACA,gEACA,oDACA,oFACA,0FACA,oFACA,oEACA,0EACA,oEACA,4DACA,kDACA,4CACA,wFAEA,kDACA,kDACA,kDAEA,wCACA,wCACA,wCAEA,8DACA,kEACA,8DACA,8DACA,0EACA,sEACA,wFACA,4FACA,oFACA,wEACA,0EACA,8DACA,gEAEA,sDACA,8DACA,8EACA,kEACA,4DACA,8DACA,8EACA,gFACA,4EAEA,0CAEA,sDACA,0DACA,sDACA,sDAEA,sEACA,kEACA,sEACA,iFACD,CA1ED,CAAYA,IAAAA,EAAS,I,+BCArB,IAAYC,E,iBAAZ,SAAYA,GACV,mBACA,uBACA,yBACA,sBACD,CALD,CAAYA,IAAAA,EAAS,I,+BCArB,IAAYC,E,iBAAZ,SAAYA,GACV,iDACA,8CACD,CAHD,CAAYA,IAAAA,EAAW,I,+BCAvB,IAAYC,E,iBAAZ,SAAYA,GACV,gBACA,kBACA,mBACD,CAJD,CAAYA,IAAAA,EAAmB,I,oHCEnBC,E,YAAZ,SAAYA,GACV,qCACA,0BACD,CAHD,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,MAAxBroF,KAAK4hL,gBAA+B2J,EAAsBC,EACtE,CAEAzrL,W,MACsB,QAApB,EAAAC,KAAK4hL,uBAAe,SAAEsE,cAAc,WACtC,E,iCAfWuF,GAAkB,e,mBAAlBA,EAAkB,2E,uICzBxB,MAAMC,EACXtsL,YAAgCwiL,GAAA,KAAAA,gBAAAA,CAAyC,CAEtChzH,gBACjC,OAAO,YAAqB,CAC1B,gBACA,oBAEA,4BACA,+BACCjrD,OAA+B0kF,MAAxBroF,KAAK4hL,gBAA+B,KAAsB,KACtE,CAEA7hL,W,MACsB,QAApB,EAAAC,KAAK4hL,uBAAe,SAAEsE,cAAc,WACtC,E,iCAfWwF,GAAkB,e,mBAAlBA,EAAkB,2E,yNCHzB/F,EAAY,CAMhB,cACA,yBACA,kBACA,qBACA,yBACA,uBACA,uBACA,iBACA,6BACA,yBAGIlB,EAA2C,CAC/CkH,SAAU,CACR,oBACA,oBACA,wBACA,gCACA,gCACA,6CACA,yBACA,uCACA,sCACGhG,GAELiG,KAAM,CACJ,oBACA,gBACA,wBACA,gCACA,4BACA,yCACA,yBACA,uCACA,sCACGjG,GAELkG,MAAO,CACL,oBACA,iBACA,wBACA,gCACA,8BACA,2CACA,yBACA,uCACA,sCACGlG,GAELjB,QAAS,CACP,oBACA,oBACA,wBACA,0BACA,8BACA,2CACA,yBACA,uCACA,sCACGiB,GAELhB,UAAW,CACT,oBACA,iBACA,uBACA,0BACA,yBACA,2CACA,yBACA,sCACA,mCACA,gCACA,yCACGgB,GAELf,OAAQ,CACN,oBACA,kBACA,uBACA,0BACA,yBACA,2CACA,yBACA,sCACA,mCACA,iCACA,yCACGe,GAELmG,MAAO,CACL,oBACA,gBACA,wBACA,gCACA,4BACA,yCACA,uCACA,sCACGnG,GAELE,SAAU,IAKNkG,EAA0C,CAC9C7yB,QAAS,CAAC,YAAa,aACvB2pB,MAAO,CAAC,kBAAmB,eAAgB,WAQtC,MAAMmJ,EALb,cAUW,KAAA5/K,KAAuB,UA0BvB,KAAA1M,SAAU,EACV,KAAA0iB,UAAW,C,CAzBMwsC,gB,MACxB,MAAO,CACL,mBACA,YACA,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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/webpack/runtime/create fake namespace object","webpack://@bitwarden/web-vault/webpack/runtime/load script","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.module.ts","webpack://@bitwarden/web-vault/./src/app/common/base.accept.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/event.view.ts","webpack://@bitwarden/web-vault/./src/app/common/base.events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.people.component.ts","webpack://@bitwarden/web-vault/./src/app/components/dynamic-avatar.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/not-premium.directive.ts","webpack://@bitwarden/web-vault/./src/app/components/premium-badge.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.ts","webpack://@bitwarden/web-vault/./src/app/components/user-verification.component.html","webpack://@bitwarden/web-vault/./src/app/components/user-verification.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync/syncNotifier.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/accountFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/stateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/stateVersion.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/global-state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-avatar.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/notificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/notification.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/anonymousHub.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/device.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/user-api-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/api-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachment-upload-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/auth-request.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/authentication/register.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing-history.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing-payment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/breach-account.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/collection.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/device-verification.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/global-domain.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/domains.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/event.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identity-captcha.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identity-token.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identity-two-factor.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/key-connector-user-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-connection.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-export.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-sponsorship-sync-status.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-provider-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/payment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/plan.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/prelogin.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/responses/organization-user-bulk-public-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user-bulk-public-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user-bulk.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-access.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-file-download-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-file-upload-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sso-pre-validate.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/subscription.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/folder.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sync.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/tax-info.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/tax-rate.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-authenticator.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-duo.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-email.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-recover.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-web-authn.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-yubi-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/user-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/throttle.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/password-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/auth-result.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordlessLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/sso-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/user-api-login.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/prelogin.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/sequentialize.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sorted-ciphers-cache.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-move.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-restore.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-share.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-partial.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-share.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/server-config.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/server-config.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/wordlist.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encrypted-organization-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encrypted-object.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/encrypt.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/get-class-initializer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/multithread-encrypt.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/event.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/event.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fileUploadType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/set-key-connector-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/key-connector-user-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/login.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/responses/organization-user.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/responses/organization-user-bulk.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization-user/requests/organization-user-bulk.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-api-key-information.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-auto-enroll-status.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keys.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-keys.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-subscription.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization/organization-sso.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password-generator-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/reset-password-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/provider.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/organization.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync/sync.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/verify-otp.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/anon-addy-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/duck-duck-go-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/fastmail-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/firefox-relay-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/forwarder-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/simple-login-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/decrypt-parameters.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/themeBuilder.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/jslib-services.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/avatar-update.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event/event-upload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event/event-collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization-user/organization-user.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync/syncNotifier.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/memoryStorage.service.ts","webpack://@bitwarden/web-vault/./src/app/core/broadcaster-messaging.service.ts","webpack://@bitwarden/web-vault/./src/app/core/event.service.ts","webpack://@bitwarden/web-vault/./src/app/core/html-storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/./src/app/core/init.service.ts","webpack://@bitwarden/web-vault/./src/app/core/modal.service.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.html","webpack://@bitwarden/web-vault/./src/app/core/password-reprompt.service.ts","webpack://@bitwarden/web-vault/./src/app/core/policy-list.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack://@bitwarden/web-vault/./src/app/core/web-file-download.service.ts","webpack://@bitwarden/web-vault/./src/app/core/core.module.ts","webpack://@bitwarden/web-vault/./src/app/core/state/global-state.ts","webpack://@bitwarden/web-vault/./src/app/core/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state-migration.service.ts","webpack://@bitwarden/web-vault/./src/app/core/router.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state/account.ts","webpack://@bitwarden/web-vault/./src/app/core/state/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/clientType.ts","webpack://@bitwarden/web-vault/./src/app/core/web-platform-utils.service.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher-content.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher-content.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/core-organization.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-invite.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/views/organization-user-admin-view.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/user-admin.service.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/collection-admin.service.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/group/requests/group.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/group/requests/organization-group-bulk.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/group/group.service.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/group/responses/group.response.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/views/collection-access-selection.view.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/views/collection-admin.view.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/views/group.view.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-create.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/org-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/org-redirect.guard.ts","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-bulk-confirm.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/members/components/bulk/bulk-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/members/components/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/members/components/bulk/bulk-remove.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/members/components/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/members/components/bulk/bulk-status.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/members/components/bulk/bulk-status.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/policy.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/base-policy.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policy-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policy-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-update.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-settings-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-settings.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/utils/form-selection-list.ts","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/access-selector/user-type.pipe.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/access-selector/access-selector.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/access-selector/access-selector.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/access-selector/access-selector.models.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/access-selector/access-selector.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/collection-dialog/collection-dialog.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/collection-dialog/collection-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/bit-validators/forbidden-characters.validator.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/collection-dialog/collection-dialog.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/shared-organization.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-accept.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-accept.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/password-hint.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/misc/captcha_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/iframe_component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authRequestType.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/captchaProtected.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/log-in-credentials.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordless-create-auth.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login-with-device.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login/login-with-device.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/login.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/delete-recover.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/two-factor-recovery.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/remove-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-reset-password-enrollment.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/set-password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/set-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/sso.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/reference-event.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/register.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/register.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/webauthn_iframe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-temp-password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-email.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-delete-recover.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/guards/home.guard.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/pipes/pipes.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collection-badge/collection-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/group-badge/group-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/models/vault-filter.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.html","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/attachments.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.html","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/components/vault-filter-section.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/components/vault-filter-section.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/components/link-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/components/link-sso.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/components/organization-options.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/components/organization-options.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/components/vault-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/components/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/collection-bulk-delete.request.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-delete-dialog/bulk-delete-dialog.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-delete-dialog/bulk-delete-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/vault-items.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-move-dialog/bulk-move-dialog.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-move-dialog/bulk-move-dialog.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-restore-dialog/bulk-restore-dialog.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/types/checkable.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-restore-dialog/bulk-restore-dialog.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-share-dialog/bulk-share-dialog.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-share-dialog/bulk-share-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/group-badge/group-name-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/group-badge/group-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/vault/pipes/get-collection-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collection-badge/collection-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collection-badge/collection-name.badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/pipes/get-organization-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-items.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-items.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-items.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planSponsorshipType.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organization-sponsorship-redeem.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-access.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-access.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send-access.request.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.html","webpack://@bitwarden/web-vault/./src/app/send/access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/send.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.html","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/send.component.html","webpack://@bitwarden/web-vault/./src/app/send/send.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.html","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/email-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/email.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-profile.request.ts","webpack://@bitwarden/web-vault/./src/app/components/selectable-avatar.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-avatar.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-avatar.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.html","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-domains.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.html","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-confirm.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-invite.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-update.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-password.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.html","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.html","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folder-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-key.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/kdf.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/notAllowedValueAsync.validator.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-history-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/billing-history-view.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.html","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/generator.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-generator-history.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/select-copy.directive.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.html","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.html","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-dialogs.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/share.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/low-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/low-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/oss-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/guards/has-premium.guard.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-breach.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-exposed-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-inactive-two-factor.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-reused-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-unsecured-websites.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-weak-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/reports-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/cipher-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/models/report-variant.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-card/report-card.component.html","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-card/report-card.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-list/report-list.component.html","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-list/report-list.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/storage.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/transactionType.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-history.component.html","webpack://@bitwarden/web-vault/./src/app/settings/billing-history.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-create.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-upgrade.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-organization-create.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-bank.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/bit-pay-invoice.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/payment.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/two-factor-provider.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-base.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-duo.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-authenticator.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-email.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-web-authn-delete.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-web-authn.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-yubio-otp.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.ts","webpack://@bitwarden/web-vault/./src/app/shared/loose-components.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/async-actions.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/avatar/avatar.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge-list/badge-list.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/color-password/color-password.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/table.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tabs.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/toggle-group/toggle-group.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/locales.ts","webpack://@bitwarden/web-vault/./src/app/shared/shared.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/true-false-value.directive.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/services/abstractions/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/services/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/./src/utils/flags.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/organization-manage.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/organization-user.module.ts","webpack://@bitwarden/web-vault/./src/app/oss.module.ts","webpack://@bitwarden/web-vault/./src/app/wildcard-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-add-organization.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/services/webProvider.service.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/guards/provider-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.html","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-accept.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-bulk.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-confirm.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-bulk-confirm.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-invite.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-update.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-update.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-setup.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/app.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/scim-config.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/scim-config.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organization-sso.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sso-config.view.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-strip-spaces.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/copy-click.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/launch-click.directive.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/base-cva.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/main.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/fallback-src.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal.ref.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-title.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/api-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/autofocus.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-verbatim.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-click.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-prop.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/auth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/lock.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/unauth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/toastr.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/jslib.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/search.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/user-name.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/user-type.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/injection-tokens.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal-injector.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/modal.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/avatar-update.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/anonymousHub.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/encrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event/event-collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event/event-upload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/log.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/login.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/messaging.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/organization-user.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-reset-password.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/platformUtils.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync/sync.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationStatus.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherRepromptType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/deviceType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/eventType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fieldType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/hashPurpose.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/kdfType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationApiKeyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationConnectionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/paymentMethodType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/policyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/productType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/secureNoteType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/sendType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/ssoEnums.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/themeType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/twoFactorProviderType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/verificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/flags.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/serviceUtils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/card.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/field.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/identity.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/login-uri.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/login.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/permissions.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/secure-note.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/send-file.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/send-text.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sso-config.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/attachment.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/card.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cipher.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/collection.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/event.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/field.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/folder.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/identity.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/login-uri.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/login.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/password-history.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/policy.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/provider.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/secure-note.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send-file.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send-text.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/server-config.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/account.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/attachment.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/card.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/cipher.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/collection.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/domain-base.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/enc-array-buffer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/enc-string.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/environment-urls.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/field.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/folder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/generated-password-history.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/identity.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/kdf-config.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login-uri.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/master-password-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/organization.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/policy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/secure-note.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-file.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-text.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/symmetric-crypto-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/tree-node.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/window-state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/card.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/field.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/identity.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/login-uri.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/login.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/secure-note.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipher.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipher-with-ids.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collection.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collection-with-id.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folder.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folder-with-id.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-delete.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-collections.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-create.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/attachment.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/collection.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folder.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/token-two-factor.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keys.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-api-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-connection.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-keys.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-tax-info-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/secret-verification.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/selection-read-only.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/tax-info-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/two-factor-email.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/base.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/password-history.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/cipher.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/emergency-access.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/error.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/list.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/policy.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/selection-read-only.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/attachment.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/card.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cipher.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/collection.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/field.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/folder.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/identity.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/item.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/login-uri.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/login.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/password-history.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/secure-note.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-file.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-text.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/initializer-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/storageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/bit-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/bit-submit.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/form-button.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/avatar/avatar.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge-list/badge-list.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/badge-list/badge-list.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/breadcrumbs/breadcrumb.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/breadcrumbs/breadcrumb.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/breadcrumbs/breadcrumbs.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/breadcrumbs/breadcrumbs.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/breadcrumbs/breadcrumbs.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/checkbox/checkbox.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/checkbox/checkbox.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/color-password/color-password.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/animations.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-configurable-dialog/simple-configurable-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-configurable-dialog/simple-configurable-dialog.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog/dialog.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog/dialog.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/directives/dialog-close.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/directives/dialog-title-container.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-configurable-dialog/models/simple-dialog-close-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-configurable-dialog/models/simple-dialog-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-dialog/simple-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-dialog/simple-dialog.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/form-control.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/form-control.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/form-control.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/form-control.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/label.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error-summary.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field-control.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/password-input-toggle.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/prefix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/suffix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon-button/icon-button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon-button/icon-button.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/icon-button/icon-button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icons/search.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/link/link.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/link/link.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-trigger-for.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/radio-button/radio-button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/button-like.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/shared.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/cell.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/row.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/table.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/table/table.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/shared/tab-header.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/shared/tab-list-container.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/shared/tab-list-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab-body.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab-group.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab-body.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab-group.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab-label.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-link.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-link.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-nav-bar.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-nav-bar.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/utils/function-to-observable.ts","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/compat get default export","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/ensure chunk","webpack://@bitwarden/web-vault/webpack/runtime/get javascript chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/get mini-css chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/publicPath","webpack://@bitwarden/web-vault/webpack/runtime/jsonp chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"@bitwarden/web-vault:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { RegisterFormComponent } from \"./register-form.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [RegisterFormComponent],\n  exports: [RegisterFormComponent],\n})\nexport class RegisterFormModule {}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  actionPromise: Promise<any>;\n\n  protected requiredParameters: string[] = [];\n  protected failedShortMessage = \"inviteAcceptFailedShort\";\n  protected failedMessage = \"inviteAcceptFailed\";\n\n  constructor(\n    protected router: Router,\n    protected platformUtilService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService\n  ) {}\n\n  abstract authedHandler(qParams: Params): Promise<void>;\n  abstract unauthedHandler(qParams: Params): Promise<void>;\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      let error = this.requiredParameters.some((e) => qParams?.[e] == null || qParams[e] === \"\");\n      let errorMessage: string = null;\n      if (!error) {\n        this.authed = await this.stateService.getIsAuthenticated();\n        this.email = qParams.email;\n\n        if (this.authed) {\n          try {\n            await this.authedHandler(qParams);\n          } catch (e) {\n            error = true;\n            errorMessage = e.message;\n          }\n        } else {\n          await this.unauthedHandler(qParams);\n        }\n      }\n\n      if (error) {\n        const message =\n          errorMessage != null\n            ? this.i18nService.t(this.failedShortMessage, errorMessage)\n            : this.i18nService.t(this.failedMessage);\n        this.platformUtilService.showToast(\"error\", null, message, { timeout: 10000 });\n        this.router.navigate([\"/\"]);\n      }\n\n      this.loading = false;\n    });\n  }\n}\n","import { EventSystemUser } from \"../../enums/event-system-user\";\nimport { EventType } from \"../../enums/eventType\";\n\nexport class EventView {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: EventType;\n  installationId: string;\n  systemUser: EventSystemUser;\n\n  constructor(data: Required<EventView>) {\n    this.message = data.message;\n    this.humanReadableMessage = data.humanReadableMessage;\n    this.appIcon = data.appIcon;\n    this.appName = data.appName;\n    this.userId = data.userId;\n    this.userName = data.userName;\n    this.userEmail = data.userEmail;\n    this.date = data.date;\n    this.ip = data.ip;\n    this.type = data.type;\n    this.installationId = data.installationId;\n    this.systemUser = data.systemUser;\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { EventView } from \"@bitwarden/common/models/view/event.view\";\n\nimport { EventService } from \"../core\";\n\n@Directive()\nexport abstract class BaseEventsComponent {\n  loading = true;\n  loaded = false;\n  events: EventView[];\n  start: string;\n  end: string;\n  dirtyDates = true;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  exportPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  abstract readonly exportFileName: string;\n\n  constructor(\n    protected eventService: EventService,\n    protected i18nService: I18nService,\n    protected exportService: ExportService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected fileDownloadService: FileDownloadService\n  ) {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n  }\n\n  async exportEvents() {\n    if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n      return;\n    }\n\n    this.loading = true;\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    try {\n      this.exportPromise = this.export(dates[0], dates[1]);\n\n      await this.exportPromise;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    this.exportPromise = null;\n    this.loading = false;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.appApiPromiseUnfulfilled()) {\n      return;\n    }\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    this.loading = true;\n    let events: EventView[] = [];\n    try {\n      const promise = this.loadAndParseEvents(\n        dates[0],\n        dates[1],\n        clearExisting ? null : this.continuationToken\n      );\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      const result = await promise;\n      this.continuationToken = result.continuationToken;\n      events = result.events;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.dirtyDates = false;\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n\n  protected abstract requestEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ): Promise<ListResponse<EventResponse>>;\n  protected abstract getUserName(r: EventResponse, userId: string): { name: string; email: string };\n\n  protected async loadAndParseEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ) {\n    const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user = this.getUserName(r, userId);\n        const userName = user != null ? user.name : this.i18nService.t(\"unknown\");\n\n        return new EventView({\n          message: eventInfo.message,\n          humanReadableMessage: eventInfo.humanReadableMessage,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: userName,\n          userEmail: user != null ? user.email : \"\",\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n          installationId: r.installationId,\n          systemUser: r.systemUser,\n        });\n      })\n    );\n    return { continuationToken: response.continuationToken, events: events };\n  }\n\n  protected parseDates() {\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return null;\n    }\n    return dates;\n  }\n\n  protected appApiPromiseUnfulfilled() {\n    return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n  }\n\n  private async export(start: string, end: string) {\n    let continuationToken = this.continuationToken;\n    let events = [].concat(this.events);\n\n    while (continuationToken != null) {\n      const result = await this.loadAndParseEvents(start, end, continuationToken);\n      continuationToken = result.continuationToken;\n      events = events.concat(result.events);\n    }\n\n    const data = await this.exportService.getEventExport(events);\n    const fileName = this.exportService.getFileName(this.exportFileName, \"csv\");\n    this.fileDownloadService.download({\n      fileName,\n      blobData: data,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-user-confirm\",\n  templateUrl: \"user-confirm.component.html\",\n})\nexport class UserConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() publicKey: Uint8Array;\n  @Output() onConfirmedUser = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      if (this.publicKey != null) {\n        const fingerprint = await this.cryptoService.getFingerprint(\n          this.userId,\n          this.publicKey.buffer\n        );\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    this.onConfirmedUser.emit();\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/provider-user.response\";\n\nimport { OrganizationUserView } from \"../organizations/core/views/organization-user.view\";\nimport { UserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<\n  UserType extends ProviderUserUserDetailsResponse | OrganizationUserView\n> {\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  get allCount() {\n    return this.activeUsers != null ? this.activeUsers.length : 0;\n  }\n\n  get invitedCount() {\n    return this.statusMap.has(this.userStatusType.Invited)\n      ? this.statusMap.get(this.userStatusType.Invited).length\n      : 0;\n  }\n\n  get acceptedCount() {\n    return this.statusMap.has(this.userStatusType.Accepted)\n      ? this.statusMap.get(this.userStatusType.Accepted).length\n      : 0;\n  }\n\n  get confirmedCount() {\n    return this.statusMap.has(this.userStatusType.Confirmed)\n      ? this.statusMap.get(this.userStatusType.Confirmed).length\n      : 0;\n  }\n\n  get revokedCount() {\n    return this.statusMap.has(this.userStatusType.Revoked)\n      ? this.statusMap.get(this.userStatusType.Revoked).length\n      : 0;\n  }\n\n  get showConfirmUsers(): boolean {\n    return (\n      this.activeUsers != null &&\n      this.statusMap != null &&\n      this.activeUsers.length > 1 &&\n      this.confirmedCount > 0 &&\n      this.confirmedCount < 3 &&\n      this.acceptedCount > 0\n    );\n  }\n\n  get showBulkConfirmUsers(): boolean {\n    return this.acceptedCount > 0;\n  }\n\n  abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n  abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n  loading = true;\n  statusMap = new Map<StatusType, UserType[]>();\n  status: StatusType;\n  users: UserType[] = [];\n  pagedUsers: UserType[] = [];\n  searchText: string;\n  actionPromise: Promise<void>;\n\n  protected allUsers: UserType[] = [];\n  protected activeUsers: UserType[] = [];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedUsersCount = 0;\n\n  constructor(\n    protected apiService: ApiService,\n    private searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cryptoService: CryptoService,\n    protected validationService: ValidationService,\n    protected modalService: ModalService,\n    private logService: LogService,\n    private searchPipe: SearchPipe,\n    protected userNamePipe: UserNamePipe,\n    protected stateService: StateService\n  ) {}\n\n  abstract edit(user: UserType): void;\n  abstract getUsers(): Promise<ListResponse<UserType> | UserType[]>;\n  abstract deleteUser(id: string): Promise<void>;\n  abstract revokeUser(id: string): Promise<void>;\n  abstract restoreUser(id: string): Promise<void>;\n  abstract reinviteUser(id: string): Promise<void>;\n  abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<void>;\n\n  async load() {\n    const response = await this.getUsers();\n    this.statusMap.clear();\n    this.activeUsers = [];\n    for (const status of Utils.iterateEnum(this.userStatusType)) {\n      this.statusMap.set(status, []);\n    }\n\n    if (response instanceof ListResponse) {\n      this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n    } else if (Array.isArray(response)) {\n      this.allUsers = response;\n    }\n\n    this.allUsers.sort(\n      Utils.getSortFunction<ProviderUserUserDetailsResponse | OrganizationUserView>(\n        this.i18nService,\n        \"email\"\n      )\n    );\n    this.allUsers.forEach((u) => {\n      if (!this.statusMap.has(u.status)) {\n        this.statusMap.set(u.status, [u]);\n      } else {\n        this.statusMap.get(u.status).push(u);\n      }\n      if (u.status !== this.userStatusType.Revoked) {\n        this.activeUsers.push(u);\n      }\n    });\n    this.filter(this.status);\n    this.loading = false;\n  }\n\n  filter(status: StatusType) {\n    this.status = status;\n    if (this.status != null) {\n      this.users = this.statusMap.get(this.status);\n    } else {\n      this.users = this.activeUsers;\n    }\n    // Reset checkbox selecton\n    this.selectAll(false);\n    this.resetPaging();\n  }\n\n  loadMore() {\n    if (!this.users || this.users.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedUsers.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n      pagedSize = this.pagedUsersCount;\n    }\n    if (this.users.length > pagedLength) {\n      this.pagedUsers = this.pagedUsers.concat(\n        this.users.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedUsersCount = this.pagedUsers.length;\n    this.didScroll = this.pagedUsers.length > this.pageSize;\n  }\n\n  checkUser(user: UserType, select?: boolean) {\n    (user as any).checked = select == null ? !(user as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n\n    const filteredUsers = this.searchPipe.transform(\n      this.users,\n      this.searchText,\n      \"name\",\n      \"email\",\n      \"id\"\n    );\n\n    const selectCount =\n      select && filteredUsers.length > MaxCheckedCount ? MaxCheckedCount : filteredUsers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkUser(filteredUsers[i], select);\n    }\n  }\n\n  async resetPaging() {\n    this.pagedUsers = [];\n    this.loadMore();\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  protected async removeUserConfirmationDialog(user: UserType) {\n    return this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(user),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  async remove(user: UserType) {\n    const confirmed = await this.removeUserConfirmationDialog(user);\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.deleteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(user))\n      );\n      this.removeUser(user);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async revoke(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.revokeWarningMessage(),\n      this.i18nService.t(\"revokeUserId\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.revokeUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(user: UserType) {\n    this.actionPromise = this.restoreUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async reinvite(user: UserType) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    this.actionPromise = this.reinviteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"hasBeenReinvited\", this.userNamePipe.transform(user))\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async confirm(user: UserType) {\n    function updateUser(self: BasePeopleComponent<UserType>) {\n      user.status = self.userStatusType.Confirmed;\n      const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n      if (mapIndex > -1) {\n        self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n        self.statusMap.get(self.userStatusType.Confirmed).push(user);\n      }\n    }\n\n    const confirmUser = async (publicKey: Uint8Array) => {\n      try {\n        this.actionPromise = this.confirmUser(user, publicKey);\n        await this.actionPromise;\n        updateUser(this);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(user))\n        );\n      } catch (e) {\n        this.validationService.showError(e);\n        throw e;\n      } finally {\n        this.actionPromise = null;\n      }\n    };\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n      if (autoConfirm == null || !autoConfirm) {\n        const [modal] = await this.modalService.openViewRef(\n          UserConfirmComponent,\n          this.confirmModalRef,\n          (comp) => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.userId = user != null ? user.userId : null;\n            comp.publicKey = publicKey;\n            // eslint-disable-next-line rxjs/no-async-subscribe\n            comp.onConfirmedUser.subscribe(async () => {\n              try {\n                comp.formPromise = confirmUser(publicKey);\n                await comp.formPromise;\n                modal.close();\n              } catch (e) {\n                this.logService.error(e);\n              }\n            });\n          }\n        );\n        return;\n      }\n\n      try {\n        const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n        this.logService.info(`User's fingerprint: ${fingerprint.join(\"-\")}`);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      await confirmUser(publicKey);\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.users && this.users.length > this.pageSize;\n  }\n\n  protected revokeWarningMessage(): string {\n    return this.i18nService.t(\"revokeUserConfirmation\");\n  }\n\n  protected getCheckedUsers() {\n    return this.users.filter((u) => (u as any).checked);\n  }\n\n  protected removeUser(user: UserType) {\n    let index = this.users.indexOf(user);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      this.resetPaging();\n    }\n\n    index = this.allUsers.indexOf(user);\n    if (index > -1) {\n      this.allUsers.splice(index, 1);\n    }\n\n    if (this.statusMap.has(user.status)) {\n      index = this.statusMap.get(user.status).indexOf(user);\n      if (index > -1) {\n        this.statusMap.get(user.status).splice(index, 1);\n      }\n    }\n  }\n}\n","import { Component, Input, OnDestroy } from \"@angular/core\";\nimport { Observable, Subject } from \"rxjs\";\n\nimport { AvatarUpdateService } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\ntype SizeTypes = \"xlarge\" | \"large\" | \"default\" | \"small\" | \"xsmall\";\n@Component({\n  selector: \"dynamic-avatar\",\n  template: `<span [title]=\"title\">\n    <bit-avatar\n      appStopClick\n      [text]=\"text\"\n      [size]=\"size\"\n      [color]=\"color$ | async\"\n      [border]=\"border\"\n      [id]=\"id\"\n      [title]=\"title\"\n    >\n    </bit-avatar>\n  </span>`,\n})\nexport class DynamicAvatarComponent implements OnDestroy {\n  @Input() border = false;\n  @Input() id: string;\n  @Input() text: string;\n  @Input() title: string;\n  @Input() size: SizeTypes = \"default\";\n  color$: Observable<string | null>;\n  private destroy$ = new Subject<void>();\n\n  constructor(private accountUpdateService: AvatarUpdateService) {\n    if (this.text) {\n      this.text = this.text.toUpperCase();\n    }\n    this.color$ = this.accountUpdateService.avatarUpdate$;\n  }\n\n  async ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n/**\n * Hides the element if the user has premium.\n */\n@Directive({\n  selector: \"[appNotPremium]\",\n})\nexport class NotPremiumDirective implements OnInit {\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const premium = await this.stateService.getCanAccessPremium();\n\n    if (premium) {\n      this.viewContainer.clear();\n    } else {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Component({\n  selector: \"app-premium-badge\",\n  template: `\n    <button type=\"button\" *appNotPremium bitBadge badgeType=\"success\" (click)=\"premiumRequired()\">\n      {{ \"premium\" | i18n }}\n    </button>\n  `,\n})\nexport class PremiumBadgeComponent {\n  constructor(private messagingService: MessagingService) {}\n\n  premiumRequired() {\n    this.messagingService.send(\"premiumRequired\");\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Directive({\n  selector: \"app-user-verification\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: Utils.isNullOrWhitespace(secret) ? null : secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { UserVerificationComponent as BaseComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent extends BaseComponent {}\n","export abstract class AccountService {}\n\nexport abstract class InternalAccountService extends AccountService {\n  abstract delete(): void;\n}\n","import { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport abstract class ConfigApiServiceAbstraction {\n  get: () => Promise<ServerConfigResponse>;\n}\n","import { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\nexport abstract class SyncNotifierService {\n  sync$: Observable<SyncEventArgs>;\n  next: (event: SyncEventArgs) => void;\n}\n","import { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\n\nexport abstract class UserVerificationApiServiceAbstraction {\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postAccountRequestOTP: () => Promise<void>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/global-state\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/global-state\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Six = 6, // Delete account.keys.legacyEtmKey property\n  Latest = Six,\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environment-urls\";\nimport { WindowState } from \"./window-state\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n  enableDuckDuckGoBrowserIntegration?: boolean;\n}\n","export class UpdateAvatarRequest {\n  avatarColor: string;\n\n  constructor(avatarColor: string) {\n    this.avatarColor = avatarColor;\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n\n  AuthRequest = 15,\n  AuthRequestResponse = 16,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      case NotificationType.AuthRequest:\n      case NotificationType.AuthRequestResponse:\n        this.payload = new AuthRequestPushNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class AuthRequestPushNotification extends BaseResponse {\n  id: string;\n  userId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpTransportType,\n  HubConnection,\n  HubConnectionBuilder,\n  IHubProtocol,\n} from \"@microsoft/signalr\";\nimport { MessagePackHubProtocol } from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"../abstractions/anonymousHub.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\n\nimport {\n  AuthRequestPushNotification,\n  NotificationResponse,\n} from \"./../models/response/notification.response\";\n\n@Injectable()\nexport class AnonymousHubService implements AnonymousHubServiceAbstraction {\n  private anonHubConnection: HubConnection;\n  private url: string;\n\n  constructor(\n    private environmentService: EnvironmentService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async createHubConnection(token: string) {\n    this.url = this.environmentService.getNotificationsUrl();\n\n    this.anonHubConnection = new HubConnectionBuilder()\n      .withUrl(this.url + \"/anonymous-hub?Token=\" + token, {\n        skipNegotiation: true,\n        transport: HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new MessagePackHubProtocol() as IHubProtocol)\n      .build();\n\n    this.anonHubConnection.start().catch((error) => this.logService.error(error));\n\n    this.anonHubConnection.on(\"AuthRequestResponseRecieved\", (data: any) => {\n      this.ProcessNotification(new NotificationResponse(data));\n    });\n  }\n\n  stopHubConnection() {\n    if (this.anonHubConnection) {\n      this.anonHubConnection.stop();\n    }\n  }\n\n  private async ProcessNotification(notification: NotificationResponse) {\n    await this.authService.authResponsePushNotifiction(\n      notification.payload as AuthRequestPushNotification\n    );\n  }\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n  protected passwordlessAuthRequest: string;\n\n  constructor(protected twoFactor: TokenTwoFactorRequest, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenTwoFactorRequest) {\n    this.twoFactor = twoFactor;\n  }\n\n  setPasswordlessAccessCode(accessCode: string) {\n    this.passwordlessAuthRequest = accessCode;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    //passswordless login\n    if (this.passwordlessAuthRequest) {\n      obj.authRequest = this.passwordlessAuthRequest;\n    }\n\n    if (this.twoFactor) {\n      if (this.twoFactor.token && this.twoFactor.provider != null) {\n        obj.twoFactorToken = this.twoFactor.token;\n        obj.twoFactorProvider = this.twoFactor.provider;\n        obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n      }\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class UserApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class AuthRequestResponse extends BaseResponse {\n  id: string;\n  publicKey: string;\n  requestDeviceType: DeviceType;\n  requestIpAddress: string;\n  key: string;\n  masterPasswordHash: string;\n  creationDate: string;\n  requestApproved: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n    this.requestDeviceType = this.getResponseProperty(\"RequestDeviceType\");\n    this.requestIpAddress = this.getResponseProperty(\"RequestIpAddress\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.masterPasswordHash = this.getResponseProperty(\"MasterPasswordHash\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.requestApproved = this.getResponseProperty(\"RequestApproved\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nimport { ICaptchaProtectedResponse } from \"./captcha-protected.response\";\n\nexport class RegisterResponse extends BaseResponse implements ICaptchaProtectedResponse {\n  captchaBypassToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaBypassToken = this.getResponseProperty(\"CaptchaBypassToken\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billing.response\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingSourceResponse } from \"./billing.response\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { SelectionReadOnlyResponse } from \"./selection-read-only.response\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionAccessDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n  users: SelectionReadOnlyResponse[] = [];\n\n  /**\n   * Flag indicating the user has been explicitly assigned to this Collection\n   */\n  assigned: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.assigned = this.getResponseProperty(\"Assigned\") || false;\n\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n\n    const users = this.getResponseProperty(\"Users\");\n    if (users != null) {\n      this.users = users.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { GlobalDomainResponse } from \"./global-domain.response\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventSystemUser } from \"../../enums/event-system-user\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n  systemUser: EventSystemUser;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n    this.systemUser = this.getResponseProperty(\"SystemUser\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  kdfMemory?: number;\n  kdfParallelism?: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.kdfMemory = this.getResponseProperty(\"KdfMemory\");\n    this.kdfParallelism = this.getResponseProperty(\"KdfParallelism\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billing-sync-config.api\";\nimport { ScimConfigApi } from \"../api/scim-config.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\nimport { CollectionResponse } from \"./collection.response\";\n\nexport class OrganizationExportResponse extends BaseResponse {\n  collections: CollectionResponse[];\n  ciphers: CipherResponse[];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionResponse(c));\n    }\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useCustomPermissions = this.getResponseProperty(\"UseCustomPermissions\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.useSecretsManager = this.getResponseProperty(\"UseSecretsManager\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profile-organization.response\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileOrganizationResponse } from \"./profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"./profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"./profile-provider.response\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  avatarColor: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.avatarColor = this.getResponseProperty(\"AvatarColor\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileResponse } from \"./profile.response\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  kdfMemory?: number;\n  kdfParallelism?: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.kdfMemory = this.getResponseProperty(\"KdfMemory\");\n    this.kdfParallelism = this.getResponseProperty(\"KdfParallelism\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n  userCount: number;\n  seats?: number;\n  plan?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.userCount = this.getResponseProperty(\"UserCount\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.plan = this.getResponseProperty(\"Plan\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../../../abstractions/organization-user/responses\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissions.api\";\nimport { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { SendResponse } from \"./send.response\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\nimport { CollectionDetailsResponse } from \"./collection.response\";\nimport { DomainsResponse } from \"./domains.response\";\nimport { FolderResponse } from \"./folder.response\";\nimport { PolicyResponse } from \"./policy.response\";\nimport { ProfileResponse } from \"./profile.response\";\nimport { SendResponse } from \"./send.response\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captcha-protected.request\";\nimport { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../../models/domain/log-in-credentials\";\nimport { DeviceRequest } from \"../../models/request/device.request\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../../models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\nimport { UserApiTokenRequest } from \"../../models/request/identity-token/user-api-token.request\";\nimport { KeysRequest } from \"../../models/request/keys.request\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identity-two-factor.response\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: UserApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult>;\n\n  // The user key comes from different sources depending on the login strategy\n  protected abstract setUserKey(response: IdentityTokenResponse): Promise<void>;\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenTwoFactorRequest) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenTwoFactorRequest(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenTwoFactorRequest();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            name: accountInformation.name,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfMemory: tokenResponse.kdfMemory,\n            kdfParallelism: tokenResponse.kdfParallelism,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    await this.setUserKey(response);\n\n    // Must come after the user Key is set, otherwise createKeyPairForOldAccount will fail\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport { PasswordlessLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordlessLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get accessCode() {\n    return this.passwordlessCredentials.accessCode;\n  }\n\n  get authRequestId() {\n    return this.passwordlessCredentials.authRequestId;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n  private passwordlessCredentials: PasswordlessLogInCredentials;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey() {\n    await this.cryptoService.setKey(this.passwordlessCredentials.decKey);\n    await this.cryptoService.setKeyHash(this.passwordlessCredentials.localPasswordHash);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordlessLogInCredentials) {\n    this.passwordlessCredentials = credentials;\n\n    this.tokenRequest = new PasswordTokenRequest(\n      credentials.email,\n      credentials.accessCode,\n      null,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    this.tokenRequest.setPasswordlessAccessCode(credentials.authRequestId);\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { SsoTokenRequest } from \"../../models/request/identity-token/sso-token.request\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { UserApiLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { UserApiTokenRequest } from \"../../models/request/identity-token/user-api-token.request\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class UserApiLogInStrategy extends LogInStrategy {\n  tokenRequest: UserApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: UserApiLogInCredentials) {\n    this.tokenRequest = new UserApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { CipherView } from \"../view/cipher.view\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipher-with-id.request\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nexport class CipherPartialRequest {\n  folderId: string;\n  favorite: boolean;\n\n  constructor(cipher: Cipher) {\n    this.folderId = cipher.folderId;\n    this.favorite = cipher.favorite;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domain-base\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/login-uri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secure-note\";\nimport { SortedCiphersCache } from \"../models/domain/sorted-ciphers-cache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { AttachmentView } from \"../models/view/attachment.view\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\nimport { PasswordHistoryView } from \"../models/view/password-history.view\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService,\n    private encryptService: EncryptService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n    cipher.edit = model.edit;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    if ((await this.getDecryptedCipherCache()) != null) {\n      await this.reindexCiphers();\n      return await this.getDecryptedCipherCache();\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const ciphers = await this.getAll();\n    const orgKeys = await this.cryptoService.getOrgKeys();\n    const userKey = await this.cryptoService.getKeyForUserEncryption();\n\n    // Group ciphers by orgId or under 'null' for the user's ciphers\n    const grouped = ciphers.reduce((agg, c) => {\n      agg[c.organizationId] ??= [];\n      agg[c.organizationId].push(c);\n      return agg;\n    }, {} as Record<string, Cipher[]>);\n\n    const decCiphers = (\n      await Promise.all(\n        Object.entries(grouped).map(([orgId, groupedCiphers]) =>\n          this.encryptService.decryptItems(groupedCiphers, orgKeys.get(orgId) ?? userKey)\n        )\n      )\n    )\n      .flat()\n      .sort(this.getLocaleSortingFunction());\n\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  private async reindexCiphers() {\n    const userId = await this.stateService.getUserId();\n    const reindexRequired =\n      this.searchService != null && (this.searchService().indexedEntityId ?? userId) !== userId;\n    if (reindexRequired) {\n      await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n    }\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : firstValueFrom(this.settingsService.settings$).then(\n            (settings: AccountSettingsSettings) => {\n              let matches: any[] = [];\n              settings?.equivalentDomains?.forEach((eqDomain: any) => {\n                if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                  matches = matches.concat(eqDomain);\n                }\n              });\n\n              if (!matches.length) {\n                matches.push(domain);\n              }\n\n              return matches;\n            }\n          );\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const response = await this.apiService.getCiphersOrganization(organizationId);\n    if (response?.data == null || response.data.length < 1) {\n      return [];\n    }\n\n    const ciphers = response.data.map((cr) => new Cipher(new CipherData(cr)));\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const decCiphers = await this.encryptService.decryptItems(ciphers, key);\n\n    decCiphers.sort(this.getLocaleSortingFunction());\n    return decCiphers;\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async createWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.collectionIds != null) {\n      const request = new CipherCreateRequest(cipher);\n      response = await this.apiService.postCipherCreate(request);\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.postCipher(request);\n    }\n    cipher.id = response.id;\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async updateWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.edit) {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    } else {\n      const request = new CipherPartialRequest(cipher);\n      response = await this.apiService.putPartialCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const encBuf = await EncArrayBuffer.fromResponse(attachmentResponse);\n    const decBuf = await this.cryptoService.decryptFromBytes(encBuf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ServerConfigResponse extends BaseResponse {\n  version: string;\n  gitHash: string;\n  server: ThirdPartyServerConfigResponse;\n  environment: EnvironmentServerConfigResponse;\n\n  constructor(response: any) {\n    super(response);\n\n    if (response == null) {\n      return;\n    }\n\n    this.version = this.getResponseProperty(\"Version\");\n    this.gitHash = this.getResponseProperty(\"GitHash\");\n    this.server = new ThirdPartyServerConfigResponse(this.getResponseProperty(\"Server\"));\n    this.environment = new EnvironmentServerConfigResponse(this.getResponseProperty(\"Environment\"));\n  }\n}\n\nexport class EnvironmentServerConfigResponse extends BaseResponse {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.vault = this.getResponseProperty(\"Vault\");\n    this.api = this.getResponseProperty(\"Api\");\n    this.identity = this.getResponseProperty(\"Identity\");\n    this.notifications = this.getResponseProperty(\"Notifications\");\n    this.sso = this.getResponseProperty(\"Sso\");\n  }\n}\n\nexport class ThirdPartyServerConfigResponse extends BaseResponse {\n  name: string;\n  url: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.name = this.getResponseProperty(\"Name\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport {\n  ServerConfigData,\n  ThirdPartyServerConfigData,\n  EnvironmentServerConfigData,\n} from \"../../models/data/server-config.data\";\n\nconst dayInMilliseconds = 24 * 3600 * 1000;\nconst eighteenHoursInMilliseconds = 18 * 3600 * 1000;\n\nexport class ServerConfig {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: Date;\n\n  constructor(serverConfigData: ServerConfigData) {\n    this.version = serverConfigData.version;\n    this.gitHash = serverConfigData.gitHash;\n    this.server = serverConfigData.server;\n    this.utcDate = new Date(serverConfigData.utcDate);\n    this.environment = serverConfigData.environment;\n\n    if (this.server?.name == null && this.server?.url == null) {\n      this.server = null;\n    }\n  }\n\n  private getAgeInMilliseconds(): number {\n    return new Date().getTime() - this.utcDate?.getTime();\n  }\n\n  isValid(): boolean {\n    return this.getAgeInMilliseconds() <= dayInMilliseconds;\n  }\n\n  expiresSoon(): boolean {\n    return this.getAgeInMilliseconds() >= eighteenHoursInMilliseconds;\n  }\n\n  static fromJSON(obj: Jsonify<ServerConfig>): ServerConfig {\n    if (obj == null) {\n      return null;\n    }\n\n    return new ServerConfig(obj);\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EFFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport {\n  DEFAULT_ARGON2_ITERATIONS,\n  DEFAULT_ARGON2_MEMORY,\n  DEFAULT_ARGON2_PARALLELISM,\n  KdfType,\n} from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encrypted-organization-key\";\nimport { KdfConfig } from \"../models/domain/kdf-config\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: EncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfConfig: KdfConfig\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfConfig.iterations == null) {\n        kdfConfig.iterations = 5000;\n      } else if (kdfConfig.iterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfConfig.iterations);\n    } else if (kdf == KdfType.Argon2id) {\n      if (kdfConfig.iterations == null) {\n        kdfConfig.iterations = DEFAULT_ARGON2_ITERATIONS;\n      } else if (kdfConfig.iterations < 2) {\n        throw new Error(\"Argon2 iteration minimum is 2.\");\n      }\n\n      if (kdfConfig.memory == null) {\n        kdfConfig.memory = DEFAULT_ARGON2_MEMORY;\n      } else if (kdfConfig.memory < 16) {\n        throw new Error(\"Argon2 memory minimum is 16 MB\");\n      } else if (kdfConfig.memory > 1024) {\n        throw new Error(\"Argon2 memory maximum is 1024 MB\");\n      }\n\n      if (kdfConfig.parallelism == null) {\n        kdfConfig.parallelism = DEFAULT_ARGON2_PARALLELISM;\n      } else if (kdfConfig.parallelism < 1) {\n        throw new Error(\"Argon2 parallelism minimum is 1.\");\n      }\n\n      const saltHash = await this.cryptoFunctionService.hash(salt, \"sha256\");\n      key = await this.cryptoFunctionService.argon2(\n        password,\n        saltHash,\n        kdfConfig.iterations,\n        kdfConfig.memory * 1024, // convert to KiB from MiB\n        kdfConfig.parallelism\n      );\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfConfig: KdfConfig,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfConfig);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfConfig: KdfConfig\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfConfig);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForUserEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encrypt\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encryptToBytes\n   */\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    key = await this.getKeyForUserEncryption(key);\n    return this.encryptService.encryptToBytes(plainValue, key);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForUserEncryption(key);\n    return this.encryptService.decryptToBytes(encString, keyForEnc);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToUtf8\n   */\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptFromBytes(encBuffer: EncArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuffer == null) {\n      throw new Error(\"No buffer provided for decryption.\");\n    }\n\n    key = await this.getKeyForUserEncryption(key);\n\n    return this.encryptService.decryptToBytes(encBuffer, key);\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // ---HELPERS---\n\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  async getKeyForUserEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    // Legacy support: encryption used to be done with the user key (derived from master password).\n    // Users who have not migrated will have a null encKey and must use the user key instead.\n    return await this.getKey();\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EFFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EFFLongWordList.length);\n      hashNumber = hashNumber.divide(EFFLongWordList.length);\n      phrase.push(EFFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { CryptoFunctionService } from \"../../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../../abstractions/encrypt.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { EncArrayBuffer } from \"../../models/domain/enc-array-buffer\";\nimport { EncString } from \"../../models/domain/enc-string\";\nimport { EncryptedObject } from \"../../models/domain/encrypted-object\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nexport class EncryptServiceImplementation implements EncryptService {\n  constructor(\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    return await Promise.all(items.map((item) => item.decrypt(key)));\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Cipher } from \"../../models/domain/cipher\";\nimport { CipherView } from \"../../models/view/cipher.view\";\n\nimport { InitializerKey } from \"./initializer-key\";\n\n/**\n * Internal reference of classes so we can reconstruct objects properly.\n * Each entry should be keyed using the Decryptable.initializerKey property\n */\nconst classInitializers: Record<InitializerKey, (obj: any) => any> = {\n  [InitializerKey.Cipher]: Cipher.fromJSON,\n  [InitializerKey.CipherView]: CipherView.fromJSON,\n};\n\nexport function getClassInitializer<T extends InitializerMetadata>(\n  className: InitializerKey\n): (obj: Jsonify<T>) => T {\n  return classInitializers[className];\n}\n","import { defaultIfEmpty, filter, firstValueFrom, fromEvent, map, Subject, takeUntil } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nimport { EncryptServiceImplementation } from \"./encrypt.service.implementation\";\nimport { getClassInitializer } from \"./get-class-initializer\";\n\n// TTL (time to live) is not strictly required but avoids tying up memory resources if inactive\nconst workerTTL = 3 * 60000; // 3 minutes\n\nexport class MultithreadEncryptServiceImplementation extends EncryptServiceImplementation {\n  private worker: Worker;\n  private timeout: any;\n\n  private clear$ = new Subject<void>();\n\n  /**\n   * Sends items to a web worker to decrypt them.\n   * This utilises multithreading to decrypt items faster without interrupting other operations (e.g. updating UI).\n   */\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    this.logService.info(\"Starting decryption using multithreading\");\n\n    this.worker ??= new Worker(\n      new URL(\n        /* webpackChunkName: 'encrypt-worker' */\n        \"@bitwarden/common/services/cryptography/encrypt.worker.ts\",\n        import.meta.url\n      )\n    );\n\n    this.restartTimeout();\n\n    const request = {\n      id: Utils.newGuid(),\n      items: items,\n      key: key,\n    };\n\n    this.worker.postMessage(JSON.stringify(request));\n\n    return await firstValueFrom(\n      fromEvent(this.worker, \"message\").pipe(\n        filter((response: MessageEvent) => response.data?.id === request.id),\n        map((response) => JSON.parse(response.data.items)),\n        map((items) =>\n          items.map((jsonItem: Jsonify<T>) => {\n            const initializer = getClassInitializer<T>(jsonItem.initializerKey);\n            return initializer(jsonItem);\n          })\n        ),\n        takeUntil(this.clear$),\n        defaultIfEmpty([])\n      )\n    );\n  }\n\n  private clear() {\n    this.clear$.next();\n    this.worker?.terminate();\n    this.worker = null;\n    this.clearTimeout();\n  }\n\n  private restartTimeout() {\n    this.clearTimeout();\n    this.timeout = setTimeout(() => this.clear(), workerTTL);\n  }\n\n  private clearTimeout() {\n    if (this.timeout != null) {\n      clearTimeout(this.timeout);\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/event.view\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nexport class BitwardenFileUploadService {\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keys.request\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { LoginService as LoginServiceAbstraction } from \"../abstractions/login.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nexport class LoginService implements LoginServiceAbstraction {\n  private _email: string;\n  private _rememberEmail: boolean;\n\n  constructor(private stateService: StateService) {}\n\n  getEmail() {\n    return this._email;\n  }\n\n  getRememberEmail() {\n    return this._rememberEmail;\n  }\n\n  setEmail(value: string) {\n    this._email = value;\n  }\n\n  setRememberEmail(value: boolean) {\n    this._rememberEmail = value;\n  }\n\n  clearValues() {\n    this._email = null;\n    this._rememberEmail = null;\n  }\n\n  async saveEmailSettings() {\n    await this.stateService.setRememberedEmail(this._rememberEmail ? this._email : null);\n    this.clearValues();\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { BaseResponse } from \"../../../models/response/base.response\";\nimport { SelectionReadOnlyResponse } from \"../../../models/response/selection-read-only.response\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  collections: SelectionReadOnlyResponse[] = [];\n  groups: string[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups;\n    }\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  kdfMemory?: number;\n  kdfParallelism?: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.kdfMemory = this.getResponseProperty(\"KdfMemory\");\n    this.kdfParallelism = this.getResponseProperty(\"KdfParallelism\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keys.response\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { PlanResponse } from \"./plan.response\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organization.response\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscription.response\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/sso-config.api\";\nimport { BaseResponse } from \"../base.response\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  identifier: string;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { PasswordGeneratorOptions } from \"../models/domain/password-generator-options\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/password-generator-policy-options\";\n\nconst DefaultOptions: PasswordGeneratorOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: PasswordGeneratorOptions): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: PasswordGeneratorOptions): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EFFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EFFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EFFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: PasswordGeneratorOptions\n  ): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies = await this.policyService?.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: PasswordGeneratorOptions) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<void> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/provider.data\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  private static registeredPipeline = false;\n\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    // Currently have to ensure this is only done a single time. Lunr allows you to register a function\n    // multiple times but they will add a warning message to the console. The way they do that breaks when ran on a service worker.\n    if (!SearchService.registeredPipeline) {\n      SearchService.registeredPipeline = true;\n      //register lunr pipeline function\n      lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.info(\"Finished search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri?.uri?.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/send.data\";\nimport { SendView } from \"../view/send.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SendFile } from \"./send-file\";\nimport { SendText } from \"./send-text\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    const cryptoService = Utils.getContainerService().getCryptoService();\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport {\n  Account,\n  AccountSettings,\n  AccountSettingsSettings,\n  EncryptionPair,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n        case StateVersion.Five: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom5To6(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Six);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: Object.assign(new EncryptionPair<string, EncString>(), {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      }),\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings:\n        userId == null\n          ? null\n          : await this.get<AccountSettingsSettings>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected async migrateAccountFrom5To6(account: TAccount): Promise<TAccount> {\n    delete (account as any).keys?.legacyEtmKey;\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { ProfileOrganizationResponse } from \"../response/profile-organization.response\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useCustomPermissions = response.useCustomPermissions;\n    this.useResetPassword = response.useResetPassword;\n    this.useSecretsManager = response.useSecretsManager;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { InternalOrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"../../abstractions/provider.service\";\nimport { SendService } from \"../../abstractions/send.service\";\nimport { SettingsService } from \"../../abstractions/settings.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { sequentialize } from \"../../misc/sequentialize\";\nimport { CipherData } from \"../../models/data/cipher.data\";\nimport { CollectionData } from \"../../models/data/collection.data\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { ProviderData } from \"../../models/data/provider.data\";\nimport { SendData } from \"../../models/data/send.data\";\nimport { CipherResponse } from \"../../models/response/cipher.response\";\nimport { CollectionDetailsResponse } from \"../../models/response/collection.response\";\nimport { DomainsResponse } from \"../../models/response/domains.response\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notification.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\nimport { ProfileResponse } from \"../../models/response/profile.response\";\nimport { SendResponse } from \"../../models/response/send.response\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: InternalPolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private organizationService: InternalOrganizationService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setAvatarColor(response.avatarColor);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.replace(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class AnonAddyForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    if (options.anonaddy?.domain == null || options.anonaddy.domain === \"\") {\n      throw \"Invalid AnonAddy domain.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: options.anonaddy.domain,\n      description:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class DuckDuckGoForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://quack.duckduckgo.com/api/email/addresses\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      if (json.address) {\n        return `${json.address}@duck.com`;\n      }\n    } else if (response.status === 401) {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    throw \"Unknown DuckDuckGo error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class FastmailForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Fastmail API token.\";\n    }\n\n    const accountId = await this.getAccountId(apiService, options);\n    if (accountId == null || accountId === \"\") {\n      throw \"Unable to obtain Fastmail masked email account ID.\";\n    }\n\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://api.fastmail.com/jmap/api/\";\n    requestInit.body = JSON.stringify({\n      using: [\"https://www.fastmail.com/dev/maskedemail\", \"urn:ietf:params:jmap:core\"],\n      methodCalls: [\n        [\n          \"MaskedEmail/set\",\n          {\n            accountId: accountId,\n            create: {\n              \"new-masked-email\": {\n                state: \"enabled\",\n                description: \"\",\n                url: options.website,\n                emailPrefix: options.fastmail.prefix,\n              },\n            },\n          },\n          \"0\",\n        ],\n      ],\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (\n        json.methodResponses != null &&\n        json.methodResponses.length > 0 &&\n        json.methodResponses[0].length > 0\n      ) {\n        if (json.methodResponses[0][0] === \"MaskedEmail/set\") {\n          if (json.methodResponses[0][1]?.created?.[\"new-masked-email\"] != null) {\n            return json.methodResponses[0][1]?.created?.[\"new-masked-email\"]?.email;\n          }\n          if (json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"] != null) {\n            throw (\n              \"Fastmail error: \" +\n              json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"]?.description\n            );\n          }\n        } else if (json.methodResponses[0][0] === \"error\") {\n          throw \"Fastmail error: \" + json.methodResponses[0][1]?.description;\n        }\n      }\n    }\n    if (response.status === 401 || response.status === 403) {\n      throw \"Invalid Fastmail API token.\";\n    }\n    throw \"Unknown Fastmail error occurred.\";\n  }\n\n  private async getAccountId(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n      }),\n    };\n    const url = \"https://api.fastmail.com/.well-known/jmap\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (json.primaryAccounts != null) {\n        return json.primaryAccounts[\"https://www.fastmail.com/dev/maskedemail\"];\n      }\n    }\n    return null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class FirefoxRelayForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: options.website,\n      description:\n        (options.website != null ? options.website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class ForwarderOptions {\n  apiKey: string;\n  website: string;\n  fastmail = new FastmailForwarderOptions();\n  anonaddy = new AnonAddyForwarderOptions();\n}\n\nexport class FastmailForwarderOptions {\n  prefix: string;\n}\n\nexport class AnonAddyForwarderOptions {\n  domain: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class SimpleLoginForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (options.website != null) {\n      url += \"?hostname=\" + options.website;\n    }\n    requestInit.body = JSON.stringify({\n      note:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { AnonAddyForwarder } from \"../email-forwarders/anon-addy-forwarder\";\nimport { DuckDuckGoForwarder } from \"../email-forwarders/duck-duck-go-forwarder\";\nimport { FastmailForwarder } from \"../email-forwarders/fastmail-forwarder\";\nimport { FirefoxRelayForwarder } from \"../email-forwarders/firefox-relay-forwarder\";\nimport { Forwarder } from \"../email-forwarders/forwarder\";\nimport { ForwarderOptions } from \"../email-forwarders/forwarder-options\";\nimport { SimpleLoginForwarder } from \"../email-forwarders/simple-login-forwarder\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EFFLongWordList.length - 1);\n    let word = EFFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    let forwarder: Forwarder = null;\n    const forwarderOptions = new ForwarderOptions();\n    forwarderOptions.website = o.website;\n    if (o.forwardedService === \"simplelogin\") {\n      forwarder = new SimpleLoginForwarder();\n      forwarderOptions.apiKey = o.forwardedSimpleLoginApiKey;\n    } else if (o.forwardedService === \"anonaddy\") {\n      forwarder = new AnonAddyForwarder();\n      forwarderOptions.apiKey = o.forwardedAnonAddyApiToken;\n      forwarderOptions.anonaddy.domain = o.forwardedAnonAddyDomain;\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      forwarder = new FirefoxRelayForwarder();\n      forwarderOptions.apiKey = o.forwardedFirefoxApiToken;\n    } else if (o.forwardedService === \"fastmail\") {\n      forwarder = new FastmailForwarder();\n      forwarderOptions.apiKey = o.forwardedFastmailApiToken;\n    } else if (o.forwardedService === \"duckduckgo\") {\n      forwarder = new DuckDuckGoForwarder();\n      forwarderOptions.apiKey = o.forwardedDuckDuckGoToken;\n    }\n\n    if (forwarder == null) {\n      return null;\n    }\n\n    return forwarder.generate(this.apiService, forwarderOptions);\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import {\n  BroadcasterService as BroadcasterServiceAbstraction,\n  MessageBase,\n} from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: MessageBase) => void> = new Map<\n    string,\n    (message: MessageBase) => void\n  >();\n\n  send(message: MessageBase, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: MessageBase) => void) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../injection-tokens\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service\";\nimport {\n  AccountService as AccountServiceAbstraction,\n  InternalAccountService,\n} from \"@bitwarden/common/abstractions/account/account.service\";\nimport { AvatarUpdateService as AccountUpdateServiceAbstraction } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { ConfigApiServiceAbstraction } from \"@bitwarden/common/abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/abstractions/config/config.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventCollectionService as EventCollectionServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService as LoginServiceAbstraction } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport {\n  InternalOrganizationService,\n  OrganizationService as OrganizationServiceAbstraction,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport {\n  InternalPolicyService,\n  PolicyService as PolicyServiceAbstraction,\n} from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"@bitwarden/common/abstractions/sync/syncNotifier.service.abstraction\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"@bitwarden/common/abstractions/validation.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { flagEnabled } from \"@bitwarden/common/misc/flags\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { AccountApiServiceImplementation } from \"@bitwarden/common/services/account/account-api.service\";\nimport { AccountServiceImplementation } from \"@bitwarden/common/services/account/account.service\";\nimport { AvatarUpdateService } from \"@bitwarden/common/services/account/avatar-update.service\";\nimport { AnonymousHubService } from \"@bitwarden/common/services/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConfigApiService } from \"@bitwarden/common/services/config/config-api.service\";\nimport { ConfigService } from \"@bitwarden/common/services/config/config.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/encrypt.service.implementation\";\nimport { MultithreadEncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/multithread-encrypt.service.implementation\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventCollectionService } from \"@bitwarden/common/services/event/event-collection.service\";\nimport { EventUploadService } from \"@bitwarden/common/services/event/event-upload.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { LoginService } from \"@bitwarden/common/services/login.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationUserServiceImplementation } from \"@bitwarden/common/services/organization-user/organization-user.service.implementation\";\nimport { OrganizationApiService } from \"@bitwarden/common/services/organization/organization-api.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync/sync.service\";\nimport { SyncNotifierService } from \"@bitwarden/common/services/sync/syncNotifier.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { ValidationService } from \"@bitwarden/common/services/validation.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeoutSettings.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport {\n  LOCALES_DIRECTORY,\n  LOCKED_CALLBACK,\n  LOG_MAC_FAILURES,\n  LOGOUT_CALLBACK,\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  SYSTEM_LANGUAGE,\n  WINDOW,\n} from \"./injection-tokens\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ThemingService } from \"./theming/theming.service\";\nimport { AbstractThemingService } from \"./theming/theming.service.abstraction\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction,\n        encryptService: EncryptService\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService,\n          encryptService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n        EncryptService,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AccountApiServiceAbstraction,\n      useClass: AccountApiServiceImplementation,\n      deps: [\n        ApiServiceAbstraction,\n        UserVerificationServiceAbstraction,\n        LogService,\n        InternalAccountService,\n      ],\n    },\n    {\n      provide: AccountServiceAbstraction,\n      useClass: AccountServiceImplementation,\n      deps: [MessagingServiceAbstraction, LogService],\n    },\n    {\n      provide: InternalAccountService,\n      useExisting: AccountServiceAbstraction,\n    },\n    {\n      provide: AccountUpdateServiceAbstraction,\n      useClass: AvatarUpdateService,\n      deps: [ApiServiceAbstraction, StateServiceAbstraction],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        EncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        OrganizationServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutSettingsServiceAbstraction,\n      useClass: VaultTimeoutSettingsService,\n      deps: [\n        CryptoServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        VaultTimeoutSettingsServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: EncryptService,\n      useFactory: encryptServiceFactory,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventUploadServiceAbstraction,\n      useClass: EventUploadService,\n      deps: [ApiServiceAbstraction, StateServiceAbstraction, LogService],\n    },\n    {\n      provide: EventCollectionServiceAbstraction,\n      useClass: EventCollectionService,\n      deps: [\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        EventUploadServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction],\n    },\n    {\n      provide: InternalPolicyService,\n      useExisting: PolicyServiceAbstraction,\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useClass: PolicyApiService,\n      deps: [PolicyServiceAbstraction, ApiServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        SyncNotifierServiceAbstraction,\n        MessagingServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        UserVerificationApiServiceAbstraction,\n      ],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: InternalOrganizationService,\n      useExisting: OrganizationServiceAbstraction,\n    },\n    {\n      provide: OrganizationUserService,\n      useClass: OrganizationUserServiceImplementation,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n    {\n      provide: UserVerificationApiServiceAbstraction,\n      useClass: UserVerificationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: OrganizationApiServiceAbstraction,\n      useClass: OrganizationApiService,\n      // This is a slightly odd dependency tree for a specialized api service\n      // it depends on SyncService so that new data can be retrieved through the sync\n      // rather than updating the OrganizationService directly. Instead OrganizationService\n      // subscribes to sync notifications and will update itself based on that.\n      deps: [ApiServiceAbstraction, SyncServiceAbstraction],\n    },\n    {\n      provide: SyncNotifierServiceAbstraction,\n      useClass: SyncNotifierService,\n    },\n    {\n      provide: ConfigServiceAbstraction,\n      useClass: ConfigService,\n      deps: [StateServiceAbstraction, ConfigApiServiceAbstraction],\n    },\n    {\n      provide: ConfigApiServiceAbstraction,\n      useClass: ConfigApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AnonymousHubServiceAbstraction,\n      useClass: AnonymousHubService,\n      deps: [EnvironmentServiceAbstraction, AuthServiceAbstraction, LogService],\n    },\n    {\n      provide: ValidationServiceAbstraction,\n      useClass: ValidationService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: LoginServiceAbstraction,\n      useClass: LoginService,\n      deps: [StateServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n\nfunction encryptServiceFactory(\n  cryptoFunctionservice: CryptoFunctionServiceAbstraction,\n  logService: LogService,\n  logMacFailures: boolean\n): EncryptService {\n  return flagEnabled(\"multithreadDecryption\")\n    ? new MultithreadEncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures)\n    : new EncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures);\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { PasswordlessLogInStrategy } from \"../misc/logInStrategies/passwordlessLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { UserApiLogInStrategy } from \"../misc/logInStrategies/user-api-login.strategy\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport { KdfConfig } from \"../models/domain/kdf-config\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { AuthRequestPushNotification } from \"../models/response/notification.response\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    if (\n      this.logInStrategy instanceof PasswordLogInStrategy ||\n      this.logInStrategy instanceof PasswordlessLogInStrategy\n    ) {\n      return this.logInStrategy.email;\n    }\n\n    return null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  get accessCode(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.accessCode\n      : null;\n  }\n\n  get authRequestId(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.authRequestId\n      : null;\n  }\n\n  private logInStrategy:\n    | UserApiLogInStrategy\n    | PasswordLogInStrategy\n    | SsoLogInStrategy\n    | PasswordlessLogInStrategy;\n  private sessionTimeout: any;\n\n  private pushNotificationSubject = new Subject<string>();\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy:\n      | UserApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy;\n\n    switch (credentials.type) {\n      case AuthenticationType.Password:\n        strategy = new PasswordLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n      case AuthenticationType.Sso:\n        strategy = new SsoLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.UserApi:\n        strategy = new UserApiLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.environmentService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.Passwordless:\n        strategy = new PasswordlessLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithUserApiKey(): boolean {\n    return this.logInStrategy instanceof UserApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  authingWithPasswordless(): boolean {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfConfig: KdfConfig = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfConfig = new KdfConfig(\n          preloginResponse.kdfIterations,\n          preloginResponse.kdfMemory,\n          preloginResponse.kdfParallelism\n        );\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfConfig);\n  }\n\n  async authResponsePushNotifiction(notification: AuthRequestPushNotification): Promise<any> {\n    this.pushNotificationSubject.next(notification.id);\n  }\n\n  getPushNotifcationObs$(): Observable<any> {\n    return this.pushNotificationSubject.asObservable();\n  }\n\n  private saveState(\n    strategy:\n      | UserApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy\n  ) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipher.data\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { FolderView } from \"../../models/view/folder.view\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  protected _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  protected _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._folders.next([]);\n            this._folderViews.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedFolders();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  async getAllFromState(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      // eslint-disable-next-line\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the folder\n   */\n  async getFromState(id: string): Promise<Folder> {\n    const foldersMap = await this.stateService.getEncryptedFolders();\n    const folder = foldersMap[id];\n    if (folder == null) {\n      return null;\n    }\n\n    return new Folder(folder);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { FolderRequest } from \"../../models/request/folder.request\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","import { AccountApiService } from \"../../abstractions/account/account-api.service\";\nimport { InternalAccountService } from \"../../abstractions/account/account.service\";\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { UserVerificationService } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"../../types/verification\";\n\nexport class AccountApiServiceImplementation implements AccountApiService {\n  constructor(\n    private apiService: ApiService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private accountService: InternalAccountService\n  ) {}\n\n  async deleteAccount(verification: Verification): Promise<void> {\n    try {\n      const verificationRequest = await this.userVerificationService.buildRequest(verification);\n      await this.apiService.send(\"DELETE\", \"/accounts\", verificationRequest, true, false);\n      this.accountService.delete();\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { InternalAccountService } from \"../../abstractions/account/account.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\n\nexport class AccountServiceImplementation implements InternalAccountService {\n  constructor(private messagingService: MessagingService, private logService: LogService) {}\n\n  async delete(): Promise<void> {\n    try {\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { AvatarUpdateService as AvatarUpdateServiceAbstraction } from \"../../abstractions/account/avatar-update.service\";\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { UpdateAvatarRequest } from \"../../models/request/update-avatar.request\";\nimport { ProfileResponse } from \"../../models/response/profile.response\";\n\nexport class AvatarUpdateService implements AvatarUpdateServiceAbstraction {\n  private _avatarUpdate$ = new BehaviorSubject<string | null>(null);\n  avatarUpdate$: Observable<string | null> = this._avatarUpdate$.asObservable();\n\n  constructor(private apiService: ApiService, private stateService: StateService) {\n    this.loadColorFromState();\n  }\n\n  loadColorFromState(): Promise<string | null> {\n    return this.stateService.getAvatarColor().then((color) => {\n      this._avatarUpdate$.next(color);\n      return color;\n    });\n  }\n\n  pushUpdate(color: string | null): Promise<ProfileResponse | void> {\n    return this.apiService.putAvatar(new UpdateAvatarRequest(color)).then((response) => {\n      this.stateService.setAvatarColor(response.avatarColor);\n      this._avatarUpdate$.next(response.avatarColor);\n    });\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  /**\n   * @deprecated August 30 2022: Moved to new Vault Filter Service\n   * Remove when Desktop and Browser are updated\n   */\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObjectFromList(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { concatMap, Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  protected baseUrl: string;\n  protected webVaultUrl: string;\n  protected apiUrl: string;\n  protected identityUrl: string;\n  protected iconsUrl: string;\n  protected notificationsUrl: string;\n  protected eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.setUrlsFromStorage();\n        })\n      )\n      .subscribe();\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n\n  isCloud(): boolean {\n    return [\"https://api.bitwarden.com\", \"https://vault.bitwarden.com/api\"].includes(\n      this.getApiUrl()\n    );\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CollectionBulkDeleteRequest } from \"../models/request/collection-bulk-delete.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { DeviceVerificationRequest } from \"../models/request/device-verification.request\";\nimport { DeviceRequest } from \"../models/request/device.request\";\nimport { EmailTokenRequest } from \"../models/request/email-token.request\";\nimport { EmailRequest } from \"../models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergency-access-update.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { UserApiTokenRequest } from \"../models/request/identity-token/user-api-token.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PasswordHintRequest } from \"../models/request/password-hint.request\";\nimport { PasswordRequest } from \"../models/request/password.request\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordless-create-auth.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SecretVerificationRequest } from \"../models/request/secret-verification.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { SetPasswordRequest } from \"../models/request/set-password.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { TwoFactorEmailRequest } from \"../models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/two-factor-recovery.request\";\nimport { UpdateAvatarRequest } from \"../models/request/update-avatar.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { UpdateProfileRequest } from \"../models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/update-two-factor-yubio-otp.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { ApiKeyResponse } from \"../models/response/api-key.response\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../models/response/attachment.response\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\nimport { RegisterResponse } from \"../models/response/authentication/register.response\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport {\n  CollectionAccessDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DeviceVerificationResponse } from \"../models/response/device-verification.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergency-access.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { IdentityCaptchaResponse } from \"../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/key-connector-user-key.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { PreloginResponse } from \"../models/response/prelogin.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SsoPreValidateResponse } from \"../models/response/sso-pre-validate.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { SyncResponse } from \"../models/response/sync.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../models/response/two-factor-recover.response\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/two-factor-yubi-key.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\n\n/**\n * @deprecated The `ApiService` class is deprecated and calls should be extracted into individual\n * api services. The `send` method is still allowed to be used within api services. For background\n * of this decision please read https://contributing.bitwarden.com/architecture/adr/refactor-api-service.\n */\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: UserApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof UserApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  async postAuthRequest(request: PasswordlessCreateAuthRequest): Promise<AuthRequestResponse> {\n    const r = await this.send(\"POST\", \"/auth-requests/\", request, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  async getAuthResponse(id: string, accessCode: string): Promise<AuthRequestResponse> {\n    const path = `/auth-requests/${id}/response?code=${accessCode}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async putAvatar(request: UpdateAvatarRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/avatar\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  async postRegister(request: RegisterRequest): Promise<RegisterResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new RegisterResponse(r);\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<void> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putPartialCipher(id: string, request: CipherPartialRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/partial\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionAccessDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionAccessDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionAccessDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getManyCollectionsWithAccessDetails(\n    organizationId: string\n  ): Promise<ListResponse<CollectionAccessDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/details\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionAccessDetailsResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteManyCollections(request: CollectionBulkDeleteRequest): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + request.organizationId + \"/collections\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, false, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async getKnownDevice(email: string, deviceIdentifier: string): Promise<boolean> {\n    const path = `/devices/knowndevice/${email}/${deviceIdentifier}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return r as boolean;\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getOrganizationExport(organizationId: string): Promise<OrganizationExportResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/export\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationExportResponse(r);\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersionNumber()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n    const tokenRequest = new UserApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenTwoFactorRequest(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    const responseType = response.headers.get(\"content-type\");\n    const responseIsJson = responseType != null && responseType.indexOf(\"application/json\") !== -1;\n    if (hasResponse && response.status === 200 && responseIsJson) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    if (authed) {\n      if (\n        response.status === 401 ||\n        response.status === 403 ||\n        (tokenError &&\n          response.status === 400 &&\n          responseJson != null &&\n          responseJson.error === \"invalid_grant\")\n      ) {\n        await this.logoutCallback(true);\n        return null;\n      }\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService();\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { Utils } from \"../misc/utils\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  protected _settings: BehaviorSubject<AccountSettingsSettings> = new BehaviorSubject({});\n\n  settings$ = this._settings.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._settings.next({});\n            return;\n          }\n\n          const data = await this.stateService.getSettings();\n\n          this._settings.next(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    const settings = this._settings.getValue() ?? {};\n\n    settings.equivalentDomains = equivalentDomains;\n\n    this._settings.next(settings);\n    await this.stateService.setSettings(settings);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._settings.next({});\n    }\n\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { PolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class VaultTimeoutSettingsService implements VaultTimeoutSettingsServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { SearchService } from \"../../abstractions/search.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    const accounts = await firstValueFrom(this.stateService.accounts$);\n    for (const userId in accounts) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.vaultTimeoutSettingsService.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.vaultTimeoutSettingsService.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(userId);\n  }\n}\n","import * as papa from \"papaparse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_PBKDF2_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { KdfConfig } from \"../models/domain/kdf-config\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipher-with-ids.export\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collection-with-id.export\";\nimport { EventExport } from \"../models/export/event.export\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folder-with-id.export\";\nimport { CollectionDetailsResponse } from \"../models/response/collection.response\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { EventView } from \"../models/view/event.view\";\nimport { FolderView } from \"../models/view/folder.view\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfConfig = new KdfConfig(DEFAULT_PBKDF2_ITERATIONS);\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfConfig\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfConfig.iterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecryptedFromState().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllFromState().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getOrganizationExport(organizationId).then((exportData) => {\n        const exportPromises: any = [];\n        if (exportData != null) {\n          if (exportData.collections != null && exportData.collections.length > 0) {\n            exportData.collections.forEach((c) => {\n              const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n              exportPromises.push(\n                collection.decrypt().then((decCol) => {\n                  decCollections.push(decCol);\n                })\n              );\n            });\n          }\n          if (exportData.ciphers != null && exportData.ciphers.length > 0) {\n            exportData.ciphers\n              .filter((c) => c.deletedDate === null)\n              .forEach((c) => {\n                const cipher = new Cipher(new CipherData(c));\n                exportPromises.push(\n                  cipher.decrypt().then((decCipher) => {\n                    decCiphers.push(decCipher);\n                  })\n                );\n              });\n          }\n        }\n        return Promise.all(exportPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync/sync.service.abstraction\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notification.response\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import * as argon2 from \"argon2-browser\";\nimport * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n  private wasmSupported: boolean;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n    this.wasmSupported = this.checkIfWasmSupported();\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async argon2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    iterations: number,\n    memory: number,\n    parallelism: number\n  ): Promise<ArrayBuffer> {\n    if (!this.wasmSupported) {\n      throw \"Webassembly support is required for the Argon2 KDF feature.\";\n    }\n\n    const passwordArr = new Uint8Array(this.toBuf(password));\n    const saltArr = new Uint8Array(this.toBuf(salt));\n\n    const result = await argon2.hash({\n      pass: passwordArr,\n      salt: saltArr,\n      time: iterations,\n      mem: memory,\n      parallelism: parallelism,\n      hashLen: 32,\n      type: argon2.ArgonType.Argon2id,\n    });\n    return result.hash;\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n\n  // ref: https://stackoverflow.com/a/47880734/1090359\n  private checkIfWasmSupported(): boolean {\n    try {\n      if (typeof WebAssembly === \"object\" && typeof WebAssembly.instantiate === \"function\") {\n        const module = new WebAssembly.Module(\n          Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00)\n        );\n        if (module instanceof WebAssembly.Module) {\n          return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\n        }\n      }\n    } catch {\n      return false;\n    }\n    return false;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"../../abstractions/event/event-upload.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { EventRequest } from \"../../models/request/event.request\";\n\nexport class EventUploadService implements EventUploadServiceAbstraction {\n  private inited = false;\n  constructor(\n    private apiService: ApiService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      req.organizationId = e.organizationId;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { CipherService } from \"../../abstractions/cipher.service\";\nimport { EventCollectionService as EventCollectionServiceAbstraction } from \"../../abstractions/event/event-collection.service\";\nimport { EventUploadService } from \"../../abstractions/event/event-upload.service\";\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { EventType } from \"../../enums/eventType\";\nimport { EventData } from \"../../models/data/event.data\";\n\nexport class EventCollectionService implements EventCollectionServiceAbstraction {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private eventUploadService: EventUploadService\n  ) {}\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false,\n    organizationId: string = null\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    if (organizationId != null) {\n      if (!orgIds.has(organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    event.organizationId = organizationId;\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.eventUploadService.uploadEvents();\n    }\n  }\n}\n","import { of, concatMap, BehaviorSubject, Observable, map } from \"rxjs\";\n\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { Utils } from \"../../misc/utils\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyService implements InternalPolicyServiceAbstraction {\n  protected _policies: BehaviorSubject<Policy[]> = new BehaviorSubject([]);\n\n  policies$ = this._policies.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._policies.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedPolicies();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        if (Object.prototype.hasOwnProperty.call(diskPolicies, id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  masterPasswordPolicyOptions$(policies?: Policy[]): Observable<MasterPasswordPolicyOptions> {\n    const observable = policies ? of(policies) : this.policies$;\n    return observable.pipe(\n      map((obsPolicies) => {\n        let enforcedOptions: MasterPasswordPolicyOptions = null;\n        const filteredPolicies = obsPolicies.filter((p) => p.type === PolicyType.MasterPassword);\n\n        if (filteredPolicies == null || filteredPolicies.length === 0) {\n          return enforcedOptions;\n        }\n\n        filteredPolicies.forEach((currentPolicy) => {\n          if (!currentPolicy.enabled || currentPolicy.data == null) {\n            return;\n          }\n\n          if (enforcedOptions == null) {\n            enforcedOptions = new MasterPasswordPolicyOptions();\n          }\n\n          if (\n            currentPolicy.data.minComplexity != null &&\n            currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n          ) {\n            enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n          }\n\n          if (\n            currentPolicy.data.minLength != null &&\n            currentPolicy.data.minLength > enforcedOptions.minLength\n          ) {\n            enforcedOptions.minLength = currentPolicy.data.minLength;\n          }\n\n          if (currentPolicy.data.requireUpper) {\n            enforcedOptions.requireUpper = true;\n          }\n\n          if (currentPolicy.data.requireLower) {\n            enforcedOptions.requireLower = true;\n          }\n\n          if (currentPolicy.data.requireNumbers) {\n            enforcedOptions.requireNumbers = true;\n          }\n\n          if (currentPolicy.data.requireSpecial) {\n            enforcedOptions.requireSpecial = true;\n          }\n        });\n\n        return enforcedOptions;\n      })\n    );\n  }\n\n  policyAppliesToActiveUser$(policyType: PolicyType, policyFilter?: (policy: Policy) => boolean) {\n    return this.policies$.pipe(\n      concatMap(async (policies) => {\n        const userId = await this.stateService.getUserId();\n        return await this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n      })\n    );\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n\n    return this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n  }\n\n  async upsert(policy: PolicyData): Promise<any> {\n    let policies = await this.stateService.getEncryptedPolicies();\n    if (policies == null) {\n      policies = {};\n    }\n\n    policies[policy.id] = policy;\n\n    await this.updateObservables(policies);\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<void> {\n    await this.updateObservables(policies);\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._policies.next([]);\n    }\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n\n  private async updateObservables(policiesMap: { [id: string]: PolicyData }) {\n    const policies = Object.values(policiesMap || {}).map((f) => new Policy(f));\n\n    this._policies.next(policies);\n  }\n\n  private async checkPoliciesThatApplyToUser(\n    policies: Policy[],\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const organizations = await this.organizationService.getAll(userId);\n    const filteredPolicies = policies.filter(\n      (p) => p.type === policyType && p.enabled && (policyFilter == null || policyFilter(p))\n    );\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        policySet.has(o.id) &&\n        !this.isExcemptFromPolicies(o, policyType)\n    );\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { PolicyApiServiceAbstraction } from \"../../abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { Utils } from \"../../misc/utils\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiService implements PolicyApiServiceAbstraction {\n  constructor(\n    private policyService: InternalPolicyService,\n    private apiService: ApiService,\n    private stateService: StateService\n  ) {}\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        Utils.encodeRFC3986URIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.policyService.mapPoliciesFromToken(response);\n    return await firstValueFrom(this.policyService.masterPasswordPolicyOptions$(policies));\n  }\n\n  async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<any> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    const response = new PolicyResponse(r);\n    const data = new PolicyData(response);\n    await this.policyService.upsert(data);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/send-file\";\nimport { SendText } from \"../models/domain/send-text\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { KdfConfig } from \"../models/domain/kdf-config\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, kdfMemory, kdfParallelism, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      new KdfConfig(kdfIterations, kdfMemory, kdfParallelism)\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"../../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { Verification } from \"../../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private userVerificationApiService: UserVerificationApiServiceAbstraction\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.userVerificationApiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.userVerificationApiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPasswordRequired\"));\n      }\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { InternalOrganizationService as InternalOrganizationServiceAbstraction } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { Organization } from \"../../models/domain/organization\";\n\nexport class OrganizationService implements InternalOrganizationServiceAbstraction {\n  protected _organizations = new BehaviorSubject<Organization[]>([]);\n\n  organizations$ = this._organizations.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (!unlocked) {\n            this._organizations.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getOrganizations();\n          this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizationsMap = await this.stateService.getOrganizations({ userId: userId });\n    return Object.values(organizationsMap || {}).map((o) => new Organization(o));\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const organizations = this._organizations.getValue();\n    return organizations.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  hasOrganizations(): boolean {\n    const organizations = this._organizations.getValue();\n    return organizations.length > 0;\n  }\n\n  async upsert(organization: OrganizationData): Promise<void> {\n    let organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      organizations = {};\n    }\n\n    organizations[organization.id] = organization;\n\n    await this.replace(organizations);\n  }\n\n  async delete(id: string): Promise<void> {\n    const organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      return;\n    }\n\n    if (organizations[id] == null) {\n      return;\n    }\n\n    delete organizations[id];\n    await this.replace(organizations);\n  }\n\n  get(id: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.id === id);\n  }\n\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the organization\n   */\n  async getFromState(id: string): Promise<Organization> {\n    const organizationsMap = await this.stateService.getOrganizations();\n    const organization = organizationsMap[id];\n    if (organization == null) {\n      return null;\n    }\n\n    return new Organization(organization);\n  }\n\n  getByIdentifier(identifier: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.identifier === identifier);\n  }\n\n  async replace(organizations: { [id: string]: OrganizationData }) {\n    await this.stateService.setOrganizations(organizations);\n    this.updateObservables(organizations);\n  }\n\n  private updateObservables(organizationsMap: { [id: string]: OrganizationData }) {\n    const organizations = Object.values(organizationsMap || {}).map((o) => new Organization(o));\n    this._organizations.next(organizations);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationUserService } from \"../../abstractions/organization-user/organization-user.service\";\nimport {\n  OrganizationUserAcceptRequest,\n  OrganizationUserBulkConfirmRequest,\n  OrganizationUserConfirmRequest,\n  OrganizationUserInviteRequest,\n  OrganizationUserResetPasswordEnrollmentRequest,\n  OrganizationUserResetPasswordRequest,\n  OrganizationUserUpdateGroupsRequest,\n  OrganizationUserUpdateRequest,\n} from \"../../abstractions/organization-user/requests\";\nimport {\n  OrganizationUserBulkPublicKeyResponse,\n  OrganizationUserBulkResponse,\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../../abstractions/organization-user/responses\";\nimport { ListResponse } from \"../../models/response/list.response\";\n\nimport { OrganizationUserBulkRequest } from \"./requests\";\n\nexport class OrganizationUserServiceImplementation implements OrganizationUserService {\n  constructor(private apiService: ApiService) {}\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string,\n    options?: {\n      includeGroups?: boolean;\n    }\n  ): Promise<OrganizationUserDetailsResponse> {\n    const params = new URLSearchParams();\n\n    if (options?.includeGroups) {\n      params.set(\"includeGroups\", \"true\");\n    }\n\n    const r = await this.apiService.send(\n      \"GET\",\n      `/organizations/${organizationId}/users/${id}?${params.toString()}`,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getAllUsers(\n    organizationId: string,\n    options?: {\n      includeCollections?: boolean;\n      includeGroups?: boolean;\n    }\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const params = new URLSearchParams();\n\n    if (options?.includeCollections) {\n      params.set(\"includeCollections\", \"true\");\n    }\n    if (options?.includeGroups) {\n      params.set(\"includeGroups\", \"true\");\n    }\n\n    const r = await this.apiService.send(\n      \"GET\",\n      `/organizations/${organizationId}/users?${params.toString()}`,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  revokeOrganizationUser(organizationId: string, id: string): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/revoke\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async revokeManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/revoke\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  restoreOrganizationUser(organizationId: string, id: string): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/restore\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async restoreManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/restore\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import { UntypedFormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof UntypedFormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\n\nexport class UserVerificationApiService implements UserVerificationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n  async postAccountRequestOTP(): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"../../abstractions/organization/organization-api.service.abstraction\";\nimport { SyncService } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organization-sso.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { ApiKeyResponse } from \"../../models/response/api-key.response\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organization-sso.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\n\nexport class OrganizationApiService implements OrganizationApiServiceAbstraction {\n  constructor(private apiService: ApiService, private syncService: SyncService) {}\n\n  async get(id: string): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getBilling(id: string): Promise<BillingResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/billing\",\n      null,\n      true,\n      true\n    );\n    return new BillingResponse(r);\n  }\n\n  async getSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/subscription\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getLicense(id: string, installationId: string): Promise<unknown> {\n    return this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getAutoEnrollStatus(identifier: string): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  async create(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations\", request, true, true);\n    // Forcing a sync will notify organization service that they need to repull\n    await this.syncService.fullSync(true);\n    return new OrganizationResponse(r);\n  }\n\n  async createLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/licenses/self-hosted\",\n      data,\n      true,\n      true\n    );\n    return new OrganizationResponse(r);\n  }\n\n  async save(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    const data = new OrganizationResponse(r);\n    await this.syncService.fullSync(true);\n    return data;\n  }\n\n  async updatePayment(id: string, request: PaymentRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  async upgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/upgrade\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/subscription\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async updateSeats(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/seat\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/storage\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async verifyBank(id: string, request: VerifyBankRequest): Promise<void> {\n    await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/verify-bank\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async cancel(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  async reinstate(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  async leave(id: string): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async delete(id: string, request: SecretVerificationRequest): Promise<void> {\n    await this.apiService.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async updateLicense(id: string, data: FormData): Promise<void> {\n    await this.apiService.send(\n      \"POST\",\n      \"/organizations/licenses/self-hosted/\" + id,\n      data,\n      true,\n      false\n    );\n  }\n\n  async importDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/import\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getOrCreateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getApiKeyInformation(\n    id: string,\n    organizationApiKeyType: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      organizationApiKeyType === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + organizationApiKeyType;\n    const r = await this.apiService.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async rotateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async updateTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<void> {\n    // Can't broadcast anything because the response doesn't have content\n    return this.apiService.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  async getKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async updateKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/keys\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationKeysResponse(r);\n  }\n\n  async getSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async updateSso(id: string, request: OrganizationSsoRequest): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/sso\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationSsoResponse(r);\n  }\n\n  async selfHostedSyncLicense(id: string) {\n    await this.apiService.send(\n      \"POST\",\n      \"/organizations/licenses/self-hosted/\" + id + \"/sync/\",\n      null,\n      true,\n      false\n    );\n  }\n}\n","import { Subject } from \"rxjs\";\n\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"../../abstractions/sync/syncNotifier.service.abstraction\";\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\n/**\n * This class should most likely have 0 dependencies because it will hopefully\n * be rolled into SyncService once upon a time.\n */\nexport class SyncNotifierService implements SyncNotifierServiceAbstraction {\n  private _sync = new Subject<SyncEventArgs>();\n\n  sync$ = this._sync.asObservable();\n\n  next(event: SyncEventArgs): void {\n    this._sync.next(event);\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ServerConfig } from \"./server-config\";\n\nexport abstract class ConfigServiceAbstraction {\n  serverConfig$: Observable<ServerConfig | null>;\n}\n","import { BehaviorSubject, concatMap, map, switchMap, timer, EMPTY } from \"rxjs\";\n\nimport { ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"../../abstractions/config/config.service.abstraction\";\nimport { ServerConfig } from \"../../abstractions/config/server-config\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { ServerConfigData } from \"../../models/data/server-config.data\";\n\nexport class ConfigService implements ConfigServiceAbstraction {\n  protected _serverConfig = new BehaviorSubject<ServerConfig | null>(null);\n  serverConfig$ = this._serverConfig.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private configApiService: ConfigApiServiceAbstraction\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        switchMap((unlocked) => {\n          if (!unlocked) {\n            this._serverConfig.next(null);\n            return EMPTY;\n          }\n\n          // Re-fetch the server config every hour\n          return timer(0, 3600 * 1000).pipe(map(() => unlocked));\n        }),\n        concatMap(async (unlocked) => {\n          return unlocked ? await this.buildServerConfig() : null;\n        })\n      )\n      .subscribe((serverConfig) => {\n        this._serverConfig.next(serverConfig);\n      });\n  }\n\n  private async buildServerConfig(): Promise<ServerConfig> {\n    const data = await this.stateService.getServerConfig();\n    const domain = data ? new ServerConfig(data) : null;\n\n    if (domain == null || !domain.isValid() || domain.expiresSoon()) {\n      const value = await this.fetchServerConfig();\n      return value ?? domain;\n    }\n\n    return domain;\n  }\n\n  private async fetchServerConfig(): Promise<ServerConfig> {\n    try {\n      const response = await this.configApiService.get();\n\n      if (response != null) {\n        const data = new ServerConfigData(response);\n        await this.stateService.setServerConfig(data);\n        return new ServerConfig(data);\n      }\n    } catch {\n      return null;\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { ConfigApiServiceAbstraction as ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport class ConfigApiService implements ConfigApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(): Promise<ServerConfigResponse> {\n    const r = await this.apiService.send(\"GET\", \"/config\", null, true, true);\n    return new ServerConfigResponse(r);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"../abstractions/validation.service\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nexport class ValidationService implements ValidationServiceAbstraction {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { AbstractMemoryStorageService } from \"../abstractions/storage.service\";\n\nexport class MemoryStorageService extends AbstractMemoryStorageService {\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n\n  getBypassCache<T>(key: string): Promise<T> {\n    return this.get<T>(key);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Injectable()\nexport class BroadcasterMessagingService implements MessagingService {\n  constructor(private broadcasterService: BroadcasterService) {}\n\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    this.broadcasterService.send(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\n\n@Injectable()\nexport class EventService {\n  private policies: Policy[];\n\n  constructor(private i18nService: I18nService, policyService: PolicyService) {\n    policyService.policies$.subscribe((policies) => {\n      this.policies = policies;\n    });\n  }\n\n  getDefaultDateFilters() {\n    const d = new Date();\n    const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n    d.setDate(d.getDate() - 30);\n    const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n    return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n  }\n\n  formatDateFilters(filterStart: string, filterEnd: string) {\n    const start: Date = new Date(filterStart);\n    const end: Date = new Date(filterEnd + \":59.999\");\n    if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n      throw new Error(\"Invalid date range.\");\n    }\n    return [start.toISOString(), end.toISOString()];\n  }\n\n  async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n    const appInfo = this.getAppInfo(ev.deviceType);\n    const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n    return {\n      message: message,\n      humanReadableMessage: humanReadableMessage,\n      appIcon: appInfo[0],\n      appName: appInfo[1],\n    };\n  }\n\n  private async getEventMessage(ev: EventResponse, options: EventOptions) {\n    let msg = \"\";\n    let humanReadableMsg = \"\";\n    switch (ev.type) {\n      // User\n      case EventType.User_LoggedIn:\n        msg = humanReadableMsg = this.i18nService.t(\"loggedIn\");\n        break;\n      case EventType.User_ChangedPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"changedPassword\");\n        break;\n      case EventType.User_Updated2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledUpdated2fa\");\n        break;\n      case EventType.User_Disabled2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"disabled2fa\");\n        break;\n      case EventType.User_Recovered2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"recovered2fa\");\n        break;\n      case EventType.User_FailedLogIn:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin\");\n        break;\n      case EventType.User_FailedLogIn2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin2fa\");\n        break;\n      case EventType.User_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedVault\");\n        break;\n      case EventType.User_UpdatedTempPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"updatedMasterPassword\");\n        break;\n      case EventType.User_MigratedKeyToKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"migratedKeyConnector\");\n        break;\n      // Cipher\n      case EventType.Cipher_Created:\n        msg = this.i18nService.t(\"createdItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"createdItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Updated:\n        msg = this.i18nService.t(\"editedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"editedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Deleted:\n        msg = this.i18nService.t(\"permanentlyDeletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"permanentlyDeletedItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_SoftDeleted:\n        msg = this.i18nService.t(\"deletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"deletedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Restored:\n        msg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        break;\n      case EventType.Cipher_AttachmentCreated:\n        msg = this.i18nService.t(\"createdAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"createdAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_AttachmentDeleted:\n        msg = this.i18nService.t(\"deletedAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_Shared:\n        msg = this.i18nService.t(\"movedItemIdToOrg\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"movedItemIdToOrg\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientViewed:\n        msg = this.i18nService.t(\"viewedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledPasswordVisible:\n        msg = this.i18nService.t(\"viewedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledHiddenFieldVisible:\n        msg = this.i18nService.t(\"viewedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardNumberVisible:\n        msg = this.i18nService.t(\"viewedCardNumberItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedCardNumberItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardCodeVisible:\n        msg = this.i18nService.t(\"viewedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedHiddenField:\n        msg = this.i18nService.t(\"copiedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedPassword:\n        msg = this.i18nService.t(\"copiedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"copiedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientCopiedCardCode:\n        msg = this.i18nService.t(\"copiedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientAutofilled:\n        msg = this.i18nService.t(\"autofilledItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"autofilledItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_UpdatedCollections:\n        msg = this.i18nService.t(\"editedCollectionsForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionsForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      // Collection\n      case EventType.Collection_Created:\n        msg = this.i18nService.t(\"createdCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Updated:\n        msg = this.i18nService.t(\"editedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Deleted:\n        msg = this.i18nService.t(\"deletedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      // Group\n      case EventType.Group_Created:\n        msg = this.i18nService.t(\"createdGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"createdGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Updated:\n        msg = this.i18nService.t(\"editedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Deleted:\n        msg = this.i18nService.t(\"deletedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"deletedGroupId\", this.getShortId(ev.groupId));\n        break;\n      // Org user\n      case EventType.OrganizationUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"invitedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UpdatedGroups:\n        msg = this.i18nService.t(\"editedGroupsForUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedGroupsForUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UnlinkedSso:\n        msg = this.i18nService.t(\"unlinkedSsoUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"unlinkedSsoUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Enroll:\n        msg = this.i18nService.t(\"eventEnrollPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventEnrollPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Withdraw:\n        msg = this.i18nService.t(\"eventWithdrawPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventWithdrawPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_AdminResetPassword:\n        msg = this.i18nService.t(\"eventAdminPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventAdminPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetSsoLink:\n        msg = this.i18nService.t(\"eventResetSsoLink\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventResetSsoLink\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_FirstSsoLogin:\n        msg = this.i18nService.t(\"firstSsoLogin\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"firstSsoLogin\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Revoked:\n        msg = this.i18nService.t(\"revokedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"revokedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Restored:\n        msg = this.i18nService.t(\"restoredUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"restoredUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      // Org\n      case EventType.Organization_Updated:\n        msg = humanReadableMsg = this.i18nService.t(\"editedOrgSettings\");\n        break;\n      case EventType.Organization_PurgedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"purgedOrganizationVault\");\n        break;\n      case EventType.Organization_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedOrganizationVault\");\n        break;\n      case EventType.Organization_VaultAccessed:\n        msg = humanReadableMsg = this.i18nService.t(\"vaultAccessedByProvider\");\n        break;\n      case EventType.Organization_EnabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledSso\");\n        break;\n      case EventType.Organization_DisabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledSso\");\n        break;\n      case EventType.Organization_EnabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledKeyConnector\");\n        break;\n      case EventType.Organization_DisabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledKeyConnector\");\n        break;\n      case EventType.Organization_SponsorshipsSynced:\n        msg = humanReadableMsg = this.i18nService.t(\"sponsorshipsSynced\");\n        break;\n      // Policies\n      case EventType.Policy_Updated: {\n        msg = this.i18nService.t(\"modifiedPolicyId\", this.formatPolicyId(ev));\n\n        const policy = this.policies.filter((p) => p.id === ev.policyId)[0];\n        let p1 = this.getShortId(ev.policyId);\n        if (policy != null) {\n          p1 = PolicyType[policy.type];\n        }\n\n        humanReadableMsg = this.i18nService.t(\"modifiedPolicyId\", p1);\n        break;\n      }\n      // Provider users:\n      case EventType.ProviderUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"invitedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.providerUserId)\n        );\n        break;\n      case EventType.ProviderUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"removedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderOrganization_Created:\n        msg = this.i18nService.t(\"createdOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Added:\n        msg = this.i18nService.t(\"addedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"addedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Removed:\n        msg = this.i18nService.t(\"removedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_VaultAccessed:\n        msg = this.i18nService.t(\"accessedClientVault\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"accessedClientVault\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      default:\n        break;\n    }\n    return {\n      message: msg === \"\" ? null : msg,\n      humanReadableMessage: humanReadableMsg === \"\" ? null : humanReadableMsg,\n    };\n  }\n\n  private getAppInfo(deviceType: DeviceType): [string, string] {\n    switch (deviceType) {\n      case DeviceType.Android:\n        return [\"bwi-android\", this.i18nService.t(\"mobile\") + \" - Android\"];\n      case DeviceType.iOS:\n        return [\"bwi-apple\", this.i18nService.t(\"mobile\") + \" - iOS\"];\n      case DeviceType.UWP:\n        return [\"bwi-windows\", this.i18nService.t(\"mobile\") + \" - Windows\"];\n      case DeviceType.ChromeExtension:\n        return [\"bwi-chrome\", this.i18nService.t(\"extension\") + \" - Chrome\"];\n      case DeviceType.FirefoxExtension:\n        return [\"bwi-firefox\", this.i18nService.t(\"extension\") + \" - Firefox\"];\n      case DeviceType.OperaExtension:\n        return [\"bwi-opera\", this.i18nService.t(\"extension\") + \" - Opera\"];\n      case DeviceType.EdgeExtension:\n        return [\"bwi-edge\", this.i18nService.t(\"extension\") + \" - Edge\"];\n      case DeviceType.VivaldiExtension:\n        return [\"bwi-puzzle\", this.i18nService.t(\"extension\") + \" - Vivaldi\"];\n      case DeviceType.SafariExtension:\n        return [\"bwi-safari\", this.i18nService.t(\"extension\") + \" - Safari\"];\n      case DeviceType.WindowsDesktop:\n        return [\"bwi-windows\", this.i18nService.t(\"desktop\") + \" - Windows\"];\n      case DeviceType.MacOsDesktop:\n        return [\"bwi-apple\", this.i18nService.t(\"desktop\") + \" - macOS\"];\n      case DeviceType.LinuxDesktop:\n        return [\"bwi-linux\", this.i18nService.t(\"desktop\") + \" - Linux\"];\n      case DeviceType.ChromeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Chrome\"];\n      case DeviceType.FirefoxBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Firefox\"];\n      case DeviceType.OperaBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Opera\"];\n      case DeviceType.SafariBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Safari\"];\n      case DeviceType.VivaldiBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Vivaldi\"];\n      case DeviceType.EdgeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Edge\"];\n      case DeviceType.IEBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - IE\"];\n      case DeviceType.UnknownBrowser:\n        return [\n          \"bwi-globe\",\n          this.i18nService.t(\"webVault\") + \" - \" + this.i18nService.t(\"unknown\"),\n        ];\n      default:\n        return [\"bwi-globe\", this.i18nService.t(\"unknown\")];\n    }\n  }\n\n  private formatCipherId(ev: EventResponse, options: EventOptions) {\n    const shortId = this.getShortId(ev.cipherId);\n    if (ev.organizationId == null || !options.cipherInfo) {\n      return \"<code>\" + shortId + \"</code>\";\n    }\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/vault?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.cipherId\n    );\n    return a.outerHTML;\n  }\n\n  private formatGroupId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.groupId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/organizations/\" + ev.organizationId + \"/groups?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatCollectionId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.collectionId);\n    const a = this.makeAnchor(shortId);\n    // TODO: Update view/edit collection link after EC-14 is completed\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/collections?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatOrgUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.organizationUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/members?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.organizationUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/providers/\" +\n        ev.providerId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.providerUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderOrganizationId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerOrganizationId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/providers/\" + ev.providerId + \"/clients?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatPolicyId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.policyId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/policies?policyId=\" + ev.policyId\n    );\n    return a.outerHTML;\n  }\n\n  private makeAnchor(shortId: string) {\n    const a = document.createElement(\"a\");\n    a.title = this.i18nService.t(\"view\");\n    a.innerHTML = \"<code>\" + shortId + \"</code>\";\n    return a;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  private toDateTimeLocalString(date: Date) {\n    return (\n      date.getFullYear() +\n      \"-\" +\n      this.pad(date.getMonth() + 1) +\n      \"-\" +\n      this.pad(date.getDate()) +\n      \"T\" +\n      this.pad(date.getHours()) +\n      \":\" +\n      this.pad(date.getMinutes())\n    );\n  }\n\n  private pad(num: number) {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  }\n}\n\nexport class EventInfo {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n}\n\nexport class EventOptions {\n  cipherInfo = true;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"@bitwarden/common/enums/htmlStorageLocation\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\n\n@Injectable()\nexport class HtmlStorageService implements AbstractStorageService {\n  get defaultOptions(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Session };\n  }\n\n  get<T>(key: string, options: StorageOptions = this.defaultOptions): Promise<T> {\n    let json: string = null;\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        json = window.localStorage.getItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        json = window.sessionStorage.getItem(key);\n        break;\n    }\n\n    if (json != null) {\n      const obj = JSON.parse(json);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string, options: StorageOptions = this.defaultOptions): Promise<boolean> {\n    return (await this.get(key, options)) != null;\n  }\n\n  save(key: string, obj: any, options: StorageOptions = this.defaultOptions): Promise<any> {\n    if (obj == null) {\n      return this.remove(key, options);\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const json = JSON.stringify(obj);\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.setItem(key, json);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.setItem(key, json);\n        break;\n    }\n    return Promise.resolve();\n  }\n\n  remove(key: string, options: StorageOptions = this.defaultOptions): Promise<any> {\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.removeItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.removeItem(key);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService, private encryptService: EncryptService) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  /**\n   * @throws Will throw if CryptoService was not instantiated and provided to the ContainerService constructor\n   */\n  getCryptoService(): CryptoService {\n    if (this.cryptoService == null) {\n      throw new Error(\"ContainerService.cryptoService not initialized.\");\n    }\n    return this.cryptoService;\n  }\n\n  /**\n   * @throws Will throw if EncryptService was not instantiated and provided to the ContainerService constructor\n   */\n  getEncryptService(): EncryptService {\n    if (this.encryptService == null) {\n      throw new Error(\"ContainerService.encryptService not initialized.\");\n    }\n    return this.encryptService;\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport { WINDOW } from \"@bitwarden/angular/services/injection-tokens\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EventUploadService } from \"@bitwarden/common/services/event/event-upload.service\";\nimport { VaultTimeoutService as VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\n\nimport { I18nService } from \"./i18n.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    @Inject(WINDOW) private win: Window,\n    private environmentService: EnvironmentServiceAbstraction,\n    private notificationsService: NotificationsServiceAbstraction,\n    private vaultTimeoutService: VaultTimeoutServiceAbstraction,\n    private i18nService: I18nServiceAbstraction,\n    private eventUploadService: EventUploadServiceAbstraction,\n    private twoFactorService: TwoFactorServiceAbstraction,\n    private stateService: StateServiceAbstraction,\n    private cryptoService: CryptoServiceAbstraction,\n    private themingService: AbstractThemingService,\n    private encryptService: EncryptService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      const urls = process.env.URLS as Urls;\n      urls.base ??= this.win.location.origin;\n      this.environmentService.setUrls(urls);\n\n      setTimeout(() => this.notificationsService.init(), 3000);\n      (this.vaultTimeoutService as VaultTimeoutService).init(true);\n      const locale = await this.stateService.getLocale();\n      await (this.i18nService as I18nService).init(locale);\n      (this.eventUploadService as EventUploadService).init(true);\n      this.twoFactorService.init();\n      const htmlEl = this.win.document.documentElement;\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n      await this.themingService.monitorThemeChanges();\n      const containerService = new ContainerService(this.cryptoService, this.encryptService);\n      containerService.attachToGlobal(this.win);\n    };\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport * as jq from \"jquery\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService as BaseModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n  el: any = null;\n  modalOpen = false;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    applicationRef: ApplicationRef,\n    injector: Injector,\n    private messagingService: MessagingService\n  ) {\n    super(componentFactoryResolver, applicationRef, injector);\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    modalRef.onCreated.pipe(first()).subscribe(() => {\n      const modals = Array.from(document.querySelectorAll(\".modal\"));\n      if (modals.length > 0) {\n        this.el = jq(modals[0]);\n        this.el.modal(\"show\");\n\n        this.el.on(\"show.bs.modal\", () => {\n          modalRef.show();\n          this.messagingService.send(\"modalShow\");\n        });\n        this.el.on(\"shown.bs.modal\", () => {\n          modalRef.shown();\n          this.messagingService.send(\"modalShown\");\n          if (!Utils.isMobileBrowser) {\n            this.el.find(\"*[appAutoFocus]\").focus();\n          }\n        });\n        this.el.on(\"hide.bs.modal\", () => {\n          this.messagingService.send(\"modalClose\");\n        });\n        this.el.on(\"hidden.bs.modal\", () => {\n          modalRef.closed();\n          this.messagingService.send(\"modalClosed\");\n        });\n      }\n    });\n\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      if (this.el != null) {\n        this.el.modal(\"hide\");\n      }\n    });\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"passwordConfirmation\" | i18n }}\n        </h1>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"passwordConfirmationDesc\" | i18n }}\n\n        <div class=\"form-group\">\n          <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n            <button\n              type=\"button\"\n              class=\"ml-1 btn btn-link\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { BasePolicy } from \"../organizations/policies\";\n\nexport class PolicyListService {\n  private policies: BasePolicy[] = [];\n\n  addPolicies(policies: BasePolicy[]) {\n    this.policies.push(...policies);\n  }\n\n  getPolicies(): BasePolicy[] {\n    return this.policies;\n  }\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class WebFileDownloadService implements FileDownloadService {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    const a = window.document.createElement(\"a\");\n    if (builder.downloadMethod === \"save\") {\n      a.download = request.fileName;\n    } else if (!this.platformUtilsService.isSafari()) {\n      a.target = \"_blank\";\n    }\n    a.href = URL.createObjectURL(builder.blob);\n    a.style.position = \"fixed\";\n    window.document.body.appendChild(a);\n    a.click();\n    window.document.body.removeChild(a);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { APP_INITIALIZER, NgModule, Optional, SkipSelf } from \"@angular/core\";\n\nimport {\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  MEMORY_STORAGE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { JslibServicesModule } from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ModalService as ModalServiceAbstraction } from \"@bitwarden/angular/services/modal.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LoginService as LoginServiceAbstraction } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { LoginService } from \"@bitwarden/common/services/login.service\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\n\nimport { BroadcasterMessagingService } from \"./broadcaster-messaging.service\";\nimport { EventService } from \"./event.service\";\nimport { HtmlStorageService } from \"./html-storage.service\";\nimport { I18nService } from \"./i18n.service\";\nimport { InitService } from \"./init.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PolicyListService } from \"./policy-list.service\";\nimport { RouterService } from \"./router.service\";\nimport { Account, GlobalState, StateService } from \"./state\";\nimport { StateMigrationService } from \"./state-migration.service\";\nimport { WebFileDownloadService } from \"./web-file-download.service\";\nimport { WebPlatformUtilsService } from \"./web-platform-utils.service\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, JslibServicesModule],\n  providers: [\n    InitService,\n    RouterService,\n    EventService,\n    PolicyListService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: false,\n    },\n    {\n      provide: I18nServiceAbstraction,\n      useClass: I18nService,\n      deps: [SYSTEM_LANGUAGE, LOCALES_DIRECTORY],\n    },\n    { provide: AbstractStorageService, useClass: HtmlStorageService },\n    {\n      provide: SECURE_STORAGE,\n      // TODO: platformUtilsService.isDev has a helper for this, but using that service here results in a circular dependency.\n      // We have a tech debt item in the backlog to break up platformUtilsService, but in the meantime simply checking the environement here is less cumbersome.\n      useClass: process.env.NODE_ENV === \"development\" ? HtmlStorageService : MemoryStorageService,\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useClass: MemoryStorageService,\n    },\n    {\n      provide: PlatformUtilsServiceAbstraction,\n      useClass: WebPlatformUtilsService,\n    },\n    { provide: MessagingServiceAbstraction, useClass: BroadcasterMessagingService },\n    { provide: ModalServiceAbstraction, useClass: ModalService },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    StateService,\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateService,\n    },\n    {\n      provide: PasswordRepromptServiceAbstraction,\n      useClass: PasswordRepromptService,\n    },\n    {\n      provide: FileDownloadService,\n      useClass: WebFileDownloadService,\n    },\n    {\n      provide: LoginServiceAbstraction,\n      useClass: LoginService,\n      deps: [StateService],\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\n    if (parentModule) {\n      throw new Error(\"CoreModule is already loaded. Import it in the AppModule only\");\n    }\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { GlobalState as BaseGlobalState } from \"@bitwarden/common/models/domain/global-state\";\n\nexport class GlobalState extends BaseGlobalState {\n  theme?: ThemeType = ThemeType.Light;\n  rememberEmail = true;\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"af\",\n      \"ar\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"eo\",\n      \"es\",\n      \"et\",\n      \"eu\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-PT\",\n      \"pt-BR\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  protected _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  defaultLocale = \"en\";\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"ar\", \"العربية الفصحى\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"eu\", \"euskara\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.defaultLocale;\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.defaultLocale) {\n        await this.loadMessages(this.defaultLocale, this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string | number, p2?: string | number, p3?: string | number): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1.toString());\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2.toString());\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3.toString());\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { StateMigrationService as BaseStateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\n\nimport { Account } from \"./state/account\";\nimport { GlobalState } from \"./state/global-state\";\n\nexport class StateMigrationService extends BaseStateMigrationService<GlobalState, Account> {\n  protected async migrationStateFrom1To2(): Promise<void> {\n    await super.migrateStateFrom1To2();\n    const globals = (await this.get<GlobalState>(\"global\")) ?? this.stateFactory.createGlobal(null);\n    globals.rememberEmail = (await this.get<boolean>(\"rememberEmail\")) ?? globals.rememberEmail;\n    await this.set(\"global\", globals);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\nimport { filter } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Injectable()\nexport class RouterService {\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    i18nService: I18nService\n  ) {\n    this.currentUrl = this.router.url;\n\n    router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentUrl = event.url;\n\n        let title = i18nService.t(\"pageTitle\", \"Bitwarden\");\n        let child = this.activatedRoute.firstChild;\n        while (child.firstChild) {\n          child = child.firstChild;\n        }\n\n        const titleId: string = child?.snapshot?.data?.titleId;\n        const rawTitle: string = child?.snapshot?.data?.title;\n        const updateUrl = !child?.snapshot?.data?.doNotSaveUrl ?? true;\n\n        if (titleId != null || rawTitle != null) {\n          const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n          if (newTitle != null && newTitle !== \"\") {\n            title = newTitle + \" | \" + title;\n          }\n        }\n        this.titleService.setTitle(title);\n        if (updateUrl) {\n          this.setPreviousUrl(this.currentUrl);\n        }\n      });\n  }\n\n  getPreviousUrl() {\n    return this.previousUrl;\n  }\n\n  setPreviousUrl(url: string) {\n    this.previousUrl = url;\n  }\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = process.env.NODE_ENV === \"development\" ? null : 15;\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport {\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateMigrationService } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport {\n  AbstractMemoryStorageService,\n  AbstractStorageService,\n} from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { FolderData } from \"@bitwarden/common/models/data/folder.data\";\nimport { SendData } from \"@bitwarden/common/models/data/send.data\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\nimport { StateService as BaseStateService } from \"@bitwarden/common/services/state.service\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\n@Injectable()\nexport class StateService extends BaseStateService<GlobalState, Account> {\n  constructor(\n    storageService: AbstractStorageService,\n    @Inject(SECURE_STORAGE) secureStorageService: AbstractStorageService,\n    @Inject(MEMORY_STORAGE) memoryStorageService: AbstractMemoryStorageService,\n    logService: LogService,\n    stateMigrationService: StateMigrationService,\n    @Inject(STATE_FACTORY) stateFactory: StateFactory<GlobalState, Account>,\n    @Inject(STATE_SERVICE_USE_CACHE) useAccountCache = true\n  ) {\n    super(\n      storageService,\n      secureStorageService,\n      memoryStorageService,\n      logService,\n      stateMigrationService,\n      stateFactory,\n      useAccountCache\n    );\n  }\n\n  async addAccount(account: Account) {\n    // Apply web overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCiphers(options);\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCiphers(value, options);\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCollections(options);\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCollections(value, options);\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedFolders(options);\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedFolders(value, options);\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedSends(options);\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedSends(value, options);\n  }\n\n  override async getLastSync(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getLastSync(options);\n  }\n\n  override async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setLastSync(value, options);\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { Injectable } from \"@angular/core\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\n@Injectable()\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n  private browserCache: DeviceType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.browserCache != null) {\n      return this.browserCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.browserCache = DeviceType.FirefoxBrowser;\n    } else if (navigator.userAgent.indexOf(\" OPR/\") >= 0) {\n      this.browserCache = DeviceType.OperaBrowser;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.browserCache = DeviceType.EdgeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.browserCache = DeviceType.VivaldiBrowser;\n    } else if (\n      navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      this.browserCache = DeviceType.SafariBrowser;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.browserCache = DeviceType.ChromeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Trident/\") !== -1) {\n      this.browserCache = DeviceType.IEBrowser;\n    } else {\n      this.browserCache = DeviceType.UnknownBrowser;\n    }\n\n    return this.browserCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"browser\", \"\");\n  }\n\n  getClientType() {\n    return ClientType.Web;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxBrowser;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeBrowser;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeBrowser;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaBrowser;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiBrowser;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariBrowser;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  isViewOpen(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    const a = document.createElement(\"a\");\n    a.href = uri;\n    if (options == null || !options.sameWindow) {\n      a.target = \"_blank\";\n      a.rel = \"noreferrer noopener\";\n    }\n    a.classList.add(\"d-none\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(process.env.APPLICATION_VERSION || \"-\");\n  }\n\n  async getApplicationVersionNumber(): Promise<string> {\n    return (await this.getApplicationVersion()).split(RegExp(\"[+|-]\"))[0].trim();\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  async showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false,\n    target?: string\n  ) {\n    let iconClasses: string = null;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const bootstrapModal = document.querySelector(\"div.modal\");\n    if (bootstrapModal != null) {\n      bootstrapModal.removeAttribute(\"tabindex\");\n    }\n\n    const iconHtmlStr =\n      iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml: iconHtmlStr,\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      titleText: title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n      target: target != null ? target : \"body\",\n    });\n\n    if (bootstrapModal != null) {\n      bootstrapModal.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    return confirmed.value;\n  }\n\n  isDev(): boolean {\n    return process.env.NODE_ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return WebPlatformUtilsService.isSelfHost();\n  }\n\n  static isSelfHost(): boolean {\n    return process.env.ENV.toString() === \"selfhosted\";\n  }\n\n  copyToClipboard(text: string, options?: any): void | boolean {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      let copyEl = doc.body;\n      // For some reason copy command won't work when modal is open if appending to body\n      if (doc.body.classList.contains(\"modal-open\")) {\n        copyEl = doc.body.querySelector<HTMLElement>(\".modal\");\n      }\n      copyEl.appendChild(textarea);\n      textarea.select();\n      let success = false;\n      try {\n        // Security exception may be thrown by some browsers.\n        success = doc.execCommand(\"copy\");\n        if (!success) {\n          this.logService.debug(\"Copy command unsupported or disabled.\");\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        copyEl.removeChild(textarea);\n      }\n      return success;\n    }\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Cannot read from clipboard on web.\");\n  }\n\n  supportsBiometric() {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric() {\n    return Promise.resolve(false);\n  }\n\n  supportsSecureStorage() {\n    return false;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n})\nexport class FooterComponent implements OnInit {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n  }\n}\n","<div class=\"container footer text-muted\">\n  <div class=\"row\">\n    <div class=\"col\">&copy; {{ year }} Bitwarden Inc.</div>\n    <div class=\"col text-center\"></div>\n    <div class=\"col text-right\">\n      {{ \"versionNumber\" | i18n: version }}\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-frontend-layout\",\n  templateUrl: \"frontend-layout.component.html\",\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n    document.body.classList.add(\"layout_frontend\");\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n  &copy; {{ year }} Bitwarden Inc. <br />\n  {{ \"versionNumber\" | i18n: version }}\n</div>\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{ 'nav-background-alt': selfHosted }\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{ 'pageTitle' | i18n: 'Bitwarden' }}\">\n      <i class=\"bwi bwi-shield\" aria-hidden=\"true\"></i>\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/vault\">{{ \"vaults\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/sends\">{{ \"send\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/tools\">{{ \"tools\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/reports\">{{ \"reports\" | i18n }}</a>\n        </li>\n        <li\n          *ngIf=\"(organizations$ | async)?.length >= 1\"\n          class=\"nav-item\"\n          routerLinkActive=\"active\"\n        >\n          <a class=\"nav-link\" [routerLink]=\"['/organizations', (organizations$ | async)[0].id]\">{{\n            \"organizations\" | i18n\n          }}</a>\n        </li>\n        <ng-container *ngIf=\"providers.length >= 1\">\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\">\n            <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{\n              \"provider\" | i18n\n            }}</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\">\n            <a class=\"nav-link\" routerLink=\"/providers\">{{ \"provider\" | i18n }}</a>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n    <product-switcher buttonType=\"light\"></product-switcher>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li>\n        <button\n          [bitMenuTriggerFor]=\"accountMenu\"\n          class=\"tw-border-0 tw-bg-transparent tw-text-alt2 tw-opacity-70 hover:tw-opacity-90\"\n        >\n          <dynamic-avatar [text]=\"name\" size=\"xsmall\" aria-hidden=\"true\"></dynamic-avatar>\n          <i class=\"bwi bwi-caret-down bwi-sm\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu class=\"dropdown-menu\" #accountMenu>\n          <div class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\">\n            <div\n              class=\"tw-flex tw-items-center tw-py-1 tw-px-4 tw-leading-tight tw-text-info\"\n              *ngIf=\"name\"\n              appStopProp\n            >\n              <dynamic-avatar [text]=\"name\" size=\"small\"></dynamic-avatar>\n              <div class=\"tw-ml-2 tw-block tw-overflow-hidden tw-whitespace-nowrap\">\n                <span>{{ \"loggedInAs\" | i18n }}</span>\n                <small class=\"tw-block tw-overflow-hidden tw-whitespace-nowrap tw-text-muted\">{{\n                  name\n                }}</small>\n              </div>\n            </div>\n            <bit-menu-divider></bit-menu-divider>\n            <a bitMenuItem routerLink=\"/settings/account\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"accountSettings\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/help/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-question-circle\" aria-hidden=\"true\"></i>\n              {{ \"getHelp\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"getApps\" | i18n }}\n            </a>\n            <bit-menu-divider></bit-menu-divider>\n            <button bitMenuItem type=\"button\" (click)=\"lock()\">\n              <i class=\"bwi bwi-fw bwi-lock\" aria-hidden=\"true\"></i>\n              {{ \"lockNow\" | i18n }}\n            </button>\n            <button bitMenuItem type=\"button\" (click)=\"logOut()\">\n              <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </bit-menu>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport {\n  canAccessAdmin,\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class NavbarComponent implements OnInit {\n  selfHosted = false;\n  name: string;\n  email: string;\n  providers: Provider[] = [];\n  userId: string;\n  organizations$: Observable<Organization[]>;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private providerService: ProviderService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private i18nService: I18nService\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.name = await this.tokenService.getName();\n    this.email = await this.tokenService.getEmail();\n    this.userId = await this.tokenService.getUserId();\n    if (this.name == null || this.name.trim() === \"\") {\n      this.name = this.email;\n    }\n\n    // Ensure providers and organizations are loaded\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n    this.providers = await this.providerService.getAll();\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter(isNotProviderUser)),\n      canAccessAdmin(this.i18nService)\n    );\n  }\n\n  lock() {\n    this.messagingService.send(\"lockVault\");\n  }\n\n  logOut() {\n    this.messagingService.send(\"logout\");\n  }\n}\n","<bit-menu #menu ariaRole=\"dialog\" [ariaLabel]=\"'switchProducts' | i18n\">\n  <div class=\"tw-px-4 tw-py-2\" *ngIf=\"products$ | async as products\">\n    <!-- Bento options -->\n    <!-- grid-template-columns is dynamic so we can collapse empty columns  -->\n    <section\n      [ngStyle]=\"{\n        '--num-products': products.bento.length,\n        'grid-template-columns': 'repeat(min(var(--num-products,1),3),auto)'\n      }\"\n      class=\"tw-grid tw-gap-2\"\n    >\n      <a\n        *ngFor=\"let product of products.bento\"\n        [routerLink]=\"product.appRoute\"\n        class=\"tw-group tw-flex tw-h-24 tw-w-28 tw-flex-col tw-items-center tw-justify-center tw-rounded tw-p-1 tw-text-primary-500 tw-outline-none hover:tw-bg-background-alt hover:tw-text-primary-700 hover:tw-no-underline focus-visible:!tw-ring-2 focus-visible:!tw-ring-primary-700\"\n        routerLinkActive=\"tw-font-bold tw-bg-primary-500 hover:tw-bg-primary-500 !tw-text-contrast tw-ring-offset-2\"\n        ariaCurrentWhenActive=\"page\"\n      >\n        <i class=\"bwi {{ product.icon }} tw-text-4xl !tw-m-0 !tw-mb-1\"></i>\n        <span class=\"tw-text-center tw-text-sm tw-leading-snug group-hover:tw-underline\">{{\n          product.name\n        }}</span>\n      </a>\n    </section>\n\n    <!-- Other options -->\n    <section\n      *ngIf=\"products.other.length > 0\"\n      class=\"tw-mt-4 tw-flex tw-w-full tw-flex-col tw-border-0 tw-border-t tw-border-solid tw-border-t-text-muted tw-p-2 tw-pb-0\"\n    >\n      <span class=\"tw-mb-1 tw-text-xs tw-text-muted\">{{ \"moreFromBitwarden\" | i18n }}</span>\n      <a *ngFor=\"let product of products.other\" bitLink [href]=\"product.marketingRoute\">\n        <span class=\"tw-font-normal\">\n          <i class=\"bwi {{ product.icon }} tw-m-0 !tw-mr-3\"></i>{{ product.name }}\n        </span>\n      </a>\n    </section>\n  </div>\n</bit-menu>\n","import { Component, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { combineLatest, map } from \"rxjs\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { MenuComponent } from \"@bitwarden/components\";\n\ntype ProductSwitcherItem = {\n  /**\n   * Displayed name\n   */\n  name: string;\n\n  /**\n   * Displayed icon\n   */\n  icon: string;\n\n  /**\n   * Route for items in the `bentoProducts$` section\n   */\n  appRoute?: string | any[];\n\n  /**\n   * Route for items in the `otherProducts$` section\n   */\n  marketingRoute?: string | any[];\n};\n\n@Component({\n  selector: \"product-switcher-content\",\n  templateUrl: \"./product-switcher-content.component.html\",\n})\nexport class ProductSwitcherContentComponent {\n  @ViewChild(\"menu\")\n  menu: MenuComponent;\n\n  protected products$ = combineLatest([\n    this.organizationService.organizations$,\n    this.route.paramMap,\n  ]).pipe(\n    map(([orgs, paramMap]) => {\n      const routeOrg = orgs.find((o) => o.id === paramMap.get(\"organizationId\"));\n      // If the active route org doesn't have access to SM, find the first org that does.\n      const smOrg = routeOrg?.canAccessSecretsManager\n        ? routeOrg\n        : orgs.find((o) => o.canAccessSecretsManager);\n\n      /**\n       * We can update this to the \"satisfies\" type upon upgrading to TypeScript 4.9\n       * https://devblogs.microsoft.com/typescript/announcing-typescript-4-9/#satisfies\n       */\n      const products: Record<\"pm\" | \"sm\" | \"orgs\", ProductSwitcherItem> = {\n        pm: {\n          name: \"Password Manager\",\n          icon: \"bwi-lock\",\n          appRoute: \"/vault\",\n          marketingRoute: \"https://bitwarden.com/products/personal/\",\n        },\n        sm: {\n          name: \"Secrets Manager Beta\",\n          icon: \"bwi-cli\",\n          appRoute: [\"/sm\", smOrg?.id],\n          // TODO: update marketing link\n          marketingRoute: \"#\",\n        },\n        orgs: {\n          name: \"Organizations\",\n          icon: \"bwi-business\",\n          marketingRoute: \"https://bitwarden.com/products/business/\",\n        },\n      };\n\n      const bento: ProductSwitcherItem[] = [products.pm];\n      const other: ProductSwitcherItem[] = [];\n\n      if (smOrg) {\n        bento.push(products.sm);\n      }\n\n      if (orgs.length === 0) {\n        other.push(products.orgs);\n      }\n\n      return {\n        bento,\n        other,\n      };\n    })\n  );\n\n  constructor(private organizationService: OrganizationService, private route: ActivatedRoute) {}\n}\n","<ng-template [ngIf]=\"isEnabled\">\n  <button\n    bitIconButton=\"bwi bwi-fw bwi-filter\"\n    [bitMenuTriggerFor]=\"content?.menu\"\n    [buttonType]=\"buttonType\"\n    [attr.aria-label]=\"'switchProducts' | i18n\"\n  ></button>\n  <product-switcher-content #content></product-switcher-content>\n</ng-template>\n","import { AfterViewInit, ChangeDetectorRef, Component, Input } from \"@angular/core\";\n\nimport { IconButtonType } from \"@bitwarden/components/src/icon-button/icon-button.component\";\n\nimport { flagEnabled } from \"../../../utils/flags\";\n\n@Component({\n  selector: \"product-switcher\",\n  templateUrl: \"./product-switcher.component.html\",\n})\nexport class ProductSwitcherComponent implements AfterViewInit {\n  protected isEnabled = flagEnabled(\"secretsManager\");\n\n  /**\n   * Passed to the product switcher's `bitIconButton`\n   */\n  @Input()\n  buttonType: IconButtonType = \"main\";\n\n  ngAfterViewInit() {\n    /**\n     * Resolves https://angular.io/errors/NG0100 [SM-403]\n     *\n     * Caused by `[bitMenuTriggerFor]=\"content?.menu\"` in template\n     */\n    this.changeDetector.detectChanges();\n  }\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { I18nPipe } from \"@bitwarden/angular/pipes/i18n.pipe\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { ProductSwitcherContentComponent } from \"./product-switcher-content.component\";\nimport { ProductSwitcherComponent } from \"./product-switcher.component\";\n\n@NgModule({\n  imports: [SharedModule, A11yModule, RouterModule],\n  declarations: [ProductSwitcherComponent, ProductSwitcherContentComponent],\n  exports: [ProductSwitcherComponent],\n  providers: [I18nPipe],\n})\nexport class ProductSwitcherModule {}\n","import { NgModule } from \"@angular/core\";\n\n@NgModule({})\nexport class CoreOrganizationModule {}\n","import { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { SelectionReadOnlyRequest } from \"../../../models/request/selection-read-only.request\";\n\nexport class OrganizationUserUpdateRequest {\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  groups: string[] = [];\n  permissions: PermissionsApi;\n}\n","import { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { SelectionReadOnlyRequest } from \"../../../models/request/selection-read-only.request\";\n\nexport class OrganizationUserInviteRequest {\n  emails: string[] = [];\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  groups: string[];\n  permissions: PermissionsApi;\n}\n","import { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissions.api\";\n\nimport { CollectionAccessSelectionView } from \"./collection-access-selection.view\";\n\nexport class OrganizationUserAdminView {\n  id: string;\n  userId: string;\n  organizationId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  collections: CollectionAccessSelectionView[] = [];\n  groups: string[] = [];\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport {\n  OrganizationUserInviteRequest,\n  OrganizationUserUpdateRequest,\n} from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationUserDetailsResponse } from \"@bitwarden/common/abstractions/organization-user/responses\";\n\nimport { CoreOrganizationModule } from \"../core-organization.module\";\nimport { OrganizationUserAdminView } from \"../views/organization-user-admin-view\";\n\n@Injectable({ providedIn: CoreOrganizationModule })\nexport class UserAdminService {\n  constructor(private organizationUserService: OrganizationUserService) {}\n\n  async get(\n    organizationId: string,\n    organizationUserId: string\n  ): Promise<OrganizationUserAdminView | undefined> {\n    const userResponse = await this.organizationUserService.getOrganizationUser(\n      organizationId,\n      organizationUserId,\n      {\n        includeGroups: true,\n      }\n    );\n\n    if (userResponse == null) {\n      return undefined;\n    }\n\n    const [view] = await this.decryptMany(organizationId, [userResponse]);\n\n    return view;\n  }\n\n  async save(user: OrganizationUserAdminView): Promise<void> {\n    const request = new OrganizationUserUpdateRequest();\n    request.accessAll = user.accessAll;\n    request.permissions = user.permissions;\n    request.type = user.type;\n    request.collections = user.collections;\n    request.groups = user.groups;\n\n    await this.organizationUserService.putOrganizationUser(user.organizationId, user.id, request);\n  }\n\n  async invite(emails: string[], user: OrganizationUserAdminView): Promise<void> {\n    const request = new OrganizationUserInviteRequest();\n    request.emails = emails;\n    request.accessAll = user.accessAll;\n    request.permissions = user.permissions;\n    request.type = user.type;\n    request.collections = user.collections;\n    request.groups = user.groups;\n\n    await this.organizationUserService.postOrganizationUserInvite(user.organizationId, request);\n  }\n\n  private async decryptMany(\n    organizationId: string,\n    users: OrganizationUserDetailsResponse[]\n  ): Promise<OrganizationUserAdminView[]> {\n    const promises = users.map(async (u) => {\n      const view = new OrganizationUserAdminView();\n\n      view.id = u.id;\n      view.organizationId = organizationId;\n      view.userId = u.userId;\n      view.type = u.type;\n      view.status = u.status;\n      view.accessAll = u.accessAll;\n      view.permissions = u.permissions;\n      view.resetPasswordEnrolled = u.resetPasswordEnrolled;\n      view.collections = u.collections.map((c) => ({\n        id: c.id,\n        hidePasswords: c.hidePasswords,\n        readOnly: c.readOnly,\n      }));\n      view.groups = u.groups;\n\n      return view;\n    });\n\n    return await Promise.all(promises);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { CollectionRequest } from \"@bitwarden/common/models/request/collection.request\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport {\n  CollectionAccessDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collection.response\";\n\nimport { CoreOrganizationModule } from \"../core-organization.module\";\nimport { CollectionAdminView } from \"../views/collection-admin.view\";\n\n@Injectable({ providedIn: CoreOrganizationModule })\nexport class CollectionAdminService {\n  constructor(private apiService: ApiService, private cryptoService: CryptoService) {}\n\n  async getAll(organizationId: string): Promise<CollectionAdminView[]> {\n    const collectionResponse = await this.apiService.getManyCollectionsWithAccessDetails(\n      organizationId\n    );\n\n    if (collectionResponse?.data == null || collectionResponse.data.length === 0) {\n      return [];\n    }\n\n    return await this.decryptMany(organizationId, collectionResponse.data);\n  }\n\n  async get(\n    organizationId: string,\n    collectionId: string\n  ): Promise<CollectionAdminView | undefined> {\n    const collectionResponse = await this.apiService.getCollectionAccessDetails(\n      organizationId,\n      collectionId\n    );\n\n    if (collectionResponse == null) {\n      return undefined;\n    }\n\n    const [view] = await this.decryptMany(organizationId, [collectionResponse]);\n\n    return view;\n  }\n\n  async save(collection: CollectionAdminView): Promise<unknown> {\n    const request = await this.encrypt(collection);\n\n    let response: CollectionResponse;\n    if (collection.id == null) {\n      response = await this.apiService.postCollection(collection.organizationId, request);\n      collection.id = response.id;\n    } else {\n      response = await this.apiService.putCollection(\n        collection.organizationId,\n        collection.id,\n        request\n      );\n    }\n\n    // TODO: Implement upsert when in PS-1083: Collection Service refactors\n    // await this.collectionService.upsert(data);\n    return;\n  }\n\n  async delete(organizationId: string, collectionId: string): Promise<void> {\n    await this.apiService.deleteCollection(organizationId, collectionId);\n  }\n\n  private async decryptMany(\n    organizationId: string,\n    collections: CollectionResponse[] | CollectionAccessDetailsResponse[]\n  ): Promise<CollectionAdminView[]> {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n\n    const promises = collections.map(async (c) => {\n      const view = new CollectionAdminView();\n      view.id = c.id;\n      view.name = await this.cryptoService.decryptToUtf8(new EncString(c.name), orgKey);\n      view.externalId = c.externalId;\n      view.organizationId = c.organizationId;\n\n      if (isCollectionAccessDetailsResponse(c)) {\n        view.groups = c.groups;\n        view.users = c.users;\n        view.assigned = c.assigned;\n      }\n\n      return view;\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async encrypt(model: CollectionAdminView): Promise<CollectionRequest> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new CollectionRequest();\n    collection.externalId = model.externalId;\n    collection.name = (await this.cryptoService.encrypt(model.name, key)).encryptedString;\n    collection.groups = model.groups.map(\n      (group) => new SelectionReadOnlyRequest(group.id, group.readOnly, group.hidePasswords)\n    );\n    collection.users = model.users.map(\n      (user) => new SelectionReadOnlyRequest(user.id, user.readOnly, user.hidePasswords)\n    );\n    return collection;\n  }\n}\n\nfunction isCollectionAccessDetailsResponse(\n  response: CollectionResponse | CollectionAccessDetailsResponse\n): response is CollectionAccessDetailsResponse {\n  const anyResponse = response as any;\n\n  return anyResponse?.groups instanceof Array && anyResponse?.users instanceof Array;\n}\n","import { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\n\nexport class GroupRequest {\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: SelectionReadOnlyRequest[] = [];\n  users: string[] = [];\n}\n","export class OrganizationGroupBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\n\nimport { CoreOrganizationModule } from \"../../core-organization.module\";\nimport { GroupView } from \"../../views/group.view\";\n\nimport { GroupRequest } from \"./requests/group.request\";\nimport { OrganizationGroupBulkRequest } from \"./requests/organization-group-bulk.request\";\nimport { GroupDetailsResponse, GroupResponse } from \"./responses/group.response\";\n\n@Injectable({ providedIn: CoreOrganizationModule })\nexport class GroupService {\n  constructor(private apiService: ApiService) {}\n\n  async delete(orgId: string, groupId: string): Promise<void> {\n    await this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + orgId + \"/groups/\" + groupId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteMany(orgId: string, groupIds: string[]): Promise<void> {\n    await this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + orgId + \"/groups\",\n      new OrganizationGroupBulkRequest(groupIds),\n      true,\n      true\n    );\n  }\n\n  async get(orgId: string, groupId: string): Promise<GroupView> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + orgId + \"/groups/\" + groupId + \"/details\",\n      null,\n      true,\n      true\n    );\n\n    return GroupView.fromResponse(new GroupDetailsResponse(r));\n  }\n\n  async getAll(orgId: string): Promise<GroupView[]> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + orgId + \"/groups\",\n      null,\n      true,\n      true\n    );\n\n    const listResponse = new ListResponse(r, GroupDetailsResponse);\n\n    return listResponse.data?.map((gr) => GroupView.fromResponse(gr)) ?? [];\n  }\n\n  async save(group: GroupView): Promise<GroupView> {\n    const request = new GroupRequest();\n    request.name = group.name;\n    request.externalId = group.externalId;\n    request.accessAll = group.accessAll;\n    request.users = group.members;\n    request.collections = group.collections.map(\n      (c) => new SelectionReadOnlyRequest(c.id, c.readOnly, c.hidePasswords)\n    );\n\n    if (group.id == undefined) {\n      return await this.postGroup(group.organizationId, request);\n    } else {\n      return await this.putGroup(group.organizationId, group.id, request);\n    }\n  }\n\n  private async postGroup(organizationId: string, request: GroupRequest): Promise<GroupView> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return GroupView.fromResponse(new GroupResponse(r));\n  }\n\n  private async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupView> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return GroupView.fromResponse(new GroupResponse(r));\n  }\n}\n","import { BaseResponse } from \"@bitwarden/common/models/response/base.response\";\nimport { SelectionReadOnlyResponse } from \"@bitwarden/common/models/response/selection-read-only.response\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { View } from \"@bitwarden/common/models/view/view\";\n\ninterface SelectionResponseLike {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n}\n\nexport class CollectionAccessSelectionView extends View {\n  readonly id: string;\n  readonly readOnly: boolean;\n  readonly hidePasswords: boolean;\n\n  constructor(response?: SelectionResponseLike) {\n    super();\n\n    if (!response) {\n      return;\n    }\n\n    this.id = response.id;\n    this.readOnly = response.readOnly;\n    this.hidePasswords = response.hidePasswords;\n  }\n}\n","import { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { CollectionAccessDetailsResponse } from \"@bitwarden/common/src/models/response/collection.response\";\n\nimport { CollectionAccessSelectionView } from \"./collection-access-selection.view\";\n\nexport class CollectionAdminView extends CollectionView {\n  groups: CollectionAccessSelectionView[] = [];\n  users: CollectionAccessSelectionView[] = [];\n\n  /**\n   * Flag indicating the user has been explicitly assigned to this Collection\n   */\n  assigned: boolean;\n\n  constructor(response?: CollectionAccessDetailsResponse) {\n    super(response);\n\n    if (!response) {\n      return;\n    }\n\n    this.groups = response.groups\n      ? response.groups.map((g) => new CollectionAccessSelectionView(g))\n      : [];\n\n    this.users = response.users\n      ? response.users.map((g) => new CollectionAccessSelectionView(g))\n      : [];\n\n    this.assigned = response.assigned;\n  }\n}\n","import { View } from \"@bitwarden/common/src/models/view/view\";\n\nimport { GroupDetailsResponse, GroupResponse } from \"../services/group/responses/group.response\";\n\nimport { CollectionAccessSelectionView } from \"./collection-access-selection.view\";\n\nexport class GroupView implements View {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: CollectionAccessSelectionView[] = [];\n  members: string[] = [];\n\n  static fromResponse(response: GroupResponse): GroupView {\n    const view: GroupView = Object.assign(new GroupView(), response) as GroupView;\n\n    if (response instanceof GroupDetailsResponse && response.collections != undefined) {\n      view.collections = response.collections.map((c) => new CollectionAccessSelectionView(c));\n    }\n\n    return view;\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationInformationComponent } from \"./organization-information.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationInformationComponent],\n  exports: [OrganizationInformationComponent],\n})\nexport class OrganizationCreateModule {}\n","<form #form [formGroup]=\"formGroup\" *ngIf=\"nameOnly\">\n  <bit-form-field>\n    <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"name\" />\n  </bit-form-field>\n</form>\n<form #form [formGroup]=\"formGroup\" *ngIf=\"!nameOnly\">\n  <h2>{{ \"generalInformation\" | i18n }}</h2>\n  <div class=\"tw-flex tw-w-full tw-space-x-4\" *ngIf=\"createOrganization\">\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" formControlName=\"name\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"billingEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"billingEmail\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\" *ngIf=\"isProvider\">\n      <bit-label>{{ \"clientOwnerEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"clientOwnerEmail\" />\n    </bit-form-field>\n  </div>\n  <div *ngIf=\"!isProvider && !acceptingSponsorship\">\n    <input\n      type=\"checkbox\"\n      name=\"businessOwned\"\n      formControlName=\"businessOwned\"\n      (change)=\"changedBusinessOwned.emit()\"\n    />\n    <bit-label for=\"businessOwned\" class=\"tw-mb-3\">{{ \"accountOwnedBusiness\" | i18n }}</bit-label>\n    <div class=\"tw-mt-4\" *ngIf=\"formGroup.controls['businessOwned'].value\">\n      <bit-form-field class=\"tw-w-1/2\">\n        <bit-label>{{ \"businessName\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"businessName\" />\n      </bit-form-field>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-org-info\",\n  templateUrl: \"organization-information.component.html\",\n})\nexport class OrganizationInformationComponent {\n  @Input() nameOnly = false;\n  @Input() createOrganization = true;\n  @Input() isProvider = false;\n  @Input() acceptingSponsorship = false;\n  @Input() formGroup: UntypedFormGroup;\n  @Output() changedBusinessOwned = new EventEmitter<void>();\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessOrgAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationPermissionsGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private syncService: SyncService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // TODO: We need to fix this issue once and for all.\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n\n    const org = this.organizationService.get(route.params.organizationId);\n    if (org == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!org.isOwner && !org.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"organizationIsDisabled\")\n      );\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (organization: Organization) => boolean =\n      route.data?.organizationPermissions;\n    const hasPermissions = permissionsCallback == null || permissionsCallback(org);\n\n    if (!hasPermissions) {\n      // Handle linkable ciphers for organizations the user only has view access to\n      // https://bitwarden.atlassian.net/browse/EC-203\n      const cipherId =\n        state.root.queryParamMap.get(\"itemId\") || state.root.queryParamMap.get(\"cipherId\");\n      if (cipherId) {\n        return this.router.createUrlTree([\"/vault\"], {\n          queryParams: {\n            itemId: cipherId,\n          },\n        });\n      }\n\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return canAccessOrgAdmin(org)\n        ? this.router.createUrlTree([\"/organizations\", org.id])\n        : this.router.createUrlTree([\"/\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport {\n  canAccessOrgAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationRedirectGuard implements CanActivate {\n  constructor(private router: Router, private organizationService: OrganizationService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const org = this.organizationService.get(route.params.organizationId);\n\n    const customRedirect = route.data?.autoRedirectCallback;\n    if (customRedirect) {\n      let redirectPath = customRedirect(org);\n      if (typeof redirectPath === \"string\") {\n        redirectPath = [redirectPath];\n      }\n      return this.router.createUrlTree([state.url, ...redirectPath]);\n    }\n\n    if (canAccessOrgAdmin(org)) {\n      return this.router.createUrlTree([\"/organizations\", org.id]);\n    }\n    return this.router.createUrlTree([\"/\"]);\n  }\n}\n","<div *ngIf=\"loaded && activeOrganization != null\" class=\"tw-flex\">\n  <button\n    class=\"tw-flex tw-items-center tw-border-none tw-bg-background-alt\"\n    type=\"button\"\n    id=\"pickerButton\"\n    [appA11yTitle]=\"'organizationPicker' | i18n\"\n    [bitMenuTriggerFor]=\"orgPickerMenu\"\n  >\n    <bit-avatar [text]=\"activeOrganization.name\"></bit-avatar>\n    <div class=\"tw-flex\">\n      <div class=\"org-name tw-ml-3\">\n        <span>{{ activeOrganization.name }}</span>\n        <small class=\"tw-text-muted\">{{ \"organization\" | i18n }}</small>\n      </div>\n      <div class=\"tw-ml-3\">\n        <i class=\"bwi bwi-angle-down tw-text-main\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </button>\n  <div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-danger-500 tw-text-danger\"\n      *ngIf=\"!activeOrganization.enabled\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"organizationIsDisabled\" | i18n }}\n      </div>\n    </div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-info-500 tw-text-info\"\n      *ngIf=\"activeOrganization.isProviderUser\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"accessingUsingProvider\" | i18n: activeOrganization.providerName }}\n      </div>\n    </div>\n  </div>\n\n  <bit-menu #orgPickerMenu>\n    <ul aria-labelledby=\"pickerButton\" class=\"tw-m-0 tw-p-0\">\n      <li\n        *ngFor=\"let org of organizations$ | async\"\n        class=\"tw-flex tw-list-none tw-flex-col\"\n        role=\"none\"\n      >\n        <a bitMenuItem [routerLink]=\"['/organizations', org.id]\">\n          <i\n            class=\"bwi bwi-check mr-2\"\n            [ngClass]=\"org.id === activeOrganization.id ? 'visible' : 'invisible'\"\n          >\n            <span class=\"tw-sr-only\">{{ \"currentOrganization\" | i18n }}</span>\n          </i>\n          {{ org.name }}\n        </a>\n      </li>\n      <bit-menu-divider></bit-menu-divider>\n      <li class=\"tw-list-none\" role=\"none\">\n        <a bitMenuItem routerLink=\"/create-organization\">\n          <i class=\"bwi bwi-plus mr-2\"></i>\n          {{ \"newOrganization\" | i18n }}</a\n        >\n      </li>\n    </ul>\n  </bit-menu>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessAdmin,\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-switcher\",\n  templateUrl: \"organization-switcher.component.html\",\n})\nexport class OrganizationSwitcherComponent implements OnInit {\n  constructor(private organizationService: OrganizationService, private i18nService: I18nService) {}\n\n  @Input() activeOrganization: Organization = null;\n  organizations$: Observable<Organization[]>;\n\n  loaded = false;\n\n  async ngOnInit() {\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter(isNotProviderUser)),\n      canAccessAdmin(this.i18nService),\n      map((orgs) => orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")))\n    );\n\n    this.loaded = true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav !tw-h-32\" *ngIf=\"organization$ | async as organization\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <app-organization-switcher\n        class=\"my-auto pl-1\"\n        [activeOrganization]=\"organization\"\n      ></app-organization-switcher>\n      <bit-tab-nav-bar class=\"-tw-mb-px\">\n        <bit-tab-link *ngIf=\"canShowVaultTab(organization)\" route=\"vault\">{{\n          \"vault\" | i18n\n        }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowMembersTab(organization)\" route=\"members\">{{\n          \"members\" | i18n\n        }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowGroupsTab(organization)\" route=\"groups\">{{\n          \"groups\" | i18n\n        }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowReportsTab(organization)\" route=\"reporting\">\n          {{ getReportTabLabel(organization) | i18n }}\n        </bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowBillingTab(organization)\" route=\"billing\">{{\n          \"billing\" | i18n\n        }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowSettingsTab(organization)\" route=\"settings\">{{\n          \"settings\" | i18n\n        }}</bit-tab-link>\n      </bit-tab-nav-bar>\n    </div>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, mergeMap, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport {\n  canAccessBillingTab,\n  canAccessGroupsTab,\n  canAccessMembersTab,\n  canAccessReportingTab,\n  canAccessSettingsTab,\n  canAccessVaultTab,\n  getOrganizationById,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-layout\",\n  templateUrl: \"organization-layout.component.html\",\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n  organization$: Observable<Organization>;\n\n  private _destroy = new Subject<void>();\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n\n    this.organization$ = this.route.params\n      .pipe(takeUntil(this._destroy))\n      .pipe<string>(map((p) => p.organizationId))\n      .pipe(\n        mergeMap((id) => {\n          return this.organizationService.organizations$\n            .pipe(takeUntil(this._destroy))\n            .pipe(getOrganizationById(id));\n        })\n      );\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  canShowVaultTab(organization: Organization): boolean {\n    return canAccessVaultTab(organization);\n  }\n\n  canShowSettingsTab(organization: Organization): boolean {\n    return canAccessSettingsTab(organization);\n  }\n\n  canShowMembersTab(organization: Organization): boolean {\n    return canAccessMembersTab(organization);\n  }\n\n  canShowGroupsTab(organization: Organization): boolean {\n    return canAccessGroupsTab(organization);\n  }\n\n  canShowReportsTab(organization: Organization): boolean {\n    return canAccessReportingTab(organization);\n  }\n\n  canShowBillingTab(organization: Organization): boolean {\n    return canAccessBillingTab(organization);\n  }\n\n  getReportTabLabel(organization: Organization): string {\n    return organization.useEvents ? \"reporting\" : \"reports\";\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"eventLogsTitle\">\n          {{ \"eventLogs\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loaded\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loaded\">\n        <div class=\"d-flex\">\n          <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"start\"\n              placeholder=\"{{ 'startDate' | i18n }}\"\n              [(ngModel)]=\"start\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"end\"\n              placeholder=\"{{ 'endDate' | i18n }}\"\n              [(ngModel)]=\"end\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n          </div>\n          <button\n            #refreshBtn\n            [appApiAction]=\"refreshPromise\"\n            type=\"button\"\n            class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\"\n            [disabled]=\"loaded && $any(refreshBtn).loading\"\n          >\n            <i\n              class=\"bwi bwi-refresh bwi-fw\"\n              [ngClass]=\"{ 'bwi-spin': loaded && $any(refreshBtn).loading }\"\n              aria-hidden=\"true\"\n            ></i>\n            {{ \"refresh\" | i18n }}\n          </button>\n        </div>\n        <hr />\n        <div *ngIf=\"!events || !events.length\">\n          {{ \"noEventsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n          <thead>\n            <tr>\n              <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n              <th class=\"border-top-0\" width=\"40\">\n                <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n              </th>\n              <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{ \"user\" | i18n }}</th>\n              <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let e of events\">\n              <td>{{ e.date | date: \"medium\" }}</td>\n              <td>\n                <i\n                  class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n                  title=\"{{ e.appName }}, {{ e.ip }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n              </td>\n              <td *ngIf=\"showUser\">\n                <span appA11yTitle=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n              </td>\n              <td [innerHTML]=\"e.message\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          #moreBtn\n          [appApiAction]=\"morePromise\"\n          type=\"button\"\n          class=\"btn btn-block btn-link btn-submit\"\n          (click)=\"loadEvents(false)\"\n          [disabled]=\"loaded && $any(moreBtn).loading\"\n          *ngIf=\"continuationToken\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"loadMore\" | i18n }}</span>\n        </button>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\n\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-entity-events\",\n  templateUrl: \"entity-events.component.html\",\n})\nexport class EntityEventsComponent implements OnInit {\n  @Input() name: string;\n  @Input() entity: \"user\" | \"cipher\";\n  @Input() entityId: string;\n  @Input() organizationId: string;\n  @Input() providerId: string;\n  @Input() showUser = false;\n\n  loading = true;\n  loaded = false;\n  events: any[];\n  start: string;\n  end: string;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private orgUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private eventService: EventService,\n    private platformUtilsService: PlatformUtilsService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n    await this.load();\n  }\n\n  async load() {\n    if (this.showUser) {\n      const response = await this.organizationUserService.getAllUsers(this.organizationId);\n      response.data.forEach((u) => {\n        const name = this.userNamePipe.transform(u);\n        this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n        this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n      });\n    }\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.refreshPromise != null || this.morePromise != null) {\n      return;\n    }\n\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return;\n    }\n\n    this.loading = true;\n    let response: ListResponse<EventResponse>;\n    try {\n      let promise: Promise<any>;\n      if (this.entity === \"user\" && this.providerId) {\n        promise = this.apiService.getEventsProviderUser(\n          this.providerId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else if (this.entity === \"user\") {\n        promise = this.apiService.getEventsOrganizationUser(\n          this.organizationId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else {\n        promise = this.apiService.getEventsCipher(\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      }\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      response = await promise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.continuationToken = response.continuationToken;\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user =\n          this.showUser && userId != null && this.orgUsersUserIdMap.has(userId)\n            ? this.orgUsersUserIdMap.get(userId)\n            : null;\n        return {\n          message: eventInfo.message,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.showUser ? this.i18nService.t(\"unknown\") : null,\n          userEmail: user != null ? user.email : this.showUser ? \"\" : null,\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        };\n      })\n    );\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n}\n","type OrganizationUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n  keys: OrganizationUserBulkRequestEntry[];\n\n  constructor(keys: OrganizationUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"confirmUsers\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!loading && !done\">\n          <p>\n            {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n            <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n              {{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"fingerprint\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ fingerprints.get(user.id) }}\n              </td>\n            </tr>\n            <tr *ngFor=\"let user of excludedUsers\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"!loading && done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserBulkConfirmRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-confirm\",\n  templateUrl: \"bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent implements OnInit {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  excludedUsers: BulkUserDetails[];\n  filteredUsers: BulkUserDetails[];\n  publicKeys: Map<string, Uint8Array> = new Map();\n  fingerprints: Map<string, string> = new Map();\n  statuses: Map<string, string> = new Map();\n\n  loading = true;\n  done = false;\n  error: string;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    private organizationUserService: OrganizationUserService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.excludedUsers = this.users.filter((u) => !this.isAccepted(u));\n    this.filteredUsers = this.users.filter((u) => this.isAccepted(u));\n\n    if (this.filteredUsers.length <= 0) {\n      this.done = true;\n    }\n\n    const response = await this.getPublicKeys();\n\n    for (const entry of response.data) {\n      const publicKey = Utils.fromB64ToArray(entry.key);\n      const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n      if (fingerprint != null) {\n        this.publicKeys.set(entry.id, publicKey);\n        this.fingerprints.set(entry.id, fingerprint.join(\"-\"));\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const key = await this.getCryptoKey();\n      const userIdsWithKeys: any[] = [];\n      for (const user of this.filteredUsers) {\n        const publicKey = this.publicKeys.get(user.id);\n        if (publicKey == null) {\n          continue;\n        }\n        const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n        userIdsWithKeys.push({\n          id: user.id,\n          key: encryptedKey.encryptedString,\n        });\n      }\n      const response = await this.postConfirmRequest(userIdsWithKeys);\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkConfirmMessage\");\n        this.statuses.set(entry.id, error);\n      });\n\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n    this.loading = false;\n  }\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === OrganizationUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    return await this.organizationUserService.postOrganizationUsersPublicKey(\n      this.organizationId,\n      this.filteredUsers.map((user) => user.id)\n    );\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getOrgKey(this.organizationId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.organizationUserService.postOrganizationUserBulkConfirm(\n      this.organizationId,\n      request\n    );\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"removeUsers\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\">\n            {{ removeUsersWarning }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"removeUsers\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-remove\",\n  templateUrl: \"bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.deleteUsers();\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkRemovedMessage\");\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async deleteUsers() {\n    return await this.organizationUserService.deleteManyOrganizationUsers(\n      this.organizationId,\n      this.users.map((user) => user.id)\n    );\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeOrgUsersConfirmation\");\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"bulkConfirmStatus\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              <th>{{ \"status\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tr *ngFor=\"let item of users\">\n            <td width=\"30\">\n              <bit-avatar\n                [text]=\"item.user | userName\"\n                [id]=\"item.user.id\"\n                size=\"small\"\n              ></bit-avatar>\n            </td>\n            <td>\n              {{ item.user.email }}\n              <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{ item.user.name }}</small>\n            </td>\n            <td class=\"text-danger\" *ngIf=\"item.error\">\n              {{ item.message }}\n            </td>\n            <td *ngIf=\"!item.error\">\n              {{ item.message }}\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\n\nexport interface BulkUserDetails {\n  id: string;\n  name: string;\n  email: string;\n  status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n  user: BulkUserDetails;\n  error: boolean;\n  message: string;\n};\n\n@Component({\n  selector: \"app-bulk-status\",\n  templateUrl: \"bulk-status.component.html\",\n})\nexport class BulkStatusComponent {\n  users: BulkStatusEntry[];\n  loading = false;\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyRequest {\n  type: PolicyType;\n  enabled: boolean;\n  data: any;\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nexport abstract class BasePolicy {\n  abstract name: string;\n  abstract description: string;\n  abstract type: PolicyType;\n  abstract component: any;\n\n  display(organization: Organization) {\n    return true;\n  }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n  @Input() policyResponse: PolicyResponse;\n  @Input() policy: BasePolicy;\n\n  enabled = new UntypedFormControl(false);\n  data: UntypedFormGroup = null;\n\n  ngOnInit(): void {\n    this.enabled.setValue(this.policyResponse.enabled);\n\n    if (this.policyResponse.data != null) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.data.patchValue(this.policyResponse.data ?? {});\n  }\n\n  buildRequestData() {\n    if (this.data != null) {\n      return this.data.value;\n    }\n\n    return null;\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n    const request = new PolicyRequest();\n    request.enabled = this.enabled.value;\n    request.type = this.policy.type;\n    request.data = this.buildRequestData();\n\n    return Promise.resolve(request);\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { DisableSendPolicyComponent } from \"./disable-send.component\";\nimport { MasterPasswordPolicyComponent } from \"./master-password.component\";\nimport { PasswordGeneratorPolicyComponent } from \"./password-generator.component\";\nimport { PersonalOwnershipPolicyComponent } from \"./personal-ownership.component\";\nimport { PoliciesComponent } from \"./policies.component\";\nimport { PolicyEditComponent } from \"./policy-edit.component\";\nimport { RequireSsoPolicyComponent } from \"./require-sso.component\";\nimport { ResetPasswordPolicyComponent } from \"./reset-password.component\";\nimport { SendOptionsPolicyComponent } from \"./send-options.component\";\nimport { SingleOrgPolicyComponent } from \"./single-org.component\";\nimport { TwoFactorAuthenticationPolicyComponent } from \"./two-factor-authentication.component\";\n\n@NgModule({\n  imports: [SharedModule, LooseComponentsModule],\n  declarations: [\n    DisableSendPolicyComponent,\n    MasterPasswordPolicyComponent,\n    PasswordGeneratorPolicyComponent,\n    PersonalOwnershipPolicyComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SendOptionsPolicyComponent,\n    SingleOrgPolicyComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    PoliciesComponent,\n    PolicyEditComponent,\n  ],\n  exports: [\n    DisableSendPolicyComponent,\n    MasterPasswordPolicyComponent,\n    PasswordGeneratorPolicyComponent,\n    PersonalOwnershipPolicyComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SendOptionsPolicyComponent,\n    SingleOrgPolicyComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    PoliciesComponent,\n    PolicyEditComponent,\n  ],\n})\nexport class PoliciesModule {}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class DisableSendPolicy extends BasePolicy {\n  name = \"disableSend\";\n  description = \"disableSendPolicyDesc\";\n  type = PolicyType.DisableSend;\n  component = DisableSendPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-send\",\n  templateUrl: \"disable-send.component.html\",\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"disableSendExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minComplexity\">{{ \"minComplexityScore\" | i18n }}</label>\n      <select\n        id=\"minComplexity\"\n        name=\"minComplexity\"\n        formControlName=\"minComplexity\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"8\"\n        name=\"minLength\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireUpper\"\n      name=\"requireUpper\"\n      formControlName=\"requireUpper\"\n    />\n    <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireLower\"\n      name=\"requireLower\"\n      formControlName=\"requireLower\"\n    />\n    <label class=\"form-check-label\" for=\"requireLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireNumbers\"\n      name=\"requireNumbers\"\n      formControlName=\"requireNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireSpecial\"\n      name=\"requireSpecial\"\n      formControlName=\"requireSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class MasterPasswordPolicy extends BasePolicy {\n  name = \"masterPassPolicyTitle\";\n  description = \"masterPassPolicyDesc\";\n  type = PolicyType.MasterPassword;\n  component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-master-password\",\n  templateUrl: \"master-password.component.html\",\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    minComplexity: [null],\n    minLength: [null],\n    requireUpper: [null],\n    requireLower: [null],\n    requireNumbers: [null],\n    requireSpecial: [null],\n  });\n\n  passwordScores: { name: string; value: number }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {\n    super();\n\n    this.passwordScores = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"weak\") + \" (0)\", value: 0 },\n      { name: i18nService.t(\"weak\") + \" (1)\", value: 1 },\n      { name: i18nService.t(\"weak\") + \" (2)\", value: 2 },\n      { name: i18nService.t(\"good\") + \" (3)\", value: 3 },\n      { name: i18nService.t(\"strong\") + \" (4)\", value: 4 },\n    ];\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group mb-0\">\n      <label for=\"defaultType\">{{ \"defaultType\" | i18n }}</label>\n      <select\n        id=\"defaultType\"\n        name=\"defaultType\"\n        formControlName=\"defaultType\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n  </div>\n  <h3 class=\"mt-4\">{{ \"password\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minLength\"\n        min=\"5\"\n        max=\"128\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumbers\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"minNumbers\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumbers\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minNumbers\"\n      />\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minSpecial\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"minSpecial\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minSpecial\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minSpecial\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useUpper\"\n      formControlName=\"useUpper\"\n      name=\"useUpper\"\n    />\n    <label class=\"form-check-label\" for=\"useUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useLower\"\n      name=\"useLower\"\n      formControlName=\"useLower\"\n    />\n    <label class=\"form-check-label\" for=\"useLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useNumbers\"\n      name=\"useNumbers\"\n      formControlName=\"useNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"useNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useSpecial\"\n      name=\"useSpecial\"\n      formControlName=\"useSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label>\n  </div>\n  <h3 class=\"mt-4\">{{ \"passphrase\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumberWords\">{{ \"minimumNumberOfWords\" | i18n }}</label>\n      <input\n        id=\"minNumberWords\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumberWords\"\n        min=\"3\"\n        max=\"20\"\n        formControlName=\"minNumberWords\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"capitalize\"\n      name=\"capitalize\"\n      formControlName=\"capitalize\"\n    />\n    <label class=\"form-check-label\" for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"includeNumber\"\n      name=\"includeNumber\"\n      formControlName=\"includeNumber\"\n    />\n    <label class=\"form-check-label\" for=\"includeNumber\">{{ \"includeNumber\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n  name = \"passwordGenerator\";\n  description = \"passwordGeneratorPolicyDesc\";\n  type = PolicyType.PasswordGenerator;\n  component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    defaultType: [null],\n    minLength: [null],\n    useUpper: [null],\n    useLower: [null],\n    useNumbers: [null],\n    useSpecial: [null],\n    minNumbers: [null],\n    minSpecial: [null],\n    minNumberWords: [null],\n    capitalize: [null],\n    includeNumber: [null],\n  });\n\n  defaultTypes: { name: string; value: string }[];\n\n  constructor(private formBuilder: UntypedFormBuilder, i18nService: I18nService) {\n    super();\n\n    this.defaultTypes = [\n      { name: i18nService.t(\"userPreference\"), value: null },\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n  name = \"personalOwnership\";\n  description = \"personalOwnershipPolicyDesc\";\n  type = PolicyType.PersonalOwnership;\n  component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-personal-ownership\",\n  templateUrl: \"personal-ownership.component.html\",\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"personalOwnershipExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class RequireSsoPolicy extends BasePolicy {\n  name = \"requireSso\";\n  description = \"requireSsoPolicyDesc\";\n  type = PolicyType.RequireSso;\n  component = RequireSsoPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useSso;\n  }\n}\n\n@Component({\n  selector: \"policy-require-sso\",\n  templateUrl: \"require-sso.component.html\",\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n<app-callout type=\"warning\">\n  {{ \"requireSsoExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<app-callout type=\"warning\">\n  {{ \"resetPasswordPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"resetPasswordPolicyAutoEnroll\" | i18n }}</h3>\n  <p>{{ \"resetPasswordPolicyAutoEnrollDescription\" | i18n }}</p>\n  <app-callout type=\"warning\">\n    {{ \"resetPasswordPolicyAutoEnrollWarning\" | i18n }}\n  </app-callout>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"autoEnrollEnabled\"\n      name=\"AutoEnrollEnabled\"\n      formControlName=\"autoEnrollEnabled\"\n    />\n    <label class=\"form-check-label\" for=\"autoEnrollEnabled\">\n      {{ \"resetPasswordPolicyAutoEnrollCheckbox\" | i18n }}\n    </label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class ResetPasswordPolicy extends BasePolicy {\n  name = \"resetPasswordPolicy\";\n  description = \"resetPasswordPolicyDescription\";\n  type = PolicyType.ResetPassword;\n  component = ResetPasswordPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useResetPassword;\n  }\n}\n\n@Component({\n  selector: \"policy-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    autoEnrollEnabled: false,\n  });\n\n  defaultTypes: { name: string; value: string }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private organizationService: OrganizationService\n  ) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SendOptionsPolicy extends BasePolicy {\n  name = \"sendOptions\";\n  description = \"sendOptionsPolicyDesc\";\n  type = PolicyType.SendOptions;\n  component = SendOptionsPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-send-options\",\n  templateUrl: \"send-options.component.html\",\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    disableHideEmail: false,\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder) {\n    super();\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"sendOptionsExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"disableHideEmail\"\n      name=\"DisableHideEmail\"\n      formControlName=\"disableHideEmail\"\n    />\n    <label class=\"form-check-label\" for=\"disableHideEmail\">{{ \"disableHideEmail\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SingleOrgPolicy extends BasePolicy {\n  name = \"singleOrg\";\n  description = \"singleOrgDesc\";\n  type = PolicyType.SingleOrg;\n  component = SingleOrgPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-single-org\",\n  templateUrl: \"single-org.component.html\",\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    if (!this.enabled.value) {\n      if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"requireSso\"))\n        );\n      }\n\n      if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"maximumVaultTimeoutLabel\"))\n        );\n      }\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"singleOrgPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n  name = \"twoStepLoginPolicyTitle\";\n  description = \"twoStepLoginPolicyDesc\";\n  type = PolicyType.TwoFactorAuthentication;\n  component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-two-factor-authentication\",\n  templateUrl: \"two-factor-authentication.component.html\",\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"twoStepLoginPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"policiesEditTitle\">\n          {{ \"editPolicy\" | i18n }} - {{ policy.name | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-body\" *ngIf=\"loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div [hidden]=\"loading\">\n          <p>{{ policy.description | i18n }}</p>\n          <ng-template #policyForm></ng-template>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { BasePolicy, BasePolicyComponent } from \"../policies\";\n\n@Component({\n  selector: \"app-policy-edit\",\n  templateUrl: \"policy-edit.component.html\",\n})\nexport class PolicyEditComponent {\n  @Input() policy: BasePolicy;\n  @Input() organizationId: string;\n  @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n  @Output() onSavedPolicy = new EventEmitter();\n\n  @ViewChild(\"policyForm\", { read: ViewContainerRef, static: true })\n  policyFormRef: ViewContainerRef;\n\n  policyType = PolicyType;\n  loading = true;\n  enabled = false;\n  formPromise: Promise<any>;\n  defaultTypes: any[];\n  policyComponent: BasePolicyComponent;\n\n  private policyResponse: PolicyResponse;\n\n  constructor(\n    private policyApiService: PolicyApiServiceAbstraction,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private logService: LogService\n  ) {}\n\n  async ngAfterViewInit() {\n    await this.load();\n    this.loading = false;\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n    this.policyComponent = this.policyFormRef.createComponent(factory)\n      .instance as BasePolicyComponent;\n    this.policyComponent.policy = this.policy;\n    this.policyComponent.policyResponse = this.policyResponse;\n\n    this.cdr.detectChanges();\n  }\n\n  async load() {\n    try {\n      this.policyResponse = await this.policyApiService.getPolicy(\n        this.organizationId,\n        this.policy.type\n      );\n    } catch (e) {\n      if (e.statusCode === 404) {\n        this.policyResponse = new PolicyResponse({ Enabled: false });\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async submit() {\n    let request: PolicyRequest;\n    try {\n      request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.policyApiService.putPolicy(\n        this.organizationId,\n        this.policy.type,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedPolicyId\", this.i18nService.t(this.policy.name))\n      );\n      this.onSavedPolicy.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"policies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n  <tbody>\n    <tr *ngFor=\"let p of policies\">\n      <td *ngIf=\"p.display(organization)\">\n        <a href=\"#\" appStopClick (click)=\"edit(p)\">{{ p.name | i18n }}</a>\n        <span bitBadge badgeType=\"success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{\n          \"on\" | i18n\n        }}</span>\n        <small class=\"text-muted d-block\">{{ p.description | i18n }}</small>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { PolicyListService } from \"../../core\";\nimport { BasePolicy } from \"../policies\";\n\nimport { PolicyEditComponent } from \"./policy-edit.component\";\n\n@Component({\n  selector: \"app-org-policies\",\n  templateUrl: \"policies.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PoliciesComponent implements OnInit {\n  @ViewChild(\"editTemplate\", { read: ViewContainerRef, static: true })\n  editModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  policies: BasePolicy[];\n  organization: Organization;\n\n  private orgPolicies: PolicyResponse[];\n  protected policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyListService: PolicyListService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      this.policies = this.policyListService.getPolicies();\n\n      await this.load();\n\n      // Handle policies component launch from Event message\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        if (qParams.policyId != null) {\n          const policyIdFromEvents: string = qParams.policyId;\n          for (const orgPolicy of this.orgPolicies) {\n            if (orgPolicy.id === policyIdFromEvents) {\n              for (let i = 0; i < this.policies.length; i++) {\n                if (this.policies[i].type === orgPolicy.type) {\n                  this.edit(this.policies[i]);\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.policyApiService.getPolicies(this.organizationId);\n    this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n    this.orgPolicies.forEach((op) => {\n      this.policiesEnabledMap.set(op.type, op.enabled);\n    });\n\n    this.loading = false;\n  }\n\n  async edit(policy: BasePolicy) {\n    const [modal] = await this.modalService.openViewRef(\n      PolicyEditComponent,\n      this.editModalRef,\n      (comp) => {\n        comp.policy = policy;\n        comp.organizationId = this.organizationId;\n        comp.policiesEnabledMap = this.policiesEnabledMap;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedPolicy.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n}\n","import { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  /**\n   * @deprecated 2022-08-03 Moved to OrganizationSsoRequest, left for backwards compatability.\n   * https://bitwarden.atlassian.net/browse/EC-489\n   */\n  identifier: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      *ngIf=\"loaded\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{ \"deleteOrganization\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{\n          \"deletingOrganizationIsPermanentWarning\" | i18n: organizationName\n        }}</app-callout>\n        <p id=\"organizationDeleteDescription\">\n          <ng-container\n            *ngIf=\"\n              deleteOrganizationRequestType === 'InvalidFamiliesForEnterprise';\n              else regularDelete\n            \"\n          >\n            {{ \"orgCreatedSponsorshipInvalid\" | i18n }}\n          </ng-container>\n          <ng-template #regularDelete>\n            <ng-container *ngIf=\"organizationContentSummary.totalItemCount > 0\">\n              {{ \"deletingOrganizationContentWarning\" | i18n: organizationName }}\n              <ul>\n                <li *ngFor=\"let type of organizationContentSummary.itemCountByType\">\n                  {{ type.count }} {{ type.localizationKey | i18n }}\n                </li>\n              </ul>\n              {{ \"deletingOrganizationActiveUserAccountsWarning\" | i18n }}\n            </ng-container>\n          </ng-template>\n        </p>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteOrganization\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nclass CountBasedLocalizationKey {\n  singular: string;\n  plural: string;\n\n  getKey(count: number) {\n    return count == 1 ? this.singular : this.plural;\n  }\n\n  constructor(singular: string, plural: string) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n}\n\nclass OrganizationContentSummaryItem {\n  count: number;\n  get localizationKey(): string {\n    return this.localizationKeyOptions.getKey(this.count);\n  }\n  private localizationKeyOptions: CountBasedLocalizationKey;\n  constructor(count: number, localizationKeyOptions: CountBasedLocalizationKey) {\n    this.count = count;\n    this.localizationKeyOptions = localizationKeyOptions;\n  }\n}\n\nclass OrganizationContentSummary {\n  totalItemCount = 0;\n  itemCountByType: OrganizationContentSummaryItem[] = [];\n}\n\n@Component({\n  selector: \"app-delete-organization\",\n  templateUrl: \"delete-organization.component.html\",\n})\nexport class DeleteOrganizationComponent implements OnInit {\n  organizationId: string;\n  loaded: boolean;\n  deleteOrganizationRequestType: \"InvalidFamiliesForEnterprise\" | \"RegularDelete\" = \"RegularDelete\";\n  organizationName: string;\n  organizationContentSummary: OrganizationContentSummary = new OrganizationContentSummary();\n  @Output() onSuccess: EventEmitter<void> = new EventEmitter();\n\n  masterPassword: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private cipherService: CipherService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.load();\n  }\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.organizationApiService.delete(this.organizationId, request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"organizationDeleted\"),\n        this.i18nService.t(\"organizationDeletedDesc\")\n      );\n      this.onSuccess.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async load() {\n    this.organizationName = (await this.organizationService.get(this.organizationId)).name;\n    this.organizationContentSummary = await this.buildOrganizationContentSummary();\n    this.loaded = true;\n  }\n\n  private async buildOrganizationContentSummary(): Promise<OrganizationContentSummary> {\n    const organizationContentSummary = new OrganizationContentSummary();\n    const organizationItems = (\n      await this.cipherService.getAllFromApiForOrganization(this.organizationId)\n    ).filter((item) => item.deletedDate == null);\n\n    if (organizationItems.length < 1) {\n      return organizationContentSummary;\n    }\n\n    organizationContentSummary.totalItemCount = organizationItems.length;\n    for (const cipherType of Utils.iterateEnum(CipherType)) {\n      const count = this.getOrganizationItemCountByType(organizationItems, cipherType);\n      if (count > 0) {\n        organizationContentSummary.itemCountByType.push(\n          new OrganizationContentSummaryItem(\n            count,\n            this.getOrganizationItemLocalizationKeysByType(CipherType[cipherType])\n          )\n        );\n      }\n    }\n\n    return organizationContentSummary;\n  }\n\n  private getOrganizationItemCountByType(items: CipherView[], type: CipherType) {\n    return items.filter((item) => item.type == type).length;\n  }\n\n  private getOrganizationItemLocalizationKeysByType(type: string): CountBasedLocalizationKey {\n    return new CountBasedLocalizationKey(`type${type}`, `type${type}Plural`);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"organizationInfo\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <bit-avatar [text]=\"org.name\" [id]=\"org.id\" size=\"large\"></bit-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organization-keys.request\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/models/request/organization-update.request\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organization.response\";\n\nimport { ApiKeyComponent } from \"../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../settings/purge-vault.component\";\n\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n\n  selfHosted = false;\n  canManageBilling = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<OrganizationResponse>;\n  taxFormPromise: Promise<unknown>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.canManageBilling = this.organizationService.get(this.organizationId).canManageBilling;\n      try {\n        this.org = await this.organizationApiService.get(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n      request.identifier = this.org.identifier;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.organizationApiService.save(this.organizationId, request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteOrganization() {\n    await this.modalService.openViewRef(\n      DeleteOrganizationComponent,\n      this.deleteModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSuccess.subscribe(() => {\n          this.router.navigate([\"/\"]);\n        });\n      }\n    );\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.getOrCreateApiKey.bind(\n        this.organizationApiService\n      );\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.rotateApiKey.bind(this.organizationApiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-header\">\n  <h1 *ngIf=\"!organizationId\">{{ \"twoStepLogin\" | i18n }}</h1>\n  <h1 *ngIf=\"organizationId\">{{ \"twoStepLoginEnforcement\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<ng-container *ngIf=\"organizationId\">\n  <p>\n    {{ \"twoStepLoginOrganizationDescStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"twoStepLoginPolicy\" | i18n }}.</a>\n    <br />\n    {{ \"twoStepLoginOrganizationDuoDesc\" | i18n }}\n  </p>\n  <p>{{ \"twoStepLoginOrganizationSsoDesc\" | i18n }}</p>\n</ng-container>\n<bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</bit-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</bit-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { TwoFactorDuoComponent } from \"../../settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../settings/two-factor-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(apiService, modalService, messagingService, policyService, stateService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { canAccessSettingsTab } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"../guards/org-permissions.guard\";\nimport { OrganizationRedirectGuard } from \"../guards/org-redirect.guard\";\nimport { PoliciesComponent } from \"../policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SettingsComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: { organizationPermissions: canAccessSettingsTab },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        canActivate: [OrganizationRedirectGuard],\n        data: {\n          autoRedirectCallback: getSettingsRoute,\n        },\n        children: [], // This is required to make the auto redirect work,\n      },\n      { path: \"account\", component: AccountComponent, data: { titleId: \"organizationInfo\" } },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"policies\",\n        component: PoliciesComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: (org: Organization) => org.canManagePolicies,\n          titleId: \"policies\",\n        },\n      },\n      {\n        path: \"tools\",\n        loadChildren: () =>\n          import(\"../tools/import-export/org-import-export.module\").then(\n            (m) => m.OrganizationImportExportModule\n          ),\n      },\n    ],\n  },\n];\n\nfunction getSettingsRoute(organization: Organization) {\n  if (organization.isOwner) {\n    return \"account\";\n  }\n  if (organization.canManagePolicies) {\n    return \"policies\";\n  }\n  if (organization.canAccessImportExport) {\n    return [\"tools\", \"import\"];\n  }\n  if (organization.canManageSso) {\n    return \"sso\";\n  }\n  if (organization.canManageScim) {\n    return \"scim\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationSettingsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { PoliciesModule } from \"../policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\nimport { OrganizationSettingsRoutingModule } from \"./organization-settings-routing.module\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\n@NgModule({\n  imports: [SharedModule, LooseComponentsModule, PoliciesModule, OrganizationSettingsRoutingModule],\n  declarations: [\n    SettingsComponent,\n    AccountComponent,\n    DeleteOrganizationComponent,\n    TwoFactorSetupComponent,\n  ],\n})\nexport class OrganizationSettingsModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"account\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.isOwner\"\n          >\n            {{ \"organizationInfo\" | i18n }}\n          </a>\n          <a\n            routerLink=\"policies\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canManagePolicies\"\n          >\n            {{ \"policies\" | i18n }}\n          </a>\n          <a\n            routerLink=\"two-factor\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.use2fa && organization?.isOwner\"\n          >\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n          <a\n            routerLink=\"tools/import\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canAccessImportExport\"\n          >\n            {{ \"importData\" | i18n }}\n          </a>\n          <a\n            routerLink=\"tools/export\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canAccessImportExport\"\n          >\n            {{ \"exportVault\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sso\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canManageSso\"\n          >\n            {{ \"singleSignOn\" | i18n }}\n          </a>\n          <a\n            routerLink=\"scim\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canManageScim\"\n          >\n            {{ \"scim\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  organization: Organization;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    this.route.params\n      .pipe(\n        switchMap(async (params) => await this.organizationService.get(params.organizationId)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((organization) => {\n        this.organization = organization;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { AbstractControl, FormArray } from \"@angular/forms\";\n\nexport type SelectionItemId = {\n  id: string;\n};\n\nfunction findSortedIndex<T>(sortedArray: T[], val: T, compareFn: (a: T, b: T) => number) {\n  let low = 0;\n  let high = sortedArray.length || 0;\n  let mid = -1,\n    c = 0;\n  while (low < high) {\n    mid = Math.floor((low + high) / 2);\n    c = compareFn(sortedArray[mid], val);\n    if (c < 0) {\n      low = mid + 1;\n    } else if (c > 0) {\n      high = mid;\n    } else {\n      return mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Utility to help manage a list of selectable items for use with Reactive Angular forms and FormArrays.\n *\n * It supports selecting/deselecting items, keeping items sorted, and synchronizing the selected items\n * with an array of FormControl.\n *\n * The first type parameter TItem represents the item being selected/deselected, it must have an `id`\n * property for identification/comparison. The second type parameter TControlValue represents the value\n * type of the form control.\n */\nexport class FormSelectionList<\n  TItem extends SelectionItemId,\n  TControlValue extends SelectionItemId\n> {\n  allItems: TItem[] = [];\n  /**\n   * Sorted list of selected items\n   * Immutable and should be recreated whenever a modification is made\n   */\n  selectedItems: TItem[] = [];\n\n  /**\n   * Sorted list of deselected items\n   * Immutable and should be recreated whenever a modification is made\n   */\n  deselectedItems: TItem[] = [];\n\n  /**\n   * Sorted FormArray that corresponds and stays in sync with the selectedItems\n   */\n  formArray: FormArray<AbstractControl<Partial<TControlValue>, TControlValue>> = new FormArray([]);\n\n  /**\n   * Construct a new FormSelectionList\n   * @param controlFactory - Factory responsible for creating initial form controls for each selected item. It is\n   * provided a copy of the selected item for any form control initialization logic. Specify any additional form\n   * control options or validators here.\n   * @param compareFn - Comparison function used for sorting the items.\n   */\n  constructor(\n    private controlFactory: (item: TItem) => AbstractControl<Partial<TControlValue>, TControlValue>,\n    private compareFn: (a: TItem, b: TItem) => number\n  ) {}\n\n  /**\n   * Select multiple items by their ids at once. Optionally provide an initial form control value.\n   * @param ids - List of ids to select\n   * @param initialValue - Value that will be applied to the corresponding form controls\n   * The provided `id` arguments will be automatically assigned to each form control value\n   */\n  selectItems(ids: string[], initialValue?: Partial<TControlValue> | undefined) {\n    for (const id of ids) {\n      this.selectItem(id, initialValue);\n    }\n  }\n\n  /**\n   * Deselect multiple items by their ids at once\n   * @param ids - List of ids to deselect\n   */\n  deselectItems(ids: string[]) {\n    for (const id of ids) {\n      this.deselectItem(id);\n    }\n  }\n\n  deselectAll() {\n    this.formArray.clear();\n    this.selectedItems = [];\n    this.deselectedItems = [...this.allItems];\n  }\n\n  /**\n   * Select a single item by id.\n   *\n   * Maintains list order for both selected items, deselected items, and the FormArray.\n   *\n   * @param id - Id of the item to select\n   * @param initialValue - Value that will be applied to the corresponding form control for the selected item.\n   * The provided `id` argument will be automatically assigned unless explicitly set in the initialValue.\n   */\n  selectItem(id: string, initialValue?: Partial<TControlValue>) {\n    const index = this.deselectedItems.findIndex((o) => o.id === id);\n\n    if (index === -1) {\n      return;\n    }\n\n    const selectedOption = this.deselectedItems[index];\n\n    // Note: Changes to the deselected/selected arrays must create a new copy of the array\n    // in order for Angular's Change Detection to pick up the modification (i.e. treat the arrays as immutable)\n\n    // Remove from the list of deselected options\n    this.deselectedItems = [\n      ...this.deselectedItems.slice(0, index),\n      ...this.deselectedItems.slice(index + 1),\n    ];\n\n    // Insert into the sorted selected options list\n    const sortedInsertIndex = findSortedIndex(this.selectedItems, selectedOption, this.compareFn);\n\n    this.selectedItems = [\n      ...this.selectedItems.slice(0, sortedInsertIndex),\n      selectedOption,\n      ...this.selectedItems.slice(sortedInsertIndex),\n    ];\n\n    const newControl = this.controlFactory(selectedOption);\n\n    // Patch the value and ensure the `id` is set\n    newControl.patchValue({\n      id,\n      ...initialValue,\n    });\n\n    this.formArray.insert(sortedInsertIndex, newControl);\n  }\n\n  /**\n   * Deselect a single item by id.\n   *\n   * Maintains list order for both selected items, deselected items, and the FormArray.\n   *\n   * @param id - Id of the item to deselect\n   */\n  deselectItem(id: string) {\n    const index = this.selectedItems.findIndex((o) => o.id === id);\n\n    if (index === -1) {\n      return;\n    }\n\n    const deselectedOption = this.selectedItems[index];\n\n    // Note: Changes to the deselected/selected arrays must create a new copy of the array\n    // in order for Angular's Change Detection to pick up the modification (i.e. treat the arrays as immutable)\n\n    // Remove from the list of selected items (and FormArray)\n    this.selectedItems = [\n      ...this.selectedItems.slice(0, index),\n      ...this.selectedItems.slice(index + 1),\n    ];\n    this.formArray.removeAt(index);\n\n    // Insert into the sorted deselected array\n    const sortedInsertIndex = findSortedIndex(\n      this.deselectedItems,\n      deselectedOption,\n      this.compareFn\n    );\n\n    this.deselectedItems = [\n      ...this.deselectedItems.slice(0, sortedInsertIndex),\n      deselectedOption,\n      ...this.deselectedItems.slice(sortedInsertIndex),\n    ];\n  }\n\n  /**\n   * Populate the list of deselected items, and optional specify which items should be selected and with what initial\n   * value for their Form Control\n   * @param items - A list of all items. (Will be sorted internally)\n   * @param selectedItems - The items to select initially\n   */\n  populateItems(items: TItem[], selectedItems: TControlValue[] = []) {\n    this.formArray.clear();\n    this.allItems = [...items].sort(this.compareFn);\n    this.selectedItems = [];\n    this.deselectedItems = [...this.allItems];\n\n    for (const selectedItem of selectedItems) {\n      this.selectItem(selectedItem.id, selectedItem);\n    }\n  }\n}\n","<ng-select\n  [items]=\"baseItems\"\n  [(ngModel)]=\"selectedItems\"\n  (ngModelChange)=\"onChange($event)\"\n  (blur)=\"onBlur()\"\n  bindLabel=\"listName\"\n  groupBy=\"parentGrouping\"\n  [placeholder]=\"placeholder\"\n  [loading]=\"loading\"\n  [loadingText]=\"loadingText\"\n  notFoundText=\"{{ 'multiSelectNotFound' | i18n }}\"\n  clearAllText=\"{{ 'multiSelectClearAll' | i18n }}\"\n  [multiple]=\"true\"\n  [selectOnTab]=\"true\"\n  [closeOnSelect]=\"false\"\n  (close)=\"onDropdownClosed()\"\n  [disabled]=\"disabled\"\n  [clearSearchOnAdd]=\"true\"\n  [labelForId]=\"labelForId\"\n  appendTo=\"body\"\n>\n  <ng-template ng-loadingspinner-tmp>\n    <i class=\"bwi bwi-spinner bwi-spin tw-mr-1\" [title]=\"loadingText\" aria-hidden=\"true\"></i>\n  </ng-template>\n  <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n    <button\n      type=\"button\"\n      bitBadge\n      badgeType=\"primary\"\n      class=\"tw-mr-1 disabled:tw-border-0\"\n      [disabled]=\"disabled\"\n      (click)=\"clear(item)\"\n    >\n      <i\n        *ngIf=\"item.icon != null\"\n        class=\"tw-mr-1 bwi bwi-fw {{ item.icon }}\"\n        aria-hidden=\"true\"\n      ></i>\n      {{ item.labelName }}\n      <i class=\"bwi bwi-fw bwi-close bwi-sm tw-ml-1\" aria-hidden=\"true\"></i>\n    </button>\n  </ng-template>\n  <ng-template ng-option-tmp let-item=\"item\">\n    <div class=\"tw-flex\">\n      <div class=\"tw-w-7 tw-flex-none\">\n        <i *ngIf=\"isSelected(item)\" class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n      </div>\n      <div class=\"tw-mr-2 tw-flex-initial\">\n        <i *ngIf=\"item.icon != null\" class=\"bwi bwi-fw {{ item.icon }}\" aria-hidden=\"true\"></i>\n      </div>\n      <div class=\"tw-flex-1\">\n        {{ item.listName }}\n      </div>\n    </div>\n  </ng-template>\n</ng-select>\n","import {\n  Component,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  EventEmitter,\n  HostBinding,\n  Optional,\n  Self,\n} from \"@angular/core\";\nimport { ControlValueAccessor, NgControl, Validators } from \"@angular/forms\";\nimport { NgSelectComponent } from \"@ng-select/ng-select\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitFormFieldControl } from \"../form-field/form-field-control\";\n\nimport { SelectItemView } from \"./models/select-item-view\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-multi-select\",\n  templateUrl: \"./multi-select.component.html\",\n  providers: [{ provide: BitFormFieldControl, useExisting: MultiSelectComponent }],\n})\n/**\n * This component has been implemented to only support Multi-select list events\n */\nexport class MultiSelectComponent implements OnInit, BitFormFieldControl, ControlValueAccessor {\n  @ViewChild(NgSelectComponent) select: NgSelectComponent;\n\n  // Parent component should only pass selectable items (complete list - selected items = baseItems)\n  @Input() baseItems: SelectItemView[];\n  // Defaults to native ng-select behavior - set to \"true\" to clear selected items on dropdown close\n  @Input() removeSelectedItems = false;\n  @Input() placeholder: string;\n  @Input() loading = false;\n  @Input() disabled = false;\n\n  // Internal tracking of selected items\n  @Input() selectedItems: SelectItemView[];\n\n  // Default values for our implementation\n  loadingText: string;\n\n  protected searchInputId = `search-input-${nextId++}`;\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  private notifyOnChange?: (value: SelectItemView[]) => void;\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  private notifyOnTouched?: () => void;\n\n  @Output() onItemsConfirmed = new EventEmitter<any[]>();\n\n  constructor(private i18nService: I18nService, @Optional() @Self() private ngControl?: NgControl) {\n    if (ngControl != null) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n    // Default Text Values\n    this.placeholder = this.placeholder ?? this.i18nService.t(\"multiSelectPlaceholder\");\n    this.loadingText = this.i18nService.t(\"multiSelectLoading\");\n  }\n\n  /** Helper method for showing selected state in custom template */\n  isSelected(item: any): boolean {\n    return this.selectedItems?.find((selected) => selected.id === item.id) != undefined;\n  }\n\n  /**\n   * The `close` callback will act as the only trigger for signifying the user's intent of completing the selection\n   * of items. Selected items will be emitted to the parent component in order to allow for separate data handling.\n   */\n  onDropdownClosed(): void {\n    // Early exit\n    if (this.selectedItems == null || this.selectedItems.length == 0) {\n      return;\n    }\n\n    // Emit results to parent component\n    this.onItemsConfirmed.emit(this.selectedItems);\n\n    // Remove selected items from base list based on input property\n    if (this.removeSelectedItems) {\n      let updatedBaseItems = this.baseItems;\n      this.selectedItems.forEach((selectedItem) => {\n        updatedBaseItems = updatedBaseItems.filter((item) => selectedItem.id !== item.id);\n      });\n\n      // Reset Lists\n      this.selectedItems = null;\n      this.baseItems = updatedBaseItems;\n    }\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  writeValue(obj: SelectItemView[]): void {\n    this.selectedItems = obj;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  registerOnChange(fn: (value: SelectItemView[]) => void): void {\n    this.notifyOnChange = fn;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  registerOnTouched(fn: any): void {\n    this.notifyOnTouched = fn;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  protected onChange(items: SelectItemView[]) {\n    if (!this.notifyOnChange) {\n      return;\n    }\n\n    this.notifyOnChange(items);\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  protected onBlur() {\n    if (!this.notifyOnTouched) {\n      return;\n    }\n\n    this.notifyOnTouched();\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding(\"attr.aria-describedby\")\n  get ariaDescribedBy() {\n    return this._ariaDescribedBy;\n  }\n  set ariaDescribedBy(value: string) {\n    this._ariaDescribedBy = value;\n    this.select?.searchInput.nativeElement.setAttribute(\"aria-describedby\", value);\n  }\n  private _ariaDescribedBy: string;\n\n  /**Implemented as part of BitFormFieldControl */\n  get labelForId() {\n    return this.searchInputId;\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding() @Input() id = `bit-multi-select-${nextId++}`;\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding(\"attr.required\")\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  /**Implemented as part of BitFormFieldControl */\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl?.errors)[0];\n    return [key, this.ngControl?.errors[key]];\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\n\n@Pipe({\n  name: \"userType\",\n})\nexport class UserTypePipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(value?: OrganizationUserType, unknownText?: string): string {\n    if (value == null) {\n      return unknownText ?? this.i18nService.t(\"unknown\");\n    }\n    switch (value) {\n      case OrganizationUserType.Owner:\n        return this.i18nService.t(\"owner\");\n      case OrganizationUserType.Admin:\n        return this.i18nService.t(\"admin\");\n      case OrganizationUserType.User:\n        return this.i18nService.t(\"user\");\n      case OrganizationUserType.Manager:\n        return this.i18nService.t(\"manager\");\n      case OrganizationUserType.Custom:\n        return this.i18nService.t(\"custom\");\n    }\n  }\n}\n","<div class=\"tw-flex\">\n  <bit-form-field *ngIf=\"permissionMode == 'edit'\" class=\"tw-mr-3\">\n    <bit-label>{{ \"permission\" | i18n }}</bit-label>\n    <!--\n      Built-in select height differs between browsers, this fix makes sure we match bit-multi-select height.\n      We might want to reconsider this fix when/if we implement\n      [CL-78] [Improvement] Completely restyled selects (https://bitwarden.atlassian.net/browse/CL-78)\n    -->\n    <select\n      class=\"tw-h-[35px]\"\n      bitInput\n      [disabled]=\"disabled\"\n      [(ngModel)]=\"initialPermission\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      (blur)=\"handleBlur()\"\n    >\n      <option *ngFor=\"let p of permissionList\" [value]=\"p.perm\">\n        {{ p.labelId | i18n }}\n      </option>\n    </select>\n  </bit-form-field>\n\n  <bit-form-field class=\"tw-flex-grow\">\n    <bit-label>{{ selectorLabelText }}</bit-label>\n    <bit-multi-select\n      class=\"tw-w-full\"\n      [baseItems]=\"selectionList.deselectedItems\"\n      [removeSelectedItems]=\"true\"\n      [disabled]=\"disabled\"\n      (onItemsConfirmed)=\"selectItems($event)\"\n      (blur)=\"handleBlur()\"\n    ></bit-multi-select>\n    <bit-hint *ngIf=\"selectorHelpText\">{{ selectorHelpText }}</bit-hint>\n  </bit-form-field>\n</div>\n\n<bit-table [formGroup]=\"formGroup\">\n  <ng-container header>\n    <tr>\n      <th bitCell>{{ columnHeader }}</th>\n      <th bitCell id=\"permissionColHeading\" *ngIf=\"permissionMode != 'hidden'\">\n        <div class=\"tw-border tw-border-solid tw-border-transparent\">\n          {{ \"permission\" | i18n }}\n        </div>\n      </th>\n      <th bitCell id=\"roleColHeading\" *ngIf=\"showMemberRoles\">{{ \"role\" | i18n }}</th>\n      <th bitCell id=\"groupColHeading\" *ngIf=\"showGroupColumn\">{{ \"group\" | i18n }}</th>\n      <th bitCell class=\"tw-w-20\"></th>\n    </tr>\n  </ng-container>\n  <ng-template body formArrayName=\"items\">\n    <tr\n      bitRow\n      *ngFor=\"let item of selectionList.selectedItems; let i = index\"\n      [formGroupName]=\"i\"\n      [ngClass]=\"{ 'tw-text-muted': item.readonly }\"\n    >\n      <td bitCell [ngSwitch]=\"item.type\">\n        <div class=\"tw-flex tw-items-center\" *ngSwitchCase=\"itemType.Member\">\n          <bit-avatar size=\"small\" class=\"tw-mr-3\" text=\"{{ item.labelName }}\"></bit-avatar>\n          <div class=\"tw-flex tw-flex-col\">\n            <div class=\"tw-text-sm\">\n              {{ item.labelName }}\n              <span *ngIf=\"$any(item).status == 0\" bitBadge badgeType=\"secondary\">\n                {{ \"invited\" | i18n }}\n              </span>\n            </div>\n            <div class=\"tw-text-xs tw-text-muted\" *ngIf=\"$any(item).status != 0\">\n              {{ $any(item).email }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"tw-flex tw-items-center tw-text-sm\" *ngSwitchDefault>\n          <i\n            class=\"bwi tw-mr-3 tw-px-0.5 tw-text-2xl\"\n            [ngClass]=\"item.icon || itemIcon(item)\"\n            aria-hidden=\"true\"\n          ></i>\n          <span>{{ item.labelName }}</span>\n        </div>\n      </td>\n\n      <td bitCell *ngIf=\"permissionMode != 'hidden'\">\n        <ng-container *ngIf=\"canEditItemPermission(item); else readOnlyPerm\">\n          <label class=\"sr-only\" [for]=\"'permission' + i\"\n            >{{ item.labelName }} {{ \"permission\" | i18n }}</label\n          >\n          <div class=\"tw-relative tw-inline-block\">\n            <select\n              bitInput\n              class=\"tw-apperance-none -tw-ml-3 tw-max-w-40 tw-appearance-none tw-overflow-ellipsis !tw-rounded tw-border-transparent !tw-bg-transparent tw-pr-6 tw-font-bold hover:tw-border-primary-700\"\n              formControlName=\"permission\"\n              [id]=\"'permission' + i\"\n              (blur)=\"handleBlur()\"\n            >\n              <option *ngFor=\"let p of permissionList\" [value]=\"p.perm\">\n                {{ p.labelId | i18n }}\n              </option>\n            </select>\n            <label\n              [for]=\"'permission' + i\"\n              class=\"tw-absolute tw-inset-y-0 tw-right-4 tw-mb-0 tw-block tw-flex tw-items-center\"\n            >\n              <i class=\"bwi bwi-sm bwi-angle-down tw-leading-[0]\"></i>\n            </label>\n          </div>\n        </ng-container>\n\n        <ng-template #readOnlyPerm>\n          <div\n            *ngIf=\"item.accessAllItems\"\n            class=\"tw-max-w-40 tw-overflow-hidden tw-overflow-ellipsis tw-whitespace-nowrap tw-border tw-border-solid tw-border-transparent tw-font-bold tw-text-muted\"\n            [appA11yTitle]=\"accessAllLabelId(item) | i18n\"\n          >\n            {{ \"canEdit\" | i18n }}\n            <i class=\"bwi bwi-filter tw-ml-1\" aria-hidden=\"true\"></i>\n          </div>\n\n          <div\n            *ngIf=\"item.readonly\"\n            class=\"tw-max-w-40 tw-overflow-hidden tw-overflow-ellipsis tw-whitespace-nowrap tw-font-bold tw-text-muted\"\n            [title]=\"permissionLabelId(item.readonlyPermission) | i18n\"\n          >\n            {{ permissionLabelId(item.readonlyPermission) | i18n }}\n          </div>\n        </ng-template>\n      </td>\n\n      <td bitCell *ngIf=\"showMemberRoles\">\n        {{ $any(item).role | userType: \"-\" }}\n      </td>\n\n      <td bitCell *ngIf=\"showGroupColumn\">\n        {{ $any(item).viaGroupName ?? \"-\" }}\n      </td>\n\n      <td bitCell class=\"tw-text-right\">\n        <button\n          *ngIf=\"!item.readonly\"\n          type=\"button\"\n          bitIconButton=\"bwi-close\"\n          buttonType=\"muted\"\n          appA11yTitle=\"{{ 'remove' | i18n }} {{ item.labelName }}\"\n          [disabled]=\"disabled\"\n          (click)=\"selectionList.deselectItem(item.id); handleBlur()\"\n        ></button>\n      </td>\n    </tr>\n    <tr *ngIf=\"selectionList.selectedItems.length == 0\">\n      <td bitCell>{{ emptySelectionText }}</td>\n    </tr>\n  </ng-template>\n</bit-table>\n","import { Component, forwardRef, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormBuilder, NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { FormSelectionList } from \"@bitwarden/angular/utils/form-selection-list\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { SelectItemView } from \"@bitwarden/components/src/multi-select/models/select-item-view\";\n\nimport {\n  AccessItemType,\n  AccessItemValue,\n  AccessItemView,\n  CollectionPermission,\n} from \"./access-selector.models\";\n\nexport enum PermissionMode {\n  /**\n   * No permission controls or column present. No permission values are emitted.\n   */\n  Hidden = \"hidden\",\n\n  /**\n   * No permission controls. Column rendered an if available on an item. No permission values are emitted\n   */\n  Readonly = \"readonly\",\n\n  /**\n   * Permission Controls and column present. Permission values are emitted.\n   */\n  Edit = \"edit\",\n}\n\n@Component({\n  selector: \"bit-access-selector\",\n  templateUrl: \"access-selector.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AccessSelectorComponent),\n      multi: true,\n    },\n  ],\n})\nexport class AccessSelectorComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  private notifyOnChange: (v: unknown) => void;\n  private notifyOnTouch: () => void;\n  private pauseChangeNotification: boolean;\n\n  /**\n   * The internal selection list that tracks the value of this form control / component.\n   * It's responsible for keeping items sorted and synced with the rendered form controls\n   * @protected\n   */\n  protected selectionList = new FormSelectionList<AccessItemView, AccessItemValue>((item) => {\n    const permissionControl = this.formBuilder.control(this.initialPermission);\n\n    const fg = this.formBuilder.group({\n      id: item.id,\n      type: item.type,\n      permission: permissionControl,\n    });\n\n    // Disable entire row form group if readonly\n    if (item.readonly) {\n      fg.disable();\n    }\n\n    // Disable permission control if accessAllItems is enabled\n    if (item.accessAllItems || this.permissionMode != PermissionMode.Edit) {\n      permissionControl.disable();\n    }\n\n    return fg;\n  }, this._itemComparator.bind(this));\n\n  /**\n   * Internal form group for this component.\n   * @protected\n   */\n  protected formGroup = this.formBuilder.group({\n    items: this.selectionList.formArray,\n  });\n\n  protected itemType = AccessItemType;\n  protected permissionList = [\n    { perm: CollectionPermission.View, labelId: \"canView\" },\n    { perm: CollectionPermission.ViewExceptPass, labelId: \"canViewExceptPass\" },\n    { perm: CollectionPermission.Edit, labelId: \"canEdit\" },\n    { perm: CollectionPermission.EditExceptPass, labelId: \"canEditExceptPass\" },\n  ];\n  protected initialPermission = CollectionPermission.View;\n\n  disabled: boolean;\n\n  /**\n   * List of all selectable items that. Sorted internally.\n   */\n  @Input()\n  get items(): AccessItemView[] {\n    return this.selectionList.allItems;\n  }\n\n  set items(val: AccessItemView[]) {\n    const selected = (this.selectionList.formArray.getRawValue() ?? []).concat(\n      val.filter((m) => m.readonly)\n    );\n    this.selectionList.populateItems(\n      val.map((m) => {\n        m.icon = m.icon ?? this.itemIcon(m); // Ensure an icon is set\n        return m;\n      }),\n      selected\n    );\n  }\n\n  /**\n   * Permission mode that controls if the permission form controls and column should be present.\n   */\n  @Input()\n  get permissionMode(): PermissionMode {\n    return this._permissionMode;\n  }\n\n  set permissionMode(value: PermissionMode) {\n    this._permissionMode = value;\n    // Toggle any internal permission controls\n    for (const control of this.selectionList.formArray.controls) {\n      if (value == PermissionMode.Edit) {\n        control.get(\"permission\").enable();\n      } else {\n        control.get(\"permission\").disable();\n      }\n    }\n  }\n  private _permissionMode: PermissionMode = PermissionMode.Hidden;\n\n  /**\n   * Column header for the selected items table\n   */\n  @Input() columnHeader: string;\n\n  /**\n   * Label used for the ng selector\n   */\n  @Input() selectorLabelText: string;\n\n  /**\n   * Helper text displayed under the ng selector\n   */\n  @Input() selectorHelpText: string;\n\n  /**\n   * Text that is shown in the table when no items are selected\n   */\n  @Input() emptySelectionText: string;\n\n  /**\n   * Flag for if the member roles column should be present\n   */\n  @Input() showMemberRoles: boolean;\n\n  /**\n   * Flag for if the group column should be present\n   */\n  @Input() showGroupColumn: boolean;\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly i18nService: I18nService\n  ) {}\n\n  /** Required for NG_VALUE_ACCESSOR */\n  registerOnChange(fn: any): void {\n    this.notifyOnChange = fn;\n  }\n\n  /** Required for NG_VALUE_ACCESSOR */\n  registerOnTouched(fn: any): void {\n    this.notifyOnTouch = fn;\n  }\n\n  /** Required for NG_VALUE_ACCESSOR */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n\n    // Keep the internal FormGroup in sync\n    if (this.disabled) {\n      this.formGroup.disable();\n    } else {\n      this.formGroup.enable();\n    }\n  }\n\n  /** Required for NG_VALUE_ACCESSOR */\n  writeValue(selectedItems: AccessItemValue[]): void {\n    // Modifying the selection list, mistakenly fires valueChanges in the\n    // internal form array, so we need to know to pause external notification\n    this.pauseChangeNotification = true;\n\n    // Always clear the internal selection list on a new value\n    this.selectionList.deselectAll();\n\n    // We need to also select any read only items to appear in the table\n    this.selectionList.selectItems(this.items.filter((m) => m.readonly).map((m) => m.id));\n\n    // If the new value is null, then we're done\n    if (selectedItems == null) {\n      this.pauseChangeNotification = false;\n      return;\n    }\n\n    // Unable to handle other value types, throw\n    if (!Array.isArray(selectedItems)) {\n      throw new Error(\"The access selector component only supports Array form values!\");\n    }\n\n    // Iterate and internally select each item\n    for (const value of selectedItems) {\n      this.selectionList.selectItem(value.id, value);\n    }\n\n    this.pauseChangeNotification = false;\n  }\n\n  ngOnInit() {\n    // Watch the internal formArray for changes and propagate them\n    this.selectionList.formArray.valueChanges.pipe(takeUntil(this.destroy$)).subscribe((v) => {\n      if (!this.notifyOnChange || this.pauseChangeNotification) {\n        return;\n      }\n      // Disabled form arrays emit values for disabled controls, we override this to emit an empty array to avoid\n      // emitting values for disabled controls that are \"readonly\" in the table\n      if (this.selectionList.formArray.disabled) {\n        this.notifyOnChange([]);\n        return;\n      }\n      this.notifyOnChange(v);\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  protected handleBlur() {\n    if (!this.notifyOnTouch) {\n      return;\n    }\n\n    this.notifyOnTouch();\n  }\n\n  protected selectItems(items: SelectItemView[]) {\n    this.pauseChangeNotification = true;\n    this.selectionList.selectItems(items.map((i) => i.id));\n    this.pauseChangeNotification = false;\n    if (this.notifyOnChange != undefined) {\n      this.notifyOnChange(this.selectionList.formArray.value);\n    }\n  }\n\n  protected itemIcon(item: AccessItemView) {\n    switch (item.type) {\n      case AccessItemType.Collection:\n        return \"bwi-collection\";\n      case AccessItemType.Group:\n        return \"bwi-users\";\n      case AccessItemType.Member:\n        return \"bwi-user\";\n    }\n  }\n\n  protected permissionLabelId(perm: CollectionPermission) {\n    return this.permissionList.find((p) => p.perm == perm)?.labelId;\n  }\n\n  protected accessAllLabelId(item: AccessItemView) {\n    return item.type == AccessItemType.Group ? \"groupAccessAll\" : \"memberAccessAll\";\n  }\n\n  protected canEditItemPermission(item: AccessItemView) {\n    return this.permissionMode == PermissionMode.Edit && !item.readonly && !item.accessAllItems;\n  }\n\n  private _itemComparator(a: AccessItemView, b: AccessItemView) {\n    if (a.type != b.type) {\n      return a.type - b.type;\n    }\n    return this.i18nService.collator.compare(\n      a.listName + a.labelName + a.readonly,\n      b.listName + b.labelName + b.readonly\n    );\n  }\n}\n","import { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { SelectItemView } from \"@bitwarden/components\";\n\nimport { CollectionAccessSelectionView } from \"../../../core\";\n\n/**\n * Permission options that replace/correspond with readOnly and hidePassword server fields.\n */\nexport enum CollectionPermission {\n  View = \"view\",\n  ViewExceptPass = \"viewExceptPass\",\n  Edit = \"edit\",\n  EditExceptPass = \"editExceptPass\",\n}\n\nexport enum AccessItemType {\n  Collection,\n  Group,\n  Member,\n}\n\n/**\n * A \"generic\" type that describes an item that can be selected from a\n * ng-select list and have its collection permission modified.\n *\n * Currently, it supports Collections, Groups, and Members. Members require some additional\n * details to render in the AccessSelectorComponent so their type is defined separately\n * and then joined back with the base type.\n *\n */\nexport type AccessItemView =\n  | SelectItemView & {\n      /**\n       * Flag that this group/member can access all items.\n       * This will disable the permission editor for this item.\n       */\n      accessAllItems?: boolean;\n\n      /**\n       * Flag that this item cannot be modified.\n       * This will disable the permission editor and will keep\n       * the item always selected.\n       */\n      readonly?: boolean;\n\n      /**\n       * Optional permission that will be rendered for this\n       * item if it set to readonly.\n       */\n      readonlyPermission?: CollectionPermission;\n    } & (\n        | {\n            type: AccessItemType.Collection;\n            viaGroupName?: string;\n          }\n        | {\n            type: AccessItemType.Group;\n          }\n        | {\n            type: AccessItemType.Member; // Members have a few extra details required to display, so they're added here\n            email: string;\n            role: OrganizationUserType;\n            status: OrganizationUserStatusType;\n          }\n      );\n\n/**\n * A type that is emitted as a value for the ngControl\n */\nexport type AccessItemValue = {\n  id: string;\n  permission?: CollectionPermission;\n  type: AccessItemType;\n};\n\n/**\n * Converts the CollectionAccessSelectionView interface to one of the new CollectionPermission values\n * for the dropdown in the AccessSelectorComponent\n * @param value\n */\nexport const convertToPermission = (value: CollectionAccessSelectionView) => {\n  if (value.readOnly) {\n    return value.hidePasswords ? CollectionPermission.ViewExceptPass : CollectionPermission.View;\n  } else {\n    return value.hidePasswords ? CollectionPermission.EditExceptPass : CollectionPermission.Edit;\n  }\n};\n\n/**\n * Converts an AccessItemValue back into a CollectionAccessView class using the CollectionPermission\n * to determine the values for `readOnly` and `hidePassword`\n * @param value\n */\nexport const convertToSelectionView = (value: AccessItemValue) => {\n  return new CollectionAccessSelectionView({\n    id: value.id,\n    readOnly: readOnly(value.permission),\n    hidePasswords: hidePassword(value.permission),\n  });\n};\n\nconst readOnly = (perm: CollectionPermission) =>\n  [CollectionPermission.View, CollectionPermission.ViewExceptPass].includes(perm);\n\nconst hidePassword = (perm: CollectionPermission) =>\n  [CollectionPermission.ViewExceptPass, CollectionPermission.EditExceptPass].includes(perm);\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../../shared/shared.module\";\n\nimport { AccessSelectorComponent } from \"./access-selector.component\";\nimport { UserTypePipe } from \"./user-type.pipe\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [AccessSelectorComponent, UserTypePipe],\n  exports: [AccessSelectorComponent],\n})\nexport class AccessSelectorModule {}\n","import { DIALOG_DATA, DialogConfig, DialogRef } from \"@angular/cdk/dialog\";\nimport { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { combineLatest, of, shareReplay, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/abstractions/organization-user/responses\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CollectionView } from \"@bitwarden/common/src/models/view/collection.view\";\nimport { BitValidators, DialogService } from \"@bitwarden/components\";\n\nimport {\n  CollectionAdminService,\n  CollectionAdminView,\n  GroupService,\n  GroupView,\n} from \"../../../core\";\nimport {\n  AccessItemType,\n  AccessItemValue,\n  AccessItemView,\n  convertToPermission,\n  convertToSelectionView,\n  PermissionMode,\n} from \"../access-selector\";\n\nexport enum CollectionDialogTabType {\n  Info = 0,\n  Access = 1,\n}\n\nexport interface CollectionDialogParams {\n  collectionId?: string;\n  organizationId: string;\n  initialTab?: CollectionDialogTabType;\n  parentCollectionId?: string;\n}\n\nexport enum CollectionDialogResult {\n  Saved = \"saved\",\n  Canceled = \"canceled\",\n  Deleted = \"deleted\",\n}\n\n@Component({\n  selector: \"app-collection-dialog\",\n  templateUrl: \"collection-dialog.component.html\",\n})\nexport class CollectionDialogComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  protected tabIndex: CollectionDialogTabType;\n  protected loading = true;\n  protected organization?: Organization;\n  protected collection?: CollectionView;\n  protected nestOptions: CollectionView[] = [];\n  protected accessItems: AccessItemView[] = [];\n  protected deletedParentName: string | undefined;\n  protected formGroup = this.formBuilder.group({\n    name: [\"\", [Validators.required, BitValidators.forbiddenCharacters([\"/\"])]],\n    externalId: \"\",\n    parent: null as string | null,\n    access: [[] as AccessItemValue[]],\n  });\n  protected PermissionMode = PermissionMode;\n\n  constructor(\n    @Inject(DIALOG_DATA) private params: CollectionDialogParams,\n    private formBuilder: FormBuilder,\n    private dialogRef: DialogRef<CollectionDialogResult>,\n    private organizationService: OrganizationService,\n    private groupService: GroupService,\n    private collectionService: CollectionAdminService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationUserService: OrganizationUserService\n  ) {\n    this.tabIndex = params.initialTab ?? CollectionDialogTabType.Info;\n  }\n\n  ngOnInit() {\n    const organization$ = of(this.organizationService.get(this.params.organizationId)).pipe(\n      shareReplay({ refCount: true, bufferSize: 1 })\n    );\n    const groups$ = organization$.pipe(\n      switchMap((organization) => {\n        if (!organization.useGroups) {\n          return of([] as GroupView[]);\n        }\n\n        return this.groupService.getAll(this.params.organizationId);\n      })\n    );\n\n    combineLatest({\n      organization: organization$,\n      collections: this.collectionService.getAll(this.params.organizationId),\n      collectionDetails: this.params.collectionId\n        ? this.collectionService.get(this.params.organizationId, this.params.collectionId)\n        : of(null),\n      groups: groups$,\n      users: this.organizationUserService.getAllUsers(this.params.organizationId),\n    })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ organization, collections, collectionDetails, groups, users }) => {\n        this.organization = organization;\n        this.accessItems = [].concat(\n          groups.map(mapGroupToAccessItemView),\n          users.data.map(mapUserToAccessItemView)\n        );\n\n        if (this.params.collectionId) {\n          this.collection = collections.find((c) => c.id === this.collectionId);\n          this.nestOptions = collections.filter((c) => c.id !== this.collectionId);\n\n          if (!this.collection) {\n            throw new Error(\"Could not find collection to edit.\");\n          }\n\n          const { name, parent } = parseName(this.collection);\n          if (parent !== null && !this.nestOptions.find((c) => c.name === parent)) {\n            this.deletedParentName = parent;\n          }\n\n          const accessSelections = mapToAccessSelections(collectionDetails);\n          this.formGroup.patchValue({\n            name,\n            externalId: this.collection.externalId,\n            parent,\n            access: accessSelections,\n          });\n        } else {\n          this.nestOptions = collections;\n          const parent = collections.find((c) => c.id === this.params.parentCollectionId);\n          this.formGroup.patchValue({ parent: parent?.name ?? null });\n        }\n\n        this.loading = false;\n      });\n  }\n\n  protected get collectionId() {\n    return this.params.collectionId;\n  }\n\n  protected get editMode() {\n    return this.params.collectionId != undefined;\n  }\n\n  protected async cancel() {\n    this.close(CollectionDialogResult.Canceled);\n  }\n\n  protected submit = async () => {\n    this.formGroup.markAllAsTouched();\n\n    if (this.formGroup.invalid) {\n      if (this.tabIndex === CollectionDialogTabType.Access) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"fieldOnTabRequiresAttention\", this.i18nService.t(\"collectionInfo\"))\n        );\n      }\n      return;\n    }\n\n    const collectionView = new CollectionAdminView();\n    collectionView.id = this.params.collectionId;\n    collectionView.organizationId = this.params.organizationId;\n    collectionView.externalId = this.formGroup.controls.externalId.value;\n    collectionView.groups = this.formGroup.controls.access.value\n      .filter((v) => v.type === AccessItemType.Group)\n      .map(convertToSelectionView);\n    collectionView.users = this.formGroup.controls.access.value\n      .filter((v) => v.type === AccessItemType.Member)\n      .map(convertToSelectionView);\n\n    const parent = this.formGroup.controls.parent.value;\n    if (parent) {\n      collectionView.name = `${parent}/${this.formGroup.controls.name.value}`;\n    } else {\n      collectionView.name = this.formGroup.controls.name.value;\n    }\n\n    await this.collectionService.save(collectionView);\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\n        this.editMode ? \"editedCollectionId\" : \"createdCollectionId\",\n        collectionView.name\n      )\n    );\n\n    this.close(CollectionDialogResult.Saved);\n  };\n\n  protected delete = async () => {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      this.collection?.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed && this.params.collectionId) {\n      return false;\n    }\n\n    await this.collectionService.delete(this.params.organizationId, this.params.collectionId);\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"deletedCollectionId\", this.collection?.name)\n    );\n\n    this.close(CollectionDialogResult.Deleted);\n  };\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private close(result: CollectionDialogResult) {\n    this.dialogRef.close(result);\n  }\n}\n\nfunction parseName(collection: CollectionView) {\n  const nameParts = collection.name?.split(\"/\");\n  const name = nameParts[nameParts.length - 1];\n  const parent = nameParts.length > 1 ? nameParts.slice(0, -1).join(\"/\") : null;\n\n  return { name, parent };\n}\n\nfunction mapGroupToAccessItemView(group: GroupView): AccessItemView {\n  return {\n    id: group.id,\n    type: AccessItemType.Group,\n    listName: group.name,\n    labelName: group.name,\n    accessAllItems: group.accessAll,\n    readonly: group.accessAll,\n  };\n}\n\n// TODO: Use view when user apis are migrated to a service\nfunction mapUserToAccessItemView(user: OrganizationUserUserDetailsResponse): AccessItemView {\n  return {\n    id: user.id,\n    type: AccessItemType.Member,\n    email: user.email,\n    role: user.type,\n    listName: user.name?.length > 0 ? `${user.name} (${user.email})` : user.email,\n    labelName: user.name ?? user.email,\n    status: user.status,\n    accessAllItems: user.accessAll,\n    readonly: user.accessAll,\n  };\n}\n\nfunction mapToAccessSelections(collectionDetails: CollectionAdminView): AccessItemValue[] {\n  if (collectionDetails == undefined) {\n    return [];\n  }\n  return [].concat(\n    collectionDetails.groups.map<AccessItemValue>((selection) => ({\n      id: selection.id,\n      type: AccessItemType.Group,\n      permission: convertToPermission(selection),\n    })),\n    collectionDetails.users.map<AccessItemValue>((selection) => ({\n      id: selection.id,\n      type: AccessItemType.Member,\n      permission: convertToPermission(selection),\n    }))\n  );\n}\n\n/**\n * Strongly typed helper to open a CollectionDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport function openCollectionDialog(\n  dialogService: DialogService,\n  config: DialogConfig<CollectionDialogParams>\n) {\n  return dialogService.open<CollectionDialogResult, CollectionDialogParams>(\n    CollectionDialogComponent,\n    config\n  );\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\">\n  <bit-dialog [disablePadding]=\"!loading\">\n    <span bitDialogTitle>\n      <ng-container *ngIf=\"editMode\">\n        {{ \"editCollection\" | i18n }}\n        <span class=\"tw-text-sm tw-normal-case tw-text-muted\" *ngIf=\"!loading\">{{\n          collection.name\n        }}</span>\n      </ng-container>\n      <ng-container *ngIf=\"!editMode\">\n        {{ \"newCollection\" | i18n }}\n      </ng-container>\n    </span>\n    <div bitDialogContent>\n      <ng-container *ngIf=\"loading\" #spinner>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" aria-hidden=\"true\"></i>\n      </ng-container>\n      <bit-tab-group *ngIf=\"!loading\" [(selectedIndex)]=\"tabIndex\">\n        <bit-tab label=\"{{ 'collectionInfo' | i18n }}\">\n          <bit-form-field>\n            <bit-label>{{ \"name\" | i18n }}</bit-label>\n            <input bitInput formControlName=\"name\" />\n          </bit-form-field>\n\n          <bit-form-field>\n            <bit-label>{{ \"externalId\" | i18n }}</bit-label>\n            <input bitInput formControlName=\"externalId\" />\n            <bit-hint>{{ \"externalIdDesc\" | i18n }}</bit-hint>\n          </bit-form-field>\n\n          <bit-form-field>\n            <bit-label>{{ \"nestCollectionUnder\" | i18n }}</bit-label>\n            <select bitInput formControlName=\"parent\">\n              <option [ngValue]=\"null\">-</option>\n              <option *ngIf=\"deletedParentName\" disabled [ngValue]=\"deletedParentName\">\n                {{ deletedParentName }} ({{ \"deleted\" | i18n }})\n              </option>\n              <option *ngFor=\"let collection of nestOptions\" [ngValue]=\"collection.name\">\n                {{ collection.name }}\n              </option>\n            </select>\n          </bit-form-field>\n        </bit-tab>\n        <bit-tab label=\"{{ 'access' | i18n }}\">\n          <bit-access-selector\n            *ngIf=\"organization.useGroups\"\n            [permissionMode]=\"PermissionMode.Edit\"\n            formControlName=\"access\"\n            [items]=\"accessItems\"\n            [columnHeader]=\"'groupAndMemberColumnHeader' | i18n\"\n            [selectorLabelText]=\"'selectGroupsAndMembers' | i18n\"\n            [selectorHelpText]=\"'userPermissionOverrideHelper' | i18n\"\n            [emptySelectionText]=\"'noMembersOrGroupsAdded' | i18n\"\n          ></bit-access-selector>\n          <bit-access-selector\n            *ngIf=\"!organization.useGroups\"\n            [permissionMode]=\"PermissionMode.Edit\"\n            formControlName=\"access\"\n            [items]=\"accessItems\"\n            [columnHeader]=\"'memberColumnHeader' | i18n\"\n            [selectorLabelText]=\"'selectMembers' | i18n\"\n            [emptySelectionText]=\"'noMembersAdded' | i18n\"\n          ></bit-access-selector>\n        </bit-tab>\n      </bit-tab-group>\n    </div>\n    <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n      <button type=\"submit\" bitButton bitFormButton buttonType=\"primary\" [disabled]=\"loading\">\n        {{ \"save\" | i18n }}\n      </button>\n      <button\n        type=\"button\"\n        bitButton\n        bitFormButton\n        buttonType=\"secondary\"\n        (click)=\"cancel()\"\n        [disabled]=\"loading\"\n      >\n        {{ \"cancel\" | i18n }}\n      </button>\n      <button\n        *ngIf=\"editMode && organization?.canDeleteAssignedCollections\"\n        type=\"button\"\n        bitIconButton=\"bwi-trash\"\n        buttonType=\"danger\"\n        class=\"tw-ml-auto\"\n        bitFormButton\n        [appA11yTitle]=\"'delete' | i18n\"\n        [bitAction]=\"delete\"\n        [disabled]=\"loading\"\n      ></button>\n    </div>\n  </bit-dialog>\n</form>\n","import { AbstractControl, FormControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function forbiddenCharacters(characters: string[]): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (!(control instanceof FormControl)) {\n      throw new Error(\"forbiddenCharacters only supports validating FormControls\");\n    }\n\n    if (control.value === null || control.value === undefined) {\n      return null;\n    }\n\n    const value = String(control.value);\n\n    for (const char of value) {\n      if (characters.includes(char)) {\n        return { forbiddenCharacters: { value: control.value, characters } };\n      }\n    }\n\n    return null;\n  };\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../../shared/shared.module\";\nimport { AccessSelectorModule } from \"../access-selector\";\n\nimport { CollectionDialogComponent } from \"./collection-dialog.component\";\n\n@NgModule({\n  imports: [SharedModule, AccessSelectorModule],\n  declarations: [CollectionDialogComponent],\n  exports: [CollectionDialogComponent],\n})\nexport class CollectionDialogModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared/shared.module\";\n\nimport { AccessSelectorModule } from \"./components/access-selector\";\nimport { CollectionDialogModule } from \"./components/collection-dialog\";\nimport { SearchInputComponent } from \"./components/search-input/search-input.component\";\n\n@NgModule({\n  imports: [SharedModule, CollectionDialogModule, AccessSelectorModule],\n  declarations: [SearchInputComponent],\n  exports: [SharedModule, CollectionDialogModule, AccessSelectorModule, SearchInputComponent],\n})\nexport class SharedOrganizationModule {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"cipherAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"cipher\">\n        <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\">\n          {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n        </app-callout>\n        <div class=\"row\" *ngIf=\"!editMode && !viewOnly\">\n          <div class=\"col-6 form-group\">\n            <label for=\"type\">{{ \"whatTypeOfItem\" | i18n }}</label>\n            <select\n              id=\"type\"\n              name=\"Type\"\n              [(ngModel)]=\"cipher.type\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted\"\n              appAutofocus\n            >\n              <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"cipher.name\"\n              required\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n            <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n            <select\n              id=\"folder\"\n              name=\"FolderId\"\n              [(ngModel)]=\"cipher.folderId\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n            </select>\n          </div>\n        </div>\n        <!-- Login -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginUsername\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Login.Username\"\n                  [(ngModel)]=\"cipher.login.username\"\n                  appInputVerbatim\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n                    (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 form-group\">\n              <div class=\"d-flex\">\n                <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n                  <a\n                    href=\"#\"\n                    class=\"d-block mr-2 bwi-icon-above-input\"\n                    appStopClick\n                    appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                    (click)=\"generatePassword()\"\n                    *ngIf=\"cipher.viewPassword && !(!cipher.edit && editMode)\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-generate\" aria-hidden=\"true\"></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    #checkPasswordBtn\n                    appStopClick\n                    appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                    (click)=\"checkPassword()\"\n                    [appApiAction]=\"checkPasswordPromise\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-check-circle\"\n                      [hidden]=\"$any(checkPasswordBtn).loading\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-spinner bwi-spin\"\n                      aria-hidden=\"true\"\n                      [hidden]=\"!$any(checkPasswordBtn).loading\"\n                      title=\"{{ 'loading' | i18n }}\"\n                    ></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    appStopClick\n                    [appA11yTitle]=\"'toggleCharacterCount' | i18n\"\n                    (click)=\"togglePasswordCount()\"\n                    *ngIf=\"cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-numbered-list\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginPassword\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Login.Password\"\n                  [(ngModel)]=\"cipher.login.password\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePassword()\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                    (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"showPasswordCount\" class=\"tw-mb-4\">\n            <label>{{ \"passwordCharacterCount\" | i18n }}</label>\n            <div class=\"tw-flex tw-justify-between\">\n              <bit-color-password\n                [password]=\"cipher.login.password\"\n                [showCount]=\"true\"\n              ></bit-color-password>\n              <button type=\"button\" bitLink (click)=\"togglePasswordCount()\">\n                {{ \"hide\" | i18n }}\n              </button>\n            </div>\n          </div>\n          <div class=\"tw-flex tw-flex-row\">\n            <div class=\"tw-mb-4 tw-w-1/2\">\n              <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n              <input\n                id=\"loginTotp\"\n                type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n                name=\"Login.Totp\"\n                class=\"form-control text-monospace\"\n                [(ngModel)]=\"cipher.login.totp\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"tw-mb-4 tw-ml-4 tw-flex tw-w-1/2 tw-items-end\" [ngClass]=\"{ low: totpLow }\">\n              <div\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n                *ngIf=\"!cipher.login.totp || !totpCode\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec tw-text-muted\">15</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle-muted inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        opacity=\"0.25\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': 40 }\"\n                      ></circle>\n                      <circle\n                        class=\"totp-circle-muted outer\"\n                        opacity=\"0.25\"\n                        r=\"14\"\n                        cy=\"16\"\n                        cx=\"16\"\n                      ></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-3 tw-ml-2 tw-text-muted\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >--- ---</span\n                >\n                <i class=\"bwi bwi-lg bwi-clone tw-text-muted\" aria-hidden=\"true\"></i>\n              </div>\n              <div class=\"tw-pb-2\" *ngIf=\"!cipher.login.totp || !totpCode\">\n                <app-premium-badge\n                  *ngIf=\"!organization && !cipher.organizationId\"\n                  class=\"ml-3\"\n                ></app-premium-badge>\n                <a\n                  href=\"#\"\n                  appStopClick\n                  bitBadge\n                  badgeType=\"primary\"\n                  class=\"tw-ml-4\"\n                  (click)=\"upgradeOrganization()\"\n                  *ngIf=\"\n                    (organization && !organization.useTotp) ||\n                    (!organization &&\n                      !canAccessPremium &&\n                      cipher.organizationId &&\n                      !cipher.organizationUseTotp)\n                  \"\n                >\n                  {{ \"upgrade\" | i18n }}\n                </a>\n              </div>\n              <div\n                *ngIf=\"cipher.login.totp && totpCode\"\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec\">{{ totpSec }}</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                      ></circle>\n                      <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-2 tw-ml-2 tw-mt-1\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >{{ totpCodeFormatted }}</span\n                >\n                <button\n                  type=\"button\"\n                  class=\"tw-items-center tw-border-none tw-bg-transparent tw-text-primary-500\"\n                  appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n                  (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"cipher.login.hasUris\">\n            <div\n              role=\"group\"\n              class=\"row\"\n              *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n              attr.aria-label=\"{{ 'uriPosition' | i18n: i + 1 }}\"\n            >\n              <div class=\"col-7 form-group\">\n                <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n                <div class=\"input-group\">\n                  <input\n                    class=\"form-control\"\n                    id=\"loginUri{{ i }}\"\n                    type=\"text\"\n                    name=\"Login.Uris[{{ i }}].Uri\"\n                    [(ngModel)]=\"u.uri\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                    placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                    appInputVerbatim\n                  />\n                  <div class=\"input-group-append\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'launch' | i18n }}\"\n                      (click)=\"launch(u)\"\n                      [disabled]=\"!u.canLaunch\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n                      (click)=\"copy(u.uri, 'uri', 'URI')\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-5 form-group\">\n                <div class=\"d-flex\">\n                  <label for=\"loginUriMatch{{ i }}\">\n                    {{ \"matchDetection\" | i18n }}\n                  </label>\n                  <a\n                    class=\"ml-auto\"\n                    href=\"https://bitwarden.com/help/uri-match-detection/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                  >\n                    <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n                <div class=\"d-flex\">\n                  <select\n                    class=\"form-control overflow-hidden\"\n                    id=\"loginUriMatch{{ i }}\"\n                    name=\"Login.Uris[{{ i }}].Match\"\n                    [(ngModel)]=\"u.match\"\n                    (change)=\"loginUriMatchChanged(u)\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                  >\n                    <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">\n                      {{ o.name }}\n                    </option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link text-danger ml-2\"\n                    (click)=\"removeUri(u)\"\n                    appA11yTitle=\"{{ 'remove' | i18n }}\"\n                    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n                  >\n                    <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <a\n            href=\"#\"\n            appStopClick\n            (click)=\"addUri()\"\n            class=\"d-inline-block mb-3\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n          </a>\n        </ng-container>\n        <!-- Card -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n              <input\n                id=\"cardCardholderName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.CardCardholderName\"\n                [(ngModel)]=\"cipher.card.cardholderName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardBrand\">\n                <select\n                  id=\"cardBrand\"\n                  class=\"form-control\"\n                  name=\"Card.Brand\"\n                  [(ngModel)]=\"cipher.card.brand\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyCardBrand>\n                <input\n                  id=\"cardBrand\"\n                  class=\"form-control\"\n                  name=\"Card.Brand\"\n                  type=\"text\"\n                  [readonly]=\"true\"\n                  [value]=\"cipher.card.brand\"\n                />\n              </ng-template>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardNumber\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                  name=\"Card.Number\"\n                  [(ngModel)]=\"cipher.card.number\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardNumber()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{\n                        'bwi-eye': !showCardNumber,\n                        'bwi-eye-slash': showCardNumber\n                      }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n                    (click)=\"copy(cipher.card.number, 'number', 'Number')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardExpMonth\">\n                <select\n                  id=\"cardExpMonth\"\n                  class=\"form-control\"\n                  name=\"Card.ExpMonth\"\n                  [(ngModel)]=\"cipher.card.expMonth\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyCardExpMonth>\n                <input\n                  id=\"cardExpMonth\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Card.ExpMonth\"\n                  [readonly]=\"true\"\n                  [value]=\"getCardExpMonthDisplay()\"\n                />\n              </ng-template>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n              <input\n                id=\"cardExpYear\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.ExpYear\"\n                [(ngModel)]=\"cipher.card.expYear\"\n                placeholder=\"{{ 'ex' | i18n }} 2019\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardCode\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                  name=\"Card.Code\"\n                  [(ngModel)]=\"cipher.card.code\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardCode()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'securityCode' | i18n }}\"\n                    (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!-- Identity -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyIdTitle\">\n                <select\n                  id=\"idTitle\"\n                  class=\"form-control\"\n                  name=\"Identity.Title\"\n                  [(ngModel)]=\"cipher.identity.title\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyIdTitle>\n                <input\n                  id=\"idTitle\"\n                  class=\"form-control\"\n                  name=\"Identity.Title\"\n                  type=\"text\"\n                  [readonly]=\"true\"\n                  [value]=\"cipher.identity.title\"\n                />\n              </ng-template>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n              <input\n                id=\"idFirstName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.FirstName\"\n                [(ngModel)]=\"cipher.identity.firstName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n              <input\n                id=\"idMiddleName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.MiddleName\"\n                [(ngModel)]=\"cipher.identity.middleName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n              <input\n                id=\"idLastName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LastName\"\n                [(ngModel)]=\"cipher.identity.lastName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"idUsername\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Username\"\n                [(ngModel)]=\"cipher.identity.username\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n              <input\n                id=\"idCompany\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Company\"\n                [(ngModel)]=\"cipher.identity.company\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n              <input\n                id=\"idSsn\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.SSN\"\n                [(ngModel)]=\"cipher.identity.ssn\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n              <input\n                id=\"idPassportNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PassportNumber\"\n                [(ngModel)]=\"cipher.identity.passportNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n              <input\n                id=\"idLicenseNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LicenseNumber\"\n                [(ngModel)]=\"cipher.identity.licenseNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n              <input\n                id=\"idEmail\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"email\"\n                name=\"Identity.Email\"\n                [(ngModel)]=\"cipher.identity.email\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n              <input\n                id=\"idPhone\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"tel\"\n                name=\"Identity.Phone\"\n                [(ngModel)]=\"cipher.identity.phone\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n              <input\n                id=\"idAddress1\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address1\"\n                [(ngModel)]=\"cipher.identity.address1\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n              <input\n                id=\"idAddress2\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address2\"\n                [(ngModel)]=\"cipher.identity.address2\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n              <input\n                id=\"idAddress3\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address3\"\n                [(ngModel)]=\"cipher.identity.address3\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n              <input\n                id=\"idCity\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.City\"\n                [(ngModel)]=\"cipher.identity.city\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n              <input\n                id=\"idState\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.State\"\n                [(ngModel)]=\"cipher.identity.state\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n              <input\n                id=\"idPostalCode\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PostalCode\"\n                [(ngModel)]=\"cipher.identity.postalCode\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n              <input\n                id=\"idCountry\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Country\"\n                [(ngModel)]=\"cipher.identity.country\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n        </ng-container>\n        <div class=\"form-group\">\n          <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [disabled]=\"cipher.isDeleted || viewOnly\"\n            [readonly]=\"!cipher.edit && editMode\"\n            class=\"form-control\"\n          ></textarea>\n        </div>\n        <app-vault-add-edit-custom-fields\n          *ngIf=\"!(!cipher.hasFields && !cipher.edit && editMode)\"\n          [cipher]=\"cipher\"\n          [thisCipherType]=\"cipher.type\"\n          [viewOnly]=\"viewOnly\"\n          [copy]=\"copy.bind(this)\"\n          [editMode]=\"editMode\"\n        ></app-vault-add-edit-custom-fields>\n        <ng-container *ngIf=\"allowOwnershipAssignment()\">\n          <h3 class=\"mt-4\">{{ \"ownership\" | i18n }}</h3>\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n              <select\n                id=\"organizationId\"\n                class=\"form-control\"\n                name=\"OrganizationId\"\n                [(ngModel)]=\"cipher.organizationId\"\n                (change)=\"organizationChanged()\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n          <h3 class=\"mt-4\">{{ \"collections\" | i18n }}</h3>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <ng-container *ngIf=\"collections && collections.length\">\n            <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"$any(c).checked\"\n                id=\"collection-{{ i }}\"\n                name=\"Collection[{{ i }}].Checked\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n              <label class=\"form-check-label\" for=\"collection-{{ i }}\">{{ c.name }}</label>\n            </div>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"editMode\">\n          <div class=\"small text-muted mt-4\">\n            <div>\n              <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n              {{ cipher.revisionDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"cipher.creationDate\">\n              <b class=\"font-weight-semibold\">{{ \"dateCreated\" | i18n }}:</b>\n              {{ cipher.creationDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"showRevisionDate\">\n              <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n              {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"hasPasswordHistory\">\n              <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n              <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{ 'view' | i18n }}\">\n                {{ cipher.passwordHistory.length }}\n              </a>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n              <div *ngFor=\"let ph of cipher.passwordHistory\">\n                {{ ph.lastUsedDate | date: \"short\" }} -\n                <bit-color-password [password]=\"ph.password\"></bit-color-password>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"canUseReprompt\">\n          <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [ngModel]=\"reprompt\"\n              (change)=\"repromptChanged()\"\n              id=\"passwordPrompt\"\n              name=\"passwordPrompt\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.edit && editMode)\"\n            />\n            <label class=\"form-check-label\" for=\"passwordPrompt\">{{\n              \"passwordPrompt\" | i18n\n            }}</label>\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (cipher?.isDeleted ? \"restore\" : \"save\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ (viewOnly ? \"close\" : \"cancel\") | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\">\n          <button\n            *ngIf=\"!organization && !cipher.isDeleted\"\n            type=\"button\"\n            (click)=\"toggleFavorite()\"\n            class=\"btn btn-link\"\n            appA11yTitle=\"{{ (cipher.favorite ? 'unfavorite' : 'favorite') | i18n }}\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              [ngClass]=\"{ 'bwi-star-f': cipher.favorite, 'bwi-star': !cipher.favorite }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ (cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n }}\"\n            *ngIf=\"editMode && !cloneMode && !(!cipher.edit && editMode)\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherCreateRequest } from \"@bitwarden/common/models/request/cipher-create.request\";\nimport { CipherRequest } from \"@bitwarden/common/models/request/cipher.request\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../../vault/add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  protected override componentName = \"app-org-vault-add-edit\";\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    messagingService: MessagingService,\n    eventCollectionService: EventCollectionService,\n    policyService: PolicyService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  protected allowOwnershipAssignment() {\n    if (\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    ) {\n      if (this.organization != null) {\n        return this.cloneMode && this.organization.canEditAnyCollection;\n      } else {\n        return !this.editMode || this.cloneMode;\n      }\n    }\n    return false;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    const data = new CipherData(response);\n\n    data.edit = true;\n    const cipher = new Cipher(data);\n    this.originalCipher = cipher;\n    return cipher;\n  }\n\n  protected encryptCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.encryptCipher();\n    }\n    return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n  }\n\n  protected async saveCipher(cipher: Cipher) {\n    if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n      return super.saveCipher(cipher);\n    }\n    if (this.editMode && !this.cloneMode) {\n      const request = new CipherRequest(cipher);\n      return this.apiService.putCipherAdmin(this.cipherId, request);\n    } else {\n      const request = new CipherCreateRequest(cipher);\n      return this.apiService.postCipherAdmin(request);\n    }\n  }\n\n  protected async deleteCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher();\n    }\n    return this.cipher.isDeleted\n      ? this.apiService.deleteCipherAdmin(this.cipherId)\n      : this.apiService.putDeleteCipherAdmin(this.cipherId);\n  }\n}\n","export class EmergencyAccessAcceptRequest {\n  token: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"emergencyAccess\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ name }}\n          </p>\n          <p>{{ \"acceptEmergencyAccess\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessAcceptRequest } from \"@bitwarden/common/models/request/emergency-access-accept.request\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-emergency\",\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const request = new EmergencyAccessAcceptRequest();\n    request.token = qParams.token;\n    this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n  }\n}\n","export class OrganizationUserAcceptRequest {\n  token: string;\n  // Used to auto-enroll in master password reset\n  resetPasswordKey: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img src=\"../../images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinOrganization\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ orgName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinOrganizationDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserAcceptRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-organization\",\n  templateUrl: \"accept-organization.component.html\",\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n  orgName: string;\n\n  protected requiredParameters: string[] = [\"organizationId\", \"organizationUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private cryptoService: CryptoService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService,\n    private messagingService: MessagingService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const needsReAuth = (await this.stateService.getOrganizationInvitation()) != null;\n    if (!needsReAuth) {\n      // Accepting an org invite requires authentication from a logged out state\n      this.messagingService.send(\"logout\", { redirect: false });\n      await this.prepareOrganizationInvitation(qParams);\n      return;\n    }\n\n    // User has already logged in and passed the Master Password policy check\n    this.actionPromise = this.prepareAcceptRequest(qParams).then(async (request) => {\n      await this.organizationUserService.postOrganizationUserAccept(\n        qParams.organizationId,\n        qParams.organizationUserId,\n        request\n      );\n    });\n\n    await this.stateService.setOrganizationInvitation(null);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"inviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    await this.prepareOrganizationInvitation(qParams);\n  }\n\n  private async prepareAcceptRequest(qParams: Params): Promise<OrganizationUserAcceptRequest> {\n    const request = new OrganizationUserAcceptRequest();\n    request.token = qParams.token;\n\n    if (await this.performResetPasswordAutoEnroll(qParams)) {\n      const response = await this.organizationApiService.getKeys(qParams.organizationId);\n\n      if (response == null) {\n        throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n      }\n\n      const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n      // RSA Encrypt user's encKey.key with organization public key\n      const encKey = await this.cryptoService.getEncKey();\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Add reset password key to accept request\n      request.resetPasswordKey = encryptedKey.encryptedString;\n    }\n    return request;\n  }\n\n  private async performResetPasswordAutoEnroll(qParams: Params): Promise<boolean> {\n    let policyList: Policy[] = null;\n    try {\n      const policies = await this.policyApiService.getPoliciesByToken(\n        qParams.organizationId,\n        qParams.token,\n        qParams.email,\n        qParams.organizationUserId\n      );\n      policyList = this.policyService.mapPoliciesFromToken(policies);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (policyList != null) {\n      const result = this.policyService.getResetPasswordPolicyOptions(\n        policyList,\n        qParams.organizationId\n      );\n      // Return true if policy enabled and auto-enroll enabled\n      return result[1] && result[0].autoEnrollEnabled;\n    }\n\n    return false;\n  }\n\n  private async prepareOrganizationInvitation(qParams: Params): Promise<void> {\n    this.orgName = qParams.organizationName;\n    if (this.orgName != null) {\n      // Fix URL encoding of space issue with Angular\n      this.orgName = this.orgName.replace(/\\+/g, \" \");\n    }\n    await this.stateService.setOrganizationInvitation(qParams);\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/password-hint.request\";\n\n@Directive()\nexport class HintComponent implements OnInit {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private loginService: LoginService\n  ) {}\n\n  ngOnInit(): void {\n    this.email = this.loginService.getEmail() ?? \"\";\n  }\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    loginService: LoginService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService, loginService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"passwordHint\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n            <small class=\"form-text text-muted\">{{ \"enterEmailToGetHint\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\nimport { concatMap, take, takeUntil } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\n\n@Directive()\nexport class LockComponent implements OnInit, OnDestroy {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.load();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (this.pinLock) {\n      return await this.handlePinRequiredUnlock();\n    }\n\n    await this.handleMasterPasswordRequiredUnlock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async handlePinRequiredUnlock() {\n    if (this.pin == null || this.pin === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n\n    return await this.doUnlockWithPin();\n  }\n\n  private async doUnlockWithPin() {\n    let failed = true;\n    try {\n      const kdf = await this.stateService.getKdfType();\n      const kdfConfig = await this.stateService.getKdfConfig();\n      if (this.pinSet[0]) {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfConfig,\n          await this.stateService.getDecryptedPinProtected()\n        );\n        const encKey = await this.cryptoService.getEncKey(key);\n        const protectedPin = await this.stateService.getProtectedPin();\n        const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n        failed = decPin !== this.pin;\n        if (!failed) {\n          await this.setKeyAndContinue(key);\n        }\n      } else {\n        const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfConfig);\n        failed = false;\n        await this.setKeyAndContinue(key);\n      }\n    } catch {\n      failed = true;\n    }\n\n    if (failed) {\n      this.invalidPinAttempts++;\n      if (this.invalidPinAttempts >= 5) {\n        this.messagingService.send(\"logout\");\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidPin\")\n      );\n    }\n  }\n\n  private async handleMasterPasswordRequiredUnlock() {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n    await this.doUnlockWithMasterPassword();\n  }\n\n  private async doUnlockWithMasterPassword() {\n    const kdf = await this.stateService.getKdfType();\n    const kdfConfig = await this.stateService.getKdfConfig();\n\n    const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfConfig);\n    const storedKeyHash = await this.cryptoService.getKeyHash();\n\n    let passwordValid = false;\n\n    if (storedKeyHash != null) {\n      passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n    } else {\n      const request = new SecretVerificationRequest();\n      const serverKeyHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      request.masterPasswordHash = serverKeyHash;\n      try {\n        this.formPromise = this.apiService.postAccountVerifyPassword(request);\n        await this.formPromise;\n        passwordValid = true;\n        const localKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.LocalAuthorization\n        );\n        await this.cryptoService.setKeyHash(localKeyHash);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (!passwordValid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    if (this.pinSet[0]) {\n      const protectedPin = await this.stateService.getProtectedPin();\n      const encKey = await this.cryptoService.getEncKey(key);\n      const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n      const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfConfig);\n      await this.stateService.setDecryptedPinProtected(\n        await this.cryptoService.encrypt(key.key, pinKey)\n      );\n    }\n    await this.setKeyAndContinue(key);\n  }\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutSettingsService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    environmentService: EnvironmentService,\n    private routerService: RouterService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      vaultTimeoutSettingsService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.onSuccessfulSubmit = async () => {\n      const previousUrl = this.routerService.getPreviousUrl();\n      if (previousUrl && previousUrl !== \"/\" && previousUrl.indexOf(\"lock\") === -1) {\n        this.successRoute = previousUrl;\n      }\n      this.router.navigateByUrl(this.successRoute);\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"text-center mb-4\">\n        <i class=\"bwi bwi-lock bwi-4x text-muted\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"yourVaultIsLocked\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appAutofocus\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"text-muted form-text\">\n              {{ \"loggedInAsEmailOn\" | i18n: email:webVaultHostname }}\n            </small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-unlock\" aria-hidden=\"true\"></i> {{ \"unlock\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","export enum AuthRequestType {\n  AuthenticateAndUnlock = 0,\n  Unlock = 1,\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenTwoFactorRequest } from \"../request/identity-token/token-two-factor.request\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class UserApiLogInCredentials {\n  readonly type = AuthenticationType.UserApi;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n\nexport class PasswordlessLogInCredentials {\n  readonly type = AuthenticationType.Passwordless;\n\n  constructor(\n    public email: string,\n    public accessCode: string,\n    public authRequestId: string,\n    public decKey: SymmetricCryptoKey,\n    public localPasswordHash: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n","import { AuthRequestType } from \"../../enums/authRequestType\";\n\nexport class PasswordlessCreateAuthRequest {\n  constructor(\n    readonly email: string,\n    readonly deviceIdentifier: string,\n    readonly publicKey: string,\n    readonly type: AuthRequestType,\n    readonly accessCode: string,\n    readonly fingerprintPhrase: string\n  ) {}\n}\n","<div\n  class=\"tw-mx-auto tw-mt-5 tw-flex tw-max-w-lg tw-flex-col tw-items-center tw-justify-center tw-p-8\"\n>\n  <div>\n    <img class=\"logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"tw-mx-4 tw-mt-3 tw-mb-4 tw-text-center tw-text-xl\">\n      {{ \"loginOrCreateNewAccount\" | i18n }}\n    </p>\n\n    <div\n      class=\"tw-mt-3 tw-rounded-md tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-6\"\n    >\n      <h2 class=\"tw-mb-6 tw-text-xl tw-font-semibold\">{{ \"logInInitiated\" | i18n }}</h2>\n\n      <div class=\"tw-text-light\">\n        <p class=\"tw-mb-6\">{{ \"notificationSentDevice\" | i18n }}</p>\n\n        <p class=\"tw-mb-6\">\n          {{ \"fingerprintMatchInfo\" | i18n }}\n        </p>\n      </div>\n\n      <div class=\"tw-mb-6\">\n        <h4 class=\"tw-font-semibold\">{{ \"fingerprintPhraseHeader\" | i18n }}</h4>\n        <p>\n          <code>{{ passwordlessRequest?.fingerprintPhrase }}</code>\n        </p>\n      </div>\n\n      <div class=\"tw-my-10\" *ngIf=\"showResendNotification\">\n        <a [routerLink]=\"[]\" disabled=\"true\" (click)=\"startPasswordlessLogin()\">{{\n          \"resendNotification\" | i18n\n        }}</a>\n      </div>\n\n      <hr />\n\n      <div class=\"tw-text-light tw-mt-3\">\n        {{ \"loginWithDeviceEnabledInfo\" | i18n }}\n        <a routerLink=\"/login\">{{ \"viewAllLoginOptions\" | i18n }}</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { CaptchaProtectedComponent } from \"@bitwarden/angular/components/captchaProtected.component\";\nimport { AnonymousHubService } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { AuthRequestType } from \"@bitwarden/common/enums/authRequestType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { PasswordlessLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { PasswordlessCreateAuthRequest } from \"@bitwarden/common/models/request/passwordless-create-auth.request\";\nimport { AuthRequestResponse } from \"@bitwarden/common/models/response/auth-request.response\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\n\nimport { StateService } from \"../../core/state/state.service\";\n\n@Component({\n  selector: \"app-login-with-device\",\n  templateUrl: \"login-with-device.component.html\",\n})\nexport class LoginWithDeviceComponent\n  extends CaptchaProtectedComponent\n  implements OnInit, OnDestroy\n{\n  private destroy$ = new Subject<void>();\n  email: string;\n  showResendNotification = false;\n  passwordlessRequest: PasswordlessCreateAuthRequest;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  private authRequestKeyPair: [publicKey: ArrayBuffer, privateKey: ArrayBuffer];\n\n  constructor(\n    private router: Router,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private appIdService: AppIdService,\n    private passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    private authService: AuthService,\n    private logService: LogService,\n    environmentService: EnvironmentService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private anonymousHubService: AnonymousHubService,\n    private validationService: ValidationService,\n    private stateService: StateService,\n    private loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n\n    const navigation = this.router.getCurrentNavigation();\n    if (navigation) {\n      this.email = this.loginService.getEmail();\n    }\n\n    //gets signalR push notification\n    this.authService\n      .getPushNotifcationObs$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((id) => {\n        this.confirmResponse(id);\n      });\n  }\n\n  async ngOnInit() {\n    if (!this.email) {\n      this.router.navigate([\"/login\"]);\n      return;\n    }\n\n    this.startPasswordlessLogin();\n  }\n\n  async startPasswordlessLogin() {\n    this.showResendNotification = false;\n\n    try {\n      await this.buildAuthRequest();\n      const reqResponse = await this.apiService.postAuthRequest(this.passwordlessRequest);\n\n      if (reqResponse.id) {\n        this.anonymousHubService.createHubConnection(reqResponse.id);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    setTimeout(() => {\n      this.showResendNotification = true;\n    }, 12000);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.anonymousHubService.stopHubConnection();\n  }\n\n  private async confirmResponse(requestId: string) {\n    try {\n      const response = await this.apiService.getAuthResponse(\n        requestId,\n        this.passwordlessRequest.accessCode\n      );\n\n      if (!response.requestApproved) {\n        return;\n      }\n\n      const credentials = await this.buildLoginCredntials(requestId, response);\n      const loginResponse = await this.authService.logIn(credentials);\n\n      if (loginResponse.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (loginResponse.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        await this.loginService.saveEmailSettings();\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (error) {\n      if (error instanceof ErrorResponse) {\n        this.router.navigate([\"/login\"]);\n        this.validationService.showError(error);\n        return;\n      }\n\n      this.logService.error(error);\n    }\n  }\n\n  private async buildAuthRequest() {\n    this.authRequestKeyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const fingerprint = await (\n      await this.cryptoService.getFingerprint(this.email, this.authRequestKeyPair[0])\n    ).join(\"-\");\n    const deviceIdentifier = await this.appIdService.getAppId();\n    const publicKey = Utils.fromBufferToB64(this.authRequestKeyPair[0]);\n    const accessCode = await this.passwordGenerationService.generatePassword({ length: 25 });\n\n    this.passwordlessRequest = new PasswordlessCreateAuthRequest(\n      this.email,\n      deviceIdentifier,\n      publicKey,\n      AuthRequestType.AuthenticateAndUnlock,\n      accessCode,\n      fingerprint\n    );\n  }\n\n  private async buildLoginCredntials(\n    requestId: string,\n    response: AuthRequestResponse\n  ): Promise<PasswordlessLogInCredentials> {\n    const decKey = await this.cryptoService.rsaDecrypt(response.key, this.authRequestKeyPair[1]);\n    const decMasterPasswordHash = await this.cryptoService.rsaDecrypt(\n      response.masterPasswordHash,\n      this.authRequestKeyPair[1]\n    );\n    const key = new SymmetricCryptoKey(decKey);\n    const localHashedPassword = Utils.fromBufferToUtf8(decMasterPasswordHash);\n\n    return new PasswordlessLogInCredentials(\n      this.email,\n      this.passwordlessRequest.accessCode,\n      requestId,\n      key,\n      localHashedPassword\n    );\n  }\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n  private selfHosted = false;\n  showLoginWithDevice: boolean;\n  validatedEmail = false;\n  paramEmailSet = false;\n\n  formGroup = this.formBuilder.group({\n    email: [\"\", [Validators.required, Validators.email]],\n    masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n    rememberEmail: [false],\n  });\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n\n  get loggedEmail() {\n    return this.formGroup.value.email;\n  }\n\n  constructor(\n    protected apiService: ApiService,\n    protected appIdService: AppIdService,\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone,\n    protected formBuilder: FormBuilder,\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected route: ActivatedRoute,\n    protected loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  async ngOnInit() {\n    this.route?.queryParams.subscribe((params) => {\n      if (params != null) {\n        const queryParamsEmail = params[\"email\"];\n        if (queryParamsEmail != null && queryParamsEmail.indexOf(\"@\") > -1) {\n          this.formGroup.get(\"email\").setValue(queryParamsEmail);\n          this.loginService.setEmail(queryParamsEmail);\n          this.paramEmailSet = true;\n        }\n      }\n    });\n    let email = this.loginService.getEmail();\n\n    if (email == null || email === \"\") {\n      email = await this.stateService.getRememberedEmail();\n    }\n\n    if (!this.paramEmailSet) {\n      this.formGroup.get(\"email\")?.setValue(email ?? \"\");\n    }\n    let rememberEmail = this.loginService.getRememberEmail();\n    if (rememberEmail == null) {\n      rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    this.formGroup.get(\"rememberEmail\")?.setValue(rememberEmail);\n  }\n\n  async submit(showToast = true) {\n    const data = this.formGroup.value;\n\n    await this.setupCaptcha();\n\n    this.formGroup.markAllAsTouched();\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return;\n    }\n\n    //desktop, browser; This should be removed once all clients use reactive forms\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        data.email,\n        data.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      this.setFormValues();\n      await this.loginService.saveEmailSettings();\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    await this.saveEmailSettings();\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  async validateEmail() {\n    this.formGroup.controls.email.markAsTouched();\n    const emailInvalid = this.formGroup.get(\"email\").invalid;\n    if (!emailInvalid) {\n      this.toggleValidateEmail(true);\n      await this.getLoginWithDevice(this.loggedEmail);\n    }\n  }\n\n  toggleValidateEmail(value: boolean) {\n    this.validatedEmail = value;\n    this.formGroup.controls.masterPassword.reset();\n  }\n\n  setFormValues() {\n    this.loginService.setEmail(this.formGroup.value.email);\n    this.loginService.setRememberEmail(this.formGroup.value.rememberEmail);\n  }\n\n  async saveEmailSettings() {\n    this.setFormValues();\n    await this.loginService.saveEmailSettings();\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  private async getLoginWithDevice(email: string) {\n    try {\n      const deviceIdentifier = await this.appIdService.getAppId();\n      const res = await this.apiService.getKnownDevice(email, deviceIdentifier);\n      //ensure the application is not self-hosted\n      this.showLoginWithDevice = res && !this.selfHosted;\n    } catch (e) {\n      this.showLoginWithDevice = false;\n    }\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div\n    class=\"tw-mx-auto tw-mt-5 tw-flex tw-max-w-lg tw-flex-col tw-items-center tw-justify-center tw-p-8\"\n  >\n    <div>\n      <img class=\"logo logo-themed\" alt=\"Bitwarden\" />\n      <p class=\"tw-mx-4 tw-mt-3 tw-mb-4 tw-text-center tw-text-xl\">\n        {{ \"loginOrCreateNewAccount\" | i18n }}\n      </p>\n      <div\n        class=\"tw-mt-3 tw-rounded-md tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-6\"\n      >\n        <ng-container *ngIf=\"!validatedEmail; else loginPage\">\n          <div class=\"tw-mb-3\">\n            <bit-form-field>\n              <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n              <input\n                id=\"login_input_email\"\n                bitInput\n                type=\"email\"\n                formControlName=\"email\"\n                appAutofocus\n                (keyup.enter)=\"validateEmail()\"\n              />\n            </bit-form-field>\n          </div>\n\n          <div class=\"tw-mb-3 tw-flex tw-items-start\">\n            <bit-form-control class=\"tw-mb-0\">\n              <input type=\"checkbox\" bitCheckbox formControlName=\"rememberEmail\" />\n              <bit-label>{{ \"rememberEmail\" | i18n }}</bit-label>\n            </bit-form-control>\n          </div>\n\n          <div class=\"tw-mb-3\">\n            <button\n              bitButton\n              type=\"button\"\n              buttonType=\"primary\"\n              class=\"tw-w-full\"\n              [disabled]=\"form.loading\"\n              (click)=\"validateEmail()\"\n            >\n              <span> {{ \"continue\" | i18n }} </span>\n            </button>\n          </div>\n\n          <hr />\n\n          <p class=\"tw-m-0 tw-text-sm\">\n            {{ \"newAroundHere\" | i18n }}\n            <!--mousedown event is used over click because it prevents the validation from firing  -->\n            <a routerLink=\"/register\" (mousedown)=\"goToRegister()\">{{ \"createAccount\" | i18n }}</a>\n          </p>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</form>\n\n<ng-template [formGroup]=\"formGroup\" #loginPage>\n  <div class=\"tw-mb-6 tw-h-28\">\n    <bit-form-field class=\"!tw-mb-1\">\n      <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n      <input\n        id=\"login_input_master-password\"\n        type=\"password\"\n        bitInput\n        formControlName=\"masterPassword\"\n        appAutofocus\n      />\n      <button type=\"button\" bitSuffix bitIconButton bitPasswordInputToggle></button>\n    </bit-form-field>\n    <a class=\"-tw-mt-2\" routerLink=\"/hint\" (mousedown)=\"goToHint()\" (click)=\"setFormValues()\">{{\n      \"getMasterPasswordHint\" | i18n\n    }}</a>\n  </div>\n\n  <div [hidden]=\"!showCaptcha()\">\n    <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n  </div>\n\n  <div class=\"tw-mb-3 tw-flex tw-space-x-4\">\n    <button bitButton buttonType=\"primary\" type=\"submit\" [block]=\"true\" [loading]=\"form.loading\">\n      <span> {{ \"loginWithMasterPassword\" | i18n }} </span>\n    </button>\n  </div>\n\n  <div class=\"tw-mb-3\" *ngIf=\"showLoginWithDevice && showPasswordless\">\n    <button\n      bitButton\n      type=\"button\"\n      [block]=\"true\"\n      buttonType=\"secondary\"\n      (click)=\"startPasswordlessLogin()\"\n    >\n      <span> <i class=\"bwi bwi-mobile\"></i> {{ \"loginWithDevice\" | i18n }} </span>\n    </button>\n  </div>\n\n  <div class=\"tw-mb-3\">\n    <a\n      routerLink=\"/sso\"\n      (click)=\"saveEmailSettings()\"\n      bitButton\n      buttonType=\"secondary\"\n      class=\"tw-w-full\"\n    >\n      <i class=\"bwi bwi-provider tw-mr-2\"></i>\n      {{ \"enterpriseSingleSignOn\" | i18n }}\n    </a>\n  </div>\n\n  <hr />\n\n  <div class=\"tw-m-0 tw-text-sm\">\n    <p class=\"tw-mb-1\">{{ \"loggingInAs\" | i18n }} {{ loggedEmail }}</p>\n    <a [routerLink]=\"[]\" (click)=\"toggleValidateEmail(false)\">{{ \"notYou\" | i18n }}</a>\n  </div>\n</ng-template>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { flagEnabled } from \"../../../utils/flags\";\nimport { RouterService, StateService } from \"../../core\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent implements OnInit, OnDestroy {\n  showResetPasswordAutoEnrollWarning = false;\n  enforcedPasswordPolicyOptions: MasterPasswordPolicyOptions;\n  policies: ListResponse<PolicyResponse>;\n  showPasswordless = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    apiService: ApiService,\n    appIdService: AppIdService,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    cryptoFunctionService: CryptoFunctionService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: InternalPolicyService,\n    logService: LogService,\n    ngZone: NgZone,\n    protected stateService: StateService,\n    private messagingService: MessagingService,\n    private routerService: RouterService,\n    formBuilder: FormBuilder,\n    formValidationErrorService: FormValidationErrorsService,\n    loginService: LoginService\n  ) {\n    super(\n      apiService,\n      appIdService,\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone,\n      formBuilder,\n      formValidationErrorService,\n      route,\n      loginService\n    );\n    this.onSuccessfulLogin = async () => {\n      this.messagingService.send(\"setFullWidth\");\n    };\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    this.showPasswordless = flagEnabled(\"showPasswordless\");\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { token: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      await super.ngOnInit();\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      let policyList: Policy[] = null;\n      try {\n        this.policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        policyList = this.policyService.mapPoliciesFromToken(this.policies);\n      } catch (e) {\n        this.logService.error(e);\n      }\n\n      if (policyList != null) {\n        const resetPasswordPolicy = this.policyService.getResetPasswordPolicyOptions(\n          policyList,\n          invite.organizationId\n        );\n        // Set to true if policy enabled and auto-enroll enabled\n        this.showResetPasswordAutoEnrollWarning =\n          resetPasswordPolicy[1] && resetPasswordPolicy[0].autoEnrollEnabled;\n\n        this.policyService\n          .masterPasswordPolicyOptions$(policyList)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((enforcedPasswordPolicyOptions) => {\n            this.enforcedPasswordPolicyOptions = enforcedPasswordPolicyOptions;\n          });\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async goAfterLogIn() {\n    const masterPassword = this.formGroup.value.masterPassword;\n\n    // Check master password against policy\n    if (this.enforcedPasswordPolicyOptions != null) {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      const masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n\n      // If invalid, save policies and require update\n      if (\n        !this.policyService.evaluateMasterPassword(\n          masterPasswordScore,\n          masterPassword,\n          this.enforcedPasswordPolicyOptions\n        )\n      ) {\n        const policiesData: { [id: string]: PolicyData } = {};\n        this.policies.data.map((p) => (policiesData[p.id] = new PolicyData(p)));\n        await this.policyService.replace(policiesData);\n        this.router.navigate([\"update-password\"]);\n        return;\n      }\n    }\n\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.loginService.clearValues();\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  goToHint() {\n    this.setFormValues();\n    this.router.navigateByUrl(\"/hint\");\n  }\n\n  goToRegister() {\n    const email = this.formGroup.value.email;\n\n    if (email) {\n      this.router.navigate([\"/register\"], { queryParams: { email: email } });\n      return;\n    }\n\n    this.router.navigate([\"/register\"]);\n  }\n\n  async submit() {\n    const rememberEmail = this.formGroup.value.rememberEmail;\n\n    if (!rememberEmail) {\n      await this.stateService.setRememberedEmail(null);\n    }\n    await super.submit(false);\n  }\n\n  async startPasswordlessLogin() {\n    this.formGroup.get(\"masterPassword\")?.clearValidators();\n    this.formGroup.get(\"masterPassword\")?.updateValueAndValidity();\n\n    if (!this.formGroup.valid) {\n      return;\n    }\n\n    this.setFormValues();\n    this.router.navigate([\"/login-with-device\"]);\n  }\n\n  private getPasswordStrengthUserInput() {\n    const email = this.formGroup.value.email;\n    let userInput: string[] = [];\n    const atPosition = email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","export class DeleteRecoverRequest {\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { DeleteRecoverRequest } from \"@bitwarden/common/models/request/delete-recover.request\";\n\n@Component({\n  selector: \"app-recover-delete\",\n  templateUrl: \"recover-delete.component.html\",\n})\nexport class RecoverDeleteComponent {\n  email: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new DeleteRecoverRequest();\n      request.email = this.email.trim().toLowerCase();\n      this.formPromise = this.apiService.postAccountRecoverDelete(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deleteRecoverEmailSent\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>{{ \"deleteRecoverDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n  recoveryCode: string;\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorRecoveryRequest } from \"@bitwarden/common/models/request/two-factor-recovery.request\";\n\n@Component({\n  selector: \"app-recover-two-factor\",\n  templateUrl: \"recover-two-factor.component.html\",\n})\nexport class RecoverTwoFactorComponent {\n  email: string;\n  masterPassword: string;\n  recoveryCode: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new TwoFactorRecoveryRequest();\n      request.recoveryCode = this.recoveryCode.replace(/\\s/g, \"\").toLowerCase();\n      request.email = this.email.trim().toLowerCase();\n      const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n      this.formPromise = this.apiService.postTwoFactorRecover(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"twoStepRecoverDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"recoverAccountTwoStep\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>\n            {{ \"recoverAccountTwoStepDesc\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/lost-two-step-device/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              >{{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"password\"\n              name=\"MasterPassword\"\n              class=\"form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recoveryCode\">{{ \"recoveryCodeTitle\" | i18n }}</label>\n            <input\n              id=\"recoveryCode\"\n              class=\"text-monospace form-control\"\n              type=\"text\"\n              name=\"RecoveryCode\"\n              [(ngModel)]=\"recoveryCode\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<void | boolean>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.organizationApiService.leave(this.organization.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"removeMasterPassword\" | i18n }}</p>\n      <hr />\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-block\"\n            (click)=\"convert()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"continuing\"\n            ></i>\n            {{ \"removeMasterPassword\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-block\"\n            (click)=\"leave()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"leaving\"\n            ></i>\n            {{ \"leaveOrganization\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"../../../models/request/secret-verification.request\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keys.request\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  kdfMemory?: number;\n  kdfParallelism?: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    orgIdentifier: string,\n    keys: KeysRequest,\n    kdf: KdfType,\n    kdfIterations: number,\n    kdfMemory?: number,\n    kdfParallelism?: number\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.kdfMemory = kdfMemory;\n    this.kdfParallelism = kdfParallelism;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { KdfConfig } from \"@bitwarden/common/models/domain/kdf-config\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfConfig: KdfConfig;\n\n  protected destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.policyService\n      .masterPasswordPolicyOptions$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (enforcedPasswordPolicyOptions) =>\n          (this.enforcedPolicyOptions ??= enforcedPasswordPolicyOptions)\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfConfig == null) {\n      this.kdfConfig = await this.stateService.getKdfConfig();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfConfig\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinlength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordStrengthResult;\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_TYPE, DEFAULT_KDF_CONFIG } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/set-password.request\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.organizationApiService.getAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyApiService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfConfig = DEFAULT_KDF_CONFIG;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString),\n      this.kdf,\n      this.kdfConfig.iterations,\n      this.kdfConfig.memory,\n      this.kdfConfig.parallelism\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.organizationApiService.getKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfConfig(this.kdfConfig);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!syncLoading\">\n          <app-callout type=\"info\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"resetPasswordAutoEnroll\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n            <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    organizationApiService: OrganizationApiServiceAbstraction,\n    organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyApiService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService,\n      organizationApiService,\n      organizationUserService\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/sso-pre-validate.response\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  class=\"container\"\n  [appApiAction]=\"initiateSsoFormPromise\"\n  ngNativeValidate\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\" />\n      <div class=\"card d-block mt-4\">\n        <div class=\"card-body\" *ngIf=\"loggingIn\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loggingIn\">\n          <p>{{ \"ssoLogInWithOrgIdentifier\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"identifier\">{{ \"ssoIdentifier\" | i18n }}</label>\n            <input\n              id=\"identifier\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Identifier\"\n              [(ngModel)]=\"identifier\"\n              required\n              appAutofocus\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      } else {\n        const storedIdentifier = await this.stateService.getSsoOrgIdentifier();\n        if (storedIdentifier != null) {\n          this.identifier = storedIdentifier;\n        }\n      }\n    });\n  }\n\n  async submit() {\n    await this.stateService.setSsoOrganizationIdentifier(this.identifier);\n    if (this.clientId === \"browser\") {\n      document.cookie = `ssoHandOffMessage=${this.i18nService.t(\"ssoHandOff\")};SameSite=strict`;\n    }\n    super.submit();\n  }\n}\n","export class ReferenceEventRequest {\n  id: string;\n  layout: string;\n  flow: string;\n}\n","<ng-template>\n  <div\n    class=\"tw-inline-block tw-w-11/12 tw-pl-7\"\n    [ngClass]=\"{ 'tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300': applyBorder }\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { CdkStep } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-step\",\n  templateUrl: \"vertical-step.component.html\",\n  providers: [{ provide: CdkStep, useExisting: VerticalStep }],\n})\nexport class VerticalStep extends CdkStep {\n  @Input() subLabel = \"\";\n  @Input() applyBorder = true;\n}\n","<div class=\"tw-m-2.5 tw-h-16 tw-text-center\">\n  <button\n    (click)=\"selectStep()\"\n    [disabled]=\"disabled\"\n    class=\"tw-flex tw-w-full tw-items-center tw-border-none tw-bg-transparent\"\n    [ngClass]=\"{\n      'hover:tw-bg-secondary-100': !disabled && step.editable\n    }\"\n    [attr.aria-expanded]=\"selected\"\n  >\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-font-bold tw-leading-9\"\n      *ngIf=\"!step.completed\"\n      [ngClass]=\"{\n        'tw-bg-primary-500 tw-text-contrast': selected,\n        'tw-bg-secondary-300 tw-text-main': !selected && !disabled && step.editable,\n        'tw-bg-transparent tw-text-muted': disabled\n      }\"\n    >\n      {{ stepNumber }}\n    </span>\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-bg-primary-500 tw-font-bold tw-leading-9 tw-text-contrast\"\n      *ngIf=\"step.completed\"\n    >\n      <i class=\"bwi bwi-fw bwi-check tw-p-1\" aria-hidden=\"true\"></i>\n    </span>\n    <div\n      class=\"tw-txt-main tw-mt-3.5 tw-h-12 tw-text-left tw-leading-snug\"\n      [ngClass]=\"{\n        'tw-font-bold': selected\n      }\"\n    >\n      <p\n        class=\"main-label text tw-mb-1 tw-text-main\"\n        [ngClass]=\"{\n          'tw-mt-1': !step.subLabel\n        }\"\n      >\n        {{ step.label }}\n      </p>\n      <p class=\"sub-label small tw-text-muted\">{{ step.subLabel }}</p>\n    </div>\n  </button>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-step-content\",\n  templateUrl: \"vertical-step-content.component.html\",\n})\nexport class VerticalStepContentComponent {\n  @Output() onSelectStep = new EventEmitter<void>();\n\n  @Input() disabled = false;\n  @Input() selected = false;\n  @Input() step: VerticalStep;\n  @Input() stepNumber: number;\n\n  selectStep() {\n    this.onSelectStep.emit();\n  }\n}\n","<div>\n  <ul class=\"tw-flex tw-list-none tw-flex-col tw-flex-wrap tw-p-5\">\n    <li *ngFor=\"let step of steps; let i = index; let isLast = last\">\n      <app-vertical-step-content\n        [disabled]=\"isStepDisabled(i)\"\n        [selected]=\"selectedIndex === i\"\n        [step]=\"step\"\n        [stepNumber]=\"i + 1\"\n        (onSelectStep)=\"selectStepByIndex(i)\"\n      ></app-vertical-step-content>\n      <div\n        class=\"tw-inline-block tw-pl-7\"\n        *ngIf=\"selectedIndex === i\"\n        [ngTemplateOutlet]=\"selected ? selected.content : null\"\n      ></div>\n      <div\n        class=\"tw-ml-8 tw-h-6 tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300\"\n        *ngIf=\"!isLast && !(selectedIndex === i)\"\n      ></div>\n    </li>\n  </ul>\n</div>\n","import { CdkStepper } from \"@angular/cdk/stepper\";\nimport { Component, Input, QueryList } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-stepper\",\n  templateUrl: \"vertical-stepper.component.html\",\n  providers: [{ provide: CdkStepper, useExisting: VerticalStepperComponent }],\n})\nexport class VerticalStepperComponent extends CdkStepper {\n  readonly steps: QueryList<VerticalStep>;\n\n  @Input()\n  activeClass = \"active\";\n\n  isNextButtonHidden() {\n    return !(this.steps.length === this.selectedIndex + 1);\n  }\n\n  isStepDisabled(index: number) {\n    if (this.selectedIndex !== index) {\n      return this.selectedIndex === index - 1\n        ? !this.steps.find((_, i) => i == index - 1)?.completed\n        : true;\n    }\n    return false;\n  }\n\n  selectStepByIndex(index: number): void {\n    this.selectedIndex = index;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captcha-protected.request\";\nimport { KeysRequest } from \"./keys.request\";\nimport { ReferenceEventRequest } from \"./reference-event.request\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public kdfMemory?: number,\n    public kdfParallelism?: number\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: UntypedFormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_CONFIG, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/register.request\";\nimport { RegisterResponse } from \"@bitwarden/common/models/response/authentication/register.response\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\nimport { InputsFieldMatch } from \"../validators/inputsFieldMatch.validator\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<RegisterResponse>;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n  passwordStrengthResult: any;\n  characterMinimumMessage: string;\n  minimumLength = 8;\n  color: string;\n  text: string;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(this.minimumLength)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(this.minimumLength)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      checkForBreaches: [false],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n\n  protected accountCreated = false;\n\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: UntypedFormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService,\n    protected auditService: AuditService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n    this.characterMinimumMessage = this.i18nService.t(\"characterMinimum\", this.minimumLength);\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.value.email;\n    email = email.trim().toLowerCase();\n    let name = this.formGroup.value.name;\n    name = name === \"\" ? null : name; // Why do we do this?\n    const masterPassword = this.formGroup.value.masterPassword;\n    try {\n      if (!this.accountCreated) {\n        const registerResponse = await this.registerAccount(\n          await this.buildRegisterRequest(email, masterPassword, name),\n          showToast\n        );\n        if (!registerResponse.successful) {\n          return;\n        }\n        this.captchaBypassToken = registerResponse.captchaBypassToken;\n        this.accountCreated = true;\n      }\n      if (this.isInTrialFlow) {\n        if (!this.accountCreated) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"trialAccountCreated\")\n          );\n        }\n        const loginResponse = await this.logIn(email, masterPassword, this.captchaBypassToken);\n        if (loginResponse.captchaRequired) {\n          return;\n        }\n        this.createdAccount.emit(this.formGroup.value.email);\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"newAccountCreated\")\n        );\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n\n  private async validateRegistration(showToast: boolean): Promise<{ isValid: boolean }> {\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return { isValid: false };\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return { isValid: false };\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return { isValid: false };\n    }\n\n    const passwordWeak =\n      this.passwordStrengthResult != null && this.passwordStrengthResult.score < 3;\n    const passwordLeak =\n      this.formGroup.controls.checkForBreaches.value &&\n      (await this.auditService.passwordLeaked(this.formGroup.controls.masterPassword.value)) > 0;\n\n    if (passwordWeak && passwordLeak) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakAndBreachedMasterPasswordDesc\"),\n        this.i18nService.t(\"weakAndExposedMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    } else if (passwordWeak) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    } else if (passwordLeak) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"exposedMasterPasswordDesc\"),\n        this.i18nService.t(\"exposedMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    }\n\n    return { isValid: true };\n  }\n\n  private async buildRegisterRequest(\n    email: string,\n    masterPassword: string,\n    name: string\n  ): Promise<RegisterRequest> {\n    const hint = this.formGroup.value.hint;\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfConfig = DEFAULT_KDF_CONFIG;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfConfig);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      this.referenceData,\n      this.captchaToken,\n      kdf,\n      kdfConfig.iterations,\n      kdfConfig.memory,\n      kdfConfig.parallelism\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n    return request;\n  }\n\n  private async registerAccount(\n    request: RegisterRequest,\n    showToast: boolean\n  ): Promise<{ successful: boolean; captchaBypassToken?: string }> {\n    if (!(await this.validateRegistration(showToast)).isValid) {\n      return { successful: false };\n    }\n    this.formPromise = this.apiService.postRegister(request);\n    try {\n      const response = await this.formPromise;\n      return { successful: true, captchaBypassToken: response.captchaBypassToken };\n    } catch (e) {\n      if (this.handleCaptchaRequired(e)) {\n        return { successful: false };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private async logIn(\n    email: string,\n    masterPassword: string,\n    captchaBypassToken: string\n  ): Promise<{ captchaRequired: boolean }> {\n    const credentials = new PasswordLogInCredentials(\n      email,\n      masterPassword,\n      captchaBypassToken,\n      null\n    );\n    const loginResponse = await this.authService.logIn(credentials);\n    if (this.handleCaptchaRequired(loginResponse)) {\n      return { captchaRequired: true };\n    }\n    return { captchaRequired: false };\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div>\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n        <input id=\"register-form_input_email\" bitInput type=\"email\" formControlName=\"email\" />\n        <bit-hint>{{ \"emailAddressDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"name\" | i18n }}</bit-label>\n        <input id=\"register-form_input_name\" bitInput type=\"text\" formControlName=\"name\" />\n        <bit-hint>{{ \"yourNameDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <app-callout\n        type=\"info\"\n        [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n        *ngIf=\"enforcedPolicyOptions\"\n      >\n      </app-callout>\n      <bit-form-field>\n        <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_master-password\"\n          bitInput\n          type=\"password\"\n          formControlName=\"masterPassword\"\n        />\n        <button\n          type=\"button\"\n          bitSuffix\n          bitIconButton\n          bitPasswordInputToggle\n          [(toggled)]=\"showPassword\"\n        ></button>\n        <bit-hint>\n          <span class=\"tw-font-semibold\">Important:</span>\n          {{ \"masterPassImportant\" | i18n }}\n        </bit-hint>\n      </bit-form-field>\n      <app-password-strength\n        [password]=\"formGroup.get('masterPassword')?.value\"\n        [email]=\"formGroup.get('email')?.value\"\n        [name]=\"formGroup.get('name')?.value\"\n        [showText]=\"true\"\n        (passwordStrengthResult)=\"getStrengthResult($event)\"\n      >\n      </app-password-strength>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"reTypeMasterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_confirm-master-password\"\n          bitInput\n          type=\"password\"\n          formControlName=\"confirmMasterPassword\"\n        />\n        <button\n          type=\"button\"\n          bitSuffix\n          bitIconButton\n          bitPasswordInputToggle\n          [(toggled)]=\"showPassword\"\n        ></button>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"masterPassHint\" | i18n }}</bit-label>\n        <input id=\"register-form_input_hint\" bitInput type=\"text\" formControlName=\"hint\" />\n        <bit-hint>{{ \"masterPassHintDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex tw-items-start\" *ngIf=\"showTerms\">\n      <div class=\"tw-flex tw-h-6 tw-items-center\">\n        <input\n          id=\"register-form_input_accept-policies\"\n          class=\"tw-border-gray-300 tw-w-4 tw-rounded tw-border\"\n          bitInput\n          type=\"checkbox\"\n          formControlName=\"acceptPolicies\"\n        />\n      </div>\n      <bit-label class=\"ml-2\">\n        {{ \"acceptPolicies\" | i18n }}<br />\n        <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n          \"termsOfService\" | i18n\n        }}</a\n        >,\n        <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n          \"privacyPolicy\" | i18n\n        }}</a>\n      </bit-label>\n    </div>\n\n    <hr />\n    <div class=\"tw-flex tw-space-x-2 tw-pt-2\">\n      <ng-container *ngIf=\"!accountCreated\">\n        <button\n          [block]=\"true\"\n          type=\"submit\"\n          buttonType=\"primary\"\n          bitButton\n          [loading]=\"form.loading\"\n        >\n          {{ \"createAccount\" | i18n }}\n        </button>\n        <a bitButton [block]=\"true\" buttonType=\"secondary\" routerLink=\"/login\">\n          <i class=\"bwi bwi-sign-in tw-mr-2\"></i>\n          {{ \"logIn\" | i18n }}\n        </a>\n      </ng-container>\n      <ng-container *ngIf=\"accountCreated\">\n        <button\n          [block]=\"true\"\n          type=\"submit\"\n          buttonType=\"primary\"\n          bitButton\n          [loading]=\"form.loading\"\n        >\n          {{ \"logIn\" | i18n }}\n        </button>\n      </ng-container>\n    </div>\n    <bit-error-summary *ngIf=\"showErrorSummary\" [formGroup]=\"formGroup\"></bit-error-summary>\n  </div>\n</form>\n","import { Component, Input } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\n\n@Component({\n  selector: \"app-register-form\",\n  templateUrl: \"./register-form.component.html\",\n})\nexport class RegisterFormComponent extends BaseRegisterComponent {\n  @Input() queryParamEmail: string;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() referenceDataValue: ReferenceEventRequest;\n\n  showErrorSummary = false;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    auditService: AuditService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService,\n      auditService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.referenceData = this.referenceDataValue;\n\n    if (this.queryParamEmail) {\n      this.formGroup.get(\"email\")?.setValue(this.queryParamEmail);\n    }\n  }\n\n  async submit() {\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.formGroup.value.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    await super.submit(false);\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-forbes\",\n  templateUrl: \"logo-forbes.component.html\",\n})\nexport class LogoForbesComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/forbes-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"Forbes Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    “Bitwarden boasts the backing of some of the world's best security experts and an attractive,\n    easy-to-use interface”\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-us-news\",\n  templateUrl: \"logo-us-news.component.html\",\n})\nexport class LogoUSNewsComponent {}\n","<img\n  src=\"../../images/register-layout/usnews-360-badge.svg\"\n  class=\"tw-mx-auto tw-block tw-w-48\"\n  alt=\"US News 360 Reviews Best Password Manager\"\n/>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise-content\",\n  templateUrl: \"enterprise-content.component.html\",\n})\nexport class EnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams-content\",\n  templateUrl: \"teams-content.component.html\",\n})\nexport class TeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-trial-confirmation-details\",\n  templateUrl: \"confirmation-details.component.html\",\n})\nexport class ConfirmationDetailsComponent {\n  @Input() email: string;\n  @Input() orgLabel: string;\n}\n","<div class=\"tw-pl-6 tw-pb-6\">\n  <p class=\"tw-text-xl\">{{ \"trialThankYou\" | i18n: orgLabel }}</p>\n  <ul class=\"tw-list-disc\">\n    <li>\n      <p>\n        {{ \"trialConfirmationEmail\" | i18n }}\n        <span class=\"tw-font-bold\">{{ email }}</span\n        >.\n      </p>\n    </li>\n    <li>\n      <p>\n        {{ \"trialPaidInfoMessage\" | i18n: orgLabel }}\n      </p>\n    </li>\n  </ul>\n</div>\n","<form #form [formGroup]=\"formGroup\" [appApiAction]=\"formPromise\" (ngSubmit)=\"submit()\">\n  <div class=\"tw-container tw-mb-3\">\n    <div class=\"tw-mb-6\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"billingPlanLabel\" | i18n }}</h2>\n      <div class=\"tw-mb-1 tw-items-center\" *ngFor=\"let selectablePlan of selectablePlans\">\n        <label class=\"tw- tw-block tw-text-main\" for=\"interval{{ selectablePlan.type }}\">\n          <input\n            checked\n            class=\"tw-h-4 tw-w-4 tw-align-middle\"\n            id=\"interval{{ selectablePlan.type }}\"\n            name=\"plan\"\n            type=\"radio\"\n            [value]=\"selectablePlan.type\"\n            formControlName=\"plan\"\n          />\n          <ng-container *ngIf=\"selectablePlan.isAnnual\">\n            {{ \"annual\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"yr\" | i18n }}\n          </ng-container>\n          <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n            {{ \"monthly\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"monthAbbr\" | i18n }}\n          </ng-container>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"tw-mb-4\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"paymentType\" | i18n }}</h2>\n      <app-payment [hideCredit]=\"true\" [trialFlow]=\"true\"></app-payment>\n      <app-tax-info [trialFlow]=\"true\" (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    </div>\n\n    <div class=\"tw-flex tw-space-x-2\">\n      <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n        {{ \"startTrial\" | i18n }}\n      </button>\n\n      <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"stepBack()\">Back</button>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-billing\",\n  templateUrl: \"./billing.component.html\",\n})\nexport class BillingComponent extends OrganizationPlansComponent {\n  @Input() orgInfoForm: FormGroup;\n  @Output() previousStep = new EventEmitter();\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    router: Router,\n    syncService: SyncService,\n    policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    messagingService: MessagingService,\n    formBuilder: UntypedFormBuilder,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      apiService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      router,\n      syncService,\n      policyService,\n      organizationService,\n      logService,\n      messagingService,\n      formBuilder,\n      organizationApiService\n    );\n  }\n\n  async ngOnInit() {\n    const additionalSeats = this.product == ProductType.Families ? 0 : 1;\n    this.formGroup.patchValue({\n      name: this.orgInfoForm.value.name,\n      billingEmail: this.orgInfoForm.value.email,\n      additionalSeats: additionalSeats,\n      plan: this.plan,\n      product: this.product,\n    });\n    this.isInTrialFlow = true;\n    await super.ngOnInit();\n  }\n\n  stepBack() {\n    this.previousStep.emit();\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-default-content\",\n  templateUrl: \"default-content.component.html\",\n})\nexport class DefaultContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise1-content\",\n  templateUrl: \"enterprise1-content.component.html\",\n})\nexport class Enterprise1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise2-content\",\n  templateUrl: \"enterprise2-content.component.html\",\n})\nexport class Enterprise2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams1-content\",\n  templateUrl: \"teams1-content.component.html\",\n})\nexport class Teams1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams2-content\",\n  templateUrl: \"teams2-content.component.html\",\n})\nexport class Teams2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-cnet\",\n  templateUrl: \"logo-cnet.component.html\",\n})\nexport class LogoCnetComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/cnet-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"CNET Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    \"No more excuses; start using Bitwarden today. The identity you save could be your own. The\n    money definitely will be.\"\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-enterprise-content\",\n  templateUrl: \"cnet-enterprise-content.component.html\",\n})\nexport class CnetEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-individual-content\",\n  templateUrl: \"cnet-individual-content.component.html\",\n})\nexport class CnetIndividualContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Premium Account Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Secure your account with advanced two-step login</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-teams-content\",\n  templateUrl: \"cnet-teams-content.component.html\",\n})\nexport class CnetTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-enterprise-content\",\n  templateUrl: \"abm-enterprise-content.component.html\",\n})\nexport class AbmEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-teams-content\",\n  templateUrl: \"abm-teams-content.component.html\",\n})\nexport class AbmTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","<div *ngIf=\"accountCreateOnly\" class=\"\">\n  <h1 class=\"tw-mt-12 tw-text-center tw-text-xl\">{{ \"createAccount\" | i18n }}</h1>\n  <div\n    class=\"tw-min-w-xl tw-m-auto tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n  >\n    <app-register-form\n      [queryParamEmail]=\"email\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      [referenceDataValue]=\"referenceData\"\n    ></app-register-form>\n  </div>\n</div>\n<div *ngIf=\"!accountCreateOnly\">\n  <div class=\"tw-absolute tw--z-10 tw--mt-48 tw-h-[28rem] tw-w-full tw-bg-background-alt2\"></div>\n  <div class=\"tw-min-w-4xl tw-mx-auto tw-flex tw-max-w-screen-xl tw-gap-12 tw-px-4\">\n    <div class=\"tw-w-1/2\">\n      <img\n        alt=\"Bitwarden\"\n        style=\"height: 50px; width: 335px\"\n        class=\"tw-mt-6\"\n        src=\"../../images/register-layout/logo-horizontal-white.svg\"\n      />\n\n      <div class=\"tw-pt-12\">\n        <!-- Layout params are used by marketing to determine left-hand content -->\n        <app-default-content *ngIf=\"layout === layouts.default\"></app-default-content>\n        <app-teams-content *ngIf=\"layout === layouts.teams\"></app-teams-content>\n        <app-teams1-content *ngIf=\"layout === layouts.teams1\"></app-teams1-content>\n        <app-teams2-content *ngIf=\"layout === layouts.teams2\"></app-teams2-content>\n        <app-enterprise-content *ngIf=\"layout === layouts.enterprise\"></app-enterprise-content>\n        <app-enterprise1-content *ngIf=\"layout === layouts.enterprise1\"></app-enterprise1-content>\n        <app-enterprise2-content *ngIf=\"layout === layouts.enterprise2\"></app-enterprise2-content>\n        <app-cnet-enterprise-content\n          *ngIf=\"layout === layouts.cnetcmpgnent\"\n        ></app-cnet-enterprise-content>\n        <app-cnet-individual-content\n          *ngIf=\"layout === layouts.cnetcmpgnind\"\n        ></app-cnet-individual-content>\n        <app-cnet-teams-content *ngIf=\"layout === layouts.cnetcmpgnteams\"></app-cnet-teams-content>\n        <app-abm-enterprise-content\n          *ngIf=\"layout === layouts.abmenterprise\"\n        ></app-abm-enterprise-content>\n        <app-abm-teams-content *ngIf=\"layout === layouts.abmteams\"></app-abm-teams-content>\n      </div>\n    </div>\n    <div class=\"tw-w-1/2\">\n      <div *ngIf=\"!useTrialStepper\">\n        <div\n          class=\"tw-min-w-xl tw-m-auto tw-mt-28 tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n        >\n          <app-register-form\n            [queryParamEmail]=\"email\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            [referenceDataValue]=\"referenceData\"\n          ></app-register-form>\n        </div>\n      </div>\n      <div class=\"tw-pt-44\" *ngIf=\"useTrialStepper\">\n        <div class=\"tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background\">\n          <div class=\"tw-flex tw-h-12 tw-w-full tw-items-center tw-rounded-t tw-bg-secondary-100\">\n            <h2 class=\"tw-mb-0 tw-pl-4 tw-text-base tw-font-bold tw-uppercase\">\n              Start your 7-Day free trial of Bitwarden for {{ org }}\n            </h2>\n          </div>\n          <app-vertical-stepper #stepper linear (selectionChange)=\"stepSelectionChange($event)\">\n            <app-vertical-step label=\"Create Account\" [editable]=\"false\" [subLabel]=\"email\">\n              <app-register-form\n                [isInTrialFlow]=\"true\"\n                (createdAccount)=\"createdAccount($event)\"\n                [referenceDataValue]=\"referenceData\"\n              ></app-register-form>\n            </app-vertical-step>\n            <app-vertical-step label=\"Organization Information\" [subLabel]=\"orgInfoSubLabel\">\n              <app-org-info [nameOnly]=\"true\" [formGroup]=\"orgInfoFormGroup\"></app-org-info>\n              <button\n                bitButton\n                buttonType=\"primary\"\n                [disabled]=\"orgInfoFormGroup.get('name').invalid\"\n                cdkStepperNext\n              >\n                Next\n              </button>\n            </app-vertical-step>\n            <app-vertical-step label=\"Billing\" [subLabel]=\"billingSubLabel\">\n              <app-billing\n                *ngIf=\"stepper.selectedIndex === 2\"\n                [plan]=\"plan\"\n                [product]=\"product\"\n                [orgInfoForm]=\"orgInfoFormGroup\"\n                (previousStep)=\"previousStep()\"\n                (onTrialBillingSuccess)=\"billingSuccess($event)\"\n              ></app-billing>\n            </app-vertical-step>\n            <app-vertical-step label=\"Confirmation Details\" [applyBorder]=\"false\">\n              <app-trial-confirmation-details\n                [email]=\"email\"\n                [orgLabel]=\"orgLabel\"\n              ></app-trial-confirmation-details>\n              <div class=\"tw-mb-3 tw-flex\">\n                <button bitButton buttonType=\"primary\" (click)=\"navigateToOrgVault()\">\n                  Get Started\n                </button>\n                <button\n                  bitButton\n                  buttonType=\"secondary\"\n                  (click)=\"navigateToOrgInvite()\"\n                  class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n                >\n                  Invite Users\n                </button>\n              </div>\n            </app-vertical-step>\n          </app-vertical-stepper>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { StepperSelectionEvent } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\n\nimport { RouterService } from \"./../../core/router.service\";\nimport { VerticalStepperComponent } from \"./vertical-stepper/vertical-stepper.component\";\n\nenum ValidOrgParams {\n  families = \"families\",\n  enterprise = \"enterprise\",\n  teams = \"teams\",\n  individual = \"individual\",\n  premium = \"premium\",\n  free = \"free\",\n}\n\nenum ValidLayoutParams {\n  default = \"default\",\n  teams = \"teams\",\n  teams1 = \"teams1\",\n  teams2 = \"teams2\",\n  enterprise = \"enterprise\",\n  enterprise1 = \"enterprise1\",\n  enterprise2 = \"enterprise2\",\n  cnetcmpgnent = \"cnetcmpgnent\",\n  cnetcmpgnind = \"cnetcmpgnind\",\n  cnetcmpgnteams = \"cnetcmpgnteams\",\n  abmenterprise = \"abmenterprise\",\n  abmteams = \"abmteams\",\n}\n\n@Component({\n  selector: \"app-trial\",\n  templateUrl: \"trial-initiation.component.html\",\n})\nexport class TrialInitiationComponent implements OnInit, OnDestroy {\n  email = \"\";\n  org = \"\";\n  orgInfoSubLabel = \"\";\n  orgId = \"\";\n  orgLabel = \"\";\n  billingSubLabel = \"\";\n  layout = \"default\";\n  plan: PlanType;\n  product: ProductType;\n  accountCreateOnly = true;\n  useTrialStepper = false;\n  policies: Policy[];\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  trialFlowOrgs: string[] = [\n    ValidOrgParams.teams,\n    ValidOrgParams.enterprise,\n    ValidOrgParams.families,\n  ];\n  routeFlowOrgs: string[] = [\n    ValidOrgParams.free,\n    ValidOrgParams.premium,\n    ValidOrgParams.individual,\n  ];\n  layouts = ValidLayoutParams;\n  referenceData: ReferenceEventRequest;\n  @ViewChild(\"stepper\", { static: false }) verticalStepper: VerticalStepperComponent;\n\n  orgInfoFormGroup = this.formBuilder.group({\n    name: [\"\", { validators: [Validators.required, Validators.maxLength(50)], updateOn: \"change\" }],\n    email: [\"\"],\n  });\n\n  private set referenceDataId(referenceId: string) {\n    if (referenceId != null) {\n      this.referenceData.id = referenceId;\n    } else {\n      this.referenceData.id = (\"; \" + document.cookie)\n        .split(\"; reference=\")\n        .pop()\n        .split(\";\")\n        .shift();\n    }\n\n    if (this.referenceData.id === \"\") {\n      this.referenceData.id = null;\n    }\n  }\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private route: ActivatedRoute,\n    protected router: Router,\n    private formBuilder: UntypedFormBuilder,\n    private titleCasePipe: TitleCasePipe,\n    private stateService: StateService,\n    private logService: LogService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private i18nService: I18nService,\n    private routerService: RouterService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n\n      this.referenceDataId = qParams.reference;\n\n      if (Object.values(ValidLayoutParams).includes(qParams.layout)) {\n        this.layout = qParams.layout;\n        this.accountCreateOnly = false;\n      }\n\n      if (this.trialFlowOrgs.includes(qParams.org)) {\n        this.org = qParams.org;\n        this.orgLabel = this.titleCasePipe.transform(this.org);\n        this.useTrialStepper = true;\n        this.referenceData.flow = qParams.org;\n\n        if (this.org === ValidOrgParams.families) {\n          this.plan = PlanType.FamiliesAnnually;\n          this.product = ProductType.Families;\n        } else if (this.org === ValidOrgParams.teams) {\n          this.plan = PlanType.TeamsAnnually;\n          this.product = ProductType.Teams;\n        } else if (this.org === ValidOrgParams.enterprise) {\n          this.plan = PlanType.EnterpriseAnnually;\n          this.product = ProductType.Enterprise;\n        }\n      } else if (this.routeFlowOrgs.includes(qParams.org)) {\n        this.referenceData.flow = qParams.org;\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      // After logging in redirect them to setup the families sponsorship\n      this.setupFamilySponsorship(qParams.sponsorshipToken);\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.policyService\n        .masterPasswordPolicyOptions$(this.policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPasswordPolicyOptions) => {\n          this.enforcedPolicyOptions = enforcedPasswordPolicyOptions;\n        });\n    }\n\n    this.orgInfoFormGroup.controls.name.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.orgInfoFormGroup.controls.name.markAsTouched();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  stepSelectionChange(event: StepperSelectionEvent) {\n    // Set org info sub label\n    if (event.selectedIndex === 1 && this.orgInfoFormGroup.controls.name.value === \"\") {\n      this.orgInfoSubLabel =\n        \"Enter your \" + this.titleCasePipe.transform(this.org) + \" organization information\";\n    } else if (event.previouslySelectedIndex === 1) {\n      this.orgInfoSubLabel = this.orgInfoFormGroup.controls.name.value;\n    }\n\n    //set billing sub label\n    if (event.selectedIndex === 2) {\n      this.billingSubLabel = this.i18nService.t(\"billingTrialSubLabel\");\n    }\n  }\n\n  createdAccount(email: string) {\n    this.email = email;\n    this.orgInfoFormGroup.get(\"email\")?.setValue(email);\n    this.verticalStepper.next();\n  }\n\n  billingSuccess(event: any) {\n    this.orgId = event?.orgId;\n    this.billingSubLabel = event?.subLabelText;\n    this.verticalStepper.next();\n  }\n\n  navigateToOrgVault() {\n    this.router.navigate([\"organizations\", this.orgId, \"vault\"]);\n  }\n\n  navigateToOrgInvite() {\n    this.router.navigate([\"organizations\", this.orgId, \"manage\", \"members\"]);\n  }\n\n  previousStep() {\n    this.verticalStepper.previous();\n  }\n\n  private setupFamilySponsorship(sponsorshipToken: string) {\n    if (sponsorshipToken != null) {\n      const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n        queryParams: { plan: sponsorshipToken },\n      });\n      this.routerService.setPreviousUrl(route.toString());\n    }\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { TokenTwoFactorRequest } from \"@bitwarden/common/models/request/identity-token/token-two-factor.request\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/two-factor-email.request\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService,\n    protected loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenTwoFactorRequest(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.loginService.clearValues();\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.loginService.clearValues();\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.loginService.clearValues();\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      request.authRequestAccessCode = this.authService.accessCode;\n      request.authRequestId = this.authService.authRequestId;\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithUserApiKey() ||\n      this.authService.authingWithPasswordless()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithUserApiKey();\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{ \"twoStepOptions\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-group list-group-flush-2fa\">\n          <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ p.name }}</h3>\n                {{ p.description }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-describedby]=\"p.name\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"choose(p)\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img class=\"recovery-code-img\" alt=\"rc logo\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ \"recoveryCodeTitle\" | i18n }}</h3>\n                {{ \"recoveryCodeDesc\" | i18n }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"recover()\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"container\"\n  ngNativeValidate\n  autocomplete=\"off\"\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div\n      class=\"col-5\"\n      [ngClass]=\"{\n        'col-9':\n          selectedProviderType === providerType.Duo ||\n          selectedProviderType === providerType.OrganizationDuo\n      }\"\n    >\n      <p class=\"lead text-center mb-4\">{{ title }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Email ||\n              selectedProviderType === providerType.Authenticator\n            \"\n          >\n            <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n              {{ \"enterVerificationCodeApp\" | i18n }}\n            </p>\n            <p *ngIf=\"selectedProviderType === providerType.Email\">\n              {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n            </p>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"text\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                inputmode=\"tel\"\n                appInputVerbatim\n              />\n              <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                <a\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"sendEmail(true)\"\n                  [appApiAction]=\"emailPromise\"\n                  *ngIf=\"selectedProviderType === providerType.Email\"\n                >\n                  {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n                </a>\n              </small>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n            <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n            <picture>\n              <source srcset=\"../../images/yubikey.avif\" type=\"image/avif\" />\n              <source srcset=\"../../images/yubikey.webp\" type=\"image/webp\" />\n              <img src=\"../../images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\" />\n            </picture>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"password\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\">\n            <div id=\"web-authn-frame\" class=\"mb-3\">\n              <iframe id=\"webauthn_iframe\" [attr.allow]=\"webAuthnAllow\"></iframe>\n            </div>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Duo ||\n              selectedProviderType === providerType.OrganizationDuo\n            \"\n          >\n            <div id=\"duo-frame\" class=\"mb-3\">\n              <iframe id=\"duo_iframe\"></iframe>\n            </div>\n          </ng-container>\n          <i\n            class=\"bwi bwi-spinner text-muted bwi-spin pull-right\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\"\n            aria-hidden=\"true\"\n          ></i>\n          <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              name=\"Remember\"\n              class=\"form-check-input\"\n              [(ngModel)]=\"remember\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">{{ \"rememberMe\" | i18n }}</label>\n          </div>\n          <ng-container *ngIf=\"selectedProviderType == null\">\n            <p>{{ \"noTwoStepProviders\" | i18n }}</p>\n            <p>{{ \"noTwoStepProviders2\" | i18n }}</p>\n          </ng-container>\n          <hr />\n          <div [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n              *ngIf=\"\n                selectedProviderType != null &&\n                selectedProviderType !== providerType.Duo &&\n                selectedProviderType !== providerType.OrganizationDuo &&\n                selectedProviderType !== providerType.WebAuthn\n              \"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n          <div class=\"text-center\">\n            <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{\n              \"useAnotherTwoStepMethod\" | i18n\n            }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { RouterService } from \"../core\";\n\nimport { TwoFactorOptionsComponent } from \"./two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  @ViewChild(\"twoFactorOptions\", { read: ViewContainerRef, static: true })\n  twoFactorOptionsModal: ViewContainerRef;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    private modalService: ModalService,\n    route: ActivatedRoute,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService,\n    private routerService: RouterService,\n    loginService: LoginService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService,\n      loginService\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async anotherMethod() {\n    const [modal] = await this.modalService.openViewRef(\n      TwoFactorOptionsComponent,\n      this.twoFactorOptionsModal,\n      (comp) => {\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n          modal.close();\n          this.selectedProviderType = provider;\n          await this.init();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRecoverSelected.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async goAfterLogIn() {\n    this.loginService.clearValues();\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class PasswordRequest extends SecretVerificationRequest {\n  newMasterPasswordHash: string;\n  masterPasswordHint: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/password.request\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdatePasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n  currentMasterPassword: string;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n\n  constructor(\n    protected router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async cancel() {\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    const secret: Verification = {\n      type: VerificationType.MasterPassword,\n      secret: this.currentMasterPassword,\n    };\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return false;\n    }\n\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfConfig = await this.stateService.getKdfConfig();\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create Request\n      const request = new PasswordRequest();\n      request.masterPasswordHash = await this.cryptoService.hashPassword(\n        this.currentMasterPassword,\n        null\n      );\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.key = encKey[1].encryptedString;\n\n      // Update user's password\n      this.apiService.postPassword(request);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"masterPasswordInvalidWarning\" | i18n }} </app-callout>\n          <app-callout\n            type=\"info\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            *ngIf=\"enforcedPolicyOptions\"\n          ></app-callout>\n\n          <form\n            #form\n            (ngSubmit)=\"submit()\"\n            [appApiAction]=\"formPromise\"\n            ngNativeValidate\n            autocomplete=\"off\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"currentMasterPassword\"\n                    type=\"password\"\n                    name=\"MasterPasswordHash\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\"\n                    required\n                    appInputVerbatim\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"newMasterPassword\"\n                    type=\"password\"\n                    name=\"NewMasterPasswordHash\"\n                    class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                  <app-password-strength\n                    [password]=\"masterPassword\"\n                    [email]=\"email\"\n                    [showText]=\"true\"\n                    (passwordStrengthResult)=\"getStrengthResult($event)\"\n                  ></app-password-strength>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"masterPasswordRetype\"\n                    type=\"password\"\n                    name=\"MasterPasswordRetype\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"masterPasswordRetype\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n              <i\n                class=\"fa fa-spinner fa-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"changeMasterPassword\" | i18n }}</span>\n            </button>\n            <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n              <span>{{ \"cancel\" | i18n }}</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { UpdatePasswordComponent as BaseUpdatePasswordComponent } from \"@bitwarden/angular/components/update-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\n@Component({\n  selector: \"app-update-password\",\n  templateUrl: \"update-password.component.html\",\n})\nexport class UpdatePasswordComponent extends BaseUpdatePasswordComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      userVerificationService,\n      logService\n    );\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"../../abstractions/organization-user/requests\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/update-temp-password.request\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfConfig = await this.stateService.getKdfConfig();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfConfig\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"updateMasterPasswordWarning\" | i18n }} </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    syncService: SyncService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export class VerifyEmailRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VerifyEmailRequest } from \"@bitwarden/common/models/request/verify-email.request\";\n\n@Component({\n  selector: \"app-verify-email-token\",\n  templateUrl: \"verify-email-token.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyEmailTokenComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null) {\n        try {\n          await this.apiService.postAccountVerifyEmailToken(\n            new VerifyEmailRequest(qParams.userId, qParams.token)\n          );\n          if (await this.stateService.getIsAuthenticated()) {\n            await this.apiService.refreshIdentityToken();\n          }\n          this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n          this.router.navigate([\"/\"]);\n          return;\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"emailVerifiedFailed\"));\n      this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","export class VerifyDeleteRecoverRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VerifyDeleteRecoverRequest } from \"@bitwarden/common/models/request/verify-delete-recover.request\";\n\n@Component({\n  selector: \"app-verify-recover-delete\",\n  templateUrl: \"verify-recover-delete.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyRecoverDeleteComponent implements OnInit {\n  email: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private token: string;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n        this.userId = qParams.userId;\n        this.token = qParams.token;\n        this.email = qParams.email;\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    try {\n      const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n      this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n          <p class=\"text-center\">\n            <strong>{{ email }}</strong>\n          </p>\n          <p>{{ \"deleteRecoverConfirmDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-danger btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"deleteAccount\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HomeGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return this.router.createUrlTree([\"/login\"], { queryParams: route.queryParams });\n    }\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"/lock\"], { queryParams: route.queryParams });\n    }\n    return this.router.createUrlTree([\"/vault\"], { queryParams: route.queryParams });\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user-layout\",\n  templateUrl: \"user-layout.component.html\",\n})\nexport class UserLayoutComponent implements OnInit {\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAccessTitle\">\n          {{ \"userAccess\" | i18n }}\n          <small>{{ entityName }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading || !users\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <cdk-virtual-scroll-viewport\n        itemSize=\"46\"\n        minBufferPx=\"600\"\n        maxBufferPx=\"1200\"\n        [style]=\"scrollViewportStyle\"\n      >\n        <div class=\"modal-body\" *ngIf=\"!loading && users && searchedUsers\">\n          <div class=\"d-flex\">\n            <div class=\"mr-3\">\n              <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n              <input\n                type=\"search\"\n                class=\"form-control form-control-sm\"\n                id=\"search\"\n                placeholder=\"{{ 'search' | i18n }}\"\n                name=\"SearchText\"\n                [(ngModel)]=\"searchText\"\n              />\n            </div>\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: !showSelected }\"\n                (click)=\"filterSelected(false)\"\n              >\n                {{ \"all\" | i18n }}\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: showSelected }\"\n                (click)=\"filterSelected(true)\"\n              >\n                {{ \"selected\" | i18n }}\n                <span bitBadge badgeType=\"info\" *ngIf=\"selectedCount\">{{ selectedCount }}</span>\n              </button>\n            </div>\n          </div>\n          <ng-container *ngIf=\"!searchedUsers.length\">\n            <hr />\n            {{ \"noUsersInList\" | i18n }}\n          </ng-container>\n          <table class=\"table table-hover table-list mb-0\" [hidden]=\"!searchedUsers.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                <th>{{ \"userType\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"hidePasswords\" | i18n }}\n                </th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"readOnly\" | i18n }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *cdkVirtualFor=\"let u of searchedUsers\" class=\"\">\n                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.checked\"\n                    name=\"{{ u.id.substr(0, 8) }}_Checked\"\n                    [disabled]=\"entity === 'collection' && u.accessAll\"\n                    (change)=\"selectedChanged(u)\"\n                    appStopProp\n                  />\n                </td>\n                <td width=\"30\" (click)=\"check(u)\">\n                  <bit-avatar [text]=\"u | userName\" [id]=\"u.id\" size=\"small\"></bit-avatar>\n                </td>\n                <td>\n                  {{ u.email }}\n                  <span\n                    bitBadge\n                    badgeType=\"secondary\"\n                    *ngIf=\"u.status === organizationUserStatusType.Invited\"\n                    >{{ \"invited\" | i18n }}</span\n                  >\n                  <span\n                    bitBadge\n                    badgeType=\"warning\"\n                    *ngIf=\"u.status === organizationUserStatusType.Accepted\"\n                    >{{ \"accepted\" | i18n }}</span\n                  >\n                  <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n                </td>\n                <td *ngIf=\"entity === 'collection'\">\n                  <ng-container *ngIf=\"u.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter\"\n                      title=\"{{ 'userAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"userAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td>\n                  <span *ngIf=\"u.type === organizationUserType.Owner\">{{ \"owner\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Admin\">{{ \"admin\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Manager\">{{\n                    \"manager\" | i18n\n                  }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.User\">{{ \"user\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Custom\">{{ \"custom\" | i18n }}</span>\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.hidePasswords\"\n                    name=\"{{ u.id.substr(0, 8) }}_HidePasswords\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.readOnly\"\n                    name=\"{{ u.id.substr(0, 8) }}_ReadOnly\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </cdk-virtual-scroll-viewport>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/abstractions/organization-user/responses\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\n\n@Component({\n  selector: \"app-entity-users\",\n  templateUrl: \"entity-users.component.html\",\n  providers: [SearchPipe],\n})\nexport class EntityUsersComponent implements OnInit {\n  @Input() entity: \"group\" | \"collection\";\n  @Input() entityId: string;\n  @Input() entityName: string;\n  @Input() organizationId: string;\n  @Output() onEditedUsers = new EventEmitter();\n\n  organizationUserType = OrganizationUserType;\n  organizationUserStatusType = OrganizationUserStatusType;\n\n  showSelected = false;\n  loading = true;\n  formPromise: Promise<any>;\n  selectedCount = 0;\n  searchText: string;\n\n  private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n  constructor(\n    private search: SearchPipe,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationUserService: OrganizationUserService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadUsers();\n    this.loading = false;\n  }\n\n  get users() {\n    if (this.showSelected) {\n      return this.allUsers.filter((u) => (u as any).checked);\n    } else {\n      return this.allUsers;\n    }\n  }\n\n  get searchedUsers() {\n    return this.search.transform(this.users, this.searchText, \"name\", \"email\", \"id\");\n  }\n\n  get scrollViewportStyle() {\n    return `min-height: 120px; height: ${120 + this.searchedUsers.length * 46}px`;\n  }\n\n  async loadUsers() {\n    const users = await this.organizationUserService.getAllUsers(this.organizationId);\n    this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    if (this.entity === \"group\") {\n      const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => u.id === s);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n          }\n        });\n      }\n    } else if (this.entity === \"collection\") {\n      const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n            (user[0] as any).readOnly = s.readOnly;\n            (user[0] as any).hidePasswords = s.hidePasswords;\n          }\n        });\n      }\n    }\n\n    this.allUsers.forEach((u) => {\n      if (this.entity === \"collection\" && u.accessAll) {\n        (u as any).checked = true;\n      }\n      if ((u as any).checked) {\n        this.selectedCount++;\n      }\n    });\n  }\n\n  check(u: OrganizationUserUserDetailsResponse) {\n    if (this.entity === \"collection\" && u.accessAll) {\n      return;\n    }\n    (u as any).checked = !(u as any).checked;\n    this.selectedChanged(u);\n  }\n\n  selectedChanged(u: OrganizationUserUserDetailsResponse) {\n    if ((u as any).checked) {\n      this.selectedCount++;\n    } else {\n      if (this.entity === \"collection\") {\n        (u as any).readOnly = false;\n        (u as any).hidePasswords = false;\n      }\n      this.selectedCount--;\n    }\n  }\n\n  filterSelected(showSelected: boolean) {\n    this.showSelected = showSelected;\n  }\n\n  async submit() {\n    try {\n      if (this.entity === \"group\") {\n        const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n        this.formPromise = this.apiService.putGroupUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      } else {\n        const selections = this.users\n          .filter((u) => (u as any).checked && !u.accessAll)\n          .map(\n            (u) =>\n              new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords)\n          );\n        this.formPromise = this.apiService.putCollectionUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedUsers\"));\n      this.onEditedUsers.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"collections\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"this.canCreate\"\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"add()\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newCollection\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging()\n      ? pagedCollections\n      : (collections | search: searchText:'name':'id')) as searchedCollections\n  \"\n>\n  <p *ngIf=\"!searchedCollections.length\">{{ \"noCollectionsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of searchedCollections\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\">\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"edit(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-pencil-square\" aria-hidden=\"true\"></i>\n                {{ \"edit\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"users(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item text-danger\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canDelete(c)\"\n                (click)=\"delete(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { firstValueFrom, lastValueFrom } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collection.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport {\n  DialogService,\n  SimpleDialogCloseType,\n  SimpleDialogOptions,\n  SimpleDialogType,\n} from \"@bitwarden/components\";\n\nimport { CollectionDialogResult, openCollectionDialog } from \"../shared\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@Component({\n  selector: \"app-org-manage-collections\",\n  templateUrl: \"collections.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CollectionsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organization: Organization;\n  canCreate = false;\n  organizationId: string;\n  collections: CollectionView[];\n  assignedCollections: CollectionView[];\n  pagedCollections: CollectionView[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedCollectionsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private collectionService: CollectionService,\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private dialogService: DialogService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    this.canCreate = this.organization.canCreateNewCollections;\n\n    const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n      const collections = r.data\n        .filter((c) => c.organizationId === this.organizationId)\n        .map((d) => new Collection(new CollectionData(d as CollectionDetailsResponse)));\n      return await this.collectionService.decryptMany(collections);\n    };\n\n    if (this.organization.canViewAssignedCollections) {\n      const response = await this.apiService.getUserCollections();\n      this.assignedCollections = await decryptCollections(response);\n    }\n\n    if (this.organization.canViewAllCollections) {\n      const response = await this.apiService.getCollections(this.organizationId);\n      this.collections = await decryptCollections(response);\n    } else {\n      this.collections = this.assignedCollections;\n    }\n\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.collections || this.collections.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCollections.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n      pagedSize = this.pagedCollectionsCount;\n    }\n    if (this.collections.length > pagedLength) {\n      this.pagedCollections = this.pagedCollections.concat(\n        this.collections.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCollectionsCount = this.pagedCollections.length;\n    this.didScroll = this.pagedCollections.length > this.pageSize;\n  }\n\n  async edit(collection?: CollectionView) {\n    const canCreate = collection == undefined && this.canCreate;\n    const canEdit = collection != undefined && this.canEdit(collection);\n    const canDelete = collection != undefined && this.canDelete(collection);\n\n    if (!(canCreate || canEdit || canDelete)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n      return;\n    }\n\n    if (\n      !collection &&\n      this.organization.planProductType === ProductType.Free &&\n      this.collections.length === this.organization.maxCollections\n    ) {\n      // Show org upgrade modal\n      // It might be worth creating a simple\n      // org upgrade dialog service to launch the dialog here and in the people.comp\n      // once the enterprise pod is done w/ their organization module refactor.\n      const orgUpgradeSimpleDialogOpts: SimpleDialogOptions = {\n        title: this.i18nService.t(\"upgradeOrganization\"),\n        content: this.i18nService.t(\n          this.organization.canManageBilling\n            ? \"freeOrgMaxCollectionReachedManageBilling\"\n            : \"freeOrgMaxCollectionReachedNoManageBilling\",\n          this.organization.maxCollections\n        ),\n        type: SimpleDialogType.PRIMARY,\n      };\n\n      if (this.organization.canManageBilling) {\n        orgUpgradeSimpleDialogOpts.acceptButtonText = this.i18nService.t(\"upgrade\");\n      } else {\n        orgUpgradeSimpleDialogOpts.acceptButtonText = this.i18nService.t(\"ok\");\n        orgUpgradeSimpleDialogOpts.cancelButtonText = null; // hide secondary btn\n      }\n\n      const simpleDialog = this.dialogService.openSimpleDialog(orgUpgradeSimpleDialogOpts);\n\n      firstValueFrom(simpleDialog.closed).then((result: SimpleDialogCloseType | undefined) => {\n        if (!result) {\n          return;\n        }\n\n        if (result == SimpleDialogCloseType.ACCEPT && this.organization.canManageBilling) {\n          this.router.navigate(\n            [\"/organizations\", this.organization.id, \"billing\", \"subscription\"],\n            { queryParams: { upgrade: true } }\n          );\n        }\n      });\n\n      return;\n    }\n\n    const dialog = openCollectionDialog(this.dialogService, {\n      data: { collectionId: collection?.id, organizationId: this.organizationId },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === CollectionDialogResult.Saved || result === CollectionDialogResult.Deleted) {\n      this.load();\n    }\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(collection: CollectionView) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteCollection(this.organizationId, collection.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.removeCollection(collection);\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n    }\n  }\n\n  async users(collection: CollectionView) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"collection\";\n        comp.entityId = collection.id;\n        comp.entityName = collection.name;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onEditedUsers.subscribe(() => {\n          this.load();\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.collections && this.collections.length > this.pageSize;\n  }\n\n  canEdit(collection: CollectionView) {\n    if (this.organization.canEditAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canEditAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  canDelete(collection: CollectionView) {\n    if (this.organization.canDeleteAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canDeleteAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private removeCollection(collection: CollectionView) {\n    const index = this.collections.indexOf(collection);\n    if (index > -1) {\n      this.collections.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","import { DIALOG_DATA, DialogConfig, DialogRef } from \"@angular/cdk/dialog\";\nimport { ChangeDetectorRef, Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { catchError, combineLatest, from, map, of, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collection.response\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { GroupService, GroupView } from \"../core\";\nimport {\n  AccessItemType,\n  AccessItemValue,\n  AccessItemView,\n  convertToPermission,\n  convertToSelectionView,\n  PermissionMode,\n} from \"../shared/components/access-selector\";\n\n/**\n * Indices for the available tabs in the dialog\n */\nexport enum GroupAddEditTabType {\n  Info = 0,\n  Members = 1,\n  Collections = 2,\n}\n\nexport interface GroupAddEditDialogParams {\n  /**\n   * ID of the organization the group belongs to\n   */\n  organizationId: string;\n\n  /**\n   * Optional ID of the group being modified\n   */\n  groupId?: string;\n\n  /**\n   * Tab to open when the dialog is open.\n   * Defaults to Group Info\n   */\n  initialTab?: GroupAddEditTabType;\n}\n\nexport enum GroupAddEditDialogResultType {\n  Saved = \"saved\",\n  Canceled = \"canceled\",\n  Deleted = \"deleted\",\n}\n\n/**\n * Strongly typed helper to open a groupAddEditDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport const openGroupAddEditDialog = (\n  dialogService: DialogService,\n  config: DialogConfig<GroupAddEditDialogParams>\n) => {\n  return dialogService.open<GroupAddEditDialogResultType, GroupAddEditDialogParams>(\n    GroupAddEditComponent,\n    config\n  );\n};\n\n@Component({\n  selector: \"app-group-add-edit\",\n  templateUrl: \"group-add-edit.component.html\",\n})\nexport class GroupAddEditComponent implements OnInit, OnDestroy {\n  protected PermissionMode = PermissionMode;\n  protected ResultType = GroupAddEditDialogResultType;\n\n  tabIndex: GroupAddEditTabType;\n  loading = true;\n  editMode = false;\n  title: string;\n  collections: AccessItemView[] = [];\n  members: AccessItemView[] = [];\n  group: GroupView;\n\n  groupForm = this.formBuilder.group({\n    accessAll: new FormControl(false),\n    name: new FormControl(\"\", [Validators.required, Validators.maxLength(100)]),\n    externalId: new FormControl(\"\", Validators.maxLength(300)),\n    members: new FormControl<AccessItemValue[]>([]),\n    collections: new FormControl<AccessItemValue[]>([]),\n  });\n\n  get groupId(): string | undefined {\n    return this.params.groupId;\n  }\n\n  get organizationId(): string {\n    return this.params.organizationId;\n  }\n\n  private destroy$ = new Subject<void>();\n\n  private get orgCollections$() {\n    return from(this.apiService.getCollections(this.organizationId)).pipe(\n      switchMap((response) => {\n        return from(\n          this.collectionService.decryptMany(\n            response.data.map(\n              (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n            )\n          )\n        );\n      }),\n      map((collections) =>\n        collections.map<AccessItemView>((c) => ({\n          id: c.id,\n          type: AccessItemType.Collection,\n          labelName: c.name,\n          listName: c.name,\n        }))\n      )\n    );\n  }\n\n  private get orgMembers$() {\n    return from(this.organizationUserService.getAllUsers(this.organizationId)).pipe(\n      map((response) =>\n        response.data.map((m) => ({\n          id: m.id,\n          type: AccessItemType.Member,\n          email: m.email,\n          role: m.type,\n          listName: m.name?.length > 0 ? `${m.name} (${m.email})` : m.email,\n          labelName: m.name || m.email,\n          status: m.status,\n        }))\n      )\n    );\n  }\n\n  private get groupDetails$() {\n    if (!this.editMode) {\n      return of(undefined);\n    }\n\n    return combineLatest([\n      this.groupService.get(this.organizationId, this.groupId),\n      this.apiService.getGroupUsers(this.organizationId, this.groupId),\n    ]).pipe(\n      map(([groupView, users]) => {\n        groupView.members = users;\n        return groupView;\n      }),\n      catchError((e: unknown) => {\n        if (e instanceof ErrorResponse) {\n          this.logService.error(e.message);\n        } else {\n          this.logService.error(e.toString());\n        }\n        return of(undefined);\n      })\n    );\n  }\n\n  constructor(\n    @Inject(DIALOG_DATA) private params: GroupAddEditDialogParams,\n    private dialogRef: DialogRef<GroupAddEditDialogResultType>,\n    private apiService: ApiService,\n    private organizationUserService: OrganizationUserService,\n    private groupService: GroupService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private formBuilder: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {\n    this.tabIndex = params.initialTab ?? GroupAddEditTabType.Info;\n  }\n\n  ngOnInit() {\n    this.editMode = this.loading = this.groupId != null;\n    this.title = this.i18nService.t(this.editMode ? \"editGroup\" : \"newGroup\");\n\n    combineLatest([this.orgCollections$, this.orgMembers$, this.groupDetails$])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([collections, members, group]) => {\n        this.collections = collections;\n        this.members = members;\n        this.group = group;\n\n        if (this.group != undefined) {\n          // Must detect changes so that AccessSelector @Inputs() are aware of the latest\n          // collections/members set above, otherwise no selected values will be patched below\n          this.changeDetectorRef.detectChanges();\n\n          this.groupForm.patchValue({\n            name: this.group.name,\n            externalId: this.group.externalId,\n            accessAll: this.group.accessAll,\n            members: this.group.members.map((m) => ({\n              id: m,\n              type: AccessItemType.Member,\n            })),\n            collections: this.group.collections.map((gc) => ({\n              id: gc.id,\n              type: AccessItemType.Collection,\n              permission: convertToPermission(gc),\n            })),\n          });\n        }\n\n        this.loading = false;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  submit = async () => {\n    this.groupForm.markAllAsTouched();\n\n    if (this.groupForm.invalid) {\n      if (this.tabIndex !== GroupAddEditTabType.Info) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"fieldOnTabRequiresAttention\", this.i18nService.t(\"groupInfo\"))\n        );\n      }\n      return;\n    }\n\n    const groupView = new GroupView();\n    groupView.id = this.groupId;\n    groupView.organizationId = this.organizationId;\n\n    const formValue = this.groupForm.value;\n    groupView.name = formValue.name;\n    groupView.externalId = formValue.externalId;\n    groupView.accessAll = formValue.accessAll;\n    groupView.members = formValue.members?.map((m) => m.id) ?? [];\n\n    if (!groupView.accessAll) {\n      groupView.collections = formValue.collections.map((c) => convertToSelectionView(c));\n    }\n\n    await this.groupService.save(groupView);\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(this.editMode ? \"editedGroupId\" : \"createdGroupId\", formValue.name)\n    );\n\n    this.dialogRef.close(GroupAddEditDialogResultType.Saved);\n  };\n\n  delete = async () => {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      this.group.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      \"app-group-add-edit .modal-content\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.groupService.delete(this.organizationId, this.groupId);\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"deletedGroupId\", this.group.name)\n    );\n    this.dialogRef.close(GroupAddEditDialogResultType.Deleted);\n  };\n}\n","<form [formGroup]=\"groupForm\" [bitSubmit]=\"submit\">\n  <bit-dialog [disablePadding]=\"!loading\">\n    <span bitDialogTitle>\n      {{ title }}\n      <span *ngIf=\"editMode\" class=\"tw-text-sm tw-normal-case tw-text-muted\">{{\n        group?.name\n      }}</span>\n    </span>\n    <div bitDialogContent>\n      <div *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n\n      <bit-tab-group *ngIf=\"!loading\" [(selectedIndex)]=\"tabIndex\">\n        <bit-tab label=\"{{ 'groupInfo' | i18n }}\">\n          <bit-form-field>\n            <bit-label>{{ \"name\" | i18n }}</bit-label>\n            <input bitInput type=\"text\" formControlName=\"name\" />\n            <bit-hint>{{ \"characterMaximum\" | i18n: 100 }}</bit-hint>\n          </bit-form-field>\n          <bit-form-field>\n            <bit-label>{{ \"externalId\" | i18n }}</bit-label>\n            <input bitInput type=\"text\" formControlName=\"externalId\" />\n            <bit-hint>{{ \"externalIdDesc\" | i18n }}</bit-hint>\n          </bit-form-field>\n        </bit-tab>\n\n        <bit-tab label=\"{{ 'members' | i18n }}\">\n          <p>{{ \"editGroupMembersDesc\" | i18n }}</p>\n          <bit-access-selector\n            formControlName=\"members\"\n            [items]=\"members\"\n            [showMemberRoles]=\"true\"\n            [permissionMode]=\"PermissionMode.Hidden\"\n            [columnHeader]=\"'member' | i18n\"\n            [selectorLabelText]=\"'selectMembers' | i18n\"\n            [emptySelectionText]=\"'noMembersAdded' | i18n\"\n          ></bit-access-selector>\n        </bit-tab>\n\n        <bit-tab label=\"{{ 'collections' | i18n }}\">\n          <p>{{ \"editGroupCollectionsDesc\" | i18n }}</p>\n          <div class=\"tw-my-3\">\n            <input type=\"checkbox\" formControlName=\"accessAll\" id=\"accessAll\" />\n            <label class=\"tw-mb-0 tw-text-lg\" for=\"accessAll\">{{\n              \"accessAllCollectionsDesc\" | i18n\n            }}</label>\n            <p class=\"tw-my-0 tw-text-muted\">{{ \"accessAllCollectionsHelp\" | i18n }}</p>\n          </div>\n          <ng-container *ngIf=\"!groupForm.value.accessAll\">\n            <bit-access-selector\n              formControlName=\"collections\"\n              [items]=\"collections\"\n              [permissionMode]=\"PermissionMode.Edit\"\n              [columnHeader]=\"'collection' | i18n\"\n              [selectorLabelText]=\"'selectCollections' | i18n\"\n              [emptySelectionText]=\"'noCollectionsAdded' | i18n\"\n            ></bit-access-selector>\n          </ng-container>\n        </bit-tab>\n      </bit-tab-group>\n    </div>\n    <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n      <button bitButton buttonType=\"primary\" bitFormButton type=\"submit\">\n        {{ \"save\" | i18n }}\n      </button>\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        type=\"button\"\n        bitDialogClose\n        [bit-dialog-close]=\"ResultType.Canceled\"\n      >\n        {{ \"cancel\" | i18n }}\n      </button>\n      <button\n        class=\"tw-ml-auto\"\n        type=\"button\"\n        buttonType=\"danger\"\n        bitIconButton=\"bwi-trash\"\n        bitFormButton\n        [bitAction]=\"delete\"\n        [appA11yTitle]=\"'delete' | i18n\"\n      ></button>\n    </div>\n  </bit-dialog>\n</form>\n","<div class=\"container page-content\">\n  <div class=\"tw-mb-4 tw-flex\">\n    <h1>{{ \"groups\" | i18n }}</h1>\n    <div class=\"tw-ml-auto tw-flex tw-items-center\">\n      <div class=\"tw-mr-2\">\n        <label class=\"sr-only\">{{ \"search\" | i18n }}</label>\n        <div class=\"tw-flex tw-items-center\">\n          <i class=\"bwi bwi-search bwi-fw tw-z-20 -tw-mr-7 tw-text-muted\" aria-hidden=\"true\"></i>\n          <input\n            bitInput\n            type=\"search\"\n            placeholder=\"{{ 'searchGroups' | i18n }}\"\n            class=\"tw-rounded-l tw-pl-9\"\n            [(ngModel)]=\"searchText\"\n          />\n        </div>\n      </div>\n      <button bitButton type=\"button\" buttonType=\"primary\" (click)=\"add()\">\n        <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n        {{ \"newGroup\" | i18n }}\n      </button>\n    </div>\n  </div>\n  <ng-container *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"!loading && visibleGroups\">\n    <p *ngIf=\"!visibleGroups.length\">{{ \"noGroupsInList\" | i18n }}</p>\n    <bit-table\n      *ngIf=\"visibleGroups.length\"\n      infinite-scroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <ng-container header>\n        <tr>\n          <th bitCell class=\"tw-w-20\">\n            <input\n              type=\"checkbox\"\n              class=\"tw-mr-2\"\n              (change)=\"toggleAllVisible($event)\"\n              id=\"selectAll\"\n            />\n            <label class=\"tw-mb-0 !tw-font-bold !tw-text-muted\" for=\"selectAll\">{{\n              \"all\" | i18n\n            }}</label>\n          </th>\n          <th bitCell>{{ \"name\" | i18n }}</th>\n          <th bitCell>{{ \"collections\" | i18n }}</th>\n          <th bitCell class=\"tw-w-10\">\n            <button\n              [bitMenuTriggerFor]=\"headerMenu\"\n              type=\"button\"\n              bitIconButton=\"bwi-ellipsis-v\"\n              size=\"small\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            ></button>\n\n            <bit-menu #headerMenu>\n              <button type=\"button\" bitMenuItem (click)=\"deleteAllSelected()\">\n                <span class=\"tw-text-danger\"\n                  ><i aria-hidden=\"true\" class=\"bwi bwi-trash\"></i> {{ \"delete\" | i18n }}</span\n                >\n              </button>\n            </bit-menu>\n          </th>\n        </tr>\n      </ng-container>\n      <ng-template body>\n        <tr bitRow *ngFor=\"let g of visibleGroups\">\n          <td bitCell (click)=\"check(g)\" class=\"tw-cursor-pointer\">\n            <input type=\"checkbox\" [(ngModel)]=\"g.checked\" />\n          </td>\n          <td bitCell class=\"tw-cursor-pointer tw-font-bold\" (click)=\"edit(g)\">\n            <button bitLink>\n              {{ g.details.name }}\n            </button>\n          </td>\n          <td bitCell (click)=\"edit(g, ModalTabType.Collections)\" class=\"tw-cursor-pointer\">\n            <bit-badge-list\n              *ngIf=\"!g.details.accessAll\"\n              [items]=\"g.collectionNames\"\n              [maxItems]=\"3\"\n              badgeType=\"secondary\"\n            ></bit-badge-list>\n            <span *ngIf=\"g.details.accessAll\">{{ \"all\" | i18n }}</span>\n          </td>\n          <td bitCell>\n            <button\n              [bitMenuTriggerFor]=\"rowMenu\"\n              type=\"button\"\n              bitIconButton=\"bwi-ellipsis-v\"\n              size=\"small\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            ></button>\n\n            <bit-menu #rowMenu>\n              <button type=\"button\" bitMenuItem (click)=\"edit(g)\">\n                <i aria-hidden=\"true\" class=\"bwi bwi-pencil-square\"></i> {{ \"editInfo\" | i18n }}\n              </button>\n              <button type=\"button\" bitMenuItem (click)=\"edit(g, ModalTabType.Members)\">\n                <i aria-hidden=\"true\" class=\"bwi bwi-user\"></i> {{ \"members\" | i18n }}\n              </button>\n              <button type=\"button\" bitMenuItem (click)=\"edit(g, ModalTabType.Collections)\">\n                <i aria-hidden=\"true\" class=\"bwi bwi-collection\"></i> {{ \"collections\" | i18n }}\n              </button>\n              <button type=\"button\" bitMenuItem (click)=\"delete(g)\">\n                <span class=\"tw-text-danger\"\n                  ><i aria-hidden=\"true\" class=\"bwi bwi-trash\"></i> {{ \"delete\" | i18n }}</span\n                >\n              </button>\n            </bit-menu>\n          </td>\n        </tr>\n      </ng-template>\n    </bit-table>\n  </ng-container>\n  <ng-template #addEdit></ng-template>\n</div>\n","import { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  BehaviorSubject,\n  combineLatest,\n  concatMap,\n  from,\n  lastValueFrom,\n  map,\n  Subject,\n  switchMap,\n  takeUntil,\n  tap,\n} from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collection.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { GroupService, GroupView } from \"../core\";\n\nimport {\n  GroupAddEditDialogResultType,\n  GroupAddEditTabType,\n  openGroupAddEditDialog,\n} from \"./group-add-edit.component\";\n\ntype CollectionViewMap = {\n  [id: string]: CollectionView;\n};\n\ntype GroupDetailsRow = {\n  /**\n   * Group Id (used for searching)\n   */\n  id: string;\n\n  /**\n   * Group name (used for searching)\n   */\n  name: string;\n\n  /**\n   * Details used for displaying group information\n   */\n  details: GroupView;\n\n  /**\n   * True if the group is selected in the table\n   */\n  checked?: boolean;\n\n  /**\n   * A list of collection names the group has access to\n   */\n  collectionNames?: string[];\n};\n\n@Component({\n  selector: \"app-org-groups\",\n  templateUrl: \"groups.component.html\",\n})\nexport class GroupsComponent implements OnInit, OnDestroy {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  groups: GroupDetailsRow[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected ModalTabType = GroupAddEditTabType;\n\n  private pagedGroupsCount = 0;\n  private pagedGroups: GroupDetailsRow[];\n  private searchedGroups: GroupDetailsRow[];\n  private _searchText: string;\n  private destroy$ = new Subject<void>();\n  private refreshGroups$ = new BehaviorSubject<void>(null);\n\n  get searchText() {\n    return this._searchText;\n  }\n  set searchText(value: string) {\n    this._searchText = value;\n    // Manually update as we are not using the search pipe in the template\n    this.updateSearchedGroups();\n  }\n\n  /**\n   * The list of groups that should be visible in the table.\n   * This is needed as there are two modes (paging/searching) and\n   * we need a reference to the currently visible groups for\n   * the Select All checkbox\n   */\n  get visibleGroups(): GroupDetailsRow[] {\n    if (this.isPaging()) {\n      return this.pagedGroups;\n    }\n    if (this.isSearching()) {\n      return this.searchedGroups;\n    }\n    return this.groups;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    private groupService: GroupService,\n    private route: ActivatedRoute,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private dialogService: DialogService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private collectionService: CollectionService,\n    private searchPipe: SearchPipe\n  ) {}\n\n  async ngOnInit() {\n    this.route.params\n      .pipe(\n        tap((params) => (this.organizationId = params.organizationId)),\n        switchMap(() =>\n          combineLatest([\n            // collectionMap\n            from(this.apiService.getCollections(this.organizationId)).pipe(\n              concatMap((response) => this.toCollectionMap(response))\n            ),\n            // groups\n            this.refreshGroups$.pipe(\n              switchMap(() => this.groupService.getAll(this.organizationId))\n            ),\n          ])\n        ),\n        map(([collectionMap, groups]) => {\n          return groups\n            .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n            .map<GroupDetailsRow>((g) => ({\n              id: g.id,\n              name: g.name,\n              details: g,\n              checked: false,\n              collectionNames: g.collections\n                .map((c) => collectionMap[c.id]?.name)\n                .sort(this.i18nService.collator?.compare),\n            }));\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((groups) => {\n        this.groups = groups;\n        this.resetPaging();\n        this.updateSearchedGroups();\n        this.loading = false;\n      });\n\n    this.route.queryParams\n      .pipe(\n        first(),\n        concatMap(async (qParams) => {\n          this.searchText = qParams.search;\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  loadMore() {\n    if (!this.groups || this.groups.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedGroups.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n      pagedSize = this.pagedGroupsCount;\n    }\n    if (this.groups.length > pagedLength) {\n      this.pagedGroups = this.pagedGroups.concat(\n        this.groups.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedGroupsCount = this.pagedGroups.length;\n    this.didScroll = this.pagedGroups.length > this.pageSize;\n  }\n\n  async edit(\n    group: GroupDetailsRow,\n    startingTabIndex: GroupAddEditTabType = GroupAddEditTabType.Info\n  ) {\n    const dialogRef = openGroupAddEditDialog(this.dialogService, {\n      data: {\n        initialTab: startingTabIndex,\n        organizationId: this.organizationId,\n        groupId: group != null ? group.details.id : null,\n      },\n    });\n\n    const result = await lastValueFrom(dialogRef.closed);\n\n    if (result == GroupAddEditDialogResultType.Saved) {\n      this.refreshGroups$.next();\n    } else if (result == GroupAddEditDialogResultType.Deleted) {\n      this.removeGroup(group.details.id);\n    }\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(groupRow: GroupDetailsRow) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      groupRow.details.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.groupService.delete(this.organizationId, groupRow.details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", groupRow.details.name)\n      );\n      this.removeGroup(groupRow.details.id);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteAllSelected() {\n    const groupsToDelete = this.groups.filter((g) => g.checked);\n\n    if (groupsToDelete.length == 0) {\n      return;\n    }\n\n    const deleteMessage = groupsToDelete.map((g) => g.details.name).join(\", \");\n    const confirmed = await this.platformUtilsService.showDialog(\n      deleteMessage,\n      this.i18nService.t(\"deleteMultipleGroupsConfirmation\", groupsToDelete.length.toString()),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.groupService.deleteMany(\n        this.organizationId,\n        groupsToDelete.map((g) => g.details.id)\n      );\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedManyGroups\", groupsToDelete.length.toString())\n      );\n\n      groupsToDelete.forEach((g) => this.removeGroup(g.details.id));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  resetPaging() {\n    this.pagedGroups = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  check(groupRow: GroupDetailsRow) {\n    groupRow.checked = !groupRow.checked;\n  }\n\n  toggleAllVisible(event: Event) {\n    this.visibleGroups.forEach((g) => (g.checked = (event.target as HTMLInputElement).checked));\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.groups && this.groups.length > this.pageSize;\n  }\n\n  private removeGroup(id: string) {\n    const index = this.groups.findIndex((g) => g.details.id === id);\n    if (index > -1) {\n      this.groups.splice(index, 1);\n      this.resetPaging();\n      this.updateSearchedGroups();\n    }\n  }\n\n  private async toCollectionMap(response: ListResponse<CollectionResponse>) {\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    const decryptedCollections = await this.collectionService.decryptMany(collections);\n\n    // Convert to an object using collection Ids as keys for faster name lookups\n    const collectionMap: CollectionViewMap = {};\n    decryptedCollections.forEach((c) => (collectionMap[c.id] = c));\n\n    return collectionMap;\n  }\n\n  private updateSearchedGroups() {\n    if (this.searchService.isSearchable(this.searchText)) {\n      // Making use of the pipe in the component as we need know which groups where filtered\n      this.searchedGroups = this.searchPipe.transform(\n        this.groups,\n        this.searchText,\n        (group) => group.details.name,\n        (group) => group.details.id\n      );\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"organization\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"members\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageUsers\"\n          >\n            {{ \"members\" | i18n }}\n          </a>\n          <a\n            routerLink=\"collections\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"\n          >\n            {{ \"collections\" | i18n }}\n          </a>\n          <a\n            routerLink=\"groups\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageGroups\"\n          >\n            {{ \"groups\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  organization: Organization;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { GetCollectionNameFromIdPipe } from \"./get-collection-name.pipe\";\nimport { GetGroupNameFromIdPipe } from \"./get-group-name.pipe\";\nimport { GetOrgNameFromIdPipe } from \"./get-organization-name.pipe\";\n\n@NgModule({\n  declarations: [GetOrgNameFromIdPipe, GetCollectionNameFromIdPipe, GetGroupNameFromIdPipe],\n  exports: [GetOrgNameFromIdPipe, GetCollectionNameFromIdPipe, GetGroupNameFromIdPipe],\n})\nexport class PipesModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\nimport { PipesModule } from \"../../../vault/pipes/pipes.module\";\n\nimport { CollectionNameBadgeComponent } from \"./collection-name.badge.component\";\n\n@NgModule({\n  imports: [SharedModule, PipesModule],\n  declarations: [CollectionNameBadgeComponent],\n  exports: [CollectionNameBadgeComponent],\n})\nexport class CollectionBadgeModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\nimport { PipesModule } from \"../../../vault/pipes/pipes.module\";\n\nimport { GroupNameBadgeComponent } from \"./group-name-badge.component\";\n\n@NgModule({\n  imports: [SharedModule, PipesModule],\n  declarations: [GroupNameBadgeComponent],\n  exports: [GroupNameBadgeComponent],\n})\nexport class GroupBadgeModule {}\n","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { filter, map, Observable, ReplaySubject, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessVaultTab,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\n\nimport { VaultFilterService as BaseVaultFilterService } from \"../../../vault/vault-filter/services/vault-filter.service\";\nimport { CollectionFilter } from \"../../../vault/vault-filter/shared/models/vault-filter.type\";\nimport { CollectionAdminView } from \"../../core\";\nimport { CollectionAdminService } from \"../../core/services/collection-admin.service\";\n\n@Injectable()\nexport class VaultFilterService extends BaseVaultFilterService implements OnDestroy {\n  private destroy$ = new Subject<void>();\n  private _collections = new ReplaySubject<CollectionAdminView[]>(1);\n\n  filteredCollections$: Observable<CollectionAdminView[]> = this._collections.asObservable();\n\n  collectionTree$: Observable<TreeNode<CollectionFilter>> = this.filteredCollections$.pipe(\n    map((collections) => this.buildCollectionTree(collections))\n  );\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService,\n    i18nService: I18nService,\n    protected collectionAdminService: CollectionAdminService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService,\n      i18nService\n    );\n    this.loadSubscriptions();\n  }\n\n  protected loadSubscriptions() {\n    this._organizationFilter\n      .pipe(\n        filter((org) => org != null),\n        switchMap((org) => {\n          return this.loadCollections(org);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((collections) => {\n        this._collections.next(collections);\n      });\n  }\n\n  async reloadCollections() {\n    this._collections.next(await this.loadCollections(this._organizationFilter.getValue()));\n  }\n\n  protected async loadCollections(org: Organization): Promise<CollectionAdminView[]> {\n    let collections: CollectionAdminView[] = [];\n    if (canAccessVaultTab(org)) {\n      collections = await this.collectionAdminService.getAll(org.id);\n\n      const noneCollection = new CollectionAdminView();\n      noneCollection.name = this.i18nService.t(\"unassigned\");\n      noneCollection.organizationId = org.id;\n      collections.push(noneCollection);\n    }\n    return collections;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultFilterService as VaultFilterServiceAbstraction } from \"../../../vault/vault-filter/services/abstractions/vault-filter.service\";\nimport { VaultFilterSharedModule } from \"../../../vault/vault-filter/shared/vault-filter-shared.module\";\n\nimport { VaultFilterComponent } from \"./vault-filter.component\";\nimport { VaultFilterService } from \"./vault-filter.service\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent],\n  exports: [VaultFilterComponent],\n  providers: [\n    {\n      provide: VaultFilterServiceAbstraction,\n      useClass: VaultFilterService,\n    },\n  ],\n})\nexport class VaultFilterModule {}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport {\n  CipherStatus,\n  CipherTypeFilter,\n  CollectionFilter,\n  FolderFilter,\n  OrganizationFilter,\n} from \"./vault-filter.type\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\n// TODO: Replace shared VaultFilter Model with this one and\n// refactor browser and desktop code to use this model.\nexport class VaultFilter {\n  selectedOrganizationNode: TreeNode<OrganizationFilter>;\n  selectedCipherTypeNode: TreeNode<CipherTypeFilter>;\n  selectedFolderNode: TreeNode<FolderFilter>;\n  selectedCollectionNode: TreeNode<CollectionFilter>;\n\n  get isFavorites(): boolean {\n    return this.selectedCipherTypeNode?.node.type === \"favorites\";\n  }\n\n  get isDeleted(): boolean {\n    return this.selectedCipherTypeNode?.node.type === \"trash\" ? true : null;\n  }\n\n  get organizationId(): string {\n    return this.selectedOrganizationNode?.node.id;\n  }\n\n  get cipherType(): CipherType {\n    return this.selectedCipherTypeNode?.node.type in CipherType\n      ? (this.selectedCipherTypeNode?.node.type as CipherType)\n      : null;\n  }\n\n  get cipherStatus(): CipherStatus {\n    return this.selectedCipherTypeNode?.node.type;\n  }\n\n  get cipherTypeId(): string {\n    return this.selectedCipherTypeNode?.node.id;\n  }\n\n  get folderId(): string {\n    return this.selectedFolderNode?.node.id;\n  }\n\n  get collectionId(): string {\n    return this.selectedCollectionNode?.node.id;\n  }\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.selectedCipherTypeNode = null;\n    this.selectedFolderNode = null;\n    this.selectedCollectionNode = null;\n  }\n\n  resetOrganization() {\n    this.selectedOrganizationNode = null;\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.isFavorites && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.isDeleted && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolderNode) {\n        // No folder\n        if (this.folderId === null && cipherPassesFilter) {\n          cipherPassesFilter = cipher.folderId === null;\n        }\n        // Folder\n        if (this.folderId !== null && cipherPassesFilter) {\n          cipherPassesFilter = cipher.folderId === this.folderId;\n        }\n      }\n      if (this.selectedCollectionNode) {\n        // All Collections\n        if (this.collectionId === \"AllCollections\" && cipherPassesFilter) {\n          cipherPassesFilter = false;\n        }\n        // Unassigned\n        if (this.collectionId === null && cipherPassesFilter) {\n          cipherPassesFilter =\n            cipher.organizationId != null &&\n            (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n        }\n        // Collection\n        if (\n          this.collectionId !== null &&\n          this.collectionId !== \"AllCollections\" &&\n          cipherPassesFilter\n        ) {\n          cipherPassesFilter =\n            cipher.collectionIds != null && cipher.collectionIds.includes(this.collectionId);\n        }\n      }\n      if (this.selectedOrganizationNode) {\n        // My Vault\n        if (this.organizationId === \"MyVault\" && cipherPassesFilter) {\n          cipherPassesFilter = cipher.organizationId === null;\n        }\n        // Organization\n        else if (this.organizationId !== null && cipherPassesFilter) {\n          cipherPassesFilter = cipher.organizationId === this.organizationId;\n        }\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n  protected componentName = \"\";\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const encBuf = await EncArrayBuffer.fromResponse(response);\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    // TODO: This should be removed but is needed since we re-use the same template\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"attachmentsTitle\">\n          {{ \"attachments\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n          <tbody>\n            <tr *ngFor=\"let a of cipher.attachments\">\n              <td class=\"table-list-icon\">\n                <i\n                  class=\"bwi bwi-fw bwi-lg bwi-file\"\n                  *ngIf=\"!$any(a).downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n                <i\n                  class=\"bwi bwi-spinner bwi-lg bwi-fw bwi-spin\"\n                  *ngIf=\"$any(a).downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </td>\n              <td class=\"wrap\">\n                <div class=\"d-flex\">\n                  <a href=\"#\" appStopClick (click)=\"download(a)\">{{ a.fileName }}</a>\n                  <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                    <a\n                      href=\"https://bitwarden.com/help/attachments/#fixing-old-attachments\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <i\n                        class=\"bwi bwi-exclamation-triangle text-warning\"\n                        title=\"{{ 'attachmentFixDesc' | i18n }}\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span class=\"sr-only\">{{ \"attachmentFixDesc\" | i18n }}</span></a\n                    >\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                      (click)=\"reupload(a)\"\n                      #reuploadBtn\n                      [appApiAction]=\"reuploadPromises[a.id]\"\n                      [disabled]=\"$any(reuploadBtn).loading\"\n                    >\n                      {{ \"fix\" | i18n }}\n                    </button>\n                  </div>\n                </div>\n                <small>{{ a.sizeName }}</small>\n              </td>\n              <td class=\"table-list-options\" *ngIf=\"!viewOnly\">\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'delete' | i18n }}\"\n                  (click)=\"delete(a)\"\n                  #deleteBtn\n                  [appApiAction]=\"deletePromises[a.id]\"\n                  [disabled]=\"$any(deleteBtn).loading\"\n                >\n                  <i\n                    class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                    [hidden]=\"$any(deleteBtn).loading\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <i\n                    class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                    [hidden]=\"!$any(deleteBtn).loading\"\n                    title=\"{{ 'loading' | i18n }}\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!viewOnly\">\n          <h3>{{ \"newAttachment\" | i18n }}</h3>\n          <label for=\"file\" class=\"sr-only\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n          <small class=\"form-text text-muted\">{{ \"maxFileSize\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  protected override componentName = \"app-vault-attachments\";\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.showFixOldAttachments(attachment)) {\n      await this.reuploadCipherAttachment(attachment, false);\n    }\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.cipher.organizationId == null;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"../../vault/attachments.component\";\n\n@Component({\n  selector: \"app-org-vault-attachments\",\n  templateUrl: \"../../vault/attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  organization: Organization;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      stateService,\n      platformUtilsService,\n      apiService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n      await super.reuploadCipherAttachment(attachment, true);\n    }\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(\n      this.cipherDomain,\n      file,\n      this.organization.canEditAnyCollection\n    );\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipherAttachment(attachmentId);\n    }\n    return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.organization.canEditAnyCollection;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"collectionsTitle\">\n          {{ \"collections\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"collectionsDesc\" | i18n }}</p>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"$any(c).checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCollectionsRequest } from \"@bitwarden/common/models/request/cipher-collections.request\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"../../vault/collections.component\";\n\n@Component({\n  selector: \"app-org-vault-collections\",\n  templateUrl: \"../../vault/collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    this.allowSelectNone = true;\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canViewAllCollections) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected loadCipherCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCipherCollections();\n    }\n    return this.collectionIds;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected saveCollections() {\n    if (this.organization.canEditAnyCollection) {\n      const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n      return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n    } else {\n      return super.saveCollections();\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-enroll-master-password-reset\",\n  templateUrl: \"enroll-master-password-reset.component.html\",\n})\nexport class EnrollMasterPasswordReset {\n  organization: Organization;\n\n  verification: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private modalRef: ModalRef,\n    config: ModalConfig,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    this.organization = config.data.organization;\n  }\n\n  async submit() {\n    let toastStringRef = \"withdrawPasswordResetSuccess\";\n\n    this.formPromise = this.userVerificationService\n      .buildRequest(this.verification, OrganizationUserResetPasswordEnrollmentRequest)\n      .then(async (request) => {\n        // Set variables\n        let keyString: string = null;\n\n        // Retrieve Public Key\n        const orgKeys = await this.organizationApiService.getKeys(this.organization.id);\n        if (orgKeys == null) {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n\n        const publicKey = Utils.fromB64ToArray(orgKeys.publicKey);\n\n        // RSA Encrypt user's encKey.key with organization public key\n        const encKey = await this.cryptoService.getEncKey();\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        keyString = encryptedKey.encryptedString;\n        toastStringRef = \"enrollPasswordResetSuccess\";\n\n        // Create request and execute enrollment\n        request.resetPasswordKey = keyString;\n        await this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n          this.organization.id,\n          this.organization.userId,\n          request\n        );\n\n        await this.syncService.fullSync(true);\n      });\n    try {\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(toastStringRef));\n      this.modalRef.close();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div\n  class=\"modal fade\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"enrollMasterPasswordResetTitle\"\n>\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"enrollMasterPasswordResetTitle\">\n          {{ \"enrollPasswordReset\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">\n          {{ \"resetPasswordEnrollmentWarning\" | i18n }}\n        </app-callout>\n        <app-user-verification [(ngModel)]=\"verification\" name=\"secret\"> </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"submit\" | i18n }}\n        </button>\n        <button\n          bitButton\n          buttonType=\"secondary\"\n          type=\"button\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span>\n            {{ \"cancel\" | i18n }}\n          </span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<ng-container *ngIf=\"filters && filters.length\">\n  <div *ngIf=\"headerInfo.showHeader\" class=\"filter-heading\">\n    <button\n      class=\"toggle-button\"\n      (click)=\"toggleCollapse(headerNode.node)\"\n      [attr.aria-expanded]=\"!isCollapsed(headerNode.node)\"\n      appA11yTitle=\"{{ 'toggleCollapse' | i18n }}: {{ headerNode.node.name | i18n }}\"\n      aria-controls=\"sub-filters\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        aria-hidden=\"true\"\n        [ngClass]=\"isCollapsed(headerNode.node) ? 'bwi-angle-right' : 'bwi-angle-down'\"\n      ></i>\n    </button>\n    <button\n      *ngIf=\"headerInfo.isSelectable\"\n      appA11yTitle=\"{{ isOrganizationFilter ? 'vault' : ('filter' | i18n) }}: {{\n        headerNode.node.name | i18n\n      }}\"\n      class=\"filter-button\"\n      (click)=\"onFilterSelect(headerNode)\"\n    >\n      <h3\n        [ngClass]=\"{\n          active: isAllVaultsSelected || isNodeSelected(headerNode)\n        }\"\n      >\n        &nbsp;{{ headerNode.node.name | i18n }}\n      </h3>\n    </button>\n    <h3 *ngIf=\"!headerInfo.isSelectable\" class=\"filter-title\">\n      &nbsp;{{ headerNode.node.name | i18n }}\n    </h3>\n\n    <button\n      *ngIf=\"showAddButton\"\n      (click)=\"onAdd()\"\n      class=\"text-muted ml-auto add-button\"\n      appA11yTitle=\"{{ addInfo.text | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <ul\n    id=\"{{ headerNode.node.name }}-filters\"\n    *ngIf=\"!isCollapsed(headerNode.node)\"\n    class=\"filter-options\"\n  >\n    <ng-template #recursiveFilters let-filters>\n      <li\n        *ngFor=\"let f of filters\"\n        [ngClass]=\"{\n          active: isNodeSelected(f)\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            *ngIf=\"f.children.length\"\n            appA11yTitle=\"{{ 'toggleCollapse' | i18n }}: {{ f.node.name }}\"\n            (click)=\"toggleCollapse(f.node)\"\n            [attr.aria-expanded]=\"!isCollapsed(f.node)\"\n            [attr.aria-controls]=\"f.node.name + '_children'\"\n            class=\"toggle-button\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(f.node),\n                'bwi-angle-down': !isCollapsed(f.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            class=\"filter-button\"\n            appA11yTitle=\"{{ isOrganizationFilter ? 'vault' : ('filter' | i18n) }}: {{\n              f.node.name\n            }}\"\n            [ngClass]=\"{ 'disabled-organization': isOrganizationFilter && !f.node.enabled }\"\n            (click)=\"onFilterSelect(f)\"\n          >\n            <i\n              *ngIf=\"f.children.length === 0\"\n              class=\"bwi bwi-fw {{ f.node.icon }}\"\n              aria-hidden=\"true\"\n            ></i>\n            &nbsp;{{ f.node.name }}\n          </button>\n          <span class=\"ml-auto\">\n            <button\n              *ngIf=\"editInfo && f.node.id\"\n              class=\"edit-button\"\n              (click)=\"onEdit(f)\"\n              appA11yTitle=\"{{ editInfo.text | i18n }}\"\n            >\n              <i class=\"bwi bwi-pencil bwi-fw\" aria-hidden=\"true\"></i>\n            </button>\n            <i\n              *ngIf=\"isOrganizationFilter && !f.node.enabled\"\n              class=\"org-options bwi bwi-fw bwi-exclamation-triangle text-danger\"\n              [attr.aria-label]=\"'organizationIsDisabled' | i18n\"\n              appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n            ></i\n            ><ng-container *ngIf=\"optionsInfo && !f.node.hideOptions\"\n              ><button [bitMenuTriggerFor]=\"optionsMenu\" class=\"filter-options-icon\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #optionsMenu>\n                <ng-container\n                  *ngComponentOutlet=\"optionsInfo.component; injector: createInjector(f.node)\"\n                ></ng-container>\n              </bit-menu>\n            </ng-container>\n          </span>\n        </span>\n        <ul\n          [id]=\"f.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"f.children.length && !isCollapsed(f.node)\"\n        >\n          <ng-container *ngTemplateOutlet=\"recursiveFilters; context: { $implicit: f.children }\">\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveFilters; context: { $implicit: filters }\"\n    ></ng-container>\n    <li class=\"filter-option\" *ngIf=\"showAddLink\">\n      <span class=\"filter-buttons\">\n        <a href=\"#\" routerLink=\"{{ addInfo.route }}\" class=\"filter-button\">\n          <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n          &nbsp;{{ addInfo.text | i18n }}\n        </a>\n      </span>\n    </li>\n  </ul>\n  <hr *ngIf=\"divider\" />\n</ng-container>\n","import { Component, InjectionToken, Injector, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject, TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\n\nimport { VaultFilterService } from \"../../services/abstractions/vault-filter.service\";\nimport { VaultFilterSection, VaultFilterType } from \"../models/vault-filter-section.type\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Component({\n  selector: \"app-filter-section\",\n  templateUrl: \"vault-filter-section.component.html\",\n})\nexport class VaultFilterSectionComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  @Input() activeFilter: VaultFilter;\n  @Input() section: VaultFilterSection;\n\n  data: TreeNode<VaultFilterType>;\n  collapsedFilterNodes: Set<string> = new Set();\n\n  private injectors = new Map<string, Injector>();\n\n  constructor(private vaultFilterService: VaultFilterService, private injector: Injector) {\n    this.vaultFilterService.collapsedFilterNodes$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((nodes) => {\n        this.collapsedFilterNodes = nodes;\n      });\n  }\n\n  ngOnInit() {\n    this.section?.data$?.pipe(takeUntil(this.destroy$)).subscribe((data) => {\n      this.data = data;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get headerNode() {\n    return this.data;\n  }\n\n  get headerInfo() {\n    return this.section.header;\n  }\n\n  get filters() {\n    return this.data?.children;\n  }\n\n  get isOrganizationFilter() {\n    return this.data.node instanceof Organization;\n  }\n\n  get isAllVaultsSelected() {\n    return this.isOrganizationFilter && !this.activeFilter.selectedOrganizationNode;\n  }\n\n  isNodeSelected(filterNode: TreeNode<VaultFilterType>) {\n    return (\n      this.activeFilter.organizationId === filterNode?.node.id ||\n      this.activeFilter.cipherTypeId === filterNode?.node.id ||\n      this.activeFilter.folderId === filterNode?.node.id ||\n      this.activeFilter.collectionId === filterNode?.node.id\n    );\n  }\n\n  async onFilterSelect(filterNode: TreeNode<VaultFilterType>) {\n    await this.section?.action(filterNode);\n  }\n\n  get editInfo() {\n    return this.section?.edit;\n  }\n\n  onEdit(filterNode: TreeNode<VaultFilterType>) {\n    this.section?.edit?.action(filterNode.node);\n  }\n\n  get addInfo() {\n    return this.section.add;\n  }\n\n  get showAddButton() {\n    return this.section.add && !this.section.add.route;\n  }\n\n  get showAddLink() {\n    return this.section.add && this.section.add.route;\n  }\n\n  async onAdd() {\n    this.section?.add?.action();\n  }\n\n  get optionsInfo() {\n    return this.section?.options;\n  }\n\n  get divider() {\n    return this.section?.divider;\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    if (this.collapsedFilterNodes.has(node.id)) {\n      this.collapsedFilterNodes.delete(node.id);\n    } else {\n      this.collapsedFilterNodes.add(node.id);\n    }\n    await this.vaultFilterService.setCollapsedFilterNodes(this.collapsedFilterNodes);\n  }\n\n  // an injector is necessary to pass data into a dynamic component\n  // here we are creating a new injector for each filter that has options\n  createInjector(data: VaultFilterType) {\n    let inject = this.injectors.get(data.id);\n    if (!inject) {\n      inject = Injector.create({\n        providers: [{ provide: OptionsInput, useValue: data }],\n        parent: this.injector,\n      });\n      this.injectors.set(data.id, inject);\n    }\n    return inject;\n  }\n}\nexport const OptionsInput = new InjectionToken<VaultFilterType>(\"OptionsInput\");\n","import { AfterContentInit, Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-link-sso\",\n  templateUrl: \"link-sso.component.html\",\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n  @Input() organization: Organization;\n  returnUri = \"/settings/organizations\";\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    authService: AuthService,\n    router: Router,\n    route: ActivatedRoute,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    this.returnUri = \"/settings/organizations\";\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngAfterContentInit() {\n    this.identifier = this.organization.identifier;\n  }\n}\n","<a\n  class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main tw-no-underline hover:tw-bg-secondary-100 hover:tw-no-underline focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n  href=\"#\"\n  appStopClick\n  (click)=\"submit(returnUri, true)\"\n>\n  <i class=\"bwi bwi-fw bwi-link\" aria-hidden=\"true\"></i>\n  {{ \"linkSso\" | i18n }}\n</a>\n","<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted tw-m-2\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<div\n  *ngIf=\"loaded\"\n  class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\"\n  [appApiAction]=\"actionPromise\"\n>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && !organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n    {{ \"enrollPasswordReset\" | i18n }}\n  </button>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n    {{ \"withdrawPasswordReset\" | i18n }}\n  </button>\n  <ng-container *ngIf=\"organization.useSso && organization.identifier\">\n    <button\n      *ngIf=\"organization.ssoBound; else linkSso\"\n      class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n      (click)=\"unlinkSso(organization)\"\n    >\n      <i class=\"bwi bwi-fw bwi-chain-broken\" aria-hidden=\"true\"></i>\n      {{ \"unlinkSso\" | i18n }}\n    </button>\n    <ng-template #linkSso>\n      <app-link-sso [organization]=\"organization\"> </app-link-sso>\n    </ng-template>\n  </ng-container>\n  <button\n    class=\"text-danger tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"leave(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n    {{ \"leave\" | i18n }}\n  </button>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { map, Subject, takeUntil } from \"rxjs\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\nimport { EnrollMasterPasswordReset } from \"../../../organizations/users/enroll-master-password-reset.component\";\nimport { OptionsInput } from \"../shared/components/vault-filter-section.component\";\nimport { OrganizationFilter } from \"../shared/models/vault-filter.type\";\n\n@Component({\n  selector: \"app-organization-options\",\n  templateUrl: \"organization-options.component.html\",\n})\nexport class OrganizationOptionsComponent implements OnInit, OnDestroy {\n  actionPromise: Promise<void | boolean>;\n  policies: Policy[];\n  loaded = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(OptionsInput) protected organization: OrganizationFilter,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private modalService: ModalService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService.policies$\n      .pipe(\n        map((policies) => policies.filter((policy) => policy.type === PolicyType.ResetPassword)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((policies) => {\n        this.policies = policies;\n        this.loaded = true;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  allowEnrollmentChanges(org: OrganizationFilter): boolean {\n    if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n      const policy = this.policies.find((p) => p.organizationId === org.id);\n      if (policy != null && policy.enabled) {\n        return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n      }\n    }\n\n    return false;\n  }\n\n  showEnrolledStatus(org: Organization): boolean {\n    return (\n      org.useResetPassword &&\n      org.resetPasswordEnrolled &&\n      this.policies.some((p) => p.organizationId === org.id && p.enabled)\n    );\n  }\n\n  async unlinkSso(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"unlinkSsoConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, \"Unlinked SSO\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async leave(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.organizationApiService.leave(org.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async toggleResetPasswordEnrollment(org: Organization) {\n    if (!this.organization.resetPasswordEnrolled) {\n      this.modalService.open(EnrollMasterPasswordReset, {\n        allowMultipleModals: true,\n        data: {\n          organization: org,\n        },\n      });\n    } else {\n      // Remove reset password\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = \"ignored\";\n      request.resetPasswordKey = null;\n      this.actionPromise = this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n        this.organization.id,\n        this.organization.userId,\n        request\n      );\n      try {\n        await this.actionPromise;\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"withdrawPasswordResetSuccess\")\n        );\n        this.syncService.fullSync(true);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n}\n","<div class=\"card vault-filters\">\n  <div class=\"container loading-spinner\" *ngIf=\"!isLoaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <div *ngIf=\"isLoaded\">\n    <div class=\"card-header d-flex\">\n      {{ \"filters\" | i18n }}\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/searching-vault/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"card-body\">\n      <input\n        type=\"search\"\n        placeholder=\"{{ searchPlaceholder | i18n }}\"\n        id=\"search\"\n        class=\"form-control\"\n        (input)=\"searchTextChanged($any($event.target).value)\"\n        autocomplete=\"off\"\n        appAutofocus\n      />\n      <ng-container *ngFor=\"let f of filtersList\">\n        <div class=\"filter\">\n          <app-filter-section [activeFilter]=\"activeFilter\" [section]=\"f\"> </app-filter-section>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { VaultFilterService } from \"../services/abstractions/vault-filter.service\";\nimport {\n  VaultFilterList,\n  VaultFilterSection,\n  VaultFilterType,\n} from \"../shared/models/vault-filter-section.type\";\nimport { VaultFilter } from \"../shared/models/vault-filter.model\";\nimport {\n  CipherStatus,\n  CipherTypeFilter,\n  CollectionFilter,\n  FolderFilter,\n  OrganizationFilter,\n} from \"../shared/models/vault-filter.type\";\n\nimport { OrganizationOptionsComponent } from \"./organization-options.component\";\n\n@Component({\n  selector: \"app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\nexport class VaultFilterComponent implements OnInit, OnDestroy {\n  filters?: VaultFilterList;\n  @Input() activeFilter: VaultFilter = new VaultFilter();\n  @Output() activeFilterChanged = new EventEmitter<VaultFilter>();\n  @Output() onSearchTextChanged = new EventEmitter<string>();\n  @Output() onAddFolder = new EventEmitter<never>();\n  @Output() onEditFolder = new EventEmitter<FolderFilter>();\n\n  isLoaded = false;\n  searchText = \"\";\n\n  protected destroy$: Subject<void> = new Subject<void>();\n\n  get filtersList() {\n    return this.filters ? Object.values(this.filters) : [];\n  }\n\n  get searchPlaceholder() {\n    if (this.activeFilter.isFavorites) {\n      return \"searchFavorites\";\n    }\n    if (this.activeFilter.isDeleted) {\n      return \"searchTrash\";\n    }\n    if (this.activeFilter.cipherType === CipherType.Login) {\n      return \"searchLogin\";\n    }\n    if (this.activeFilter.cipherType === CipherType.Card) {\n      return \"searchCard\";\n    }\n    if (this.activeFilter.cipherType === CipherType.Identity) {\n      return \"searchIdentity\";\n    }\n    if (this.activeFilter.cipherType === CipherType.SecureNote) {\n      return \"searchSecureNote\";\n    }\n    if (this.activeFilter.selectedFolderNode?.node) {\n      return \"searchFolder\";\n    }\n    if (this.activeFilter.selectedCollectionNode?.node) {\n      return \"searchCollection\";\n    }\n    if (this.activeFilter.organizationId === \"MyVault\") {\n      return \"searchMyVault\";\n    }\n    if (this.activeFilter.organizationId) {\n      return \"searchOrganization\";\n    }\n\n    return \"searchVault\";\n  }\n\n  constructor(\n    protected vaultFilterService: VaultFilterService,\n    protected policyService: PolicyService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {\n    this.loadSubscriptions();\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.filters = await this.buildAllFilters();\n    this.activeFilter.selectedCipherTypeNode =\n      (await this.getDefaultFilter()) as TreeNode<CipherTypeFilter>;\n    this.isLoaded = true;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  protected loadSubscriptions() {\n    this.vaultFilterService.filteredFolders$\n      .pipe(\n        switchMap(async (folders) => {\n          this.removeInvalidFolderSelection(folders);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    this.vaultFilterService.filteredCollections$\n      .pipe(\n        switchMap(async (collections) => {\n          this.removeInvalidCollectionSelection(collections);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  searchTextChanged(t: string) {\n    this.searchText = t;\n    this.onSearchTextChanged.emit(t);\n  }\n\n  protected applyVaultFilter(filter: VaultFilter) {\n    this.activeFilterChanged.emit(filter);\n  }\n\n  applyOrganizationFilter = async (orgNode: TreeNode<OrganizationFilter>): Promise<void> => {\n    if (!orgNode?.node.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n      return;\n    }\n    const filter = this.activeFilter;\n    filter.resetOrganization();\n    if (orgNode?.node.id !== \"AllVaults\") {\n      filter.selectedOrganizationNode = orgNode;\n    }\n    this.vaultFilterService.setOrganizationFilter(orgNode.node);\n    await this.vaultFilterService.expandOrgFilter();\n    this.applyVaultFilter(filter);\n  };\n\n  applyTypeFilter = async (filterNode: TreeNode<CipherTypeFilter>): Promise<void> => {\n    const filter = this.activeFilter;\n    filter.resetFilter();\n    filter.selectedCipherTypeNode = filterNode;\n    this.applyVaultFilter(filter);\n  };\n\n  applyFolderFilter = async (folderNode: TreeNode<FolderFilter>): Promise<void> => {\n    const filter = this.activeFilter;\n    filter.resetFilter();\n    filter.selectedFolderNode = folderNode;\n    this.applyVaultFilter(filter);\n  };\n\n  applyCollectionFilter = async (collectionNode: TreeNode<CollectionFilter>): Promise<void> => {\n    const filter = this.activeFilter;\n    filter.resetFilter();\n    filter.selectedCollectionNode = collectionNode;\n    this.applyVaultFilter(filter);\n  };\n\n  addFolder = async (): Promise<void> => {\n    this.onAddFolder.emit();\n  };\n\n  editFolder = async (folder: FolderFilter): Promise<void> => {\n    this.onEditFolder.emit(folder);\n  };\n\n  async getDefaultFilter(): Promise<TreeNode<VaultFilterType>> {\n    return await firstValueFrom(this.filters?.typeFilter.data$);\n  }\n\n  protected async removeInvalidFolderSelection(folders: FolderView[]) {\n    if (this.activeFilter.selectedFolderNode) {\n      if (!folders.some((f) => f.id === this.activeFilter.folderId)) {\n        const filter = this.activeFilter;\n        filter.resetFilter();\n        filter.selectedCipherTypeNode =\n          (await this.getDefaultFilter()) as TreeNode<CipherTypeFilter>;\n        this.applyVaultFilter(filter);\n      }\n    }\n  }\n\n  protected async removeInvalidCollectionSelection(collections: CollectionView[]) {\n    if (this.activeFilter.selectedCollectionNode) {\n      if (!collections.some((f) => f.id === this.activeFilter.collectionId)) {\n        const filter = this.activeFilter;\n        filter.resetFilter();\n        filter.selectedCipherTypeNode =\n          (await this.getDefaultFilter()) as TreeNode<CipherTypeFilter>;\n        this.applyVaultFilter(filter);\n      }\n    }\n  }\n\n  async buildAllFilters(): Promise<VaultFilterList> {\n    const builderFilter = {} as VaultFilterList;\n    builderFilter.organizationFilter = await this.addOrganizationFilter();\n    builderFilter.typeFilter = await this.addTypeFilter();\n    builderFilter.folderFilter = await this.addFolderFilter();\n    builderFilter.collectionFilter = await this.addCollectionFilter();\n    builderFilter.trashFilter = await this.addTrashFilter();\n    return builderFilter;\n  }\n\n  protected async addOrganizationFilter(): Promise<VaultFilterSection> {\n    const singleOrgPolicy = await this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n    const personalVaultPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.PersonalOwnership\n    );\n\n    const addAction = !singleOrgPolicy\n      ? { text: \"newOrganization\", route: \"/create-organization\" }\n      : null;\n\n    const orgFilterSection: VaultFilterSection = {\n      data$: this.vaultFilterService.organizationTree$,\n      header: {\n        showHeader: !(singleOrgPolicy && personalVaultPolicy),\n        isSelectable: true,\n      },\n      action: this.applyOrganizationFilter,\n      options: { component: OrganizationOptionsComponent },\n      add: addAction,\n      divider: true,\n    };\n\n    return orgFilterSection;\n  }\n\n  protected async addTypeFilter(excludeTypes: CipherStatus[] = []): Promise<VaultFilterSection> {\n    const allTypeFilters: CipherTypeFilter[] = [\n      {\n        id: \"favorites\",\n        name: this.i18nService.t(\"favorites\"),\n        type: \"favorites\",\n        icon: \"bwi-star\",\n      },\n      {\n        id: \"login\",\n        name: this.i18nService.t(\"typeLogin\"),\n        type: CipherType.Login,\n        icon: \"bwi-globe\",\n      },\n      {\n        id: \"card\",\n        name: this.i18nService.t(\"typeCard\"),\n        type: CipherType.Card,\n        icon: \"bwi-credit-card\",\n      },\n      {\n        id: \"identity\",\n        name: this.i18nService.t(\"typeIdentity\"),\n        type: CipherType.Identity,\n        icon: \"bwi-id-card\",\n      },\n      {\n        id: \"note\",\n        name: this.i18nService.t(\"typeSecureNote\"),\n        type: CipherType.SecureNote,\n        icon: \"bwi-sticky-note\",\n      },\n    ];\n\n    const typeFilterSection: VaultFilterSection = {\n      data$: this.vaultFilterService.buildTypeTree(\n        { id: \"AllItems\", name: \"allItems\", type: \"all\", icon: \"\" },\n        allTypeFilters.filter((f) => !excludeTypes.includes(f.type))\n      ),\n      header: {\n        showHeader: true,\n        isSelectable: true,\n      },\n      action: this.applyTypeFilter,\n    };\n    return typeFilterSection;\n  }\n\n  protected async addFolderFilter(): Promise<VaultFilterSection> {\n    const folderFilterSection: VaultFilterSection = {\n      data$: this.vaultFilterService.folderTree$,\n      header: {\n        showHeader: true,\n        isSelectable: false,\n      },\n      action: this.applyFolderFilter,\n      edit: {\n        text: \"editFolder\",\n        action: this.editFolder,\n      },\n      add: {\n        text: \"Add Folder\",\n        action: this.addFolder,\n      },\n    };\n    return folderFilterSection;\n  }\n\n  protected async addCollectionFilter(): Promise<VaultFilterSection> {\n    const collectionFilterSection: VaultFilterSection = {\n      data$: this.vaultFilterService.collectionTree$,\n      header: {\n        showHeader: true,\n        isSelectable: true,\n      },\n      action: this.applyCollectionFilter,\n    };\n    return collectionFilterSection;\n  }\n\n  protected async addTrashFilter(): Promise<VaultFilterSection> {\n    const trashFilterSection: VaultFilterSection = {\n      data$: this.vaultFilterService.buildTypeTree(\n        {\n          id: \"headTrash\",\n          name: \"HeadTrash\",\n          type: \"trash\",\n          icon: \"bwi-trash\",\n        },\n        [\n          {\n            id: \"trash\",\n            name: this.i18nService.t(\"trash\"),\n            type: \"trash\",\n            icon: \"bwi-trash\",\n          },\n        ]\n      ),\n      header: {\n        showHeader: false,\n        isSelectable: true,\n      },\n      action: this.applyTypeFilter,\n    };\n    return trashFilterSection;\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { firstValueFrom, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"../../../vault/vault-filter/components/vault-filter.component\";\nimport {\n  VaultFilterList,\n  VaultFilterType,\n} from \"../../../vault/vault-filter/shared/models/vault-filter-section.type\";\nimport { CollectionFilter } from \"../../../vault/vault-filter/shared/models/vault-filter.type\";\n\n@Component({\n  selector: \"app-organization-vault-filter\",\n  templateUrl: \"../../../vault/vault-filter/components/vault-filter.component.html\",\n})\nexport class VaultFilterComponent extends BaseVaultFilterComponent implements OnInit, OnDestroy {\n  @Input() set organization(value: Organization) {\n    if (value && value !== this._organization) {\n      this._organization = value;\n      this.vaultFilterService.setOrganizationFilter(this._organization);\n    }\n  }\n  _organization: Organization;\n  protected destroy$: Subject<void>;\n\n  async ngOnInit() {\n    this.filters = await this.buildAllFilters();\n    if (!this.activeFilter.selectedCipherTypeNode) {\n      this.activeFilter.resetFilter();\n      this.activeFilter.selectedCollectionNode =\n        (await this.getDefaultFilter()) as TreeNode<CollectionFilter>;\n    }\n    this.isLoaded = true;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  protected loadSubscriptions() {\n    this.vaultFilterService.filteredCollections$\n      .pipe(\n        switchMap(async (collections) => {\n          this.removeInvalidCollectionSelection(collections);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  protected async removeInvalidCollectionSelection(collections: CollectionView[]) {\n    if (this.activeFilter.selectedCollectionNode) {\n      if (!collections.some((f) => f.id === this.activeFilter.collectionId)) {\n        this.activeFilter.resetFilter();\n        this.activeFilter.selectedCollectionNode =\n          (await this.getDefaultFilter()) as TreeNode<CollectionFilter>;\n        this.applyVaultFilter(this.activeFilter);\n      }\n    }\n  }\n\n  async buildAllFilters(): Promise<VaultFilterList> {\n    const builderFilter = {} as VaultFilterList;\n    builderFilter.typeFilter = await this.addTypeFilter([\"favorites\"]);\n    builderFilter.collectionFilter = await this.addCollectionFilter();\n    builderFilter.trashFilter = await this.addTrashFilter();\n    return builderFilter;\n  }\n\n  async getDefaultFilter(): Promise<TreeNode<VaultFilterType>> {\n    return await firstValueFrom(this.filters?.collectionFilter.data$);\n  }\n}\n","export class CollectionBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","import { DialogConfig, DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherBulkDeleteRequest } from \"@bitwarden/common/models/request/cipher-bulk-delete.request\";\nimport { CollectionBulkDeleteRequest } from \"@bitwarden/common/models/request/collection-bulk-delete.request\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport interface BulkDeleteDialogParams {\n  cipherIds?: string[];\n  collectionIds?: string[];\n  permanent?: boolean;\n  organization?: Organization;\n}\n\nexport enum BulkDeleteDialogResult {\n  Deleted = \"deleted\",\n  Canceled = \"canceled\",\n}\n\n/**\n * Strongly typed helper to open a BulkDeleteDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport const openBulkDeleteDialog = (\n  dialogService: DialogService,\n  config: DialogConfig<BulkDeleteDialogParams>\n) => {\n  return dialogService.open<BulkDeleteDialogResult, BulkDeleteDialogParams>(\n    BulkDeleteDialogComponent,\n    config\n  );\n};\n\n@Component({\n  selector: \"vault-bulk-delete-dialog\",\n  templateUrl: \"bulk-delete-dialog.component.html\",\n})\nexport class BulkDeleteDialogComponent {\n  cipherIds: string[];\n  collectionIds: string[];\n  permanent = false;\n  organization: Organization;\n\n  constructor(\n    @Inject(DIALOG_DATA) params: BulkDeleteDialogParams,\n    private dialogRef: DialogRef<BulkDeleteDialogResult>,\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {\n    this.cipherIds = params.cipherIds ?? [];\n    this.collectionIds = params.collectionIds ?? [];\n    this.permanent = params.permanent;\n    this.organization = params.organization;\n  }\n\n  protected async cancel() {\n    this.close(BulkDeleteDialogResult.Canceled);\n  }\n\n  protected submit = async () => {\n    const deletePromises: Promise<void>[] = [];\n    if (this.cipherIds.length) {\n      if (!this.organization || !this.organization.canEditAnyCollection) {\n        deletePromises.push(this.deleteCiphers());\n      } else {\n        deletePromises.push(this.deleteCiphersAdmin());\n      }\n    }\n\n    if (this.collectionIds.length && this.organization) {\n      deletePromises.push(this.deleteCollections());\n    }\n\n    await Promise.all(deletePromises);\n\n    if (this.cipherIds.length) {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.permanent ? \"permanentlyDeletedItems\" : \"deletedItems\")\n      );\n    }\n    if (this.collectionIds.length) {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollections\")\n      );\n    }\n    this.close(BulkDeleteDialogResult.Deleted);\n  };\n\n  private async deleteCiphers(): Promise<any> {\n    if (this.permanent) {\n      await this.cipherService.deleteManyWithServer(this.cipherIds);\n    } else {\n      await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n    }\n  }\n\n  private async deleteCiphersAdmin(): Promise<any> {\n    const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n    if (this.permanent) {\n      return await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n    } else {\n      return await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n    }\n  }\n\n  private async deleteCollections(): Promise<any> {\n    if (!this.organization.canDeleteAssignedCollections) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"missingPermissions\")\n      );\n      return;\n    }\n    const deleteRequest = new CollectionBulkDeleteRequest(this.collectionIds, this.organization.id);\n    return await this.apiService.deleteManyCollections(deleteRequest);\n  }\n\n  private close(result: BulkDeleteDialogResult) {\n    this.dialogRef.close(result);\n  }\n}\n","<bit-simple-dialog>\n  <span bitDialogTitle>\n    {{ (permanent ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n  </span>\n  <span bitDialogContent>\n    <ng-container *ngIf=\"!permanent\">\n      <span *ngIf=\"cipherIds?.length\">\n        {{ \"deleteSelectedItemsDesc\" | i18n: cipherIds.length }}\n      </span>\n      <span *ngIf=\"collectionIds?.length\">\n        {{ \"deleteSelectedCollectionsDesc\" | i18n: collectionIds.length }}\n      </span>\n      {{ \"deleteSelectedConfirmation\" | i18n }}\n    </ng-container>\n    <ng-container *ngIf=\"permanent\">\n      {{ \"permanentlyDeleteSelectedItemsDesc\" | i18n: cipherIds.length }}\n    </ng-container>\n  </span>\n  <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n    <button bitButton type=\"submit\" buttonType=\"danger\" [bitAction]=\"submit\">\n      {{ (permanent ? \"permanentlyDelete\" : \"delete\") | i18n }}\n    </button>\n    <button bitButton type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n  </div>\n</bit-simple-dialog>\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Directive()\nexport class VaultItemsComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n  organization: Organization;\n  accessEvents = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n  private _searchText: string = null;\n  get searchText() {\n    return this._searchText;\n  }\n  set searchText(value: string) {\n    this._searchText = value;\n  }\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted ?? false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { DialogConfig, DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport interface BulkMoveDialogParams {\n  cipherIds?: string[];\n}\n\nexport enum BulkMoveDialogResult {\n  Moved = \"moved\",\n  Canceled = \"canceled\",\n}\n\n/**\n * Strongly typed helper to open a BulkMoveDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport const openBulkMoveDialog = (\n  dialogService: DialogService,\n  config: DialogConfig<BulkMoveDialogParams>\n) => {\n  return dialogService.open<BulkMoveDialogResult, BulkMoveDialogParams>(\n    BulkMoveDialogComponent,\n    config\n  );\n};\n\n@Component({\n  selector: \"vault-bulk-move-dialog\",\n  templateUrl: \"bulk-move-dialog.component.html\",\n})\nexport class BulkMoveDialogComponent implements OnInit {\n  cipherIds: string[] = [];\n\n  formGroup = this.formBuilder.group({\n    folderId: [\"\", [Validators.required]],\n  });\n  folders$: Observable<FolderView[]>;\n\n  constructor(\n    @Inject(DIALOG_DATA) params: BulkMoveDialogParams,\n    private dialogRef: DialogRef<BulkMoveDialogResult>,\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService,\n    private formBuilder: FormBuilder\n  ) {\n    this.cipherIds = params.cipherIds ?? [];\n  }\n\n  async ngOnInit() {\n    this.folders$ = this.folderService.folderViews$;\n    this.formGroup.patchValue({\n      folderId: (await firstValueFrom(this.folders$))[0].id,\n    });\n  }\n\n  protected cancel() {\n    this.close(BulkMoveDialogResult.Canceled);\n  }\n\n  protected submit = async () => {\n    if (this.formGroup.invalid) {\n      return;\n    }\n\n    await this.cipherService.moveManyWithServer(this.cipherIds, this.formGroup.value.folderId);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"movedItems\"));\n    this.close(BulkMoveDialogResult.Moved);\n  };\n\n  private close(result: BulkMoveDialogResult) {\n    this.dialogRef.close(result);\n  }\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\">\n  <bit-dialog dialogSize=\"small\">\n    <span bitDialogTitle>\n      {{ \"moveSelected\" | i18n }}\n    </span>\n    <span bitDialogContent>\n      <p>{{ \"moveSelectedItemsDesc\" | i18n: cipherIds.length }}</p>\n      <bit-form-field>\n        <bit-label for=\"folder\">{{ \"folder\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"folderId\">\n          <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n        </select>\n      </bit-form-field>\n    </span>\n    <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n      <button bitButton bitFormButton type=\"submit\" buttonType=\"primary\">\n        {{ \"save\" | i18n }}\n      </button>\n      <button bitButton bitFormButton type=\"button\" buttonType=\"secondary\" (click)=\"cancel()\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </div>\n  </bit-dialog>\n</form>\n","import { DialogConfig, DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport interface BulkRestoreDialogParams {\n  cipherIds: string[];\n}\n\nexport enum BulkRestoreDialogResult {\n  Restored = \"restored\",\n  Canceled = \"canceled\",\n}\n\n/**\n * Strongly typed helper to open a BulkRestoreDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport const openBulkRestoreDialog = (\n  dialogService: DialogService,\n  config: DialogConfig<BulkRestoreDialogParams>\n) => {\n  return dialogService.open<BulkRestoreDialogResult, BulkRestoreDialogParams>(\n    BulkRestoreDialogComponent,\n    config\n  );\n};\n\n@Component({\n  selector: \"vault-bulk-restore-dialog\",\n  templateUrl: \"bulk-restore-dialog.component.html\",\n})\nexport class BulkRestoreDialogComponent {\n  cipherIds: string[];\n\n  constructor(\n    @Inject(DIALOG_DATA) params: BulkRestoreDialogParams,\n    private dialogRef: DialogRef<BulkRestoreDialogResult>,\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {\n    this.cipherIds = params.cipherIds ?? [];\n  }\n\n  submit = async () => {\n    await this.cipherService.restoreManyWithServer(this.cipherIds);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItems\"));\n    this.close(BulkRestoreDialogResult.Restored);\n  };\n\n  protected cancel() {\n    this.close(BulkRestoreDialogResult.Canceled);\n  }\n\n  private close(result: BulkRestoreDialogResult) {\n    this.dialogRef.close(result);\n  }\n}\n","type CheckableBase = {\n  checked?: boolean;\n};\n\nexport type Checkable<T> = T & CheckableBase;\n\nexport function isChecked(item: CheckableBase): boolean {\n  return !!item.checked;\n}\n","<bit-simple-dialog>\n  <span bitDialogTitle>\n    {{ \"restoreSelected\" | i18n }}\n  </span>\n  <span bitDialogContent>\n    {{ \"restoreSelectedItemsDesc\" | i18n: cipherIds.length }}\n  </span>\n  <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n    <button bitButton type=\"submit\" buttonType=\"primary\" [bitAction]=\"submit\">\n      {{ \"restore\" | i18n }}\n    </button>\n    <button bitButton type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n  </div>\n</bit-simple-dialog>\n","import { DialogConfig, DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport interface BulkShareDialogParams {\n  ciphers: CipherView[];\n  organizationId?: string;\n}\n\nexport enum BulkShareDialogResult {\n  Shared = \"shared\",\n  Canceled = \"canceled\",\n}\n\n/**\n * Strongly typed helper to open a BulkShareDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport const openBulkShareDialog = (\n  dialogService: DialogService,\n  config: DialogConfig<BulkShareDialogParams>\n) => {\n  return dialogService.open<BulkShareDialogResult, BulkShareDialogParams>(\n    BulkShareDialogComponent,\n    config\n  );\n};\n\n@Component({\n  selector: \"vault-bulk-share-dialog\",\n  templateUrl: \"bulk-share-dialog.component.html\",\n})\nexport class BulkShareDialogComponent implements OnInit {\n  ciphers: CipherView[] = [];\n  organizationId: string;\n\n  nonShareableCount = 0;\n  collections: Checkable<CollectionView>[] = [];\n  organizations: Organization[] = [];\n  shareableCiphers: CipherView[] = [];\n\n  private writeableCollections: CollectionView[] = [];\n\n  constructor(\n    @Inject(DIALOG_DATA) params: BulkShareDialogParams,\n    private dialogRef: DialogRef<BulkShareDialogResult>,\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    this.ciphers = params.ciphers ?? [];\n    this.organizationId = params.organizationId;\n  }\n\n  async ngOnInit() {\n    this.shareableCiphers = this.ciphers.filter(\n      (c) => !c.hasOldAttachments && c.organizationId == null\n    );\n    this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n    this.organizations = await this.organizationService.getAll();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  filterCollections() {\n    this.selectAll(false);\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  submit = async () => {\n    const checkedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    try {\n      await this.cipherService.shareManyWithServer(\n        this.shareableCiphers,\n        this.organizationId,\n        checkedCollectionIds\n      );\n      const orgName =\n        this.organizations.find((o) => o.id === this.organizationId)?.name ??\n        this.i18nService.t(\"organization\");\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"movedItemsToOrg\", orgName)\n      );\n      this.close(BulkShareDialogResult.Shared);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  };\n\n  check(c: Checkable<CollectionView>, select?: boolean) {\n    c.checked = select == null ? !c.checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n\n  get canSave() {\n    if (\n      this.shareableCiphers != null &&\n      this.shareableCiphers.length > 0 &&\n      this.collections != null\n    ) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  protected cancel() {\n    this.close(BulkShareDialogResult.Canceled);\n  }\n\n  private close(result: BulkShareDialogResult) {\n    this.dialogRef.close(result);\n  }\n}\n","<bit-dialog>\n  <span bitDialogTitle>\n    {{ \"moveSelectedToOrg\" | i18n }}\n  </span>\n  <span bitDialogContent>\n    <p>{{ \"moveManyToOrgDesc\" | i18n }}</p>\n    <p>\n      {{\n        \"moveSelectedItemsCountDesc\"\n          | i18n: this.ciphers.length:shareableCiphers.length:nonShareableCount\n      }}\n    </p>\n    <bit-form-field>\n      <bit-label for=\"organization\">{{ \"organization\" | i18n }}</bit-label>\n      <select\n        bitInput\n        [(ngModel)]=\"organizationId\"\n        id=\"organization\"\n        (change)=\"filterCollections()\"\n      >\n        <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </bit-form-field>\n\n    <div class=\"d-flex\">\n      <label class=\"tw-mb-1 tw-block tw-font-semibold tw-text-main\">{{\n        \"collections\" | i18n\n      }}</label>\n      <div class=\"tw-ml-auto tw-flex tw-gap-2\" *ngIf=\"collections && collections.length\">\n        <button bitLink type=\"button\" (click)=\"selectAll(true)\" class=\"tw-px-2\">\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button bitLink type=\"button\" (click)=\"selectAll(false)\" class=\"tw-px-2\">\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <div *ngIf=\"!collections || !collections.length\">\n      {{ \"noCollectionsInList\" | i18n }}\n    </div>\n    <table\n      class=\"table table-hover table-list mb-0\"\n      *ngIf=\"collections && collections.length\"\n      id=\"collections\"\n    >\n      <tbody>\n        <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n          <td class=\"table-list-checkbox\">\n            <input\n              bitInput\n              type=\"checkbox\"\n              [(ngModel)]=\"c.checked\"\n              name=\"Collection[{{ i }}].Checked\"\n              attr.aria-label=\"Check {{ c.name }}\"\n              appStopProp\n            />\n          </td>\n          <td>\n            {{ c.name }}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </span>\n  <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n    <button bitButton type=\"submit\" buttonType=\"primary\" [bitAction]=\"submit\">\n      {{ \"save\" | i18n }}\n    </button>\n    <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</bit-dialog>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { AvatarUpdateService } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-org-badge\",\n  templateUrl: \"organization-name-badge.component.html\",\n})\nexport class OrganizationNameBadgeComponent implements OnInit {\n  @Input() organizationName: string;\n  @Input() profileName: string;\n\n  @Output() onOrganizationClicked = new EventEmitter<string>();\n\n  color: string;\n  textColor: string;\n  isMe: boolean;\n\n  constructor(\n    private i18nService: I18nService,\n    private avatarService: AvatarUpdateService,\n    private tokenService: TokenService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (this.organizationName == null || this.organizationName === \"\") {\n      this.organizationName = this.i18nService.t(\"me\");\n      this.isMe = true;\n    }\n    if (this.isMe) {\n      this.color = await this.avatarService.loadColorFromState();\n      if (this.color == null) {\n        const userName =\n          (await this.tokenService.getName()) ?? (await this.tokenService.getEmail());\n        this.color = Utils.stringToColor(userName.toUpperCase());\n      }\n    } else {\n      this.color = Utils.stringToColor(this.organizationName.toUpperCase());\n    }\n    this.textColor = Utils.pickTextColorBasedOnBgColor(this.color, 135, true) + \"!important\";\n  }\n\n  emitOnOrganizationClicked() {\n    this.onOrganizationClicked.emit();\n  }\n}\n","<button\n  bitBadge\n  [style.color]=\"textColor\"\n  [style.background-color]=\"color\"\n  appA11yTitle=\"{{ organizationName }}\"\n  (click)=\"emitOnOrganizationClicked()\"\n>\n  {{ organizationName | ellipsis: 13 }}\n</button>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\n\nimport { GroupView } from \"../../core\";\n\n@Component({\n  selector: \"app-group-badge\",\n  templateUrl: \"group-name-badge.component.html\",\n})\nexport class GroupNameBadgeComponent implements OnChanges {\n  @Input() selectedGroups: SelectionReadOnlyRequest[];\n  @Input() allGroups: GroupView[];\n\n  protected groupNames: string[] = [];\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnChanges() {\n    this.groupNames = this.selectedGroups\n      .map((g) => {\n        return this.allGroups.find((o) => o.id === g.id)?.name;\n      })\n      .sort(this.i18nService.collator.compare);\n  }\n}\n","<bit-badge-list [items]=\"groupNames\" [maxItems]=\"3\" badgeType=\"secondary\"></bit-badge-list>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { CollectionView } from \"@bitwarden/common/src/models/view/collection.view\";\n\n@Pipe({\n  name: \"collectionNameFromId\",\n  pure: true,\n})\nexport class GetCollectionNameFromIdPipe implements PipeTransform {\n  transform(value: string, collections: CollectionView[]) {\n    return collections.find((o) => o.id === value)?.name;\n  }\n}\n","<ng-container *ngFor=\"let c of shownCollections\">\n  <span bitBadge badgeType=\"secondary\">{{ c | collectionNameFromId: collections }}</span>\n</ng-container>\n<ng-container *ngIf=\"showXMore\">\n  <span bitBadge badgeType=\"secondary\">+ {{ xMoreCount }} more</span>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-collection-badge\",\n  templateUrl: \"collection-name-badge.component.html\",\n})\nexport class CollectionNameBadgeComponent {\n  @Input() collectionIds: string[];\n  @Input() collections: CollectionView[];\n\n  get shownCollections(): string[] {\n    return this.showXMore ? this.collectionIds.slice(0, 2) : this.collectionIds;\n  }\n\n  get showXMore(): boolean {\n    return this.collectionIds.length > 3;\n  }\n\n  get xMoreCount(): number {\n    return this.collectionIds.length - 2;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Pipe({\n  name: \"orgNameFromId\",\n  pure: true,\n})\nexport class GetOrgNameFromIdPipe implements PipeTransform {\n  transform(value: string, organizations: Organization[]) {\n    const orgName = organizations.find((o) => o.id === value)?.name;\n    return orgName;\n  }\n}\n","<ng-container>\n  <bit-table\n    *ngIf=\"filteredCiphers.length || filteredCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <ng-container header>\n      <tr>\n        <th bitCell class=\"tw-min-w-fit\" colspan=\"2\">\n          <input\n            class=\"tw-mr-2\"\n            type=\"checkbox\"\n            id=\"checkAll\"\n            (change)=\"checkAll($any($event.target).checked)\"\n            [(ngModel)]=\"isAllChecked\"\n          />\n          <label class=\"tw-mb-0 !tw-font-bold !tw-text-muted\" for=\"checkAll\">{{\n            \"all\" | i18n\n          }}</label>\n        </th>\n        <th bitCell class=\"tw-w-1/2\">{{ \"name\" | i18n }}</th>\n        <th bitCell class=\"tw-w-max\">\n          <ng-container *ngIf=\"!organization\">{{ \"owner\" | i18n }}</ng-container>\n          <ng-container *ngIf=\"organization\">\n            {{ (activeFilter.selectedCollectionNode ? \"groups\" : \"collections\") | i18n }}\n          </ng-container>\n        </th>\n        <th bitCell class=\"tw-min-w-fit tw-text-right\">\n          <button\n            [bitMenuTriggerFor]=\"headerMenu\"\n            bitIconButton=\"bwi-ellipsis-v\"\n            size=\"small\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          ></button>\n          <bit-menu #headerMenu>\n            <ng-container>\n              <button\n                class=\"dropdown-item\"\n                appStopClick\n                (click)=\"bulkMove()\"\n                *ngIf=\"!activeFilter.isDeleted && !organization\"\n              >\n                <i class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i>\n                {{ \"moveSelected\" | i18n }}\n              </button>\n              <button\n                class=\"dropdown-item\"\n                appStopClick\n                (click)=\"bulkShare()\"\n                *ngIf=\"!activeFilter.isDeleted && !organization\"\n              >\n                <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n                {{ \"moveSelectedToOrg\" | i18n }}\n              </button>\n              <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"activeFilter.isDeleted\">\n                <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n                {{ \"restoreSelected\" | i18n }}\n              </button>\n              <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{\n                  (activeFilter.isDeleted ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n\n                }}\n              </button>\n            </ng-container>\n          </bit-menu>\n        </th>\n      </tr>\n    </ng-container>\n    <ng-template body>\n      <tr\n        bitRow\n        *ngFor=\"let col of filteredCollections\"\n        (click)=\"navigateCollection(col)\"\n        class=\"tw-cursor-pointer\"\n        alignContent=\"middle\"\n      >\n        <td bitCell (click)=\"checkRow(col)\" appStopProp>\n          <input\n            *ngIf=\"canDeleteCollection(col.node)\"\n            class=\"tw-cursor-pointer\"\n            type=\"checkbox\"\n            [(ngModel)]=\"$any(col).checked\"\n            appStopProp\n          />\n        </td>\n        <td bitCell>\n          <div class=\"icon\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-fw bwi-lg bwi-collection\"></i>\n          </div>\n        </td>\n        <td bitCell>\n          <button\n            bitLink\n            class=\"tw-text-start\"\n            linkType=\"secondary\"\n            (click)=\"navigateCollection(col)\"\n          >\n            {{ col.node.name }}\n          </button>\n        </td>\n        <td bitCell>\n          <ng-container *ngIf=\"!organization\">\n            <app-org-badge\n              organizationName=\"{{ col.node.organizationId | orgNameFromId: organizations }}\"\n              [profileName]=\"profileName\"\n              (onOrganizationClicked)=\"onOrganizationClicked(col.node.organizationId)\"\n              appStopProp\n            >\n            </app-org-badge>\n          </ng-container>\n          <ng-container *ngIf=\"organization && activeFilter.selectedCollectionNode\">\n            <app-group-badge\n              *ngIf=\"col.node.groups\"\n              [selectedGroups]=\"col.node.groups\"\n              [allGroups]=\"groups\"\n            ></app-group-badge>\n          </ng-container>\n        </td>\n        <td bitCell class=\"tw-text-right\">\n          <button\n            *ngIf=\"canEditCollection(col.node) || canDeleteCollection(col.node)\"\n            [bitMenuTriggerFor]=\"collectionOptions\"\n            size=\"small\"\n            bitIconButton=\"bwi-ellipsis-v\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n            appStopProp\n          ></button>\n          <bit-menu #collectionOptions>\n            <button\n              *ngIf=\"canEditCollection(col.node)\"\n              bitMenuItem\n              (click)=\"editCollection(col.node, 'info')\"\n            >\n              <i class=\"bwi bwi-fw bwi-pencil-square\" aria-hidden=\"true\"></i>\n              {{ \"editInfo\" | i18n }}\n            </button>\n            <button\n              *ngIf=\"canEditCollection(col.node)\"\n              bitMenuItem\n              (click)=\"editCollection(col.node, 'access')\"\n            >\n              <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n              {{ \"access\" | i18n }}\n            </button>\n            <button\n              *ngIf=\"canDeleteCollection(col.node)\"\n              bitMenuItem\n              (click)=\"deleteCollection(col.node)\"\n            >\n              <span class=\"tw-text-danger\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </span>\n            </button>\n          </bit-menu>\n        </td>\n      </tr>\n      <tr\n        bitRow\n        *ngFor=\"let c of filteredCiphers\"\n        class=\"tw-cursor-pointer\"\n        (click)=\"selectCipher(c)\"\n        alignContent=\"middle\"\n      >\n        <td bitCell (click)=\"checkRow(c)\" appStopProp>\n          <input type=\"checkbox\" [(ngModel)]=\"$any(c).checked\" appStopProp />\n        </td>\n        <td bitCell>\n          <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n        </td>\n        <td bitCell class=\"tw-break-all\">\n          <button\n            bitLink\n            class=\"tw-text-start\"\n            [routerLink]=\"[]\"\n            [queryParams]=\"{ itemId: c.id }\"\n            queryParamsHandling=\"merge\"\n            title=\"{{ 'editItem' | i18n }}\"\n          >\n            {{ c.name }}\n          </button>\n          <ng-container *ngIf=\"c.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip\"\n              appStopProp\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            <ng-container *ngIf=\"showFixOldAttachments(c)\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-warning\"\n                appStopProp\n                title=\"{{ 'attachmentsNeedFix' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachmentsNeedFix\" | i18n }}</span>\n            </ng-container>\n          </ng-container>\n          <br />\n          <span class=\"tw-text-sm tw-text-muted\" appStopProp>{{ c.subTitle }}</span>\n        </td>\n        <td bitCell>\n          <ng-container *ngIf=\"!organization\">\n            <app-org-badge\n              organizationName=\"{{ c.organizationId | orgNameFromId: organizations }}\"\n              profileName=\"{{ profileName }}\"\n              (onOrganizationClicked)=\"onOrganizationClicked(c.organizationId)\"\n              appStopProp\n            >\n            </app-org-badge>\n          </ng-container>\n          <ng-container *ngIf=\"organization && !activeFilter.selectedCollectionNode\">\n            <app-collection-badge\n              *ngIf=\"c.collectionIds\"\n              [collectionIds]=\"c.collectionIds\"\n              [collections]=\"vaultFilterService.filteredCollections$ | async\"\n            ></app-collection-badge>\n          </ng-container>\n        </td>\n        <td bitCell class=\"tw-text-right\">\n          <button\n            [bitMenuTriggerFor]=\"cipherOptions\"\n            size=\"small\"\n            bitIconButton=\"bwi-ellipsis-v\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n            appStopProp\n          ></button>\n          <bit-menu #cipherOptions>\n            <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n              <button bitMenuItem (click)=\"copy(c, c.login.username, 'username', 'Username')\">\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyUsername\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.password, 'password', 'Password')\"\n                *ngIf=\"c.viewPassword\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyPassword\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\"\n                *ngIf=\"displayTotpCopyButton(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyVerificationCode\" | i18n }}\n              </button>\n              <button bitMenuItem *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\">\n                <i class=\"bwi bwi-fw bwi-share-square\" aria-hidden=\"true\"></i>\n                {{ \"launch\" | i18n }}\n              </button>\n            </ng-container>\n            <button bitMenuItem (click)=\"attachments(c)\">\n              <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n              {{ \"attachments\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n              (click)=\"clone(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-files\" aria-hidden=\"true\"></i>\n              {{ \"clone\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"!organization && !c.organizationId && !c.isDeleted\"\n              (click)=\"share(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n              {{ \"moveToOrganization\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"c.organizationId && !c.isDeleted\"\n              (click)=\"editCipherCollections(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n              {{ \"collections\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\">\n              <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n              {{ \"eventLogs\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"restore(c)\" *ngIf=\"c.isDeleted\">\n              <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n              {{ \"restore\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"deleteCipher(c)\">\n              <span class=\"tw-text-danger\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ (c.isDeleted ? \"permanentlyDelete\" : \"delete\") | i18n }}\n              </span>\n            </button>\n          </bit-menu>\n        </td>\n      </tr>\n    </ng-template>\n  </bit-table>\n  <div\n    class=\"tw-mt-6 tw-flex tw-h-full tw-flex-col tw-items-center tw-justify-start\"\n    *ngIf=\"\n      showMissingCollectionPermissionMessage ||\n      (!filteredCiphers.length && !filteredCollections.length)\n    \"\n  >\n    <ng-container *ngIf=\"!loaded\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n      <bit-icon [icon]=\"noItemIcon\" aria-hidden=\"true\"></bit-icon>\n      <ng-container *ngIf=\"showMissingCollectionPermissionMessage\">\n        <p>{{ \"noPermissionToViewAllCollectionItems\" | i18n }}</p>\n      </ng-container>\n      <ng-container *ngIf=\"!showMissingCollectionPermissionMessage\">\n        <p>{{ \"noItemsInList\" | i18n }}</p>\n        <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n          <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"addItem\" | i18n }}\n        </button>\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\nimport { lastValueFrom } from \"rxjs\";\n\nimport { VaultItemsComponent as BaseVaultItemsComponent } from \"@bitwarden/angular/components/vault-items.component\";\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { DialogService, Icons } from \"@bitwarden/components\";\n\nimport { CollectionAdminView, GroupView } from \"../organizations/core\";\n\nimport {\n  BulkDeleteDialogResult,\n  openBulkDeleteDialog,\n} from \"./bulk-action-dialogs/bulk-delete-dialog/bulk-delete-dialog.component\";\nimport {\n  BulkMoveDialogResult,\n  openBulkMoveDialog,\n} from \"./bulk-action-dialogs/bulk-move-dialog/bulk-move-dialog.component\";\nimport {\n  BulkRestoreDialogResult,\n  openBulkRestoreDialog,\n} from \"./bulk-action-dialogs/bulk-restore-dialog/bulk-restore-dialog.component\";\nimport {\n  BulkShareDialogResult,\n  openBulkShareDialog,\n} from \"./bulk-action-dialogs/bulk-share-dialog/bulk-share-dialog.component\";\nimport { VaultFilterService } from \"./vault-filter/services/abstractions/vault-filter.service\";\nimport { VaultFilter } from \"./vault-filter/shared/models/vault-filter.model\";\nimport { CollectionFilter } from \"./vault-filter/shared/models/vault-filter.type\";\n\nconst MaxCheckedCount = 500;\n\nexport type VaultItemRow = (CipherView | TreeNode<CollectionFilter>) & { checked?: boolean };\n\n@Component({\n  selector: \"app-vault-items\",\n  templateUrl: \"vault-items.component.html\",\n})\nexport class VaultItemsComponent extends BaseVaultItemsComponent implements OnDestroy {\n  @Input() showAddNew = true;\n  @Input() activeFilter: VaultFilter;\n  @Output() activeFilterChanged = new EventEmitter<VaultFilter>();\n  @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n  @Output() onShareClicked = new EventEmitter<CipherView>();\n  @Output() onEditCipherCollectionsClicked = new EventEmitter<CipherView>();\n  @Output() onCloneClicked = new EventEmitter<CipherView>();\n  @Output() onOrganzationBadgeClicked = new EventEmitter<string>();\n\n  cipherType = CipherType;\n  actionPromise: Promise<any>;\n  userHasPremiumAccess = false;\n  organizations: Organization[] = [];\n  profileName: string;\n  noItemIcon = Icons.Search;\n  groups: GroupView[] = [];\n\n  protected pageSizeLimit = 200;\n  protected isAllChecked = false;\n  protected didScroll = false;\n  protected currentPagedCiphersCount = 0;\n  protected currentPagedCollectionsCount = 0;\n  protected refreshing = false;\n\n  protected pagedCiphers: CipherView[] = [];\n  protected pagedCollections: TreeNode<CollectionFilter>[] = [];\n  protected searchedCollections: TreeNode<CollectionFilter>[] = [];\n\n  get collections(): TreeNode<CollectionFilter>[] {\n    return this.activeFilter?.selectedCollectionNode?.children ?? [];\n  }\n\n  get filteredCollections(): TreeNode<CollectionFilter>[] {\n    if (this.isPaging()) {\n      return this.pagedCollections;\n    }\n\n    if (this.searchService.isSearchable(this.searchText)) {\n      return this.searchedCollections;\n    }\n\n    return this.collections;\n  }\n\n  get filteredCiphers(): CipherView[] {\n    return this.isPaging() ? this.pagedCiphers : this.ciphers;\n  }\n\n  constructor(\n    searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected vaultFilterService: VaultFilterService,\n    protected cipherService: CipherService,\n    protected eventCollectionService: EventCollectionService,\n    protected totpService: TotpService,\n    protected stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService,\n    protected dialogService: DialogService,\n    protected logService: LogService,\n    private searchPipe: SearchPipe,\n    private organizationService: OrganizationService,\n    private tokenService: TokenService\n  ) {\n    super(searchService);\n  }\n\n  ngOnDestroy() {\n    this.checkAll(false);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.checkAll(false);\n    this.isAllChecked = false;\n    this.pagedCollections = [];\n    if (!this.refreshing && this.isPaging()) {\n      this.currentPagedCollectionsCount = 0;\n      this.currentPagedCiphersCount = 0;\n    }\n    await super.applyFilter(filter);\n  }\n\n  // load() is called after the page loads and the first sync has completed.\n  // Do not use ngOnInit() for anything that requires sync data.\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    await super.load(filter, deleted);\n    this.updateSearchedCollections(this.collections);\n    this.profileName = await this.tokenService.getName();\n    this.organizations = await this.organizationService.getAll();\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter, this.deleted);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  loadMore() {\n    // If we have less rows than the page size, we don't need to page anything\n    if (this.ciphers.length + (this.collections?.length || 0) <= this.pageSizeLimit) {\n      return;\n    }\n\n    let pageSpaceLeft = this.pageSizeLimit;\n    if (\n      this.refreshing &&\n      this.pagedCiphers.length + this.pagedCollections.length === 0 &&\n      this.currentPagedCiphersCount + this.currentPagedCollectionsCount > this.pageSizeLimit\n    ) {\n      // When we refresh, we want to load the previous amount of items, not restart the paging\n      pageSpaceLeft = this.currentPagedCiphersCount + this.currentPagedCollectionsCount;\n    }\n    // if there are still collections to show\n    if (this.collections?.length > this.pagedCollections.length) {\n      const collectionsToAdd = this.collections.slice(\n        this.pagedCollections.length,\n        this.currentPagedCollectionsCount + pageSpaceLeft\n      );\n      this.pagedCollections = this.pagedCollections.concat(collectionsToAdd);\n      // set the current count to the new count of paged collections\n      this.currentPagedCollectionsCount = this.pagedCollections.length;\n      // subtract the available page size by the amount of collections we just added, default to 0 if negative\n      pageSpaceLeft =\n        collectionsToAdd.length > pageSpaceLeft ? 0 : pageSpaceLeft - collectionsToAdd.length;\n    }\n    // if we have room left to show ciphers and we have ciphers to show\n    if (pageSpaceLeft > 0 && this.ciphers.length > this.pagedCiphers.length) {\n      this.pagedCiphers = this.pagedCiphers.concat(\n        this.ciphers.slice(this.pagedCiphers.length, this.currentPagedCiphersCount + pageSpaceLeft)\n      );\n      // set the current count to the new count of paged ciphers\n      this.currentPagedCiphersCount = this.pagedCiphers.length;\n    }\n    // set a flag if we actually loaded the second page while paging\n    this.didScroll = this.pagedCiphers.length + this.pagedCollections.length > this.pageSizeLimit;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    const totalRows =\n      this.ciphers.length + (this.activeFilter?.selectedCollectionNode?.children.length || 0);\n    return !searching && totalRows > this.pageSizeLimit;\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.pagedCiphers = [];\n    this.loadMore();\n  }\n\n  async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n    this.updateSearchedCollections(this.collections);\n    this.resetPaging();\n  }\n\n  launch(uri: string) {\n    this.platformUtilsService.launchUri(uri);\n  }\n\n  async attachments(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onAttachmentsClicked.emit(c);\n  }\n\n  async share(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onShareClicked.emit(c);\n  }\n\n  editCipherCollections(c: CipherView) {\n    this.onEditCipherCollectionsClicked.emit(c);\n  }\n\n  async clone(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onCloneClicked.emit(c);\n  }\n\n  async deleteCipher(c: CipherView): Promise<boolean> {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    if (this.actionPromise != null) {\n      return;\n    }\n    const permanent = c.isDeleted;\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        permanent ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(permanent ? \"permanentlyDeleteItem\" : \"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.deleteCipherWithServer(c.id, permanent);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(permanent ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkDelete() {\n    if (!(await this.repromptCipher())) {\n      return;\n    }\n\n    const selectedIds = this.selectedCipherIds;\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const dialog = openBulkDeleteDialog(this.dialogService, {\n      data: { permanent: this.deleted, cipherIds: selectedIds },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === BulkDeleteDialogResult.Deleted) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  async restore(c: CipherView): Promise<boolean> {\n    if (this.actionPromise != null || !c.isDeleted) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.cipherService.restoreWithServer(c.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkRestore() {\n    if (!(await this.repromptCipher())) {\n      return;\n    }\n\n    const selectedCipherIds = this.selectedCipherIds;\n    if (selectedCipherIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const dialog = openBulkRestoreDialog(this.dialogService, {\n      data: { cipherIds: selectedCipherIds },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === BulkRestoreDialogResult.Restored) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  async bulkShare() {\n    if (!(await this.repromptCipher())) {\n      return;\n    }\n\n    const selectedCiphers = this.selectedCiphers;\n    if (selectedCiphers.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const dialog = openBulkShareDialog(this.dialogService, { data: { ciphers: selectedCiphers } });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === BulkShareDialogResult.Shared) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  async bulkMove() {\n    if (!(await this.repromptCipher())) {\n      return;\n    }\n\n    const selectedCipherIds = this.selectedCipherIds;\n    if (selectedCipherIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const dialog = openBulkMoveDialog(this.dialogService, {\n      data: { cipherIds: selectedCipherIds },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === BulkMoveDialogResult.Moved) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.repromptCipher(cipher))\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledHiddenFieldVisible,\n        cipher.id\n      );\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventCollectionService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  navigateCollection(node: TreeNode<CollectionFilter>) {\n    const filter = this.activeFilter;\n    filter.selectedCollectionNode = node;\n    this.activeFilterChanged.emit(filter);\n  }\n\n  checkAll(select: boolean) {\n    if (select) {\n      this.checkAll(false);\n    }\n    const items: VaultItemRow[] = this.ciphers;\n    if (!items) {\n      return;\n    }\n\n    const selectCount = select && items.length > MaxCheckedCount ? MaxCheckedCount : items.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkRow(items[i], select);\n    }\n  }\n\n  checkRow(item: VaultItemRow, select?: boolean) {\n    // Collections can't be managed in end user vault\n    if (!(item instanceof CipherView)) {\n      return;\n    }\n    item.checked = select ?? !item.checked;\n  }\n\n  get selectedCiphers(): CipherView[] {\n    if (!this.ciphers) {\n      return [];\n    }\n    return this.ciphers.filter((c) => !!(c as VaultItemRow).checked);\n  }\n\n  get selectedCipherIds(): string[] {\n    return this.selectedCiphers.map((c) => c.id);\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  onOrganizationClicked(organizationId: string) {\n    this.onOrganzationBadgeClicked.emit(organizationId);\n  }\n\n  events(c: CipherView) {\n    // TODO: This should be removed but is needed since we reuse the same template\n  }\n\n  canDeleteCollection(c: CollectionAdminView): boolean {\n    // TODO: This should be removed but is needed since we reuse the same template\n    return false; // Always return false for non org vault\n  }\n\n  async deleteCollection(collection: CollectionView): Promise<void> {\n    // TODO: This should be removed but is needed since we reuse the same template\n  }\n\n  canEditCollection(c: CollectionAdminView): boolean {\n    // TODO: This should be removed but is needed since we reuse the same template\n    return false; // Always return false for non org vault\n  }\n\n  async editCollection(c: CollectionView, tab: \"info\" | \"access\"): Promise<void> {\n    // TODO: This should be removed but is needed since we reuse the same template\n  }\n\n  get showMissingCollectionPermissionMessage(): boolean {\n    // TODO: This should be removed but is needed since we reuse the same template\n    return false; // Always return false for non org vault\n  }\n\n  protected updateSearchedCollections(collections: TreeNode<CollectionFilter>[]) {\n    if (this.searchService.isSearchable(this.searchText)) {\n      this.searchedCollections = this.searchPipe.transform(\n        collections,\n        this.searchText,\n        (collection) => collection.node.name,\n        (collection) => collection.node.id\n      );\n    }\n  }\n\n  protected deleteCipherWithServer(id: string, permanent: boolean) {\n    return permanent\n      ? this.cipherService.deleteWithServer(id)\n      : this.cipherService.softDeleteWithServer(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return c.hasOldAttachments && c.organizationId == null;\n  }\n\n  protected async repromptCipher(c?: CipherView) {\n    if (c) {\n      return (\n        c.reprompt === CipherRepromptType.None ||\n        (await this.passwordRepromptService.showPasswordPrompt())\n      );\n    } else {\n      const selectedCiphers = this.selectedCiphers;\n      const notProtected = !selectedCiphers.find(\n        (cipher) => cipher.reprompt !== CipherRepromptType.None\n      );\n\n      return notProtected || (await this.passwordRepromptService.showPasswordPrompt());\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\nimport { lastValueFrom } from \"rxjs\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport {\n  BulkDeleteDialogResult,\n  openBulkDeleteDialog,\n} from \"../../vault/bulk-action-dialogs/bulk-delete-dialog/bulk-delete-dialog.component\";\nimport { VaultFilterService } from \"../../vault/vault-filter/services/abstractions/vault-filter.service\";\nimport { CollectionFilter } from \"../../vault/vault-filter/shared/models/vault-filter.type\";\nimport {\n  VaultItemRow,\n  VaultItemsComponent as BaseVaultItemsComponent,\n} from \"../../vault/vault-items.component\";\nimport { CollectionAdminView } from \"../core\";\nimport { GroupService } from \"../core/services/group/group.service\";\nimport {\n  CollectionDialogResult,\n  CollectionDialogTabType,\n  openCollectionDialog,\n} from \"../shared/components/collection-dialog/collection-dialog.component\";\n\nconst MaxCheckedCount = 500;\n\n@Component({\n  selector: \"app-org-vault-items\",\n  templateUrl: \"../../vault/vault-items.component.html\",\n})\nexport class VaultItemsComponent extends BaseVaultItemsComponent implements OnDestroy {\n  @Input() set initOrganization(value: Organization) {\n    this.organization = value;\n    this.changeOrganization();\n  }\n  @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n  protected allCiphers: CipherView[] = [];\n\n  constructor(\n    searchService: SearchService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cipherService: CipherService,\n    vaultFilterService: VaultFilterService,\n    eventCollectionService: EventCollectionService,\n    totpService: TotpService,\n    passwordRepromptService: PasswordRepromptService,\n    dialogService: DialogService,\n    logService: LogService,\n    stateService: StateService,\n    organizationService: OrganizationService,\n    tokenService: TokenService,\n    searchPipe: SearchPipe,\n    protected groupService: GroupService,\n    private apiService: ApiService\n  ) {\n    super(\n      searchService,\n      i18nService,\n      platformUtilsService,\n      vaultFilterService,\n      cipherService,\n      eventCollectionService,\n      totpService,\n      stateService,\n      passwordRepromptService,\n      dialogService,\n      logService,\n      searchPipe,\n      organizationService,\n      tokenService\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n  async changeOrganization() {\n    this.groups = await this.groupService.getAll(this.organization?.id);\n    await this.loadCiphers();\n    await this.reload(this.activeFilter.buildFilter());\n  }\n\n  async loadCiphers() {\n    if (this.organization?.canEditAnyCollection) {\n      this.accessEvents = this.organization?.useEvents;\n      this.allCiphers = await this.cipherService.getAllFromApiForOrganization(\n        this.organization?.id\n      );\n    } else {\n      this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(\n        (c) => c.organizationId === this.organization?.id\n      );\n    }\n    await this.searchService.indexCiphers(this.organization?.id, this.allCiphers);\n  }\n\n  async refreshCollections(): Promise<void> {\n    await this.vaultFilterService.reloadCollections();\n    if (this.activeFilter.selectedCollectionNode) {\n      this.activeFilter.selectedCollectionNode =\n        await this.vaultFilterService.getCollectionNodeFromTree(\n          this.activeFilter.selectedCollectionNode.node.id\n        );\n    }\n  }\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted ?? false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async refresh() {\n    await this.loadCiphers();\n    await this.refreshCollections();\n    super.refresh();\n  }\n\n  async search(timeout: number = null) {\n    await super.search(timeout, this.allCiphers);\n  }\n\n  events(c: CipherView) {\n    this.onEventsClicked.emit(c);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return this.organization?.canEditAnyCollection && c.hasOldAttachments;\n  }\n\n  checkAll(select: boolean) {\n    if (select) {\n      this.checkAll(false);\n    }\n\n    const items: VaultItemRow[] = [...this.collections, ...this.ciphers];\n    if (!items.length) {\n      return;\n    }\n\n    const selectCount = select && items.length > MaxCheckedCount ? MaxCheckedCount : items.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkRow(items[i], select);\n    }\n  }\n\n  checkRow(item: VaultItemRow, select?: boolean) {\n    if (item instanceof TreeNode && item.node.id == null) {\n      return;\n    }\n\n    // Do not allow checking a collection we cannot delete\n    if (item instanceof TreeNode && !this.canDeleteCollection(item.node)) {\n      return;\n    }\n\n    item.checked = select ?? !item.checked;\n  }\n\n  get selectedCollections(): TreeNode<CollectionFilter>[] {\n    if (!this.collections) {\n      return [];\n    }\n    return this.collections.filter((c) => !!(c as VaultItemRow).checked);\n  }\n\n  get selectedCollectionIds(): string[] {\n    return this.selectedCollections.map((c) => c.node.id);\n  }\n\n  canEditCollection(c: CollectionAdminView): boolean {\n    // Only edit collections if we're in the org vault and not editing \"Unassigned\"\n    if (this.organization === undefined || c.id === null) {\n      return false;\n    }\n\n    // Otherwise, check if we can edit the specified collection\n    return (\n      this.organization.canEditAnyCollection ||\n      (this.organization.canEditAssignedCollections && c.assigned)\n    );\n  }\n\n  async editCollection(c: CollectionView, tab: \"info\" | \"access\"): Promise<void> {\n    const tabType = tab == \"info\" ? CollectionDialogTabType.Info : CollectionDialogTabType.Access;\n\n    const dialog = openCollectionDialog(this.dialogService, {\n      data: { collectionId: c?.id, organizationId: this.organization?.id, initialTab: tabType },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === CollectionDialogResult.Saved || result === CollectionDialogResult.Deleted) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  get showMissingCollectionPermissionMessage(): boolean {\n    // Not filtering by collections, so no need to show message\n    if (this.activeFilter.selectedCollectionNode == null) {\n      return false;\n    }\n\n    // Filtering by all collections, so no need to show message\n    if (this.activeFilter.selectedCollectionNode.node.id == \"AllCollections\") {\n      return false;\n    }\n\n    // Filtering by a collection, so show message if user is not assigned\n    return !this.activeFilter.selectedCollectionNode.node.assigned && !this.organization.isAdmin;\n  }\n\n  canDeleteCollection(c: CollectionAdminView): boolean {\n    // Only delete collections if we're in the org vault and not deleting \"Unassigned\"\n    if (this.organization === undefined || c.id === null) {\n      return false;\n    }\n\n    // Otherwise, check if we can delete the specified collection\n    return (\n      this.organization?.canDeleteAnyCollection ||\n      (this.organization?.canDeleteAssignedCollections && c.assigned)\n    );\n  }\n\n  async deleteCollection(collection: CollectionView): Promise<void> {\n    if (!this.organization.canDeleteAssignedCollections) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"missingPermissions\")\n      );\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    try {\n      this.actionPromise = this.apiService.deleteCollection(this.organization?.id, collection.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      await this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async bulkDelete() {\n    if (!(await this.repromptCipher())) {\n      return;\n    }\n\n    const selectedCipherIds = this.selectedCipherIds;\n    const selectedCollectionIds = this.deleted ? null : this.selectedCollectionIds;\n\n    if (!selectedCipherIds?.length && !selectedCollectionIds?.length) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const dialog = openBulkDeleteDialog(this.dialogService, {\n      data: {\n        permanent: this.deleted,\n        cipherIds: selectedCipherIds,\n        collectionIds: selectedCollectionIds,\n        organization: this.organization,\n      },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === BulkDeleteDialogResult.Deleted) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  protected deleteCipherWithServer(id: string, permanent: boolean) {\n    if (!this.organization?.canEditAnyCollection) {\n      return super.deleteCipherWithServer(id, this.deleted);\n    }\n    return permanent\n      ? this.apiService.deleteCipherAdmin(id)\n      : this.apiService.putDeleteCipherAdmin(id);\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-organization-vault-filter\n              #vaultFilter\n              [organization]=\"organization\"\n              [activeFilter]=\"activeFilter\"\n              (activeFilterChanged)=\"applyVaultFilter($event)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-organization-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <bit-breadcrumbs *ngIf=\"breadcrumbs.length > 0\">\n        <bit-breadcrumb\n          *ngFor=\"let collection of breadcrumbs; let first = first\"\n          [icon]=\"first ? undefined : 'bwi-collection'\"\n          (click)=\"applyCollectionFilter(collection)\"\n        >\n          <!-- First node in the tree contains a translation key. The rest come from user input. -->\n          <ng-container *ngIf=\"first\">{{ collection.node.name | i18n }}</ng-container>\n          <ng-container *ngIf=\"!first\">{{ collection.node.name }}</ng-container>\n        </bit-breadcrumb>\n      </bit-breadcrumbs>\n      <div class=\"tw-mb-4 tw-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"vaultItemsComponent.actionPromise\">\n            <ng-container *ngIf=\"$any(actionSpinner).loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div *ngIf=\"!activeFilter.isDeleted\" class=\"ml-auto d-flex\">\n          <div *ngIf=\"organization.canCreateNewCollections\" class=\"dropdown mr-2\" appListDropdown>\n            <button\n              bitButton\n              buttonType=\"primary\"\n              type=\"button\"\n              [bitMenuTriggerFor]=\"addOptions\"\n              id=\"newItemDropdown\"\n              appA11yTitle=\"{{ 'new' | i18n }}\"\n            >\n              {{ \"new\" | i18n }}<i class=\"bwi bwi-angle-down tw-ml-2\" aria-hidden=\"true\"></i>\n            </button>\n            <bit-menu #addOptions aria-labelledby=\"newItemDropdown\">\n              <button type=\"button\" bitMenuItem (click)=\"addCipher()\">\n                <i class=\"bwi bwi-fw bwi-globe\" aria-hidden=\"true\"></i>\n                {{ \"item\" | i18n }}\n              </button>\n              <button type=\"button\" bitMenuItem (click)=\"addCollection()\">\n                <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n                {{ \"collection\" | i18n }}\n              </button>\n            </bit-menu>\n          </div>\n          <button\n            *ngIf=\"!organization?.canCreateNewCollections\"\n            type=\"button\"\n            bitButton\n            buttonType=\"primary\"\n            (click)=\"addCipher()\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"newItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout\n        type=\"warning\"\n        *ngIf=\"activeFilter.isDeleted\"\n        icon=\"bwi bwi-exclamation-triangle\"\n      >\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-org-vault-items\n        [activeFilter]=\"activeFilter\"\n        [initOrganization]=\"organization\"\n        (activeFilterChanged)=\"applyVaultFilter($event)\"\n        (onCipherClicked)=\"navigateToCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onEditCipherCollectionsClicked)=\"editCipherCollections($event)\"\n        (onEventsClicked)=\"viewEvents($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-org-vault-items>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { combineLatest, firstValueFrom, lastValueFrom, Subject } from \"rxjs\";\nimport { first, switchMap, takeUntil } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport {\n  DialogService,\n  SimpleDialogCloseType,\n  SimpleDialogOptions,\n  SimpleDialogType,\n} from \"@bitwarden/components\";\n\nimport { VaultFilterService } from \"../../vault/vault-filter/services/abstractions/vault-filter.service\";\nimport { VaultFilter } from \"../../vault/vault-filter/shared/models/vault-filter.model\";\nimport { CollectionFilter } from \"../../vault/vault-filter/shared/models/vault-filter.type\";\nimport { CollectionAdminService } from \"../core\";\nimport { EntityEventsComponent } from \"../manage/entity-events.component\";\nimport {\n  CollectionDialogResult,\n  openCollectionDialog,\n} from \"../shared/components/collection-dialog\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\n\nconst BroadcasterSubscriptionId = \"OrgVaultComponent\";\n\n@Component({\n  selector: \"app-org-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true })\n  vaultFilterComponent: VaultFilterComponent;\n  @ViewChild(VaultItemsComponent, { static: true }) vaultItemsComponent: VaultItemsComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n\n  organization: Organization;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    protected vaultFilterService: VaultFilterService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private dialogService: DialogService,\n    private messagingService: MessagingService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService,\n    private collectionAdminService: CollectionAdminService\n  ) {}\n\n  async ngOnInit() {\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n\n    this.route.parent.params.pipe(takeUntil(this.destroy$)).subscribe((params) => {\n      this.organization = this.organizationService.get(params.organizationId);\n    });\n\n    this.route.queryParams.pipe(first(), takeUntil(this.destroy$)).subscribe((qParams) => {\n      this.vaultItemsComponent.searchText = this.vaultFilterComponent.searchText = qParams.search;\n    });\n\n    // verifies that the organization has been set\n    combineLatest([this.route.queryParams, this.route.parent.params])\n      .pipe(\n        switchMap(async ([qParams, params]) => {\n          const cipherId = getCipherIdFromParams(qParams);\n          if (!cipherId) {\n            return;\n          }\n          if (\n            // Handle users with implicit collection access since they use the admin endpoint\n            this.organization.canUseAdminCollections ||\n            (await this.cipherService.get(cipherId)) != null\n          ) {\n            this.editCipherId(cipherId);\n          } else {\n            this.platformUtilsService.showToast(\n              \"error\",\n              this.i18nService.t(\"errorOccurred\"),\n              this.i18nService.t(\"unknownCipher\")\n            );\n            this.router.navigate([], {\n              queryParams: { cipherId: null, itemId: null },\n              queryParamsHandling: \"merge\",\n            });\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    if (!this.organization.canUseAdminCollections) {\n      this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n        this.ngZone.run(async () => {\n          switch (message.command) {\n            case \"syncCompleted\":\n              if (message.successfully) {\n                await Promise.all([\n                  this.vaultFilterService.reloadCollections(),\n                  this.vaultItemsComponent.refresh(),\n                ]);\n                this.changeDetectorRef.detectChanges();\n              }\n              break;\n          }\n        });\n      });\n      await this.syncService.fullSync(false);\n    }\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async applyVaultFilter(filter: VaultFilter) {\n    this.activeFilter = filter;\n    this.vaultItemsComponent.showAddNew = !this.activeFilter.isDeleted;\n    await this.vaultItemsComponent.reload(\n      this.activeFilter.buildFilter(),\n      this.activeFilter.isDeleted\n    );\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.vaultItemsComponent.searchText = searchText;\n    this.vaultItemsComponent.search(200);\n  }\n\n  private showFreeOrgUpgradeDialog(): void {\n    const orgUpgradeSimpleDialogOpts: SimpleDialogOptions = {\n      title: this.i18nService.t(\"upgradeOrganization\"),\n      content: this.i18nService.t(\n        this.organization.canManageBilling\n          ? \"freeOrgMaxCollectionReachedManageBilling\"\n          : \"freeOrgMaxCollectionReachedNoManageBilling\",\n        this.organization.maxCollections\n      ),\n      type: SimpleDialogType.PRIMARY,\n    };\n\n    if (this.organization.canManageBilling) {\n      orgUpgradeSimpleDialogOpts.acceptButtonText = this.i18nService.t(\"upgrade\");\n    } else {\n      orgUpgradeSimpleDialogOpts.acceptButtonText = this.i18nService.t(\"ok\");\n      orgUpgradeSimpleDialogOpts.cancelButtonText = null; // hide secondary btn\n    }\n\n    const simpleDialog = this.dialogService.openSimpleDialog(orgUpgradeSimpleDialogOpts);\n\n    firstValueFrom(simpleDialog.closed).then((result: SimpleDialogCloseType | undefined) => {\n      if (!result) {\n        return;\n      }\n\n      if (result == SimpleDialogCloseType.ACCEPT && this.organization.canManageBilling) {\n        this.router.navigate([\"/organizations\", this.organization.id, \"billing\", \"subscription\"], {\n          queryParams: { upgrade: true },\n        });\n      }\n    });\n  }\n\n  async addCollection() {\n    if (this.organization.planProductType === ProductType.Free) {\n      const collections = await this.collectionAdminService.getAll(this.organization.id);\n      if (collections.length === this.organization.maxCollections) {\n        this.showFreeOrgUpgradeDialog();\n        return;\n      }\n    }\n\n    const dialog = openCollectionDialog(this.dialogService, {\n      data: {\n        organizationId: this.organization?.id,\n        parentCollectionId: this.activeFilter.collectionId,\n      },\n    });\n    const result = await lastValueFrom(dialog.closed);\n    if (result === CollectionDialogResult.Saved || result === CollectionDialogResult.Deleted) {\n      this.vaultItemsComponent.actionPromise = this.vaultItemsComponent.refresh();\n      await this.vaultItemsComponent.actionPromise;\n      this.vaultItemsComponent.actionPromise = null;\n    }\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n      this.messagingService.send(\"upgradeOrganization\", { organizationId: cipher.organizationId });\n      return;\n    }\n\n    let madeAttachmentChanges = false;\n\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.vaultItemsComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const currCollections = await firstValueFrom(this.vaultFilterService.filteredCollections$);\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.collectionIds = cipher.collectionIds;\n        comp.collections = currCollections.filter((c) => !c.readOnly && c.id != null);\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.organizationId = this.organization.id;\n    component.type = this.activeFilter.cipherType;\n    component.collections = (\n      await firstValueFrom(this.vaultFilterService.filteredCollections$)\n    ).filter((c) => !c.readOnly && c.id != null);\n    if (this.activeFilter.collectionId) {\n      component.collectionIds = [this.activeFilter.collectionId];\n    }\n  }\n\n  async navigateToCipher(cipher: CipherView) {\n    this.go({ itemId: cipher?.id });\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipherId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n    component.organizationId = this.organization.id;\n    component.collections = (\n      await firstValueFrom(this.vaultFilterService.filteredCollections$)\n    ).filter((c) => !c.readOnly && c.id != null);\n    component.collectionIds = cipher.collectionIds;\n  }\n\n  async viewEvents(cipher: CipherView) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = cipher.name;\n      comp.organizationId = this.organization.id;\n      comp.entityId = cipher.id;\n      comp.showUser = true;\n      comp.entity = \"cipher\";\n    });\n  }\n\n  get breadcrumbs(): TreeNode<CollectionFilter>[] {\n    if (!this.activeFilter.selectedCollectionNode) {\n      return [];\n    }\n\n    const collections = [this.activeFilter.selectedCollectionNode];\n    while (collections[collections.length - 1].parent != undefined) {\n      collections.push(collections[collections.length - 1].parent);\n    }\n\n    return collections.map((c) => c).reverse();\n  }\n\n  protected applyCollectionFilter(collection: TreeNode<CollectionFilter>) {\n    const filter = this.activeFilter;\n    filter.resetFilter();\n    filter.selectedCollectionNode = collection;\n    this.applyVaultFilter(filter);\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        type: this.activeFilter.cipherType,\n        collectionId: this.activeFilter.collectionId,\n        deleted: this.activeFilter.isDeleted || null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { canAccessVaultTab } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\n\nimport { OrganizationPermissionsGuard } from \"../guards/org-permissions.guard\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: { titleId: \"vaults\", organizationPermissions: canAccessVaultTab },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { BreadcrumbsModule } from \"@bitwarden/components\";\n\nimport { LooseComponentsModule } from \"../../shared/loose-components.module\";\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { OrganizationBadgeModule } from \"../../vault/organization-badge/organization-badge.module\";\nimport { PipesModule } from \"../../vault/pipes/pipes.module\";\n\nimport { CollectionBadgeModule } from \"./collection-badge/collection-badge.module\";\nimport { GroupBadgeModule } from \"./group-badge/group-badge.module\";\nimport { VaultFilterModule } from \"./vault-filter/vault-filter.module\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [\n    VaultRoutingModule,\n    VaultFilterModule,\n    SharedModule,\n    LooseComponentsModule,\n    GroupBadgeModule,\n    CollectionBadgeModule,\n    OrganizationBadgeModule,\n    PipesModule,\n    BreadcrumbsModule,\n  ],\n  declarations: [VaultComponent, VaultItemsComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport {\n  canAccessOrgAdmin,\n  canAccessGroupsTab,\n  canAccessMembersTab,\n  canAccessVaultTab,\n  canAccessReportingTab,\n  canAccessSettingsTab,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"./guards/org-permissions.guard\";\nimport { OrganizationRedirectGuard } from \"./guards/org-redirect.guard\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { CollectionsComponent } from \"./manage/collections.component\";\nimport { GroupsComponent } from \"./manage/groups.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \":organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    data: {\n      organizationPermissions: canAccessOrgAdmin,\n    },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        canActivate: [OrganizationRedirectGuard],\n        data: {\n          autoRedirectCallback: getOrganizationRoute,\n        },\n        children: [], // This is required to make the auto redirect work, },\n      },\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      {\n        path: \"settings\",\n        loadChildren: () => import(\"./settings\").then((m) => m.OrganizationSettingsModule),\n      },\n      {\n        path: \"members\",\n        loadChildren: () => import(\"./members\").then((m) => m.MembersModule),\n      },\n      {\n        path: \"groups\",\n        component: GroupsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          titleId: \"groups\",\n          organizationPermissions: canAccessGroupsTab,\n        },\n      },\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        children: [\n          {\n            path: \"collections\",\n            component: CollectionsComponent,\n            data: {\n              titleId: \"collections\",\n            },\n          },\n        ],\n      },\n      {\n        path: \"reporting\",\n        loadChildren: () =>\n          import(\"./reporting/organization-reporting.module\").then(\n            (m) => m.OrganizationReportingModule\n          ),\n      },\n      {\n        path: \"billing\",\n        loadChildren: () =>\n          import(\"./billing/organization-billing.module\").then((m) => m.OrganizationBillingModule),\n      },\n    ],\n  },\n];\n\nfunction getOrganizationRoute(organization: Organization): string {\n  if (canAccessVaultTab(organization)) {\n    return \"vault\";\n  }\n  if (canAccessMembersTab(organization)) {\n    return \"members\";\n  }\n  if (canAccessGroupsTab(organization)) {\n    return \"groups\";\n  }\n  if (canAccessReportingTab(organization)) {\n    return \"reporting\";\n  }\n  if (canAccessSettingsTab(organization)) {\n    return \"settings\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { CoreOrganizationModule } from \"./core\";\nimport { GroupAddEditComponent } from \"./manage/group-add-edit.component\";\nimport { GroupsComponent } from \"./manage/groups.component\";\nimport { OrganizationsRoutingModule } from \"./organization-routing.module\";\nimport { SharedOrganizationModule } from \"./shared\";\nimport { AccessSelectorModule } from \"./shared/components/access-selector\";\n\n@NgModule({\n  imports: [\n    SharedOrganizationModule,\n    AccessSelectorModule,\n    CoreOrganizationModule,\n    OrganizationsRoutingModule,\n  ],\n  declarations: [GroupsComponent, GroupAddEditComponent],\n})\nexport class OrganizationModule {}\n","export enum PlanSponsorshipType {\n  FamiliesForEnterprise = 0,\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"../../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-family-sponsorship\",\n  templateUrl: \"accept-family-sponsorship.component.html\",\n})\nexport class AcceptFamilySponsorshipComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/setup/families-for-enterprise\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    if (!qParams.register) {\n      this.router.navigate([\"/login\"], { queryParams: { email: qParams.email } });\n    } else {\n      this.router.navigate([\"/register\"], { queryParams: { email: qParams.email } });\n    }\n  }\n}\n","import { PlanSponsorshipType } from \"../../../enums/planSponsorshipType\";\n\nexport class OrganizationSponsorshipRedeemRequest {\n  planSponsorshipType: PlanSponsorshipType;\n  sponsoredOrganizationId: string;\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"sponsoredFamiliesOffer\" | i18n }}</h1>\n  </div>\n  <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\">\n    <span>{{ \"badToken\" | i18n }}</span>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"!loading && !badToken\"\n  >\n    <p>\n      <span>{{ \"acceptBitwardenFamiliesHelp\" | i18n }}</span>\n    </p>\n    <div class=\"form-group col-6\">\n      <label for=\"availableSponsorshipOrg\">{{ \"sponsoredFamiliesSelectOffer\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedFamilyOrganizationId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\" disabled>-- {{ \"select\" | i18n }} --</option>\n        <option value=\"createNew\">{{ \"newFamiliesOrganization\" | i18n }}</option>\n        <option *ngFor=\"let o of existingFamilyOrganizations$ | async\" [ngValue]=\"o.id\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div *ngIf=\"showNewOrganization\" class=\"col-12\">\n      <app-organization-plans></app-organization-plans>\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\">\n      <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"acceptOffer\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n","import { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Observable, Subject } from \"rxjs\";\nimport { first, map, takeUntil } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSponsorshipRedeemRequest } from \"@bitwarden/common/models/request/organization/organization-sponsorship-redeem.request\";\n\nimport { DeleteOrganizationComponent } from \"../../organizations/settings\";\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"families-for-enterprise-setup\",\n  templateUrl: \"families-for-enterprise-setup.component.html\",\n})\nexport class FamiliesForEnterpriseSetupComponent implements OnInit, OnDestroy {\n  @ViewChild(OrganizationPlansComponent, { static: false })\n  set organizationPlansComponent(value: OrganizationPlansComponent) {\n    if (!value) {\n      return;\n    }\n\n    value.plan = PlanType.FamiliesAnnually;\n    value.product = ProductType.Families;\n    value.acceptingSponsorship = true;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n  }\n\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  loading = true;\n  badToken = false;\n  formPromise: Promise<any>;\n\n  token: string;\n  existingFamilyOrganizations: Organization[];\n  existingFamilyOrganizations$: Observable<Organization[]>;\n\n  showNewOrganization = false;\n  _organizationPlansComponent: OrganizationPlansComponent;\n  _selectedFamilyOrganizationId = \"\";\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService,\n    private organizationService: OrganizationService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.token == null;\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"sponsoredFamiliesAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.token = qParams.token;\n\n      await this.syncService.fullSync(true);\n      this.badToken = !(await this.apiService.postPreValidateSponsorshipToken(this.token));\n      this.loading = false;\n    });\n\n    this.existingFamilyOrganizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.planProductType === ProductType.Families))\n    );\n\n    this.existingFamilyOrganizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (orgs.length === 0) {\n        this.selectedFamilyOrganizationId = \"createNew\";\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  get selectedFamilyOrganizationId() {\n    return this._selectedFamilyOrganizationId;\n  }\n\n  set selectedFamilyOrganizationId(value: string) {\n    this._selectedFamilyOrganizationId = value;\n    this.showNewOrganization = value === \"createNew\";\n  }\n\n  private async doSubmit(organizationId: string) {\n    try {\n      const request = new OrganizationSponsorshipRedeemRequest();\n      request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n      request.sponsoredOrganizationId = organizationId;\n\n      await this.apiService.postRedeemSponsorship(this.token, request);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"sponsoredFamiliesOfferRedeemed\")\n      );\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      if (this.showNewOrganization) {\n        await this.modalService.openViewRef(\n          DeleteOrganizationComponent,\n          this.deleteModalRef,\n          (comp) => {\n            comp.organizationId = organizationId;\n            comp.deleteOrganizationRequestType = \"InvalidFamiliesForEnterprise\";\n            // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n            comp.onSuccess.subscribe(() => {\n              this.router.navigate([\"/\"]);\n            });\n          }\n        );\n      }\n      this.validationService.showError(this.i18nService.t(\"sponsorshipTokenHasExpired\"));\n    }\n  }\n\n  private async onOrganizationCreateSuccess(value: any) {\n    // Use newly created organization id\n    await this.doSubmit(value.organizationId);\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccess } from \"../domain/send-access\";\n\nimport { SendFileView } from \"./send-file.view\";\nimport { SendTextView } from \"./send-text.view\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccessResponse } from \"../response/send-access.response\";\nimport { SendAccessView } from \"../view/send-access.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SendFile } from \"./send-file\";\nimport { SendText } from \"./send-text\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-12\">\n      <h1 class=\"lead text-center mb-4\">Bitwarden Send</h1>\n    </div>\n    <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\">\n      <p>{{ \"sendCreatorIdentifier\" | i18n: creatorIdentifier }}</p>\n    </div>\n    <div class=\"col-8\" *ngIf=\"hideEmail\">\n      <app-callout type=\"warning\" title=\"{{ 'warning' | i18n }}\">\n        {{ \"viewSendHiddenEmailWarning\" | i18n }}\n        <a href=\"https://bitwarden.com/help/receive-send/\" target=\"_blank\">{{\n          \"learnMore\" | i18n\n        }}</a\n        >.\n      </app-callout>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-5\">\n      <div class=\"card d-block\">\n        <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\n          <p>{{ \"sendProtectedPassword\" | i18n }}</p>\n          <p>{{ \"sendProtectedPasswordDontKnow\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"password\" | i18n }}</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"Password\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"password\"\n              required\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && unavailable\">\n          {{ \"sendAccessUnavailable\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && error\">\n          {{ \"unexpectedError\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\n          <p class=\"text-center\">\n            <b>{{ send.name }}</b>\n          </p>\n          <hr />\n          <!-- Text -->\n          <ng-container *ngIf=\"send.type === sendType.Text\">\n            <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{\n              \"sendHiddenByDefault\" | i18n\n            }}</app-callout>\n            <div class=\"form-group\">\n              <textarea\n                id=\"text\"\n                rows=\"8\"\n                name=\"Text\"\n                [ngModel]=\"sendText\"\n                class=\"form-control\"\n                readonly\n              ></textarea>\n            </div>\n            <button\n              class=\"btn btn-block btn-link\"\n              type=\"button\"\n              (click)=\"toggleText()\"\n              *ngIf=\"send.text.hidden\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showText, 'bwi-eye-slash': showText }\"\n              ></i>\n              {{ \"toggleVisibility\" | i18n }}\n            </button>\n            <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\n              <i class=\"bwi bwi-copy\" aria-hidden=\"true\"></i> {{ \"copyValue\" | i18n }}\n            </button>\n          </ng-container>\n          <!-- File -->\n          <ng-container *ngIf=\"send.type === sendType.File\">\n            <p>{{ send.file.fileName }}</p>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              (click)=\"download()\"\n              *ngIf=\"!downloading\"\n            >\n              <i class=\"bwi bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"downloadFile\" | i18n }} ({{ send.file.sizeName }})\n            </button>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              *ngIf=\"downloading\"\n              disabled=\"true\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </ng-container>\n          <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">\n            Expires: {{ expirationDate | date: \"medium\" }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 text-center mt-5 text-muted\">\n      <p class=\"mb-0\">\n        {{ \"sendAccessTaglineProductDesc\" | i18n }}<br />\n        {{ \"sendAccessTaglineLearnMore\" | i18n }}\n        <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\"\n          >Bitwarden Send</a\n        >\n        {{ \"sendAccessTaglineOr\" | i18n }}\n        <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{\n          \"sendAccessTaglineSignUp\" | i18n\n        }}</a>\n        {{ \"sendAccessTaglineTryToday\" | i18n }}\n      </p>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SEND_KDF_ITERATIONS } from \"@bitwarden/common/enums/kdfType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { SendAccess } from \"@bitwarden/common/models/domain/send-access\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { SendAccessRequest } from \"@bitwarden/common/models/request/send-access.request\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { SendAccessResponse } from \"@bitwarden/common/models/response/send-access.response\";\nimport { SendAccessView } from \"@bitwarden/common/models/view/send-access.view\";\n\n@Component({\n  selector: \"app-send-access\",\n  templateUrl: \"access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccessComponent implements OnInit {\n  send: SendAccessView;\n  sendType = SendType;\n  downloading = false;\n  loading = true;\n  passwordRequired = false;\n  formPromise: Promise<SendAccessResponse>;\n  password: string;\n  showText = false;\n  unavailable = false;\n  error = false;\n  hideEmail = false;\n\n  private id: string;\n  private key: string;\n  private decKey: SymmetricCryptoKey;\n  private accessRequest: SendAccessRequest;\n\n  constructor(\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private fileDownloadService: FileDownloadService\n  ) {}\n\n  get sendText() {\n    if (this.send == null || this.send.text == null) {\n      return null;\n    }\n    return this.showText ? this.send.text.text : this.send.text.maskedText;\n  }\n\n  get expirationDate() {\n    if (this.send == null || this.send.expirationDate == null) {\n      return null;\n    }\n    return this.send.expirationDate;\n  }\n\n  get creatorIdentifier() {\n    if (this.send == null || this.send.creatorIdentifier == null) {\n      return null;\n    }\n    return this.send.creatorIdentifier;\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.id = params.sendId;\n      this.key = params.key;\n      if (this.key == null || this.id == null) {\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async download() {\n    if (this.send == null || this.decKey == null) {\n      return;\n    }\n\n    if (this.downloading) {\n      return;\n    }\n\n    const downloadData = await this.apiService.getSendFileDownloadData(\n      this.send,\n      this.accessRequest\n    );\n\n    if (Utils.isNullOrWhitespace(downloadData.url)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingSendFile\"));\n      return;\n    }\n\n    this.downloading = true;\n    const response = await fetch(new Request(downloadData.url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      this.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, this.decKey);\n      this.fileDownloadService.download({\n        fileName: this.send.file.fileName,\n        blobData: decBuf,\n        downloadMethod: \"save\",\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    this.downloading = false;\n  }\n\n  copyText() {\n    this.platformUtilsService.copyToClipboard(this.send.text.text);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendTypeText\"))\n    );\n  }\n\n  toggleText() {\n    this.showText = !this.showText;\n  }\n\n  async load() {\n    this.unavailable = false;\n    this.error = false;\n    this.hideEmail = false;\n    const keyArray = Utils.fromUrlB64ToArray(this.key);\n    this.accessRequest = new SendAccessRequest();\n    if (this.password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        this.password,\n        keyArray,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n    }\n    try {\n      let sendResponse: SendAccessResponse = null;\n      if (this.loading) {\n        sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n      } else {\n        this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n        sendResponse = await this.formPromise;\n      }\n      this.passwordRequired = false;\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(keyArray);\n      this.send = await sendAccess.decrypt(this.decKey);\n      this.showText = this.send.text != null ? !this.send.text.hidden : true;\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          this.passwordRequired = true;\n        } else if (e.statusCode === 404) {\n          this.unavailable = true;\n        } else {\n          this.error = true;\n        }\n      }\n    }\n    this.loading = false;\n    this.hideEmail =\n      this.creatorIdentifier == null &&\n      !this.passwordRequired &&\n      !this.loading &&\n      !this.unavailable;\n  }\n}\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class SendComponent implements OnInit, OnDestroy {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new UntypedFormGroup({\n    selectedDeletionDatePreset: new UntypedFormControl(),\n    selectedExpirationDatePreset: new UntypedFormControl(),\n    defaultDeletionDateTime: new UntypedFormControl(),\n    defaultExpirationDateTime: new UntypedFormControl(),\n    fallbackDeletionDate: new UntypedFormControl(),\n    fallbackDeletionTime: new UntypedFormControl(),\n    fallbackExpirationDate: new UntypedFormControl(),\n    fallbackExpirationTime: new UntypedFormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as UntypedFormControl;\n  }\n\n  get selectedExpirationDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as UntypedFormControl;\n  }\n\n  get defaultDeletionDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as UntypedFormControl;\n  }\n\n  get defaultExpirationDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as UntypedFormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/send-file.view\";\nimport { SendTextView } from \"@bitwarden/common/models/view/send-text.view\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  protected componentName = \"\";\n  private sendLinkBaseUrl: string;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SendOptions, (p) => p.data.disableHideEmail)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableHideEmail = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        await this.handleCopyLinkToClipboard();\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n      );\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n  private async handleCopyLinkToClipboard() {\n    const copySuccess = await this.copyLinkToClipboard(this.link);\n    if (copySuccess ?? true) {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n      );\n    } else {\n      await this.platformUtilsService.showDialog(\n        this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n        null,\n        this.i18nService.t(\"ok\"),\n        null,\n        \"success\",\n        null\n      );\n      await this.copyLinkToClipboard(this.link);\n    }\n  }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\">\n  <div class=\"col-6 form-group\">\n    <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n    <ng-template #deletionDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <ng-container *ngSwitchCase=\"'firefox'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <input\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              type=\"time\"\n              name=\"DeletionTimeDate\"\n              formControlName=\"fallbackDeletionTime\"\n              required\n              placeholder=\"HH:MM AM/PM\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'safari'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <select\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              [required]=\"!editMode\"\n              formControlName=\"fallbackDeletionTime\"\n              name=\"SafariDeletionTime\"\n            >\n              <option\n                *ngFor=\"let o of safariDeletionTimePresetOptions\"\n                [ngValue]=\"o.twentyFourHour\"\n              >\n                {{ o.twelveHour }}\n              </option>\n            </select>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"deletionDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"DeletionDate\"\n            formControlName=\"defaultDeletionDateTime\"\n            required\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"deletionDate\"\n        name=\"SelectedDeletionDatePreset\"\n        formControlName=\"selectedDeletionDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"deletionDateDesc\" | i18n }}</div>\n  </div>\n  <div class=\"col-6 form-group\">\n    <div class=\"d-flex\">\n      <label for=\"expirationDate\">{{ \"expirationDate\" | i18n }}</label>\n      <a\n        href=\"#\"\n        appStopClick\n        (click)=\"clearExpiration()\"\n        class=\"ml-auto\"\n        *ngIf=\"editMode && !disabled\"\n      >\n        {{ \"clear\" | i18n }}\n      </a>\n    </div>\n    <ng-template #expirationDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n        <!-- non-default cases are not showing up -->\n        <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            [required]=\"!editMode\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"expirationDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"ExpirationDate\"\n            formControlName=\"defaultExpirationDateTime\"\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"expirationDate\"\n        name=\"SelectedExpirationDatePreset\"\n        formControlName=\"selectedExpirationDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"expirationDateDesc\" | i18n }}</div>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"sendAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"send\">\n        <app-callout *ngIf=\"disableSend\">\n          <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n        </app-callout>\n        <app-callout *ngIf=\"!disableSend && disableHideEmail\">\n          <span>{{ \"sendOptionsPolicyInEffect\" | i18n }}</span>\n          <ul class=\"mb-0\">\n            <li>{{ \"sendDisableHideEmailInEffect\" | i18n }}</li>\n          </ul>\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"send.name\"\n              required\n              [readOnly]=\"disableSend\"\n            />\n            <small class=\"form-text text-muted\">{{ \"sendNameDesc\" | i18n }}</small>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!editMode\">\n          <div class=\"col-6 form-group\">\n            <label>{{ \"whatTypeOfSend\" | i18n }}</label>\n            <div class=\"form-check\" *ngFor=\"let o of typeOptions\">\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                [(ngModel)]=\"send.type\"\n                name=\"Type_{{ o.value }}\"\n                id=\"type_{{ o.value }}\"\n                [value]=\"o.value\"\n                (change)=\"typeChanged()\"\n                [checked]=\"send.type === o.value\"\n              />\n              <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n                {{ o.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <!-- Text -->\n        <ng-container *ngIf=\"send.type === sendType.Text\">\n          <div class=\"form-group\">\n            <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n            <textarea\n              id=\"text\"\n              name=\"Text.Text\"\n              rows=\"6\"\n              [(ngModel)]=\"send.text.text\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <small class=\"form-text text-muted\">{{ \"sendTextDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.text.hidden\"\n                id=\"text-hidden\"\n                name=\"Text.Hidden\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"text-hidden\">{{\n                \"textHiddenByDefault\" | i18n\n              }}</label>\n            </div>\n          </div>\n        </ng-container>\n        <!-- File -->\n        <ng-container *ngIf=\"send.type === sendType.File\">\n          <div class=\"form-group\">\n            <div *ngIf=\"editMode\">\n              <strong class=\"d-block\">{{ \"file\" | i18n }}</strong>\n              {{ send.file.fileName }} ({{ send.file.sizeName }})\n            </div>\n            <div *ngIf=\"!editMode\">\n              <label for=\"file\">{{ \"file\" | i18n }}</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n                name=\"file\"\n                required\n                [disabled]=\"disableSend\"\n              />\n              <small class=\"form-text text-muted\"\n                >{{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}</small\n              >\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-5\">{{ \"share\" | i18n }}</h3>\n        <div class=\"form-group\" *ngIf=\"link\">\n          <label for=\"link\">{{ \"sendLinkLabel\" | i18n }}</label>\n          <input type=\"text\" readonly id=\"link\" name=\"Link\" [ngModel]=\"link\" class=\"form-control\" />\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [(ngModel)]=\"copyLink\"\n              id=\"copy-link\"\n              name=\"CopyLink\"\n            />\n            <label class=\"form-check-label\" for=\"copy-link\">{{\n              \"copySendLinkOnSave\" | i18n\n            }}</label>\n          </div>\n        </div>\n        <div\n          id=\"options-header\"\n          class=\"section-header d-flex flex-row align-items-center mt-5\"\n          (click)=\"toggleOptions()\"\n        >\n          <h3 class=\"mb-0 mr-2\">\n            <button appStopClick class=\"header-expandable\">\n              <i\n                class=\"bwi\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-angle-right': !showOptions, 'bwi-angle-down': showOptions }\"\n              ></i>\n              {{ \"options\" | i18n }}\n            </button>\n          </h3>\n        </div>\n        <div id=\"options\" [hidden]=\"!showOptions\">\n          <app-send-efflux-dates\n            [initialDeletionDate]=\"send.deletionDate\"\n            [initialExpirationDate]=\"send.expirationDate\"\n            [editMode]=\"editMode\"\n            [disabled]=\"disableSend\"\n            (datesChanged)=\"setDates($event)\"\n          >\n          </app-send-efflux-dates>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"maxAccessCount\">{{ \"maxAccessCount\" | i18n }}</label>\n              <input\n                id=\"maxAccessCount\"\n                class=\"form-control\"\n                type=\"number\"\n                name=\"MaxAccessCount\"\n                [(ngModel)]=\"send.maxAccessCount\"\n                min=\"1\"\n                [readOnly]=\"disableSend\"\n              />\n              <div class=\"form-text text-muted small\">{{ \"maxAccessCountDesc\" | i18n }}</div>\n            </div>\n            <div class=\"col-6 form-group\" *ngIf=\"editMode\">\n              <label for=\"accessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n              <input\n                id=\"accessCount\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"AccessCount\"\n                readonly\n                [(ngModel)]=\"send.accessCount\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"password\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Password\"\n                  [(ngModel)]=\"password\"\n                  [readOnly]=\"disableSend\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePasswordVisible()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-text text-muted small\">{{ \"sendPasswordDesc\" | i18n }}</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <div class=\"form-text text-muted small\">{{ \"sendNotesDesc\" | i18n }}</div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.hideEmail\"\n                id=\"hideEmail\"\n                name=\"HideEmail\"\n                [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"hideEmail\">\n                {{ \"hideEmail\" | i18n }}\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.disabled\"\n                id=\"disabled\"\n                name=\"Disabled\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"disabled\">{{ \"disableThisSend\" | i18n }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [ngClass]=\"{ loading: form.loading }\"\n          [disabled]=\"form.loading || disableSend\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"send\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  override componentName = \"app-send-add-edit\";\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n    // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n    return new Promise((resolve) => {\n      window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-3 groupings\">\n      <div class=\"card vault-filters\">\n        <div class=\"card-header d-flex\">\n          {{ \"filters\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <input\n            type=\"search\"\n            placeholder=\"{{ searchPlaceholder || ('searchSends' | i18n) }}\"\n            id=\"search\"\n            class=\"form-control\"\n            [(ngModel)]=\"searchText\"\n            (input)=\"searchTextChanged()\"\n            autocomplete=\"off\"\n            appAutofocus\n          />\n          <div class=\"filter\">\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedAll }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectAll()\">\n                    <i class=\"bwi bwi-fw bwi-filter\"></i>{{ \"allSends\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"filter\">\n            <div class=\"filter-heading\">\n              <h3>{{ \"types\" | i18n }}</h3>\n            </div>\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.Text }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectType(sendType.Text)\">\n                    <i class=\"bwi bwi-fw bwi-file-text\"></i>{{ \"sendTypeText\" | i18n }}\n                  </button>\n                </span>\n              </li>\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.File }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectType(sendType.File)\">\n                    <i class=\"bwi bwi-fw bwi-file\"></i>{{ \"sendTypeFile\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"send\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"actionPromise\">\n            <ng-container *ngIf=\"$any(actionSpinner).loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addSend()\"\n            [disabled]=\"disableSend\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <!--Listing Table-->\n      <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\n        <tbody>\n          <tr *ngFor=\"let s of filteredSends\">\n            <td class=\"table-list-icon\">\n              <div class=\"icon\" aria-hidden=\"true\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type == sendType.File\"></i>\n                <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type == sendType.Text\"></i>\n              </div>\n            </td>\n            <td class=\"reduced-lh wrap\">\n              <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{ s.name }}</a>\n              <ng-container *ngIf=\"s.disabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle\"\n                  appStopProp\n                  title=\"{{ 'disabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.password\">\n                <i\n                  class=\"bwi bwi-key\"\n                  appStopProp\n                  title=\"{{ 'password' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"password\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.maxAccessCountReached\">\n                <i\n                  class=\"bwi bwi-ban\"\n                  appStopProp\n                  title=\"{{ 'maxAccessCountReached' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.expired\">\n                <i\n                  class=\"bwi bwi-clock\"\n                  appStopProp\n                  title=\"{{ 'expired' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.pendingDelete\">\n                <i\n                  class=\"bwi bwi-trash\"\n                  appStopProp\n                  title=\"{{ 'pendingDeletion' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n              </ng-container>\n              <br />\n              <small appStopProp>{{ s.deletionDate | date: \"medium\" }}</small>\n            </td>\n            <td class=\"table-list-options\">\n              <button\n                [bitMenuTriggerFor]=\"sendOptions\"\n                class=\"tw-border-none tw-bg-transparent tw-text-main\"\n                type=\"button\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu #sendOptions>\n                <button bitMenuItem (click)=\"copy(s)\">\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copySendLink\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"removePassword\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"delete(s)\">\n                  <span class=\"tw-text-danger\">\n                    <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                    {{ \"delete\" | i18n }}\n                  </span>\n                </button>\n              </bit-menu>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\n        <ng-container *ngIf=\"!loaded\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n          <bit-icon [icon]=\"noItemIcon\" aria-hidden=\"true\"></bit-icon>\n          <p>{{ \"noSendsInList\" | i18n }}</p>\n          <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\">\n            <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #sendAddEdit></ng-template>\n","import { Component, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\nimport { Icons } from \"@bitwarden/components\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\n\nconst BroadcasterSubscriptionId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send\",\n  templateUrl: \"send.component.html\",\n})\nexport class SendComponent extends BaseSendComponent {\n  @ViewChild(\"sendAddEdit\", { read: ViewContainerRef, static: true })\n  sendAddEditModalRef: ViewContainerRef;\n  noItemIcon = Icons.Search;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    searchService: SearchService,\n    policyService: PolicyService,\n    private modalService: ModalService,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n\n    // Broadcaster subscription - load if sync completes in the background\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n\n    const component = await this.editSend(null);\n    component.type = this.type;\n  }\n\n  async editSend(send: SendView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.sendAddEditModalRef,\n      (comp) => {\n        comp.sendId = send == null ? null : send.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-deauthorize-sessions\",\n  templateUrl: \"deauthorize-sessions.component.html\",\n})\nexport class DeauthorizeSessionsComponent {\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postSecurityStamp(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"sessionsDeauthorized\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deAuthTitle\">{{ \"deauthorizeSessions\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deauthorizeSessionsDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deauthorizeSessionsWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deauthorizeSessions\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { AccountApiService } from \"@bitwarden/common/abstractions/account/account-api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-delete-account\",\n  templateUrl: \"delete-account.component.html\",\n})\nexport class DeleteAccountComponent {\n  formPromise: Promise<void>;\n\n  deleteForm = this.formBuilder.group({\n    verification: undefined as Verification | undefined,\n  });\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private formBuilder: FormBuilder,\n    private accountApiService: AccountApiService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const verification = this.deleteForm.get(\"verification\").value;\n      this.formPromise = this.accountApiService.deleteAccount(verification);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      [formGroup]=\"deleteForm\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteAccountTitle\">{{ \"deleteAccount\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deleteAccountDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n        <app-user-verification ngDefaultControl formControlName=\"verification\" name=\"verification\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteAccount\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n  newEmail: string;\n  masterPasswordHash: string;\n}\n","import { EmailTokenRequest } from \"./email-token.request\";\n\nexport class EmailRequest extends EmailTokenRequest {\n  newMasterPasswordHash: string;\n  token: string;\n  key: string;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\">\n    {{ \"changeEmailTwoFactorWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          [readonly]=\"tokenSent\"\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newEmail\">{{ \"newEmail\" | i18n }}</label>\n        <input\n          id=\"newEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"NewEmail\"\n          [(ngModel)]=\"newEmail\"\n          required\n          [readonly]=\"tokenSent\"\n          inputmode=\"email\"\n          appInputVerbatim=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"tokenSent\">\n    <hr />\n    <p>{{ \"changeEmailDesc\" | i18n: newEmail }}</p>\n    <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"token\">{{ \"code\" | i18n }}</label>\n          <input\n            id=\"token\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Token\"\n            [(ngModel)]=\"token\"\n            required\n            appInputVerbatim\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span *ngIf=\"!tokenSent\">{{ \"continue\" | i18n }}</span>\n    <span *ngIf=\"tokenSent\">{{ \"changeEmail\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { EmailTokenRequest } from \"@bitwarden/common/models/request/email-token.request\";\nimport { EmailRequest } from \"@bitwarden/common/models/request/email.request\";\n\n@Component({\n  selector: \"app-change-email\",\n  templateUrl: \"change-email.component.html\",\n})\nexport class ChangeEmailComponent implements OnInit {\n  masterPassword: string;\n  newEmail: string;\n  token: string;\n  tokenSent = false;\n  showTwoFactorEmailWarning = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n    this.showTwoFactorEmailWarning = twoFactorProviders.data.some(\n      (p) => p.type === TwoFactorProviderType.Email && p.enabled\n    );\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    this.newEmail = this.newEmail.trim().toLowerCase();\n    if (!this.tokenSent) {\n      const request = new EmailTokenRequest();\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      try {\n        this.formPromise = this.apiService.postEmailToken(request);\n        await this.formPromise;\n        this.tokenSent = true;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const request = new EmailRequest();\n      request.token = this.token;\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      const kdf = await this.stateService.getKdfType();\n      const kdfConfig = await this.stateService.getKdfConfig();\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.newEmail,\n        kdf,\n        kdfConfig\n      );\n      request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        newKey\n      );\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n      request.key = newEncKey[1].encryptedString;\n      try {\n        this.formPromise = this.apiService.postEmail(request);\n        await this.formPromise;\n        this.reset();\n        this.platformUtilsService.showToast(\n          \"success\",\n          this.i18nService.t(\"emailChanged\"),\n          this.i18nService.t(\"logBackIn\")\n        );\n        this.messagingService.send(\"logout\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n\n  reset() {\n    this.token = this.newEmail = this.masterPassword = null;\n    this.tokenSent = false;\n  }\n}\n","export class UpdateProfileRequest {\n  name: string;\n  masterPasswordHint: string;\n  culture = \"en-US\"; // deprecated\n\n  constructor(name: string, masterPasswordHint: string) {\n    this.name = name;\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\n@Component({\n  selector: \"selectable-avatar\",\n  template: `<span\n    [title]=\"title\"\n    (click)=\"onFire()\"\n    (keyup.enter)=\"onFire()\"\n    tabindex=\"0\"\n    [ngClass]=\"classList\"\n  >\n    <bit-avatar\n      appStopClick\n      [text]=\"text\"\n      size=\"xlarge\"\n      [text]=\"text\"\n      [color]=\"color\"\n      [border]=\"false\"\n      [id]=\"id\"\n      [border]=\"border\"\n      [title]=\"title\"\n    >\n    </bit-avatar>\n  </span>`,\n})\nexport class SelectableAvatarComponent {\n  @Input() id: string;\n  @Input() text: string;\n  @Input() title: string;\n  @Input() color: string;\n  @Input() border = false;\n  @Input() selected = false;\n  @Output() select = new EventEmitter<string>();\n\n  onFire() {\n    this.select.emit(this.color);\n  }\n\n  get classList() {\n    return [\"tw-rounded-full tw-inline-block\"]\n      .concat([\"tw-cursor-pointer\", \"tw-outline\", \"tw-outline-solid\", \"tw-outline-offset-1\"])\n      .concat(\n        this.selected\n          ? [\"tw-outline-[3px]\", \"tw-outline-primary-500\"]\n          : [\n              \"tw-outline-0\",\n              \"hover:tw-outline-1\",\n              \"hover:tw-outline-primary-300\",\n              \"focus:tw-outline-2\",\n              \"focus:tw-outline-primary-500\",\n            ]\n      );\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"customizeTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable tw-w-[600px] tw-max-w-none\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"customizeTitle\">{{ \"customizeAvatar\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <p class=\"tw-text-lg\">{{ \"pickAnAvatarColor\" | i18n }}</p>\n        <div class=\"tw-flex tw-flex-wrap tw-justify-center tw-gap-8 tw-gap-y-8\">\n          <ng-container *ngFor=\"let c of defaultColorPalette\">\n            <selectable-avatar\n              appStopClick\n              (select)=\"setSelection(c.color)\"\n              [selected]=\"c.selected\"\n              [title]=\"c.name\"\n              text=\"{{ profile | userName }}\"\n              [color]=\"c.color\"\n              [border]=\"true\"\n            >\n            </selectable-avatar>\n          </ng-container>\n          <span>\n            <span\n              [tabIndex]=\"0\"\n              (keyup.enter)=\"showCustomPicker()\"\n              (click)=\"showCustomPicker()\"\n              title=\"{{ 'customColor' | i18n }}\"\n              [ngClass]=\"{\n                '!tw-outline-[3px] tw-outline-primary-500 hover:tw-outline-[3px] hover:tw-outline-primary-500':\n                  customColorSelected\n              }\"\n              class=\"tw-outline-solid tw-bg-white tw-relative tw-inline-block tw-flex tw-h-24 tw-w-24 tw-cursor-pointer tw-place-content-center tw-content-center tw-justify-center tw-rounded-full tw-border tw-border-solid tw-border-secondary-500 tw-outline tw-outline-0 tw-outline-offset-1 hover:tw-outline-1 hover:tw-outline-primary-300 focus:tw-outline-2 focus:tw-outline-primary-500\"\n              [style.background-color]=\"customColor$ | async\"\n            >\n              <i\n                [style.color]=\"customTextColor$ | async\"\n                class=\"bwi bwi-pencil tw-m-auto tw-text-3xl\"\n              ></i>\n              <input\n                tabindex=\"-1\"\n                class=\"tw-absolute tw-right-0 tw-bottom-0 tw-h-px tw-w-px tw-border-none tw-bg-transparent tw-opacity-0\"\n                #colorPicker\n                type=\"color\"\n                [ngModel]=\"customColor$ | async\"\n                (ngModelChange)=\"customColor$.next($event)\"\n              />\n            </span>\n          </span>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { BehaviorSubject, debounceTime, Subject, takeUntil } from \"rxjs\";\n\nimport { AvatarUpdateService } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profile.response\";\n\n@Component({\n  selector: \"app-change-avatar\",\n  templateUrl: \"change-avatar.component.html\",\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ChangeAvatarComponent implements OnInit, OnDestroy {\n  @Input() profile: ProfileResponse;\n\n  @Output() changeColor: EventEmitter<string | null> = new EventEmitter();\n  @Output() onSaved = new EventEmitter();\n\n  @ViewChild(\"colorPicker\") colorPickerElement: ElementRef<HTMLElement>;\n\n  loading = false;\n  error: string;\n  defaultColorPalette: NamedAvatarColor[] = [\n    { name: \"brightBlue\", color: \"#16cbfc\" },\n    { name: \"green\", color: \"#94cc4b\" },\n    { name: \"orange\", color: \"#ffb520\" },\n    { name: \"lavender\", color: \"#e5beed\" },\n    { name: \"yellow\", color: \"#fcff41\" },\n    { name: \"indigo\", color: \"#acbdf7\" },\n    { name: \"teal\", color: \"#8ecdc5\" },\n    { name: \"salmon\", color: \"#ffa3a3\" },\n    { name: \"pink\", color: \"#ffa2d4\" },\n  ];\n  customColorSelected = false;\n  currentSelection: string;\n\n  protected customColor$ = new BehaviorSubject<string | null>(null);\n  protected customTextColor$ = new BehaviorSubject<string>(\"#000000\");\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private accountUpdateService: AvatarUpdateService\n  ) {}\n\n  async ngOnInit() {\n    //localize the default colors\n    this.defaultColorPalette.forEach((c) => (c.name = this.i18nService.t(c.name)));\n\n    this.customColor$\n      .pipe(debounceTime(200), takeUntil(this.destroy$))\n      .subscribe((color: string | null) => {\n        if (color == null) {\n          return;\n        }\n        this.customTextColor$.next(Utils.pickTextColorBasedOnBgColor(color));\n        this.customColorSelected = true;\n        this.currentSelection = color;\n      });\n\n    this.setSelection(await this.accountUpdateService.loadColorFromState());\n  }\n\n  async showCustomPicker() {\n    this.customColorSelected = true;\n    this.colorPickerElement.nativeElement.click();\n    this.setSelection(this.customColor$.value);\n  }\n\n  async generateAvatarColor() {\n    Utils.stringToColor(this.profile.name.toString());\n  }\n\n  async submit() {\n    try {\n      if (Utils.validateHexColor(this.currentSelection) || this.currentSelection == null) {\n        await this.accountUpdateService.pushUpdate(this.currentSelection);\n        this.changeColor.emit(this.currentSelection);\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"avatarUpdated\"));\n      } else {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  async ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async setSelection(color: string | null) {\n    this.defaultColorPalette.filter((x) => x.selected).forEach((c) => (c.selected = false));\n\n    if (color == null) {\n      return;\n    }\n\n    color = color.toLowerCase();\n\n    this.customColorSelected = false;\n    //Allow for toggle\n    if (this.currentSelection === color) {\n      this.currentSelection = null;\n    } else {\n      const selectedColorIndex = this.defaultColorPalette.findIndex((c) => c.color === color);\n      if (selectedColorIndex !== -1) {\n        this.defaultColorPalette[selectedColorIndex].selected = true;\n        this.currentSelection = color;\n      } else {\n        this.customColor$.next(color);\n      }\n    }\n  }\n}\n\nexport class NamedAvatarColor {\n  name: string;\n  color: string;\n  selected? = false;\n}\n","<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"profile && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Email\"\n          [(ngModel)]=\"profile.email\"\n          readonly\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"mb-3\">\n        <dynamic-avatar text=\"{{ profile | userName }}\" [size]=\"'large'\"> </dynamic-avatar>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary tw-ml-3.5\"\n          appStopClick\n          appStopProp\n          (click)=\"openChangeAvatar()\"\n        >\n          <i class=\"bwi bwi-lg bwi-pencil-square\" aria-hidden=\"true\"></i>\n          Customize\n        </button>\n      </div>\n      <hr />\n      <p *ngIf=\"fingerprint\">\n        {{ \"yourAccountsFingerprint\" | i18n }}:\n        <a\n          href=\"https://bitwarden.com/help/fingerprint-phrase/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i></a\n        ><br />\n        <code>{{ fingerprint }}</code>\n      </p>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<ng-template #avatarModalTemplate></ng-template>\n","import { ViewChild, ViewContainerRef, Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UpdateProfileRequest } from \"@bitwarden/common/models/request/update-profile.request\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profile.response\";\n\nimport { ChangeAvatarComponent } from \"./change-avatar.component\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"profile.component.html\",\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n  loading = true;\n  profile: ProfileResponse;\n  fingerprint: string;\n\n  formPromise: Promise<any>;\n  @ViewChild(\"avatarModalTemplate\", { read: ViewContainerRef, static: true })\n  avatarModalRef: ViewContainerRef;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    this.profile = await this.apiService.getProfile();\n    this.loading = false;\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    if (fingerprint != null) {\n      this.fingerprint = fingerprint.join(\"-\");\n    }\n  }\n\n  async ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async openChangeAvatar() {\n    const modalOpened = await this.modalService.openViewRef(\n      ChangeAvatarComponent,\n      this.avatarModalRef,\n      (modal) => {\n        modal.profile = this.profile;\n        modal.changeColor.pipe(takeUntil(this.destroy$)).subscribe(() => {\n          modalOpened[0].close();\n        });\n      }\n    );\n  }\n\n  async submit() {\n    try {\n      const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n      this.formPromise = this.apiService.putProfile(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"accountUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myAccount\" | i18n }}</h1>\n</div>\n<app-profile></app-profile>\n<ng-container *ngIf=\"showChangeEmail\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeEmail\" | i18n }}</h1>\n  </div>\n  <app-change-email></app-change-email>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button bitButton buttonType=\"danger\" (click)=\"deauthorizeSessions()\">\n      {{ \"deauthorizeSessions\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"deleteAccount()\">\n      {{ \"deleteAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { DeauthorizeSessionsComponent } from \"./deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./delete-account.component\";\nimport { PurgeVaultComponent } from \"./purge-vault.component\";\n\n@Component({\n  selector: \"app-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deauthorizeSessionsTemplate\", { read: ViewContainerRef, static: true })\n  deauthModalRef: ViewContainerRef;\n  @ViewChild(\"purgeVaultTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"deleteAccountTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  showChangeEmail = true;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeEmail = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async deauthorizeSessions() {\n    await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n  }\n\n  async deleteAccount() {\n    await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.plan === \"families\") {\n        this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n        this.orgPlansComponent.product = ProductType.Families;\n      } else if (qParams.plan === \"teams\") {\n        this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n        this.orgPlansComponent.product = ProductType.Teams;\n      } else if (qParams.plan === \"enterprise\") {\n        this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n        this.orgPlansComponent.product = ProductType.Enterprise;\n      }\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"page-header\">\n        <h1>{{ \"newOrganization\" | i18n }}</h1>\n      </div>\n      <p>{{ \"newOrganizationDesc\" | i18n }}</p>\n      <app-organization-plans></app-organization-plans>\n    </div>\n  </div>\n</div>\n","export class UpdateDomainsRequest {\n  equivalentDomains: string[][];\n  excludedGlobalEquivalentDomains: number[];\n}\n","<div class=\"page-header\">\n  <h1>{{ \"domainRules\" | i18n }}</h1>\n</div>\n<p>{{ \"domainRulesDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <h2>{{ \"customEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n      <div class=\"flex-fill\">\n        <label for=\"customDomain_{{ i }}\" class=\"sr-only\">{{\n          \"customDomainX\" | i18n: i + 1\n        }}</label>\n        <textarea\n          class=\"form-control\"\n          name=\"CustomDomain[{{ i }}]\"\n          id=\"customDomain_{{ i }}\"\n          [(ngModel)]=\"custom[i]\"\n          placeholder=\"{{ 'ex' | i18n }} google.com, gmail.com\"\n          required\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-link text-danger ml-2\"\n        (click)=\"remove(i)\"\n        appA11yTitle=\"{{ 'remove' | i18n }}\"\n      >\n        <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomDomain\" | i18n }}\n    </button>\n    <small class=\"text-muted d-block mb-3\">{{ \"newCustomDomainDesc\" | i18n }}</small>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <h2 class=\"spaced-header\">{{ \"globalEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n    <tbody>\n      <tr *ngFor=\"let d of global\">\n        <td [ngClass]=\"{ 'table-list-strike': d.excluded }\">{{ d.domains }}</td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"!d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                {{ \"exclude\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-plus\" aria-hidden=\"true\"></i>\n                {{ \"include\" | i18n }}\n              </a>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                <i class=\"bwi bwi-fw bwi-cut\" aria-hidden=\"true\"></i>\n                {{ \"customize\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UpdateDomainsRequest } from \"@bitwarden/common/models/request/update-domains.request\";\n\n@Component({\n  selector: \"app-domain-rules\",\n  templateUrl: \"domain-rules.component.html\",\n})\nexport class DomainRulesComponent implements OnInit {\n  loading = true;\n  custom: string[] = [];\n  global: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const response = await this.apiService.getSettingsDomains();\n    this.loading = false;\n    if (response.equivalentDomains != null) {\n      this.custom = response.equivalentDomains.map((d) => d.join(\", \"));\n    }\n    if (response.globalEquivalentDomains != null) {\n      this.global = response.globalEquivalentDomains.map((d) => {\n        return {\n          domains: d.domains.join(\", \"),\n          excluded: d.excluded,\n          key: d.type,\n        };\n      });\n    }\n  }\n\n  toggleExcluded(globalDomain: any) {\n    globalDomain.excluded = !globalDomain.excluded;\n  }\n\n  customize(globalDomain: any) {\n    globalDomain.excluded = true;\n    this.custom.push(globalDomain.domains);\n  }\n\n  remove(index: number) {\n    this.custom.splice(index, 1);\n  }\n\n  add() {\n    this.custom.push(\"\");\n  }\n\n  async submit() {\n    const request = new UpdateDomainsRequest();\n    request.excludedGlobalEquivalentDomains = this.global\n      .filter((d) => d.excluded)\n      .map((d) => d.key);\n    if (request.excludedGlobalEquivalentDomains.length === 0) {\n      request.excludedGlobalEquivalentDomains = null;\n    }\n    request.equivalentDomains = this.custom\n      .filter((d) => d != null && d.trim() !== \"\")\n      .map((d) => d.split(\",\").map((d2) => d2.trim()));\n    if (request.equivalentDomains.length === 0) {\n      request.equivalentDomains = null;\n    }\n\n    try {\n      this.formPromise = this.apiService.putSettingsDomains(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"domainsUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  indexTrackBy(index: number, obj: any): any {\n    return index;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\n\n@Component({\n  selector: \"emergency-access-attachments\",\n  templateUrl: \"../vault/attachments.component.html\",\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = true;\n  canAccessAttachments = true;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async init() {\n    // Do nothing since cipher is already decoded\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return false;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../vault/add-edit.component.html\",\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  viewOnly = true;\n  protected override componentName = \"app-org-vault-add-edit\";\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    messagingService: MessagingService,\n    eventCollectionService: EventCollectionService,\n    policyService: PolicyService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async load() {\n    this.title = this.i18nService.t(\"viewItem\");\n  }\n\n  protected async loadCipher() {\n    return Promise.resolve(this.originalCipher);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"vault\" | i18n }}</h1>\n</div>\n<div class=\"mt-4\">\n  <ng-container *ngIf=\"ciphers.length\">\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\">\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\">\n                  <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                  {{ \"attachments\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #attachments></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { EmergencyAccessViewResponse } from \"@bitwarden/common/models/response/emergency-access.response\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { EmergencyAccessAttachmentsComponent } from \"./emergency-access-attachments.component\";\nimport { EmergencyAddEditComponent } from \"./emergency-add-edit.component\";\n\n@Component({\n  selector: \"emergency-access-view\",\n  templateUrl: \"emergency-access-view.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessViewComponent implements OnInit {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n\n  id: string;\n  ciphers: CipherView[] = [];\n  loaded = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private modalService: ModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.params.subscribe((qParams) => {\n      if (qParams.id == null) {\n        return this.router.navigate([\"settings/emergency-access\"]);\n      }\n\n      this.id = qParams.id;\n\n      this.load();\n    });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    // eslint-disable-next-line\n    const [_, childComponent] = await this.modalService.openViewRef(\n      EmergencyAddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.cipher = cipher;\n      }\n    );\n\n    return childComponent;\n  }\n\n  async load() {\n    const response = await this.apiService.postEmergencyAccessView(this.id);\n    this.ciphers = await this.getAllCiphers(response);\n    this.loaded = true;\n  }\n\n  async viewAttachments(cipher: CipherView) {\n    await this.modalService.openViewRef(\n      EmergencyAccessAttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipher = cipher;\n        comp.emergencyAccessId = this.id;\n      }\n    );\n  }\n\n  protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n    const ciphers = response.ciphers;\n\n    const decCiphers: CipherView[] = [];\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    const promises: any[] = [];\n    ciphers.forEach((cipherResponse) => {\n      const cipherData = new CipherData(cipherResponse);\n      const cipher = new Cipher(cipherData);\n      promises.push(cipher.decrypt(oldEncKey).then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n    return decCiphers;\n  }\n}\n","export enum EmergencyAccessStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  RecoveryInitiated = 3,\n  RecoveryApproved = 4,\n}\n","export enum EmergencyAccessType {\n  View = 0,\n  Takeover = 1,\n}\n","export class EmergencyAccessConfirmRequest {\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessInviteRequest {\n  email: string;\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessUpdateRequest {\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n  keyEncrypted?: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          <app-premium-badge *ngIf=\"readOnly\"></app-premium-badge>\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteEmergencyContactDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"email\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n            />\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userAccess\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/emergency-access/#user-access\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeView\"\n            [value]=\"emergencyAccessType.View\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeView\">\n            {{ \"view\" | i18n }}\n            <small>{{ \"viewDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeTakeover\"\n            [value]=\"emergencyAccessType.Takeover\"\n            [(ngModel)]=\"type\"\n            [disabled]=\"readOnly\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeTakeover\">\n            {{ \"takeover\" | i18n }}\n            <small>{{ \"takeoverDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-group col-6 mt-4\">\n          <label for=\"waitTime\">{{ \"waitTime\" | i18n }}</label>\n          <select\n            id=\"waitTime\"\n            name=\"waitTime\"\n            [(ngModel)]=\"waitTime\"\n            class=\"form-control\"\n            [disabled]=\"readOnly\"\n          >\n            <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n          <small class=\"text-muted\">{{ \"waitTimeDesc\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          buttonType=\"primary\"\n          bitButton\n          [loading]=\"loading || form.loading\"\n          [disabled]=\"readOnly\"\n        >\n          {{ \"save\" | i18n }}\n        </button>\n        <button bitButton buttonType=\"secondary\" type=\"button\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            bitButton\n            buttonType=\"danger\"\n            type=\"button\"\n            (click)=\"delete()\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { EmergencyAccessInviteRequest } from \"@bitwarden/common/models/request/emergency-access-invite.request\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergency-access-update.request\";\n\n@Component({\n  selector: \"emergency-access-add-edit\",\n  templateUrl: \"emergency-access-add-edit.component.html\",\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() emergencyAccessId: string;\n  @Output() onSaved = new EventEmitter();\n  @Output() onDeleted = new EventEmitter();\n\n  loading = true;\n  readOnly = false;\n  editMode = false;\n  title: string;\n  email: string;\n  type: EmergencyAccessType = EmergencyAccessType.View;\n\n  formPromise: Promise<any>;\n\n  emergencyAccessType = EmergencyAccessType;\n  waitTimes: { name: string; value: number }[];\n  waitTime: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.emergencyAccessId != null;\n\n    this.waitTimes = [\n      { name: this.i18nService.t(\"oneDay\"), value: 1 },\n      { name: this.i18nService.t(\"days\", \"2\"), value: 2 },\n      { name: this.i18nService.t(\"days\", \"7\"), value: 7 },\n      { name: this.i18nService.t(\"days\", \"14\"), value: 14 },\n      { name: this.i18nService.t(\"days\", \"30\"), value: 30 },\n      { name: this.i18nService.t(\"days\", \"90\"), value: 90 },\n    ];\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editEmergencyContact\");\n      try {\n        const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n        this.type = emergencyAccess.type;\n        this.waitTime = emergencyAccess.waitTimeDays;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteEmergencyContact\");\n      this.waitTime = this.waitTimes[2].value;\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new EmergencyAccessUpdateRequest();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n      } else {\n        const request = new EmergencyAccessInviteRequest();\n        request.email = this.email.trim();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n      }\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSaved.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    this.onDeleted.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"emergency-access-confirm\",\n  templateUrl: \"emergency-access-confirm.component.html\",\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() emergencyAccessId: string;\n  @Input() formPromise: Promise<any>;\n  @Output() onConfirmed = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n\n  constructor(\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n      if (publicKeyResponse != null) {\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    try {\n      this.onConfirmed.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class EmergencyAccessPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ \"takeover\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                name=\"NewMasterPasswordHash\"\n                class=\"form-control mb-1\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <app-password-strength\n                [password]=\"masterPassword\"\n                [email]=\"email\"\n                [showText]=\"true\"\n                (passwordStrengthResult)=\"getStrengthResult($event)\"\n              >\n              </app-password-strength>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"password\"\n                name=\"MasterPasswordRetype\"\n                class=\"form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { takeUntil } from \"rxjs\";\n\nimport { ChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { KdfConfig } from \"@bitwarden/common/models/domain/kdf-config\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { EmergencyAccessPasswordRequest } from \"@bitwarden/common/models/request/emergency-access-password.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\n@Component({\n  selector: \"emergency-access-takeover\",\n  templateUrl: \"emergency-access-takeover.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessTakeoverComponent\n  extends ChangePasswordComponent\n  implements OnInit, OnDestroy\n{\n  @Output() onDone = new EventEmitter();\n  @Input() emergencyAccessId: string;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() kdf: KdfType;\n  @Input() kdfIterations: number;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n    if (response.data != null && response.data.length > 0) {\n      const policies = response.data.map(\n        (policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse))\n      );\n\n      this.policyService\n        .masterPasswordPolicyOptions$(policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPolicyOptions) => (this.enforcedPolicyOptions = enforcedPolicyOptions));\n    }\n  }\n\n  // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(\n      this.emergencyAccessId\n    );\n\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    if (oldEncKey == null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"unexpectedError\")\n      );\n      return;\n    }\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      takeoverResponse.kdf,\n      new KdfConfig(\n        takeoverResponse.kdfIterations,\n        takeoverResponse.kdfMemory,\n        takeoverResponse.kdfParallelism\n      )\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n    const request = new EmergencyAccessPasswordRequest();\n    request.newMasterPasswordHash = masterPasswordHash;\n    request.key = encKey[1].encryptedString;\n\n    this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n    try {\n      this.onDone.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"emergencyAccess\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"emergencyAccessDesc\" | i18n }}\n  <a href=\"https://bitwarden.com/help/emergency-access/\" target=\"_blank\" rel=\"noopener\">\n    {{ \"learnMore\" | i18n }}.\n  </a>\n</p>\n\n<p *ngIf=\"isOrganizationOwner\">\n  <b>{{ \"warning\" | i18n }}:</b> {{ \"emergencyAccessOwnerWarning\" | i18n }}\n</p>\n\n<div class=\"page-header d-flex\">\n  <h2>\n    {{ \"trustedEmergencyContacts\" | i18n }}\n    <app-premium-badge></app-premium-badge>\n  </h2>\n  <div class=\"ml-auto d-flex\">\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      type=\"button\"\n      (click)=\"invite()\"\n      [disabled]=\"!canAccessPremium\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-plus bwi-fw\"></i>\n      {{ \"addEmergencyContact\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of trustedContacts; let i = index\">\n      <td width=\"30\">\n        <bit-avatar\n          [text]=\"c | userName\"\n          [id]=\"c.granteeId\"\n          [color]=\"c.avatarColor\"\n          size=\"small\"\n        ></bit-avatar>\n      </td>\n      <td>\n        <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.email }}</a>\n        <span\n          bitBadge\n          badgeType=\"secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{\n          \"emergencyAccessRecoveryApproved\" | i18n\n        }}</span>\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"trustedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #trustedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n            (click)=\"reinvite(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"resendInvitation\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n            (click)=\"confirm(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"confirm\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n            (click)=\"approve(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"approve\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryInitiated ||\n              c.status === emergencyAccessStatusType.RecoveryApproved\n            \"\n            (click)=\"reject(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"reject\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!trustedContacts || !trustedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noTrustedContacts\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<div class=\"page-header spaced-header\">\n  <h2>{{ \"designatedEmergencyContacts\" | i18n }}</h2>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of grantedContacts; let i = index\">\n      <td width=\"30\">\n        <bit-avatar\n          [text]=\"c | userName\"\n          [id]=\"c.grantorId\"\n          [color]=\"c.avatarColor\"\n          size=\"small\"\n        ></bit-avatar>\n      </td>\n      <td>\n        <span>{{ c.email }}</span>\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{\n          \"invited\" | i18n\n        }}</span>\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"grantedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #grantedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"\n            (click)=\"requestAccess(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"requestAccess\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.Takeover\n            \"\n            (click)=\"takeover(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n            {{ \"takeover\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.View\n            \"\n            [routerLink]=\"c.id\"\n          >\n            <i class=\"bwi bwi-fw bwi-eye\" aria-hidden=\"true\"></i>\n            {{ \"view\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!grantedContacts || !grantedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noGrantedAccess\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<ng-template #addEdit></ng-template>\n<ng-template #takeoverTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EmergencyAccessConfirmRequest } from \"@bitwarden/common/models/request/emergency-access-confirm.request\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n} from \"@bitwarden/common/models/response/emergency-access.response\";\n\nimport { EmergencyAccessAddEditComponent } from \"./emergency-access-add-edit.component\";\nimport { EmergencyAccessConfirmComponent } from \"./emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./emergency-access-takeover.component\";\n\n@Component({\n  selector: \"emergency-access\",\n  templateUrl: \"emergency-access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"takeoverTemplate\", { read: ViewContainerRef, static: true })\n  takeoverModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  loaded = false;\n  canAccessPremium: boolean;\n  trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n  grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n  emergencyAccessType = EmergencyAccessType;\n  emergencyAccessStatusType = EmergencyAccessStatusType;\n  actionPromise: Promise<any>;\n  isOrganizationOwner: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const orgs = await this.organizationService.getAll();\n    this.isOrganizationOwner = orgs.some((o) => o.isOwner);\n    this.load();\n  }\n\n  async load() {\n    this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n    this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    this.loaded = true;\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  async edit(details: EmergencyAccessGranteeDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.emergencyAccessId = details?.id;\n        comp.readOnly = !this.canAccessPremium;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSaved.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeleted.subscribe(() => {\n          modal.close();\n          this.remove(details);\n        });\n      }\n    );\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n    if (this.actionPromise != null) {\n      return;\n    }\n    this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n    await this.actionPromise;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenReinvited\", contact.email)\n    );\n    this.actionPromise = null;\n  }\n\n  async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n    function updateUser() {\n      contact.status = EmergencyAccessStatusType.Confirmed;\n    }\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n    if (autoConfirm == null || !autoConfirm) {\n      const [modal] = await this.modalService.openViewRef(\n        EmergencyAccessConfirmComponent,\n        this.confirmModalRef,\n        (comp) => {\n          comp.name = this.userNamePipe.transform(contact);\n          comp.emergencyAccessId = contact.id;\n          comp.userId = contact?.granteeId;\n          // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n          comp.onConfirmed.subscribe(async () => {\n            modal.close();\n\n            comp.formPromise = this.doConfirmation(contact);\n            await comp.formPromise;\n\n            updateUser();\n            this.platformUtilsService.showToast(\n              \"success\",\n              null,\n              this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n            );\n          });\n        }\n      );\n      return;\n    }\n\n    this.actionPromise = this.doConfirmation(contact);\n    await this.actionPromise;\n    updateUser();\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n    );\n    this.actionPromise = null;\n  }\n\n  async remove(\n    details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse\n  ) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteEmergencyAccess(details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(details))\n      );\n\n      if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n        this.removeGrantee(details);\n      } else {\n        this.removeGrantor(details);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"requestAccessConfirmation\", details.waitTimeDays.toString()),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"requestAccess\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessInitiate(details.id);\n\n    details.status = EmergencyAccessStatusType.RecoveryInitiated;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"requestSent\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async approve(details: EmergencyAccessGranteeDetailsResponse) {\n    const type = this.i18nService.t(\n      details.type === EmergencyAccessType.View ? \"view\" : \"takeover\"\n    );\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"approveAccessConfirmation\", this.userNamePipe.transform(details), type),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"approve\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessApprove(details.id);\n    details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyApproved\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async reject(details: EmergencyAccessGranteeDetailsResponse) {\n    await this.apiService.postEmergencyAccessReject(details.id);\n    details.status = EmergencyAccessStatusType.Confirmed;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyRejected\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessTakeoverComponent,\n      this.takeoverModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.email = details.email;\n        comp.emergencyAccessId = details != null ? details.id : null;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDone.subscribe(() => {\n          modal.close();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"passwordResetFor\", this.userNamePipe.transform(details))\n          );\n        });\n      }\n    );\n  }\n\n  private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n    const index = this.trustedContacts.indexOf(details);\n    if (index > -1) {\n      this.trustedContacts.splice(index, 1);\n    }\n  }\n\n  private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n    const index = this.grantedContacts.indexOf(details);\n    if (index > -1) {\n      this.grantedContacts.splice(index, 1);\n    }\n  }\n\n  // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n  private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n    const encKey = await this.cryptoService.getEncKey();\n    const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n    const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n    try {\n      this.logService.debug(\n        \"User's fingerprint: \" +\n          (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join(\"-\")\n      );\n    } catch {\n      // Ignore errors since it's just a debug message\n    }\n\n    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n    const request = new EmergencyAccessConfirmRequest();\n    request.key = encryptedKey.encryptedString;\n    await this.apiService.postEmergencyAccessConfirm(details.id, request);\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\nimport { combineLatestWith, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent\n  implements ControlValueAccessor, Validator, OnInit, OnDestroy\n{\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.MaximumVaultTimeout)\n      .pipe(combineLatestWith(this.policyService.policies$), takeUntil(this.destroy$))\n      .subscribe(([policyAppliesToActiveUser, policies]) => {\n        if (policyAppliesToActiveUser) {\n          const vaultTimeoutPolicy = policies.find(\n            (policy) => policy.type === PolicyType.MaximumVaultTimeout && policy.enabled\n          );\n\n          this.vaultTimeoutPolicy = vaultTimeoutPolicy;\n          this.applyVaultTimeoutPolicy();\n        }\n      });\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.value.custom.hours * 60 + this.form.value.custom.minutes;\n  }\n\n  private applyVaultTimeoutPolicy() {\n    this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n    this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n    this.vaultTimeouts = this.vaultTimeouts.filter(\n      (t) =>\n        t.value <= this.vaultTimeoutPolicy.data.minutes &&\n        (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n        t.value != null\n    );\n    this.validatorChange();\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n    <small class=\"form-text text-muted\">{{ \"vaultTimeoutDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\">\n    <label for=\"customVaultTimeout\">{{ \"customVaultTimeout\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n\n    <small *ngIf=\"!exceedsMinimumTimout\" class=\"tw-text-danger\">\n      <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i> {{ \"vaultCustomTimeoutMinimum\" | i18n }}\n    </small>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<div class=\"page-header\">\n  <h1>{{ \"preferences\" | i18n }}</h1>\n</div>\n<p>{{ \"preferencesDesc\" | i18n }}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>{{ \"vaultTimeoutAction\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLock\"\n        value=\"lock\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n        {{ \"lock\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLockDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLogOut\"\n        value=\"logOut\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n        (ngModelChange)=\"vaultTimeoutActionChanged($event)\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n        {{ \"logOut\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLogOutDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <div class=\"d-flex\">\n          <label for=\"locale\">{{ \"language\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/localization/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n          <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"languageDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFavicons\"\n        name=\"enableFavicons\"\n        [(ngModel)]=\"enableFavicons\"\n      />\n      <label class=\"form-check-label\" for=\"enableFavicons\">\n        {{ \"enableFavicon\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/website-icons/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"faviconDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFullWidth\"\n        name=\"enableFullWidth\"\n        [(ngModel)]=\"enableFullWidth\"\n      />\n      <label class=\"form-check-label\" for=\"enableFullWidth\">\n        {{ \"enableFullWidth\" | i18n }}\n      </label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableFullWidthDesc\" | i18n }}</small>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n        <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\">\n          <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"themeDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormControl } from \"@angular/forms\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-preferences\",\n  templateUrl: \"preferences.component.html\",\n})\nexport class PreferencesComponent implements OnInit {\n  vaultTimeoutAction = \"lock\";\n  enableFavicons: boolean;\n  enableFullWidth: boolean;\n  theme: ThemeType;\n  locale: string;\n  vaultTimeouts: { name: string; value: number }[];\n  localeOptions: any[];\n  themeOptions: any[];\n\n  vaultTimeout: UntypedFormControl = new UntypedFormControl(null);\n\n  private startingLocale: string;\n  private startingTheme: ThemeType;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private themingService: AbstractThemingService\n  ) {\n    this.vaultTimeouts = [\n      { name: i18nService.t(\"oneMinute\"), value: 1 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: i18nService.t(\"oneHour\"), value: 60 },\n      { name: i18nService.t(\"fourHours\"), value: 240 },\n      { name: i18nService.t(\"onRefresh\"), value: -1 },\n    ];\n    if (this.platformUtilsService.isDev()) {\n      this.vaultTimeouts.push({ name: i18nService.t(\"never\"), value: null });\n    }\n\n    const localeOptions: any[] = [];\n    i18nService.supportedTranslationLocales.forEach((locale) => {\n      let name = locale;\n      if (i18nService.localeNames.has(locale)) {\n        name += \" - \" + i18nService.localeNames.get(locale);\n      }\n      localeOptions.push({ name: name, value: locale });\n    });\n    localeOptions.sort(Utils.getSortFunction(i18nService, \"name\"));\n    localeOptions.splice(0, 0, { name: i18nService.t(\"default\"), value: null });\n    this.localeOptions = localeOptions;\n    this.themeOptions = [\n      { name: i18nService.t(\"themeLight\"), value: ThemeType.Light },\n      { name: i18nService.t(\"themeDark\"), value: ThemeType.Dark },\n      { name: i18nService.t(\"themeSystem\"), value: ThemeType.System },\n    ];\n  }\n\n  async ngOnInit() {\n    this.vaultTimeout.setValue(await this.vaultTimeoutSettingsService.getVaultTimeout());\n    this.vaultTimeoutAction = await this.stateService.getVaultTimeoutAction();\n    this.enableFavicons = !(await this.stateService.getDisableFavicon());\n    this.enableFullWidth = await this.stateService.getEnableFullWidth();\n\n    this.locale = (await this.stateService.getLocale()) ?? null;\n    this.startingLocale = this.locale;\n\n    this.theme = await this.stateService.getTheme();\n    this.startingTheme = this.theme;\n  }\n\n  async submit() {\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutRangeError\")\n      );\n      return;\n    }\n\n    await this.vaultTimeoutSettingsService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    await this.stateService.setDisableFavicon(!this.enableFavicons);\n    await this.stateService.setEnableFullWidth(this.enableFullWidth);\n    this.messagingService.send(\"setFullWidth\");\n    if (this.theme !== this.startingTheme) {\n      await this.themingService.updateConfiguredTheme(this.theme);\n      this.startingTheme = this.theme;\n    }\n    await this.stateService.setLocale(this.locale);\n    if (this.locale !== this.startingLocale) {\n      window.location.reload();\n    } else {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"preferencesUpdated\")\n      );\n    }\n  }\n\n  async vaultTimeoutActionChanged(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutAction = \"lock\";\n        return;\n      }\n    }\n    this.vaultTimeoutAction = newValue;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nimport { FolderRequest } from \"./folder.request\";\n\nexport class FolderWithIdRequest extends FolderRequest {\n  id: string;\n\n  constructor(folder: Folder) {\n    super(folder);\n    this.id = folder.id;\n  }\n}\n","import { Send } from \"../domain/send\";\n\nimport { SendRequest } from \"./send.request\";\n\nexport class SendWithIdRequest extends SendRequest {\n  id: string;\n\n  constructor(send: Send) {\n    super(send);\n    this.id = send.id;\n  }\n}\n","import { CipherWithIdRequest } from \"./cipher-with-id.request\";\nimport { FolderWithIdRequest } from \"./folder-with-id.request\";\nimport { SendWithIdRequest } from \"./send-with-id.request\";\n\nexport class UpdateKeyRequest {\n  ciphers: CipherWithIdRequest[] = [];\n  folders: FolderWithIdRequest[] = [];\n  sends: SendWithIdRequest[] = [];\n  masterPasswordHash: string;\n  privateKey: string;\n  key: string;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"changeMasterPassword\" | i18n }}</h1>\n</div>\n\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<app-callout\n  type=\"info\"\n  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n  *ngIf=\"enforcedPolicyOptions\"\n>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n        <input\n          id=\"currentMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"currentMasterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n        <input\n          id=\"newMasterPassword\"\n          type=\"password\"\n          name=\"NewMasterPasswordHash\"\n          class=\"form-control mb-1\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n        <app-password-strength\n          [password]=\"masterPassword\"\n          [email]=\"email\"\n          [showText]=\"true\"\n          (passwordStrengthResult)=\"getStrengthResult($event)\"\n        >\n        </app-password-strength>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n        <input\n          id=\"masterPasswordRetype\"\n          type=\"password\"\n          name=\"MasterPasswordRetype\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPasswordRetype\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"masterPasswordHint\">{{ \"masterPassHintLabel\" | i18n }}</label>\n    <input\n      id=\"masterPasswordHint\"\n      class=\"form-control\"\n      maxlength=\"50\"\n      type=\"text\"\n      name=\"MasterPasswordHint\"\n      [(ngModel)]=\"masterPasswordHint\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"rotateEncKey\"\n        name=\"RotateEncKey\"\n        [(ngModel)]=\"rotateEncKey\"\n        (change)=\"rotateEncKeyClicked()\"\n      />\n      <label class=\"form-check-label\" for=\"rotateEncKey\">\n        {{ \"rotateAccountEncKey\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"changeMasterPassword\" | i18n }}\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipher-with-id.request\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergency-access-update.request\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folder-with-id.request\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/password.request\";\nimport { SendWithIdRequest } from \"@bitwarden/common/models/request/send-with-id.request\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/update-key.request\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"change-password.component.html\",\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n  rotateEncKey = false;\n  currentMasterPassword: string;\n  masterPasswordHint: string;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private syncService: SyncService,\n    private apiService: ApiService,\n    private sendService: SendService,\n    private organizationService: OrganizationService,\n    private keyConnectorService: KeyConnectorService,\n    private router: Router,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      this.router.navigate([\"/settings/security/two-factor\"]);\n    }\n\n    this.masterPasswordHint = (await this.apiService.getProfile()).masterPasswordHint;\n    await super.ngOnInit();\n  }\n\n  async rotateEncKeyClicked() {\n    if (this.rotateEncKey) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      let hasOldAttachments = false;\n      if (ciphers != null) {\n        for (let i = 0; i < ciphers.length; i++) {\n          if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n            hasOldAttachments = true;\n            break;\n          }\n        }\n      }\n\n      if (hasOldAttachments) {\n        const learnMore = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"oldAttachmentsNeedFixDesc\"),\n          null,\n          this.i18nService.t(\"learnMore\"),\n          this.i18nService.t(\"close\"),\n          \"warning\"\n        );\n        if (learnMore) {\n          this.platformUtilsService.launchUri(\n            \"https://bitwarden.com/help/attachments/#add-storage-space\"\n          );\n        }\n        this.rotateEncKey = false;\n        return;\n      }\n\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateEncryptionKeyWarning\") +\n          \" \" +\n          this.i18nService.t(\"updateEncryptionKeyExportWarning\") +\n          \" \" +\n          this.i18nService.t(\"rotateEncKeyConfirmation\"),\n        this.i18nService.t(\"rotateEncKeyTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        this.rotateEncKey = false;\n      }\n    }\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    await super.submit();\n  }\n\n  async setupSubmitActions() {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    if (this.rotateEncKey) {\n      await this.syncService.fullSync(true);\n    }\n\n    return super.setupSubmitActions();\n  }\n\n  async performSubmitActions(\n    newMasterPasswordHash: string,\n    newKey: SymmetricCryptoKey,\n    newEncKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const request = new PasswordRequest();\n    request.masterPasswordHash = await this.cryptoService.hashPassword(\n      this.currentMasterPassword,\n      null\n    );\n    request.masterPasswordHint = this.masterPasswordHint;\n    request.newMasterPasswordHash = newMasterPasswordHash;\n    request.key = newEncKey[1].encryptedString;\n\n    try {\n      if (this.rotateEncKey) {\n        this.formPromise = this.apiService.postPassword(request).then(() => {\n          return this.updateKey(newKey, request.newMasterPasswordHash);\n        });\n      } else {\n        this.formPromise = this.apiService.postPassword(request);\n      }\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = masterPasswordHash;\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    const sends = await this.sendService.getAll();\n    await Promise.all(\n      sends.map(async (send) => {\n        const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n        send.key = (await this.cryptoService.encrypt(cryptoKey, encKey[0])) ?? send.key;\n        request.sends.push(new SendWithIdRequest(send));\n      })\n    );\n\n    await this.apiService.postAccountKey(request);\n\n    await this.updateEmergencyAccesses(encKey[0]);\n\n    await this.updateAllResetPasswordKeys(encKey[0], masterPasswordHash);\n  }\n\n  private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n    const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n    const allowedStatuses = [\n      EmergencyAccessStatusType.Confirmed,\n      EmergencyAccessStatusType.RecoveryInitiated,\n      EmergencyAccessStatusType.RecoveryApproved,\n    ];\n\n    const filteredAccesses = emergencyAccess.data.filter((d) => allowedStatuses.includes(d.status));\n\n    for (const details of filteredAccesses) {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      const updateRequest = new EmergencyAccessUpdateRequest();\n      updateRequest.type = details.type;\n      updateRequest.waitTimeDays = details.waitTimeDays;\n      updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n      await this.apiService.putEmergencyAccess(details.id, updateRequest);\n    }\n  }\n\n  private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey, masterPasswordHash: string) {\n    const orgs = await this.organizationService.getAll();\n\n    for (const org of orgs) {\n      // If not already enrolled, skip\n      if (!org.resetPasswordEnrolled) {\n        continue;\n      }\n\n      // Retrieve public key\n      const response = await this.organizationApiService.getKeys(org.id);\n      const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n      // Re-enroll - encrpyt user's encKey.key with organization public key\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Create/Execute request\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = masterPasswordHash;\n      request.resetPasswordKey = encryptedKey.encryptedString;\n\n      await this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n        org.id,\n        org.userId,\n        request\n      );\n    }\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { PasswordRequest } from \"./password.request\";\n\nexport class KdfRequest extends PasswordRequest {\n  kdf: KdfType;\n  kdfIterations: number;\n  kdfMemory?: number;\n  kdfParallelism?: number;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"encKeySettings\" | i18n }}</h1>\n</div>\n<bit-callout type=\"warning\">{{ \"changeKdfLoggedOutWarning\" | i18n }}</bit-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"kdfMasterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"kdfMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdf\">{{ \"kdfAlgorithm\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://en.wikipedia.org/wiki/Key_derivation_function\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <select\n          id=\"kdf\"\n          name=\"Kdf\"\n          [(ngModel)]=\"kdf\"\n          (ngModelChange)=\"onChangeKdf($event)\"\n          class=\"form-control mb-3\"\n          required\n        >\n          <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <ng-container *ngIf=\"kdf == kdfType.Argon2id\">\n          <label for=\"kdfMemory\">{{ \"kdfMemory\" | i18n }}</label>\n          <input\n            id=\"kdfMemory\"\n            type=\"number\"\n            min=\"16\"\n            max=\"1024\"\n            name=\"Memory\"\n            class=\"form-control mb-3\"\n            [(ngModel)]=\"kdfConfig.memory\"\n            required\n          />\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <ng-container *ngIf=\"kdf == kdfType.PBKDF2_SHA256\">\n          <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/kdf-algorithms\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n          <input\n            id=\"kdfIterations\"\n            type=\"number\"\n            min=\"5000\"\n            max=\"2000000\"\n            name=\"KdfIterations\"\n            class=\"form-control\"\n            [(ngModel)]=\"kdfConfig.iterations\"\n            required\n          />\n        </ng-container>\n        <ng-container *ngIf=\"kdf == kdfType.Argon2id\">\n          <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n          <input\n            id=\"iterations\"\n            type=\"number\"\n            min=\"1\"\n            max=\"1024\"\n            name=\"Iterations\"\n            class=\"form-control mb-3\"\n            [(ngModel)]=\"kdfConfig.iterations\"\n            required\n          />\n          <label for=\"kdfParallelism\">{{ \"kdfParallelism\" | i18n }}</label>\n          <input\n            id=\"kdfParallelism\"\n            type=\"number\"\n            min=\"1\"\n            max=\"16\"\n            name=\"Parallelism\"\n            class=\"form-control\"\n            [(ngModel)]=\"kdfConfig.parallelism\"\n            required\n          />\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <ng-container *ngIf=\"kdf == kdfType.PBKDF2_SHA256\">\n        <p class=\"small form-text text-muted\">\n          {{ \"kdfIterationsDesc\" | i18n: (recommendedPbkdf2Iterations | number) }}\n        </p>\n        <bit-callout type=\"warning\">\n          {{ \"kdfIterationsWarning\" | i18n: (100000 | number) }}\n        </bit-callout>\n      </ng-container>\n      <ng-container *ngIf=\"kdf == kdfType.Argon2id\">\n        <p class=\"small form-text text-muted\">{{ \"argon2Desc\" | i18n }}</p>\n        <bit-callout type=\"warning\"> {{ \"argon2Warning\" | i18n }}</bit-callout>\n      </ng-container>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"changeKdf\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport {\n  DEFAULT_KDF_CONFIG,\n  DEFAULT_PBKDF2_ITERATIONS,\n  DEFAULT_ARGON2_ITERATIONS,\n  DEFAULT_ARGON2_MEMORY,\n  DEFAULT_ARGON2_PARALLELISM,\n  KdfType,\n} from \"@bitwarden/common/enums/kdfType\";\nimport { KdfConfig } from \"@bitwarden/common/models/domain/kdf-config\";\nimport { KdfRequest } from \"@bitwarden/common/models/request/kdf.request\";\n\n@Component({\n  selector: \"app-change-kdf\",\n  templateUrl: \"change-kdf.component.html\",\n})\nexport class ChangeKdfComponent implements OnInit {\n  masterPassword: string;\n  kdf = KdfType.PBKDF2_SHA256;\n  kdfConfig: KdfConfig = DEFAULT_KDF_CONFIG;\n  kdfType = KdfType;\n  kdfOptions: any[] = [];\n  formPromise: Promise<any>;\n  recommendedPbkdf2Iterations = DEFAULT_PBKDF2_ITERATIONS;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.kdfOptions = [\n      { name: \"PBKDF2 SHA-256\", value: KdfType.PBKDF2_SHA256 },\n      { name: \"Argon2id\", value: KdfType.Argon2id },\n    ];\n  }\n\n  async ngOnInit() {\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfConfig = await this.stateService.getKdfConfig();\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeKeyAndSaveAsync();\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"encKeySettingsChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async onChangeKdf(newValue: KdfType) {\n    if (newValue === KdfType.PBKDF2_SHA256) {\n      this.kdfConfig = new KdfConfig(DEFAULT_PBKDF2_ITERATIONS);\n    } else if (newValue === KdfType.Argon2id) {\n      this.kdfConfig = new KdfConfig(\n        DEFAULT_ARGON2_ITERATIONS,\n        DEFAULT_ARGON2_MEMORY,\n        DEFAULT_ARGON2_PARALLELISM\n      );\n    } else {\n      throw new Error(\"Unknown KDF type.\");\n    }\n  }\n\n  private async makeKeyAndSaveAsync() {\n    const request = new KdfRequest();\n    request.kdf = this.kdf;\n    request.kdfIterations = this.kdfConfig.iterations;\n    request.kdfMemory = this.kdfConfig.memory;\n    request.kdfParallelism = this.kdfConfig.parallelism;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n    const email = await this.stateService.getEmail();\n    const newKey = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email,\n      this.kdf,\n      this.kdfConfig\n    );\n    request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      newKey\n    );\n    const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n    request.key = newEncKey[1].encryptedString;\n\n    await this.apiService.postAccountKdf(request);\n  }\n}\n","<app-change-kdf *ngIf=\"showChangeKdf\"></app-change-kdf>\n<div\n  [ngClass]=\"{ 'tabbed-header': !showChangeKdf, 'secondary-header': showChangeKdf }\"\n  class=\"border-0 mb-0\"\n>\n  <h1>{{ \"apiKey\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"userApiKeyDesc\" | i18n }}\n</p>\n<button bitButton buttonType=\"secondary\" (click)=\"viewUserApiKey()\">\n  {{ \"viewApiKey\" | i18n }}\n</button>\n<button bitButton buttonType=\"secondary\" (click)=\"rotateUserApiKey()\">\n  {{ \"rotateApiKey\" | i18n }}\n</button>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ApiKeyComponent } from \"./api-key.component\";\n\n@Component({\n  selector: \"app-security-keys\",\n  templateUrl: \"security-keys.component.html\",\n})\nexport class SecurityKeysComponent implements OnInit {\n  @ViewChild(\"viewUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  viewUserApiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateUserApiKeyModalRef: ViewContainerRef;\n\n  showChangeKdf = true;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeKdf = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async viewUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"userApiKeyDesc\";\n    });\n  }\n\n  async rotateUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.isRotation = true;\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\">\n  <ul class=\"nav nav-tabs\">\n    <ng-container *ngIf=\"showChangePassword\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"change-password\" routerLinkActive=\"active\">\n          {{ \"masterPassword\" | i18n }}\n        </a>\n      </li>\n    </ng-container>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"two-factor\" routerLinkActive=\"active\">\n        {{ \"twoStepLogin\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"security-keys\" routerLinkActive=\"active\">\n        {{ \"keys\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\n\n@Component({\n  selector: \"app-security\",\n  templateUrl: \"security.component.html\",\n})\nexport class SecurityComponent {\n  showChangePassword = true;\n\n  constructor(private keyConnectorService: KeyConnectorService) {}\n\n  async ngOnInit() {\n    this.showChangePassword = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ChangePasswordComponent } from \"./change-password.component\";\nimport { SecurityKeysComponent } from \"./security-keys.component\";\nimport { SecurityComponent } from \"./security.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SecurityComponent,\n    data: { titleId: \"security\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"change-password\" },\n      {\n        path: \"change-password\",\n        component: ChangePasswordComponent,\n        data: { titleId: \"masterPassword\" },\n      },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"security-keys\",\n        component: SecurityKeysComponent,\n        data: { titleId: \"keys\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SecurityRoutingModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"accountSettings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a routerLink=\"security\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"security\" | i18n }}\n          </a>\n          <a routerLink=\"preferences\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"preferences\" | i18n }}\n          </a>\n          <a\n            routerLink=\"subscription\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!hideSubscription\"\n          >\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"domainRules\" | i18n }}\n          </a>\n          <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"emergencyAccess\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sponsored-families\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"hasFamilySponsorshipAvailable\"\n          >\n            {{ \"sponsoredFamilies\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { StateService } from \"../core\";\n\nconst BroadcasterSubscriptionId = \"SettingsComponent\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  premium: boolean;\n  selfHosted: boolean;\n  hasFamilySponsorshipAvailable: boolean;\n  hideSubscription: boolean;\n\n  constructor(\n    private tokenService: TokenService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"purchasedPremium\":\n            await this.load();\n            break;\n          default:\n        }\n      });\n    });\n\n    this.selfHosted = await this.platformUtilsService.isSelfHost();\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.premium = await this.stateService.getHasPremiumPersonally();\n    this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();\n    const hasPremiumFromOrg = await this.stateService.getHasPremiumFromOrganization();\n    let billing = null;\n    if (!this.selfHosted) {\n      billing = await this.apiService.getUserBillingHistory();\n    }\n    this.hideSubscription =\n      !this.premium && hasPremiumFromOrg && (this.selfHosted || billing?.hasNoHistory);\n  }\n}\n","import { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\n\nexport function notAllowedValueAsync(\n  valueGetter: () => Promise<string>,\n  caseInsensitive = false\n): AsyncValidatorFn {\n  return async (control: AbstractControl): Promise<ValidationErrors | null> => {\n    let notAllowedValue = await valueGetter();\n    let controlValue = control.value;\n    if (caseInsensitive) {\n      notAllowedValue = notAllowedValue.toLowerCase();\n      controlValue = controlValue.toLowerCase();\n    }\n\n    if (controlValue === notAllowedValue) {\n      return {\n        notAllowedValue: true,\n      };\n    }\n  };\n}\n","<td>\n  {{ sponsoringOrg.familySponsorshipFriendlyName }}\n</td>\n<td>{{ sponsoringOrg.name }}</td>\n<td>\n  <span [ngClass]=\"statusClass\">{{ statusMessage }}</span>\n</td>\n<td class=\"table-action-right\">\n  <div class=\"dropdown\" appListDropdown>\n    <button\n      *ngIf=\"!sponsoringOrg.familySponsorshipToDelete\"\n      class=\"btn btn-outline-secondary dropdown-toggle\"\n      type=\"button\"\n      id=\"dropdownMenuButton\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n      appA11yTitle=\"{{ 'options' | i18n }}\"\n    >\n      <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n      <button\n        #resendEmailBtn\n        *ngIf=\"!isSelfHosted && !sponsoringOrg.familySponsorshipValidUntil\"\n        [appApiAction]=\"resendEmailPromise\"\n        class=\"dropdown-item btn-submit\"\n        [disabled]=\"$any(resendEmailBtn).loading\"\n        (click)=\"resendEmail()\"\n        [attr.aria-label]=\"'resendEmailLabel' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"resendEmail\" | i18n }}</span>\n      </button>\n      <button\n        #revokeSponsorshipBtn\n        [appApiAction]=\"revokeSponsorshipPromise\"\n        class=\"dropdown-item text-danger btn-submit\"\n        [disabled]=\"$any(revokeSponsorshipBtn).loading\"\n        (click)=\"revokeSponsorship()\"\n        [attr.aria-label]=\"'revokeAccount' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"remove\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</td>\n","import { formatDate } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output, OnInit } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"[sponsoring-org-row]\",\n  templateUrl: \"sponsoring-org-row.component.html\",\n})\nexport class SponsoringOrgRowComponent implements OnInit {\n  @Input() sponsoringOrg: Organization = null;\n  @Input() isSelfHosted = false;\n\n  @Output() sponsorshipRemoved = new EventEmitter();\n\n  statusMessage = \"loading\";\n  statusClass: \"text-success\" | \"text-danger\" = \"text-success\";\n\n  revokeSponsorshipPromise: Promise<any>;\n  resendEmailPromise: Promise<any>;\n\n  private locale = \"\";\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.locale = await firstValueFrom(this.i18nService.locale$);\n\n    this.setStatus(\n      this.isSelfHosted,\n      this.sponsoringOrg.familySponsorshipToDelete,\n      this.sponsoringOrg.familySponsorshipValidUntil,\n      this.sponsoringOrg.familySponsorshipLastSyncDate\n    );\n  }\n\n  async revokeSponsorship() {\n    try {\n      this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n      await this.revokeSponsorshipPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.revokeSponsorshipPromise = null;\n  }\n\n  async resendEmail() {\n    this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n    await this.resendEmailPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailSent\"));\n    this.resendEmailPromise = null;\n  }\n\n  get isSentAwaitingSync() {\n    return this.isSelfHosted && !this.sponsoringOrg.familySponsorshipLastSyncDate;\n  }\n\n  private async doRevokeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeSponsorshipConfirmation\"),\n      `${this.i18nService.t(\"remove\")} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reclaimedFreePlan\"));\n    this.sponsorshipRemoved.emit();\n  }\n\n  private setStatus(\n    selfHosted: boolean,\n    toDelete?: boolean,\n    validUntil?: Date,\n    lastSyncDate?: Date\n  ) {\n    /*\n     * Possible Statuses:\n     * Requested (self-hosted only)\n     * Sent\n     * Active\n     * RequestRevoke\n     * RevokeWhenExpired\n     */\n\n    if (toDelete && validUntil) {\n      // They want to delete but there is a valid until date which means there is an active sponsorship\n      this.statusMessage = this.i18nService.t(\n        \"revokeWhenExpired\",\n        formatDate(validUntil, \"MM/dd/yyyy\", this.locale)\n      );\n      this.statusClass = \"text-danger\";\n    } else if (toDelete) {\n      // They want to delete and we don't have a valid until date so we can\n      // this should only happen on a self-hosted install\n      this.statusMessage = this.i18nService.t(\"requestRemoved\");\n      this.statusClass = \"text-danger\";\n    } else if (validUntil) {\n      // They don't want to delete and they have a valid until date\n      // that means they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"active\");\n      this.statusClass = \"text-success\";\n    } else if (selfHosted && lastSyncDate) {\n      // We are on a self-hosted install and it has been synced but we have not gotten\n      // a valid until date so we can't know if they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else if (!selfHosted) {\n      // We are in cloud and all other status checks have been false therefore we have\n      // sent the request but it hasn't been accepted yet\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else {\n      // We are on a self-hosted install and we have not synced yet\n      this.statusMessage = this.i18nService.t(\"requested\");\n      this.statusClass = \"text-success\";\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"sponsoredFamilies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading\">\n  <p>\n    {{ \"sponsoredFamiliesEligible\" | i18n }}\n  </p>\n  <div>\n    {{ \"sponsoredFamiliesInclude\" | i18n }}:\n    <ul class=\"inset-list\">\n      <li>{{ \"sponsoredFamiliesPremiumAccess\" | i18n }}</li>\n      <li>{{ \"sponsoredFamiliesSharedCollections\" | i18n }}</li>\n    </ul>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    [formGroup]=\"sponsorshipForm\"\n    ngNativeValidate\n    *ngIf=\"anyOrgsAvailable$ | async\"\n  >\n    <div class=\"form-group col-7\">\n      <label for=\"availableSponsorshipOrg\">{{ \"familiesSponsoringOrgSelect\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        formControlName=\"selectedSponsorshipOrgId\"\n        class=\"form-control\"\n        required\n      >\n        <option disabled=\"true\" value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option *ngFor=\"let o of availableSponsorshipOrgs$ | async\" [ngValue]=\"o.id\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div class=\"form-group col-7\">\n      <label for=\"sponsorshipEmail\">{{ \"sponsoredFamiliesEmail\" | i18n }}:</label>\n      <input\n        id=\"sponsorshipEmail\"\n        class=\"form-control\"\n        inputmode=\"email\"\n        formControlName=\"sponsorshipEmail\"\n        name=\"sponsorshipEmail\"\n        required\n        [attr.aria-invalid]=\"sponsorshipEmailControl.invalid\"\n      />\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.notAllowedValue\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"cannotSponsorSelf\" | i18n }}\n      </small>\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.email\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"invalidEmail\" | i18n }}\n      </small>\n    </div>\n    <div class=\"form-group col-7\">\n      <button class=\"btn btn-primary btn-submit mt-2\" type=\"submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"redeem\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n  <ng-container *ngIf=\"anyActiveSponsorships$ | async\">\n    <div class=\"border-bottom\">\n      <table class=\"table table-hover table-list\">\n        <thead>\n          <tr>\n            <th>{{ \"recipient\" | i18n }}</th>\n            <th>{{ \"sponsoringOrg\" | i18n }}</th>\n            <th>{{ \"status\" | i18n }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let o of activeSponsorshipOrgs$ | async\">\n            <tr\n              sponsoring-org-row\n              [sponsoringOrg]=\"o\"\n              [isSelfHosted]=\"isSelfHosted\"\n              (sponsorshipRemoved)=\"forceReload()\"\n            ></tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <small>{{ \"sponsoredFamiliesLeaveCopy\" | i18n }}</small>\n  </ng-container>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { notAllowedValueAsync } from \"@bitwarden/angular/validators/notAllowedValueAsync.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\ninterface RequestSponsorshipForm {\n  selectedSponsorshipOrgId: FormControl<string>;\n  sponsorshipEmail: FormControl<string>;\n}\n\n@Component({\n  selector: \"app-sponsored-families\",\n  templateUrl: \"sponsored-families.component.html\",\n})\nexport class SponsoredFamiliesComponent implements OnInit, OnDestroy {\n  loading = false;\n\n  availableSponsorshipOrgs$: Observable<Organization[]>;\n  activeSponsorshipOrgs$: Observable<Organization[]>;\n  anyOrgsAvailable$: Observable<boolean>;\n  anyActiveSponsorships$: Observable<boolean>;\n\n  // Conditional display properties\n  formPromise: Promise<void>;\n\n  sponsorshipForm: FormGroup<RequestSponsorshipForm>;\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    private stateService: StateService\n  ) {\n    this.sponsorshipForm = this.formBuilder.group<RequestSponsorshipForm>({\n      selectedSponsorshipOrgId: new FormControl(\"\", {\n        validators: [Validators.required],\n      }),\n      sponsorshipEmail: new FormControl(\"\", {\n        validators: [Validators.email],\n        asyncValidators: [\n          notAllowedValueAsync(async () => await this.stateService.getEmail(), true),\n        ],\n        updateOn: \"blur\",\n      }),\n    });\n  }\n\n  async ngOnInit() {\n    this.availableSponsorshipOrgs$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.familySponsorshipAvailable))\n    );\n\n    this.availableSponsorshipOrgs$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (orgs.length === 1) {\n        this.sponsorshipForm.patchValue({\n          selectedSponsorshipOrgId: orgs[0].id,\n        });\n      }\n    });\n\n    this.anyOrgsAvailable$ = this.availableSponsorshipOrgs$.pipe(map((orgs) => orgs.length > 0));\n\n    this.activeSponsorshipOrgs$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.familySponsorshipFriendlyName !== null))\n    );\n\n    this.anyActiveSponsorships$ = this.activeSponsorshipOrgs$.pipe(map((orgs) => orgs.length > 0));\n\n    this.loading = false;\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async submit() {\n    this.formPromise = this.apiService.postCreateSponsorship(\n      this.sponsorshipForm.value.selectedSponsorshipOrgId,\n      {\n        sponsoredEmail: this.sponsorshipForm.value.sponsorshipEmail,\n        planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n        friendlyName: this.sponsorshipForm.value.sponsorshipEmail,\n      }\n    );\n\n    await this.formPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"sponsorshipCreated\"));\n    this.formPromise = null;\n    this.resetForm();\n    await this.forceReload();\n  }\n\n  async forceReload() {\n    this.loading = true;\n    await this.syncService.fullSync(true);\n    this.loading = false;\n  }\n\n  get sponsorshipEmailControl() {\n    return this.sponsorshipForm.controls.sponsorshipEmail;\n  }\n\n  private async resetForm() {\n    this.sponsorshipForm.reset();\n  }\n\n  get isSelfHosted(): boolean {\n    return this.platformUtilsService.isSelfHost();\n  }\n}\n","<div class=\"d-flex tabbed-header\">\n  <h1>\n    {{ \"billingHistory\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <app-billing-history [billing]=\"billing\"></app-billing-history>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billing-history.response\";\n\n@Component({\n  selector: \"app-billing-history-view\",\n  templateUrl: \"billing-history-view.component.html\",\n})\nexport class BillingHistoryViewComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  billing: BillingHistoryResponse;\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n      return;\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingHistory();\n    this.loading = false;\n  }\n}\n","<div *ngIf=\"selfHosted\" class=\"page-header\">\n  <h1>{{ \"subscription\" | i18n }}</h1>\n</div>\n<div *ngIf=\"!selfHosted\" class=\"tabbed-header\">\n  <h1>{{ \"goPremium\" | i18n }}</h1>\n</div>\n<bit-callout\n  type=\"info\"\n  *ngIf=\"canAccessPremium\"\n  title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n  icon=\"bwi bwi-star-f\"\n>\n  {{ \"alreadyPremiumFromOrg\" | i18n }}\n</bit-callout>\n<bit-callout type=\"success\">\n  <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n  <ul class=\"bwi-ul\">\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpStorage\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTwoStep\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpEmergency\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpReports\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTotp\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpSupport\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpFuture\" | i18n }}\n    </li>\n  </ul>\n  <p class=\"text-lg\" [ngClass]=\"{ 'mb-0': !selfHosted }\">\n    {{ \"premiumPriceWithFamilyPlan\" | i18n: (premiumPrice | currency: \"$\"):familyPlanMaxUserCount }}\n    <a routerLink=\"/create-organization\" [queryParams]=\"{ plan: 'families' }\">{{\n      \"bitwardenFamiliesPlan\" | i18n\n    }}</a>\n  </p>\n  <a\n    bitButton\n    href=\"https://vault.bitwarden.com/#/settings/premium\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    buttonType=\"secondary\"\n    *ngIf=\"selfHosted\"\n  >\n    {{ \"purchasePremium\" | i18n }}\n  </a>\n</bit-callout>\n<ng-container *ngIf=\"selfHosted\">\n  <p>{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n      {{ \"submit\" | i18n }}\n    </button>\n  </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n  <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n      <input\n        id=\"additionalStorage\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"AdditionalStorageGb\"\n        [(ngModel)]=\"additionalStorage\"\n        min=\"0\"\n        max=\"99\"\n        step=\"1\"\n        placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n      />\n      <small class=\"text-muted form-text\">{{\n        \"additionalStorageIntervalDesc\"\n          | i18n: \"1 GB\":(storageGbPrice | currency: \"$\"):(\"year\" | i18n)\n      }}</small>\n    </div>\n  </div>\n  <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n  {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n  {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n  {{ storageGbPrice | currency: \"$\" }} =\n  {{ additionalStorageTotal | currency: \"$\" }}\n  <hr class=\"my-3\" />\n  <h2 class=\"spaced-header mb-4\">{{ \"paymentInformation\" | i18n }}</h2>\n  <app-payment [hideBank]=\"true\"></app-payment>\n  <app-tax-info></app-tax-info>\n  <div id=\"price\" class=\"my-4\">\n    <div class=\"text-muted text-sm\">\n      {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n      <br />\n      <ng-container>\n        {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n      </ng-container>\n    </div>\n    <hr class=\"my-1 col-3 ml-0\" />\n    <p class=\"text-lg\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n  </div>\n  <small class=\"text-muted font-italic\">{{ \"paymentChargedAnnually\" | i18n }}</small>\n  <button type=\"submit\" bitButton [loading]=\"form.loading\">\n    {{ \"submit\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium = false;\n  selfHosted = false;\n  premiumPrice = 10;\n  familyPlanMaxUserCount = 6;\n  storageGbPrice = 4;\n  additionalStorage = 0;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const premiumPersonally = await this.stateService.getHasPremiumPersonally();\n    if (premiumPersonally) {\n      this.router.navigate([\"/settings/subscription/user-subscription\"]);\n      return;\n    }\n  }\n\n  async submit() {\n    let files: FileList = null;\n    if (this.selfHosted) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n    }\n\n    try {\n      if (this.selfHosted) {\n        if (!this.tokenService.getEmailVerified()) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            this.i18nService.t(\"errorOccurred\"),\n            this.i18nService.t(\"verifyEmailFirst\")\n          );\n          return;\n        }\n\n        const fd = new FormData();\n        fd.append(\"license\", files[0]);\n        this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n          return this.finalizePremium();\n        });\n      } else {\n        this.formPromise = this.paymentComponent\n          .createPaymentToken()\n          .then((result) => {\n            const fd = new FormData();\n            fd.append(\"paymentMethodType\", result[1].toString());\n            if (result[0] != null) {\n              fd.append(\"paymentToken\", result[0]);\n            }\n            fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n            fd.append(\"country\", this.taxInfoComponent.taxInfo.country);\n            fd.append(\"postalCode\", this.taxInfoComponent.taxInfo.postalCode);\n            return this.apiService.postPremium(fd);\n          })\n          .then((paymentResponse) => {\n            if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n              return this.paymentComponent.handleStripeCardPayment(\n                paymentResponse.paymentIntentClientSecret,\n                () => this.finalizePremium()\n              );\n            } else {\n              return this.finalizePremium();\n            }\n          });\n      }\n      await this.formPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"premiumUpdated\"));\n    this.messagingService.send(\"purchasedPremium\");\n    this.router.navigate([\"/settings/subscription/user-subscription\"]);\n  }\n\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null\n      ? (this.taxInfoComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\" *ngIf=\"!selfHosted\">\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [routerLink]=\"subscriptionRoute\" routerLinkActive=\"active\">\n        {{ \"subscription\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"payment-method\" routerLinkActive=\"active\">\n        {{ \"paymentMethod\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"billing-history\" routerLinkActive=\"active\">\n        {{ \"billingHistory\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-subscription\",\n  templateUrl: \"subscription.component.html\",\n})\nexport class SubscriptionComponent {\n  hasPremium: boolean;\n  selfHosted: boolean;\n\n  constructor(\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.hasPremium = await this.stateService.getHasPremiumPersonally();\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  get subscriptionRoute(): string {\n    return this.hasPremium ? \"user-subscription\" : \"premium\";\n  }\n}\n","<div\n  [ngClass]=\"{\n    'page-header': selfHosted,\n    'tabbed-header': !selfHosted\n  }\"\n>\n  <h1>\n    {{ title }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</bit-callout\n  >\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      bitButton\n      type=\"button\"\n      buttonType=\"secondary\"\n      #reinstateBtn\n      class=\"btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"$any(reinstateBtn).loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </bit-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"row\" *ngIf=\"!selfHosted\">\n    <div class=\"col-4\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"text-capitalize\">{{ (subscription && subscription.status) || \"-\" }}</span>\n          <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (nextInvoice.date | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"col-8\" *ngIf=\"subscription\">\n      <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n      <table class=\"table\">\n        <tbody>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        href=\"https://vault.bitwarden.com/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        >\n        </app-update-license>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"d-flex\">\n      <button\n        bitButton\n        type=\"button\"\n        buttonType=\"secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        bitButton\n        #cancelBtn\n        type=\"button\"\n        buttonType=\"danger\"\n        class=\"btn-submit tw-ml-auto\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"$any(cancelBtn).loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            bitButton\n            type=\"button\"\n            buttonType=\"secondary\"\n            class=\"tw-ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"4\"\n          [add]=\"adjustStorageAdd\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SubscriptionResponse } from \"@bitwarden/common/models/response/subscription.response\";\n\n@Component({\n  selector: \"app-user-subscription\",\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService,\n    private fileDownloadService: FileDownloadService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.stateService.getHasPremiumPersonally()) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      this.router.navigate([\"/settings/subscription/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postCancelPremium();\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.fileDownloadService.download({\n      fileName: \"bitwarden_premium_license.json\",\n      blobData: licenseString,\n    });\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(load: boolean) {\n    this.showUpdateLicense = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  adjustStorage(add: boolean) {\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(add ? \"addStorage\" : \"removeStorage\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get usingInAppPurchase() {\n    return this.sub != null ? this.sub.usingInAppPurchase : false;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.selfHosted ? \"subscription\" : \"premiumMembership\");\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { BillingHistoryViewComponent } from \"./billing-history-view.component\";\nimport { PaymentMethodComponent } from \"./payment-method.component\";\nimport { PremiumComponent } from \"./premium.component\";\nimport { SubscriptionComponent } from \"./subscription.component\";\nimport { UserSubscriptionComponent } from \"./user-subscription.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SubscriptionComponent,\n    data: { titleId: \"subscription\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"premium\" },\n      {\n        path: \"user-subscription\",\n        component: UserSubscriptionComponent,\n        data: { titleId: \"premiumMembership\" },\n      },\n      {\n        path: \"premium\",\n        component: PremiumComponent,\n        data: { titleId: \"goPremium\" },\n      },\n      {\n        path: \"payment-method\",\n        component: PaymentMethodComponent,\n        data: { titleId: \"paymentMethod\" },\n      },\n      {\n        path: \"billing-history\",\n        component: BillingHistoryViewComponent,\n        data: { titleId: \"billingHistory\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubscriptionRoutingModule {}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/password-generator-policy-options\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.initForwardOptions();\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n\n  private async initForwardOptions() {\n    this.forwardOptions = [\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"DuckDuckGo\", value: \"duckduckgo\" },\n      { name: \"Fastmail\", value: \"fastmail\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n    ];\n\n    this.usernameOptions = await this.usernameGenerationService.getOptions();\n    if (\n      this.usernameOptions.forwardedService == null ||\n      this.usernameOptions.forwardedService === \"\"\n    ) {\n      this.forwardOptions.push({ name: \"\", value: null });\n    }\n\n    this.forwardOptions = this.forwardOptions.sort((a, b) => a.name.localeCompare(b.name));\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generated-password-history\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"passHistoryTitle\">{{ \"passwordHistory\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"history.length\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n            <div class=\"tw-min-w-0\">\n              <bit-color-password\n                [password]=\"h.password\"\n                class=\"tw-block tw-font-mono\"\n                appSelectCopy\n              ></bit-color-password>\n              <small class=\"text-muted\">{{ h.date | date: \"medium\" }}</small>\n            </div>\n            <div class=\"ml-auto\">\n              <button\n                class=\"btn btn-link\"\n                appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                (click)=\"copy(h.password)\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!history.length\">\n        {{ \"noPasswordsInList\" | i18n }}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"clear()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'clear' | i18n }}\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"generator\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n  {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n</app-callout>\n<div class=\"card card-generated bg-light my-4\">\n  <div class=\"card-body\">\n    <bit-color-password\n      [password]=\"type === 'password' ? password : username\"\n      appSelectCopy\n    ></bit-color-password>\n  </div>\n</div>\n<div class=\"form-group\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n  <label id=\"typeHeading\" class=\"d-block\">{{ \"whatWouldYouLikeToGenerate\" | i18n }}</label>\n  <div class=\"form-check form-check-inline\" *ngFor=\"let o of typeOptions\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      [(ngModel)]=\"type\"\n      name=\"Type\"\n      id=\"type_{{ o.value }}\"\n      [value]=\"o.value\"\n      (change)=\"typeChanged()\"\n      [checked]=\"type === o.value\"\n    />\n    <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n      {{ o.name }}\n    </label>\n  </div>\n</div>\n<ng-container *ngIf=\"type === 'password'\">\n  <div aria-labelledby=\"passwordTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <label id=\"passwordTypeHeading\" class=\"d-block\">{{ \"passwordType\" | i18n }}</label>\n    <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"passwordOptions.type\"\n        name=\"PasswordType\"\n        id=\"passwordType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"savePasswordOptions()\"\n        [checked]=\"passwordOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"passwordType_{{ o.value }}\">\n        {{ o.name }}\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"passwordOptions.type === 'passphrase'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n        <input\n          id=\"num-words\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"3\"\n          max=\"20\"\n          [(ngModel)]=\"passwordOptions.numWords\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n        <input\n          id=\"word-separator\"\n          class=\"form-control\"\n          type=\"text\"\n          maxlength=\"1\"\n          [(ngModel)]=\"passwordOptions.wordSeparator\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"capitalize\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.capitalize\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n        />\n        <label for=\"capitalize\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"include-number\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.includeNumber\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n        />\n        <label for=\"include-number\" class=\"form-check-label\">{{ \"includeNumber\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"length\">{{ \"length\" | i18n }}</label>\n        <input\n          id=\"length\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"5\"\n          max=\"128\"\n          [(ngModel)]=\"passwordOptions.length\"\n          (blur)=\"savePasswordOptions()\"\n          (change)=\"lengthChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n        <input\n          id=\"min-number\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minNumber\"\n          (change)=\"minNumberChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n        <input\n          id=\"min-special\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minSpecial\"\n          (change)=\"minSpecialChanged()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"uppercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.uppercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useUppercase\"\n          attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n        />\n        <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"lowercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.lowercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useLowercase\"\n          attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n        />\n        <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"numbers\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.number\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useNumbers\"\n          attr.aria-label=\"{{ 'numbers' | i18n }}\"\n        />\n        <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"special\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.special\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useSpecial\"\n          attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n        />\n        <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"ambiguous\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"avoidAmbiguous\"\n        />\n        <label for=\"ambiguous\" class=\"form-check-label\">{{ \"ambiguous\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"d-flex\">\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n        {{ \"regeneratePassword\" | i18n }}\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n        {{ \"copyPassword\" | i18n }}\n      </button>\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"history()\"\n        appA11yTitle=\"{{ 'passwordHistory' | i18n }}\"\n      >\n        <i class=\"bwi bwi-clock bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'username'\">\n  <div aria-labelledby=\"usernameTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <div class=\"d-block\">\n      <label id=\"usernameTypeHeading\">{{ \"usernameType\" | i18n }}</label>\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/generator/#username-types\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"form-check\" *ngFor=\"let o of usernameTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"usernameOptions.type\"\n        name=\"UsernameType\"\n        id=\"usernameType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"saveUsernameOptions()\"\n        [checked]=\"usernameOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"usernameType_{{ o.value }}\">\n        {{ o.name }}\n        <div class=\"small text-muted\">{{ o.desc }}</div>\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'forwarded'\">\n    <div class=\"form-group\" role=\"listbox\">\n      <label class=\"d-block\">{{ \"service\" | i18n }}</label>\n      <select\n        id=\"ForwardTypeDropdown\"\n        name=\"ForwardType\"\n        [(ngModel)]=\"usernameOptions.forwardedService\"\n        (change)=\"saveUsernameOptions()\"\n        class=\"form-control w-auto\"\n      >\n        <option *ngFor=\"let o of forwardOptions\" [ngValue]=\"o.value\" role=\"option\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n      <div class=\"form-group col-4\">\n        <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"simplelogin-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'duckduckgo'\">\n      <div class=\"form-group col-4\">\n        <label for=\"duckduckgo-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"duckduckgo-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          name=\"DuckDuckGoApiKey\"\n          [(ngModel)]=\"usernameOptions.forwardedDuckDuckGoToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"anonaddy-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n        <input\n          id=\"anonaddy-domain\"\n          class=\"form-control\"\n          type=\"text\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n      <div class=\"form-group col-4\">\n        <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"firefox-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'fastmail'\">\n      <div class=\"form-group col-4\">\n        <label for=\"fastmail-apiToken\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"fastmail-apiToken\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFastmailApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n    <div class=\"form-group col-4\">\n      <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n      <input\n        id=\"subaddress-email\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.subaddressEmail\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'catchall'\">\n    <div class=\"form-group col-4\">\n      <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n      <input\n        id=\"catchall-domain\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.catchallDomain\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'word'\">\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            id=\"capitalizeUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n          <label for=\"capitalizeUsername\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n        </div>\n        <div class=\"form-check\">\n          <input\n            id=\"includeNumberUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n          <label for=\"includeNumberUsername\" class=\"form-check-label\">{{\n            \"includeNumber\" | i18n\n          }}</label>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <div #form [appApiAction]=\"usernameGeneratingPromise\">\n    <button\n      type=\"button\"\n      class=\"btn btn-submit btn-primary\"\n      (click)=\"$any(form).loading ? false : regenerate()\"\n      [attr.aria-disabled]=\"$any(form).loading ? 'true' : null\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"regenerateUsername\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n      {{ \"copyUsername\" | i18n }}\n    </button>\n  </div>\n</ng-container>\n<ng-template #historyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./password-generator-history.component\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  @ViewChild(\"historyTemplate\", { read: ViewContainerRef, static: true })\n  historyModalRef: ViewContainerRef;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    route: ActivatedRoute,\n    private modalService: ModalService\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n    if (platformUtilsService.isSelfHost()) {\n      // Cannot use Firefox Relay on self hosted web vaults due to CORS issues with Firefox Relay API\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"firefoxrelay\"),\n        1\n      );\n      // Also cannot use Duck Duck Go on self hosted web vaults due to CORS issues\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"duckduckgo\"),\n        1\n      );\n    }\n  }\n\n  async history() {\n    await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n  }\n\n  lengthChanged() {\n    document.getElementById(\"length\").focus();\n  }\n\n  minNumberChanged() {\n    document.getElementById(\"min-number\").focus();\n  }\n\n  minSpecialChanged() {\n    document.getElementById(\"min-special\").focus();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent implements OnInit {\n  canAccessPremium = false;\n\n  constructor(private stateService: StateService, private messagingService: MessagingService) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card mb-4\">\n        <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"generator\" | i18n }}\n          </a>\n          <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"importData\" | i18n }}\n          </a>\n          <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"exportVault\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { BulkDeleteDialogComponent } from \"./bulk-delete-dialog/bulk-delete-dialog.component\";\nimport { BulkMoveDialogComponent } from \"./bulk-move-dialog/bulk-move-dialog.component\";\nimport { BulkRestoreDialogComponent } from \"./bulk-restore-dialog/bulk-restore-dialog.component\";\nimport { BulkShareDialogComponent } from \"./bulk-share-dialog/bulk-share-dialog.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [\n    BulkDeleteDialogComponent,\n    BulkMoveDialogComponent,\n    BulkRestoreDialogComponent,\n    BulkShareDialogComponent,\n  ],\n  exports: [\n    BulkDeleteDialogComponent,\n    BulkMoveDialogComponent,\n    BulkRestoreDialogComponent,\n    BulkShareDialogComponent,\n  ],\n})\nexport class BulkDialogsModule {}\n","import { Component } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipher-with-id.request\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folder-with-id.request\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/update-key.request\";\n\n@Component({\n  selector: \"app-update-key\",\n  templateUrl: \"update-key.component.html\",\n})\nexport class UpdateKeyComponent {\n  masterPassword: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (hasEncKey) {\n      return;\n    }\n\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeRequest().then((request) => {\n        return this.apiService.postAccountKey(request);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 }\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async makeRequest(): Promise<UpdateKeyRequest> {\n    const key = await this.cryptoService.getKey();\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n    await this.syncService.fullSync(true);\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    return request;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"updateEncKeyTitle\">{{ \"updateEncryptionKey\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"updateEncryptionKeyShortDesc\" | i18n }} {{ \"updateEncryptionKeyDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <app-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</app-callout>\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appAutofocus\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"updateEncryptionKey\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  protected componentName = \"\";\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"folderAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"folder.name\"\n          required\n          appAutofocus\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  protected override componentName = \"app-folder-add-edit\";\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport {\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\n\n@Directive()\nexport class ShareComponent implements OnInit, OnDestroy {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<void>;\n  cipher: CipherView;\n  collections: Checkable<CollectionView>[] = [];\n  organizations$: Observable<Organization[]>;\n\n  protected writeableCollections: Checkable<CollectionView>[] = [];\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => {\n        return orgs\n          .filter(\n            (o) =>\n              o.enabled && o.status === OrganizationUserStatusType.Confirmed && isNotProviderUser(o)\n          )\n          .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n      })\n    );\n\n    this.organizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (this.organizationId == null && orgs.length > 0) {\n        this.organizationId = orgs[0].id;\n      }\n    });\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => (c.checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgs = await firstValueFrom(this.organizations$);\n    const orgName =\n      orgs.find((o) => o.id === this.organizationId)?.name ?? this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"shareTitle\">\n          {{ \"moveToOrganization\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <ng-container *ngIf=\"organizations$ | async as organizations\">\n        <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n          {{ \"noOrganizationsList\" | i18n }}\n        </div>\n        <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n          <p>{{ \"moveToOrgDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n            <select\n              id=\"organization\"\n              name=\"OrganizationId\"\n              [(ngModel)]=\"organizationId\"\n              class=\"form-control\"\n              (change)=\"filterCollections()\"\n            >\n              <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"d-flex\">\n            <h3>{{ \"collections\" | i18n }}</h3>\n            <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </div>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n                <td class=\"table-list-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td>\n                  {{ c.name }}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-submit manual\"\n            [disabled]=\"form.loading || !canSave\"\n            [ngClass]=\"{ loading: form.loading }\"\n            *ngIf=\"organizations && organizations.length\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <a\n            href=\"#\"\n            routerLink=\"/create-organization\"\n            class=\"btn btn-primary\"\n            *ngIf=\"!organizations || !organizations.length\"\n          >\n            {{ \"newOrganization\" | i18n }}\n          </a>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"cancel\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"verify-email.component.html\",\n})\nexport class VerifyEmailComponent {\n  actionPromise: Promise<unknown>;\n\n  @Output() onVerified = new EventEmitter<boolean>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private tokenService: TokenService\n  ) {}\n\n  async verifyEmail(): Promise<void> {\n    await this.apiService.refreshIdentityToken();\n    if (await this.tokenService.getEmailVerified()) {\n      this.onVerified.emit(true);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n      return;\n    }\n\n    await this.apiService.postAccountVerifyEmail();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"checkInboxForVerification\")\n    );\n  }\n\n  send = async () => {\n    await this.verifyEmail();\n  };\n}\n","<div class=\"tw-rounded tw-border tw-border-solid tw-border-warning-500 tw-bg-background\">\n  <div class=\"tw-bg-warning-500 tw-px-5 tw-py-2.5 tw-font-bold tw-uppercase tw-text-contrast\">\n    <i class=\"bwi bwi-envelope bwi-fw\" aria-hidden=\"true\"></i> {{ \"verifyEmail\" | i18n }}\n  </div>\n  <div class=\"tw-p-5\">\n    <p>{{ \"verifyEmailDesc\" | i18n }}</p>\n    <button id=\"sendBtn\" bitButton type=\"button\" block [bitAction]=\"send\">\n      {{ \"sendEmail\" | i18n }}\n    </button>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-low-kdf\",\n  templateUrl: \"low-kdf.component.html\",\n})\nexport class LowKdfComponent {}\n","<div class=\"tw-rounded tw-border tw-border-solid tw-border-warning-500 tw-bg-background\">\n  <div class=\"tw-bg-warning-500 tw-px-5 tw-py-2.5 tw-font-bold tw-uppercase tw-text-contrast\">\n    <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n    {{ \"lowKdfIterations\" | i18n }}\n  </div>\n  <div class=\"tw-p-5\">\n    <p>{{ \"lowKdfIterationsDesc\" | i18n }}</p>\n    <a\n      bitButton\n      buttonType=\"secondary\"\n      [block]=\"true\"\n      routerLink=\"/settings/security/security-keys\"\n    >\n      {{ \"changeKdfSettings\" | i18n }}\n    </a>\n  </div>\n</div>\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (activeFilterChanged)=\"applyVaultFilter($event)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n              (onAddFolder)=\"addFolder()\"\n              (onEditFolder)=\"editFolder($event)\"\n            ></app-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div [ngClass]=\"{ 'col-6': isShowingCards, 'col-9': !isShowingCards }\">\n      <bit-breadcrumbs *ngIf=\"breadcrumbs.length > 0\">\n        <bit-breadcrumb\n          *ngFor=\"let collection of breadcrumbs; let first = first\"\n          [icon]=\"first ? undefined : 'bwi-collection'\"\n          (click)=\"applyCollectionFilter(collection)\"\n        >\n          <!-- First node in the tree contains a translation key. The rest come from user input. -->\n          <ng-container *ngIf=\"first\">{{ collection.node.name | i18n }}</ng-container>\n          <ng-container *ngIf=\"!first\">{{ collection.node.name }}</ng-container>\n        </bit-breadcrumb>\n      </bit-breadcrumbs>\n      <div class=\"tw-mb-4 tw-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"vaultItemsComponent.actionPromise\">\n            <ng-container *ngIf=\"$any(actionSpinner).loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            bitButton\n            buttonType=\"primary\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!activeFilter.isDeleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"newItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"activeFilter.isDeleted\" icon=\"bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-vault-items\n        [activeFilter]=\"activeFilter\"\n        (activeFilterChanged)=\"applyVaultFilter($event)\"\n        (onCipherClicked)=\"navigateToCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onShareClicked)=\"shareCipher($event)\"\n        (onEditCipherCollectionsClicked)=\"editCipherCollections($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n        (onOrganzationBadgeClicked)=\"applyOrganizationFilter($event)\"\n      >\n      </app-vault-items>\n    </div>\n    <div class=\"col-3\">\n      <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateKeyTitle\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateEncryptionKeyShortDesc\" | i18n }}</p>\n          <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n            {{ \"updateEncryptionKey\" | i18n }}\n          </button>\n        </div>\n      </div>\n\n      <app-low-kdf class=\"d-block mb-4\" *ngIf=\"showLowKdf\"> </app-low-kdf>\n\n      <app-verify-email\n        *ngIf=\"showVerifyEmail\"\n        class=\"d-block mb-4\"\n        (onVerified)=\"emailVerified($event)\"\n      ></app-verify-email>\n\n      <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateBrowser\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateBrowserDesc\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            target=\"_blank\"\n            href=\"https://browser-update.org/update-browser.html\"\n            rel=\"noopener\"\n          >\n            {{ \"updateBrowser\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n        <div class=\"card-header bg-success text-white\">\n          <i class=\"bwi bwi-star-f bwi-fw\" aria-hidden=\"true\"></i> {{ \"goPremium\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            routerLink=\"/settings/subscription/premium\"\n          >\n            {{ \"goPremium\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { firstValueFrom, Subject } from \"rxjs\";\nimport { first, switchMap, takeUntil } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { KdfType, DEFAULT_PBKDF2_ITERATIONS } from \"@bitwarden/common/enums/kdfType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { FolderAddEditComponent } from \"./folder-add-edit.component\";\nimport { ShareComponent } from \"./share.component\";\nimport { VaultFilterComponent } from \"./vault-filter/components/vault-filter.component\";\nimport { VaultFilterService } from \"./vault-filter/services/abstractions/vault-filter.service\";\nimport { VaultFilter } from \"./vault-filter/shared/models/vault-filter.model\";\nimport {\n  CollectionFilter,\n  FolderFilter,\n  OrganizationFilter,\n} from \"./vault-filter/shared/models/vault-filter.type\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\n\nconst BroadcasterSubscriptionId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true }) filterComponent: VaultFilterComponent;\n  @ViewChild(VaultItemsComponent, { static: true }) vaultItemsComponent: VaultItemsComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"folderAddEdit\", { read: ViewContainerRef, static: true })\n  folderAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"share\", { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"updateKeyTemplate\", { read: ViewContainerRef, static: true })\n  updateKeyModalRef: ViewContainerRef;\n\n  showVerifyEmail = false;\n  showBrowserOutdated = false;\n  showUpdateKey = false;\n  showPremiumCallout = false;\n  showLowKdf = false;\n  trashCleanupWarning: string = null;\n  kdfIterations: number;\n  activeFilter: VaultFilter = new VaultFilter();\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private tokenService: TokenService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private vaultFilterService: VaultFilterService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n    this.showBrowserOutdated = window.navigator.userAgent.indexOf(\"MSIE\") !== -1;\n    this.showLowKdf = await this.isLowKdfIteration();\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n\n    this.route.queryParams\n      .pipe(\n        first(),\n        switchMap(async (params: Params) => {\n          await this.syncService.fullSync(false);\n          await this.vaultFilterService.reloadCollections();\n          await this.vaultItemsComponent.reload();\n\n          const canAccessPremium = await this.stateService.getCanAccessPremium();\n          this.showPremiumCallout =\n            !this.showVerifyEmail && !canAccessPremium && !this.platformUtilsService.isSelfHost();\n          this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n\n          const cipherId = getCipherIdFromParams(params);\n          if (!cipherId) {\n            return;\n          }\n          const cipherView = new CipherView();\n          cipherView.id = cipherId;\n          if (params.action === \"clone\") {\n            await this.cloneCipher(cipherView);\n          } else if (params.action === \"edit\") {\n            await this.editCipher(cipherView);\n          }\n        }),\n        switchMap(() => this.route.queryParams),\n        switchMap(async (params) => {\n          const cipherId = getCipherIdFromParams(params);\n          if (cipherId) {\n            if ((await this.cipherService.get(cipherId)) != null) {\n              this.editCipherId(cipherId);\n            } else {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorOccurred\"),\n                this.i18nService.t(\"unknownCipher\")\n              );\n              this.router.navigate([], {\n                queryParams: { itemId: null, cipherId: null },\n                queryParamsHandling: \"merge\",\n              });\n            }\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await Promise.all([\n                this.vaultFilterService.reloadCollections(),\n                this.vaultItemsComponent.load(this.vaultItemsComponent.filter),\n              ]);\n              this.changeDetectorRef.detectChanges();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  get isShowingCards() {\n    return (\n      this.showBrowserOutdated ||\n      this.showPremiumCallout ||\n      this.showUpdateKey ||\n      this.showVerifyEmail ||\n      this.showLowKdf\n    );\n  }\n\n  emailVerified(verified: boolean) {\n    this.showVerifyEmail = !verified;\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async applyVaultFilter(filter: VaultFilter) {\n    this.activeFilter = filter;\n    this.vaultItemsComponent.showAddNew = !this.activeFilter.isDeleted;\n    await this.vaultItemsComponent.reload(\n      this.activeFilter.buildFilter(),\n      this.activeFilter.isDeleted\n    );\n    this.go();\n  }\n\n  async applyOrganizationFilter(orgId: string) {\n    if (orgId == null) {\n      orgId = \"MyVault\";\n    }\n    const orgs = await firstValueFrom(this.filterComponent.filters.organizationFilter.data$);\n    const orgNode = ServiceUtils.getTreeNodeObject(orgs, orgId) as TreeNode<OrganizationFilter>;\n    this.filterComponent.filters?.organizationFilter?.action(orgNode);\n  }\n\n  addFolder = async (): Promise<void> => {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n        });\n      }\n    );\n  };\n\n  editFolder = async (folder: FolderFilter): Promise<void> => {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = folder.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedFolder.subscribe(async () => {\n          modal.close();\n        });\n      }\n    );\n  };\n\n  filterSearchText(searchText: string) {\n    this.vaultItemsComponent.searchText = searchText;\n    this.vaultItemsComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (cipher.organizationId == null && !canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    } else if (cipher.organizationId != null) {\n      const org = this.organizationService.get(cipher.organizationId);\n      if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n        this.messagingService.send(\"upgradeOrganization\", {\n          organizationId: cipher.organizationId,\n        });\n        return;\n      }\n    }\n\n    let madeAttachmentChanges = false;\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onReuploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.vaultItemsComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async shareCipher(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      ShareComponent,\n      this.shareModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSharedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.type = this.activeFilter.cipherType;\n    if (this.activeFilter.organizationId !== \"MyVault\") {\n      component.organizationId = this.activeFilter.organizationId;\n      component.collections = (\n        await firstValueFrom(this.vaultFilterService.filteredCollections$)\n      ).filter((c) => !c.readOnly && c.id != null);\n    }\n    const selectedColId = this.activeFilter.collectionId;\n    if (selectedColId !== \"AllCollections\") {\n      component.collectionIds = [selectedColId];\n    }\n    component.folderId = this.activeFilter.folderId;\n  }\n\n  async navigateToCipher(cipher: CipherView) {\n    this.go({ itemId: cipher?.id });\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(id: string) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n  }\n\n  async updateKey() {\n    await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n  }\n\n  async isLowKdfIteration() {\n    const kdfType = await this.stateService.getKdfType();\n    const kdfOptions = await this.stateService.getKdfConfig();\n    return kdfType === KdfType.PBKDF2_SHA256 && kdfOptions.iterations < DEFAULT_PBKDF2_ITERATIONS;\n  }\n\n  get breadcrumbs(): TreeNode<CollectionFilter>[] {\n    if (!this.activeFilter.selectedCollectionNode) {\n      return [];\n    }\n\n    const collections = [this.activeFilter.selectedCollectionNode];\n    while (collections[collections.length - 1].parent != undefined) {\n      collections.push(collections[collections.length - 1].parent);\n    }\n\n    return collections.map((c) => c).reverse();\n  }\n\n  protected applyCollectionFilter(collection: TreeNode<CollectionFilter>) {\n    const filter = this.activeFilter;\n    filter.resetFilter();\n    filter.selectedCollectionNode = collection;\n    this.applyVaultFilter(filter);\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        favorites: this.activeFilter.isFavorites || null,\n        type: this.activeFilter.cipherType,\n        folderId: this.activeFilter.folderId,\n        collectionId: this.activeFilter.collectionId,\n        deleted: this.activeFilter.isDeleted || null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { BreadcrumbsModule } from \"@bitwarden/components\";\n\nimport { CollectionBadgeModule } from \"../organizations/vault/collection-badge/collection-badge.module\";\nimport { GroupBadgeModule } from \"../organizations/vault/group-badge/group-badge.module\";\nimport { SharedModule, LooseComponentsModule } from \"../shared\";\n\nimport { BulkDialogsModule } from \"./bulk-action-dialogs/bulk-dialogs.module\";\nimport { OrganizationBadgeModule } from \"./organization-badge/organization-badge.module\";\nimport { PipesModule } from \"./pipes/pipes.module\";\nimport { VaultFilterModule } from \"./vault-filter/vault-filter.module\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [\n    VaultFilterModule,\n    VaultRoutingModule,\n    OrganizationBadgeModule,\n    GroupBadgeModule,\n    CollectionBadgeModule,\n    PipesModule,\n    SharedModule,\n    LooseComponentsModule,\n    BulkDialogsModule,\n    BreadcrumbsModule,\n  ],\n  declarations: [VaultComponent, VaultItemsComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { flagEnabled, Flags } from \"../utils/flags\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginWithDeviceComponent } from \"./accounts/login/login-with-device.component\";\nimport { LoginComponent } from \"./accounts/login/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TrialInitiationComponent } from \"./accounts/trial-initiation/trial-initiation.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\nimport { HomeGuard } from \"./guards/home.guard\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { OrganizationModule } from \"./organizations/organization.module\";\nimport { AcceptFamilySponsorshipComponent } from \"./organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ReportsModule } from \"./reports\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { PreferencesComponent } from \"./settings/preferences.component\";\nimport { SecurityRoutingModule } from \"./settings/security-routing.module\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { SubscriptionRoutingModule } from \"./settings/subscription-routing.module\";\nimport { GeneratorComponent } from \"./tools/generator.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    data: { doNotSaveUrl: true },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        children: [], // Children lets us have an empty component.\n        canActivate: [HomeGuard], // Redirects either to vault, login or lock page.\n      },\n      { path: \"login\", component: LoginComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"login-with-device\",\n        component: LoginWithDeviceComponent,\n        data: { titleId: \"loginWithDevice\" },\n      },\n      { path: \"2fa\", component: TwoFactorComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"register\",\n        component: TrialInitiationComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"createAccount\" },\n      },\n      {\n        path: \"trial\",\n        redirectTo: \"register\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"sso\",\n        component: SsoComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"enterpriseSingleSignOn\" },\n      },\n      {\n        path: \"set-password\",\n        component: SetPasswordComponent,\n        data: { titleId: \"setMasterPassword\" },\n      },\n      {\n        path: \"hint\",\n        component: HintComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"passwordHint\" },\n      },\n      {\n        path: \"lock\",\n        component: LockComponent,\n        canActivate: [LockGuard],\n      },\n      { path: \"verify-email\", component: VerifyEmailTokenComponent },\n      {\n        path: \"accept-organization\",\n        component: AcceptOrganizationComponent,\n        data: { titleId: \"joinOrganization\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-emergency\",\n        component: AcceptEmergencyComponent,\n        data: { titleId: \"acceptEmergency\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-families-for-enterprise\",\n        component: AcceptFamilySponsorshipComponent,\n        data: { titleId: \"acceptFamilySponsorship\", doNotSaveUrl: false },\n      },\n      { path: \"recover\", pathMatch: \"full\", redirectTo: \"recover-2fa\" },\n      {\n        path: \"recover-2fa\",\n        component: RecoverTwoFactorComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"recoverAccountTwoStep\" },\n      },\n      {\n        path: \"recover-delete\",\n        component: RecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"verify-recover-delete\",\n        component: VerifyRecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"send/:sendId/:key\",\n        component: AccessComponent,\n        data: { title: \"Bitwarden Send\" },\n      },\n      {\n        path: \"update-temp-password\",\n        component: UpdateTempPasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updateTempPassword\" },\n      },\n      {\n        path: \"update-password\",\n        component: UpdatePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updatePassword\" },\n      },\n      {\n        path: \"remove-password\",\n        component: RemovePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"removeMasterPassword\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    component: UserLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      { path: \"sends\", component: SendComponent, data: { title: \"Send\" } },\n      {\n        path: \"create-organization\",\n        component: CreateOrganizationComponent,\n        data: { titleId: \"newOrganization\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myAccount\" } },\n          {\n            path: \"preferences\",\n            component: PreferencesComponent,\n            data: { titleId: \"preferences\" },\n          },\n          {\n            path: \"security\",\n            loadChildren: () => SecurityRoutingModule,\n          },\n          {\n            path: \"domain-rules\",\n            component: DomainRulesComponent,\n            data: { titleId: \"domainRules\" },\n          },\n          {\n            path: \"subscription\",\n            loadChildren: () => SubscriptionRoutingModule,\n          },\n          {\n            path: \"emergency-access\",\n            children: [\n              {\n                path: \"\",\n                component: EmergencyAccessComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n              {\n                path: \":id\",\n                component: EmergencyAccessViewComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n            ],\n          },\n          {\n            path: \"sponsored-families\",\n            component: SponsoredFamiliesComponent,\n            data: { titleId: \"sponsoredFamilies\" },\n          },\n        ],\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [AuthGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"generator\" },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/import-export.module\").then(\n                (m) => m.ImportExportModule\n              ),\n          },\n          {\n            path: \"generator\",\n            component: GeneratorComponent,\n            data: { titleId: \"generator\" },\n          },\n        ],\n      },\n      {\n        path: \"reports\",\n        loadChildren: () => ReportsModule,\n      },\n      { path: \"setup/families-for-enterprise\", component: FamiliesForEnterpriseSetupComponent },\n    ],\n  },\n  {\n    path: \"organizations\",\n    loadChildren: () => OrganizationModule,\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      paramsInheritanceStrategy: \"always\",\n      // enableTracing: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class OssRoutingModule {}\n\nexport function buildFlaggedRoute(flagName: keyof Flags, route: Route): Route {\n  return flagEnabled(flagName)\n    ? route\n    : {\n        path: route.path,\n        redirectTo: \"/\",\n      };\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HasPremiumGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    if (!userHasPremium) {\n      this.messagingService.send(\"premiumRequired\");\n    }\n\n    // Prevent trapping the user on the login page, since that's an awful UX flow\n    if (!userHasPremium && this.router.url === \"/login\") {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    return userHasPremium;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"dataBreachReport\" | i18n }}</h1>\n</div>\n<p>{{ \"breachDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"username\">{{ \"username\" | i18n }}</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        name=\"Username\"\n        class=\"form-control\"\n        [(ngModel)]=\"username\"\n        required\n      />\n      <small class=\"form-text text-muted\">{{ \"breachCheckUsernameEmail\" | i18n }}</small>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"checkBreaches\" | i18n }}\n  </button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n  <p *ngIf=\"error\">{{ \"reportError\" | i18n }}...</p>\n  <ng-container *ngIf=\"!error\">\n    <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!breachedAccounts.length\">\n      {{ \"breachUsernameNotFound\" | i18n: checkedUsername }}\n    </app-callout>\n    <app-callout type=\"danger\" title=\"{{ 'breachFound' | i18n }}\" *ngIf=\"breachedAccounts.length\">\n      {{ \"breachUsernameFound\" | i18n: checkedUsername:breachedAccounts.length }}\n    </app-callout>\n    <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n      <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n        <div class=\"row\">\n          <div class=\"col-2 text-center\">\n            <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\" />\n          </div>\n          <div class=\"col-7\">\n            <h3 class=\"text-lg\">{{ a.title }}</h3>\n            <p [innerHTML]=\"a.description\"></p>\n            <p class=\"mb-1\">{{ \"compromisedData\" | i18n }}:</p>\n            <ul>\n              <li *ngFor=\"let d of a.dataClasses\">{{ d }}</li>\n            </ul>\n          </div>\n          <div class=\"col-3\">\n            <dl>\n              <dt>{{ \"website\" | i18n }}</dt>\n              <dd>{{ a.domain }}</dd>\n              <dt>{{ \"affectedUsers\" | i18n }}</dt>\n              <dd>{{ a.pwnCount | number }}</dd>\n              <dt>{{ \"breachOccurred\" | i18n }}</dt>\n              <dd>{{ a.breachDate | date: \"mediumDate\" }}</dd>\n              <dt>{{ \"breachReported\" | i18n }}</dt>\n              <dd>{{ a.addedDate | date: \"mediumDate\" }}</dd>\n            </dl>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { BreachAccountResponse } from \"@bitwarden/common/models/response/breach-account.response\";\n\n@Component({\n  selector: \"app-breach-report\",\n  templateUrl: \"breach-report.component.html\",\n})\nexport class BreachReportComponent implements OnInit {\n  error = false;\n  username: string;\n  checkedUsername: string;\n  breachedAccounts: BreachAccountResponse[] = [];\n  formPromise: Promise<BreachAccountResponse[]>;\n\n  constructor(private auditService: AuditService, private stateService: StateService) {}\n\n  async ngOnInit() {\n    this.username = await this.stateService.getEmail();\n  }\n\n  async submit() {\n    this.error = false;\n    this.username = this.username.toLowerCase();\n    try {\n      this.formPromise = this.auditService.breachedAccounts(this.username);\n      this.breachedAccounts = await this.formPromise;\n    } catch {\n      this.error = true;\n    }\n    this.checkedUsername = this.username;\n  }\n}\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportBreach = svgIcon`\n  <svg width=\"58\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.569 74H13.007a7 7 0 0 1-7-7V31.077a7 7 0 0 1 7-7h19.101a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.912V67a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.576 69.055H18.015a7 7 0 0 1-7-7V26.132a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.911v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M50 63.698H23.439a7 7 0 0 1-7-7V20.775a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.575A7 7 0 0 1 57 28.35v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.648 13.599v3.95a8 8 0 0 0 8 8h4.518\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M23.533 37.736H49.49M23.533 46.802H49.49M23.533 42.269H49.49M23.533 55.456H49.49M23.533 50.923H49.49\" />\n    <path d=\"M1 16.483C1 7.944 8.013 1 16.69 1c8.678 0 15.691 6.944 15.691 15.483 0 8.54-7.013 15.484-15.69 15.484C8.012 31.967 1 25.023 1 16.484Z\" fill=\"#518FFF\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m16.562 7.979.1 11.538\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <ellipse rx=\"1.252\" ry=\"1.236\" transform=\"rotate(-.479 2802.219 -1964.476) skewX(.012)\" fill=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportExposedPasswords = svgIcon`\n  <svg width=\"101\" height=\"77\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.374 50.192a26.42 26.42 0 0 0 9.111 1.608c14.34 0 25.965-11.372 25.965-25.4 0-.337-.007-.673-.02-1.008h25.299v34.85H32.374v-10.05Z\" fill=\"currentColor\" />\n    <path d=\"M15.805 26.4c0 14.028 11.625 25.4 25.965 25.4s25.964-11.372 25.964-25.4C67.734 12.372 56.11 1 41.77 1 27.43 1 15.805 12.372 15.805 26.4Z\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M27.914 47.849a1 1 0 0 0-2 0h2Zm68.288-26.792a2.12 2.12 0 0 1 2.14 2.11h2c0-2.253-1.83-4.11-4.14-4.11v2Zm2.14 2.11v40.552h2V23.167h-2Zm0 40.552c0 1.172-.958 2.11-2.14 2.11v2c2.25 0 4.14-1.798 4.14-4.11h-2Zm-2.14 2.11H30.054v2h66.148v-2Zm-66.148 0a2.12 2.12 0 0 1-2.14-2.11h-2a4.12 4.12 0 0 0 4.14 4.11v-2Zm-2.14-2.11V47.85h-2v15.87h2Zm39.254-42.662h29.034v-2H67.168v2Z\" fill=\"#fff\" />\n    <path d=\"M67.203 25.56h25.64v34.85H32.487V50.011\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M47.343 76h31.571\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M57.557 66.83V76M67.771 66.83V76\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"m20.995 42.873-3.972 3.972-14.61 14.61a3.413 3.413 0 0 0 0 4.826v0a3.413 3.413 0 0 0 4.827 0l14.61-14.61 3.972-3.972\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M86.037 32.488H71.845M86.037 37.81H76.28M71.845 37.81h-6.652M86.037 43.132h-6.209M74.95 43.132H61.2M86.037 48.454H71.845M66.967 48.454h-7.54M86.037 53.776H66.08M61.201 53.776h-11.53M44.793 53.776h-7.096\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <rect width=\"40.801\" height=\"9.757\" rx=\"4\" transform=\"matrix(-1 0 0 1 61.201 14.748)\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M16.852 33.375h28.375a4 4 0 0 1 4 4v1.757a4 4 0 0 1-4 4H22.174M66.523 33.375h-3.539a4 4 0 0 0-4 4v3.761c0 1.102.894 1.996 1.996 1.996v0\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportInactiveTwoFactor = svgIcon`\n  <svg width=\"42\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" d=\"M1 13.121h39.595v48.758H1z\" />\n    <rect x=\"1\" y=\"1\" width=\"39.595\" height=\"73\" rx=\"8\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M12.344 8.091h16.907M18.907 67.424h3.025M31.503 32.515c-2.047-4.337-6.717-7.061-11.73-6.414a11.356 11.356 0 0 0-9.125 7.126M10.816 42.016c2.047 4.337 6.718 7.062 11.73 6.414 4.346-.562 7.8-3.51 9.213-7.358\" />\n    <path d=\"m33.584 29.293-1.295 4.625-4.625-1.295M8.523 44.725l1.441-4.581 4.582 1.441\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportReusedPasswords = svgIcon`\n  <svg width=\"102\" height=\"102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M57.983 15.06a35.664 35.664 0 0 1 14.531 6.27c16.164 11.78 19.585 34.613 7.643 51a37.227 37.227 0 0 1-6.81 7.138m-32.842 6.697a35.708 35.708 0 0 1-11.239-5.495c-16.163-11.78-19.585-34.613-7.642-51a37.55 37.55 0 0 1 3.295-3.929\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M93.909 64.598H7.72c-.708 0-1.275-.662-1.275-1.49V40.273c0-.828.567-1.49 1.275-1.49H93.91c.708 0 1.275.663 1.275 1.49v22.837c.047.827-.567 1.49-1.275 1.49Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M21.532 52.186v-5.965M21.532 52.187l5.748-1.844M21.532 52.186l3.524 4.881M21.531 52.186l-3.47 4.881M21.532 52.187l-5.694-1.844M40.944 52.186v-5.965M40.944 52.187l5.694-1.844M40.944 52.187l3.525 4.88M40.944 52.187l-3.525 4.88M40.944 52.187l-5.694-1.844M54.849 57.337h11.294M74.21 57.337h11.295M41.75 83l.71 4.75-4.75.71M58.664 18.66 56 14.665 59.996 12\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportUnsecuredWebsites = svgIcon`\n  <svg width=\"113\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1.71 12.983h110.362v55.11a6 6 0 0 1-6 6H7.711a6 6 0 0 1-6-6v-55.11Z\" fill=\"currentColor\" />\n    <rect x=\"1\" y=\"1.073\" width=\"110.5\" height=\"73.454\" rx=\"9\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M89.48 8.048V7.47M96.363 8.048V7.47M103.246 8.048V7.47\" stroke=\"#fff\" stroke-width=\"4\" stroke-linecap=\"round\" />\n    <path d=\"M0 12.983h111.217\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m93.236 44.384-18.42-11.026 2.93 21.266 5.582-5.237 4.27 6.46 2.98-1.971-4.26-6.446 6.918-3.046Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <rect width=\"96.673\" height=\"6.886\" rx=\"3.443\" transform=\"matrix(-1 0 0 1 104.373 18.721)\" stroke=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportWeakPasswords = svgIcon`\n  <svg width=\"78\" height=\"78\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M66.493 64.415V77H9.979V64.324M9.979 44.065V32.106h56.514v12.148\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M75.44 64.852H2.085c-.603 0-1.085-.555-1.085-1.25V44.448c0-.694.482-1.25 1.085-1.25H75.44c.603 0 1.085.556 1.085 1.25v19.156c.04.694-.482 1.25-1.085 1.25Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M13.84 54.56v-5.077M13.84 54.56l4.893-1.57M13.84 54.56l3 4.153M13.84 54.56l-2.954 4.153M13.84 54.56l-4.846-1.57M30.363 54.56v-5.077M30.363 54.56l4.846-1.57M30.363 54.56l3 4.153M30.363 54.56l-3 4.153M30.363 54.56l-4.846-1.57M42.197 59.042h9.506M58.57 59.042h9.507\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M20.863 31.364c-.274-5.285 0-15.817 1.093-18.863 1.276-3.554 6.233-10.826 15.856-11.482 4.83-.273 15.2 2.296 18.043 14.763\" stroke=\"#fff\" stroke-width=\"2\" />\n  </svg>\n`;\n","import { ReportBreach } from \"./icons/report-breach.icon\";\nimport { ReportExposedPasswords } from \"./icons/report-exposed-passwords.icon\";\nimport { ReportInactiveTwoFactor } from \"./icons/report-inactive-two-factor.icon\";\nimport { ReportReusedPasswords } from \"./icons/report-reused-passwords.icon\";\nimport { ReportUnsecuredWebsites } from \"./icons/report-unsecured-websites.icon\";\nimport { ReportWeakPasswords } from \"./icons/report-weak-passwords.icon\";\nimport { ReportEntry } from \"./shared\";\n\nexport enum ReportType {\n  ExposedPasswords = \"exposedPasswords\",\n  ReusedPasswords = \"reusedPasswords\",\n  WeakPasswords = \"weakPasswords\",\n  UnsecuredWebsites = \"unsecuredWebsites\",\n  Inactive2fa = \"inactive2fa\",\n  DataBreach = \"dataBreach\",\n}\n\ntype ReportWithoutVariant = Omit<ReportEntry, \"variant\">;\n\nexport const reports: Record<ReportType, ReportWithoutVariant> = {\n  [ReportType.ExposedPasswords]: {\n    title: \"exposedPasswordsReport\",\n    description: \"exposedPasswordsReportDesc\",\n    route: \"exposed-passwords-report\",\n    icon: ReportExposedPasswords,\n  },\n  [ReportType.ReusedPasswords]: {\n    title: \"reusedPasswordsReport\",\n    description: \"reusedPasswordsReportDesc\",\n    route: \"reused-passwords-report\",\n    icon: ReportReusedPasswords,\n  },\n  [ReportType.WeakPasswords]: {\n    title: \"weakPasswordsReport\",\n    description: \"weakPasswordsReportDesc\",\n    route: \"weak-passwords-report\",\n    icon: ReportWeakPasswords,\n  },\n  [ReportType.UnsecuredWebsites]: {\n    title: \"unsecuredWebsitesReport\",\n    description: \"unsecuredWebsitesReportDesc\",\n    route: \"unsecured-websites-report\",\n    icon: ReportUnsecuredWebsites,\n  },\n  [ReportType.Inactive2fa]: {\n    title: \"inactive2faReport\",\n    description: \"inactive2faReportDesc\",\n    route: \"inactive-two-factor-report\",\n    icon: ReportInactiveTwoFactor,\n  },\n  [ReportType.DataBreach]: {\n    title: \"dataBreachReport\",\n    description: \"breachDesc\",\n    route: \"breach-report\",\n    icon: ReportBreach,\n  },\n};\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared/shared.module\";\n\nimport { ReportCardComponent } from \"./report-card/report-card.component\";\nimport { ReportListComponent } from \"./report-list/report-list.component\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule],\n  declarations: [ReportCardComponent, ReportListComponent],\n  exports: [ReportCardComponent, ReportListComponent],\n})\nexport class ReportsSharedModule {}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { reports, ReportType } from \"../reports\";\nimport { ReportEntry, ReportVariant } from \"../shared\";\n\n@Component({\n  selector: \"app-reports-home\",\n  templateUrl: \"reports-home.component.html\",\n})\nexport class ReportsHomeComponent implements OnInit {\n  reports: ReportEntry[];\n\n  constructor(private stateService: StateService) {}\n\n  async ngOnInit(): Promise<void> {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    const reportRequiresPremium = userHasPremium\n      ? ReportVariant.Enabled\n      : ReportVariant.RequiresPremium;\n\n    this.reports = [\n      {\n        ...reports[ReportType.ExposedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.ReusedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.WeakPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.UnsecuredWebsites],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.Inactive2fa],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.DataBreach],\n        variant: ReportVariant.Enabled,\n      },\n    ];\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"reports\" | i18n }}</h1>\n</div>\n\n<p>{{ \"reportsDesc\" | i18n }}</p>\n\n<app-report-list [reports]=\"reports\"></app-report-list>\n","<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n\n  <div class=\"row mt-4\">\n    <div class=\"col\">\n      <a bitButton routerLink=\"./\" *ngIf=\"!homepage\">\n        <i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i>\n        {{ \"backToReports\" | i18n }}\n      </a>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-reports-layout\",\n  templateUrl: \"reports-layout.component.html\",\n})\nexport class ReportsLayoutComponent implements OnDestroy {\n  homepage = true;\n  subscription: Subscription;\n\n  constructor(router: Router) {\n    this.subscription = router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n      .subscribe((event) => {\n        this.homepage = (event as NavigationEnd).url == \"/reports\";\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\n\nimport { HasPremiumGuard } from \"../shared/guards/has-premium.guard\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportsLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: \"\", pathMatch: \"full\", component: ReportsHomeComponent, data: { homepage: true } },\n      {\n        path: \"breach-report\",\n        component: BreachReportComponent,\n        data: { titleId: \"dataBreachReport\" },\n      },\n      {\n        path: \"reused-passwords-report\",\n        component: ReusedPasswordsReportComponent,\n        data: { titleId: \"reusedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"unsecured-websites-report\",\n        component: UnsecuredWebsitesReportComponent,\n        data: { titleId: \"unsecuredWebsitesReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"weak-passwords-report\",\n        component: WeakPasswordsReportComponent,\n        data: { titleId: \"weakPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"exposed-passwords-report\",\n        component: ExposedPasswordsReportComponent,\n        data: { titleId: \"exposedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"inactive-two-factor-report\",\n        component: InactiveTwoFactorReportComponent,\n        data: { titleId: \"inactive2faReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportsRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\nimport { ReportsRoutingModule } from \"./reports-routing.module\";\nimport { ReportsSharedModule } from \"./shared\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule, ReportsSharedModule, ReportsRoutingModule],\n  declarations: [\n    BreachReportComponent,\n    ExposedPasswordsReportComponent,\n    InactiveTwoFactorReportComponent,\n    ReportsLayoutComponent,\n    ReportsHomeComponent,\n    ReusedPasswordsReportComponent,\n    UnsecuredWebsitesReportComponent,\n    WeakPasswordsReportComponent,\n    WeakPasswordsReportComponent,\n  ],\n})\nexport class ReportsModule {}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { AddEditComponent as OrgAddEditComponent } from \"../../organizations/vault/add-edit.component\";\nimport { AddEditComponent } from \"../../vault/add-edit.component\";\n\n@Directive()\nexport class CipherReportComponent {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n\n  loading = false;\n  hasLoaded = false;\n  ciphers: CipherView[] = [];\n  organization: Organization;\n\n  constructor(\n    private modalService: ModalService,\n    protected messagingService: MessagingService,\n    public requiresPaid: boolean,\n    protected passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async load() {\n    this.loading = true;\n    await this.setCiphers();\n    this.loading = false;\n    this.hasLoaded = true;\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (!(await this.repromptCipher(cipher))) {\n      return;\n    }\n\n    const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      type,\n      this.cipherAddEditModalRef,\n      (comp: OrgAddEditComponent | AddEditComponent) => {\n        if (this.organization != null) {\n          (comp as OrgAddEditComponent).organization = this.organization;\n          comp.organizationId = this.organization.id;\n        }\n\n        comp.cipherId = cipher == null ? null : cipher.id;\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  protected async checkAccess(): Promise<boolean> {\n    if (this.organization != null) {\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      if (this.requiresPaid && !this.organization.useTotp) {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected async setCiphers() {\n    this.ciphers = [];\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"loading\" (click)=\"load()\">\n  {{ \"checkExposedPasswords\" | i18n }}\n</button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  exposedPasswordMap = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, passwordRepromptService);\n  }\n\n  ngOnInit() {\n    this.checkAccess();\n  }\n\n  async load() {\n    if (await this.checkAccess()) {\n      super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const exposedPasswordCiphers: CipherView[] = [];\n    const promises: Promise<void>[] = [];\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n        if (exposedCount > 0) {\n          exposedPasswordCiphers.push(c);\n          this.exposedPasswordMap.set(c.id, exposedCount);\n        }\n      });\n      promises.push(promise);\n    });\n    await Promise.all(promises);\n    this.ciphers = exposedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              bitBadge\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n  services = new Map<string, string>();\n  cipherDocs = new Map<string, string>();\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    private logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    try {\n      await this.load2fa();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (this.services.size > 0) {\n      const allCiphers = await this.getAllCiphers();\n      const inactive2faCiphers: CipherView[] = [];\n      const promises: Promise<void>[] = [];\n      const docs = new Map<string, string>();\n      allCiphers.forEach((c) => {\n        if (\n          c.type !== CipherType.Login ||\n          (c.login.totp != null && c.login.totp !== \"\") ||\n          !c.login.hasUris ||\n          c.isDeleted\n        ) {\n          return;\n        }\n        for (let i = 0; i < c.login.uris.length; i++) {\n          const u = c.login.uris[i];\n          if (u.uri != null && u.uri !== \"\") {\n            const uri = u.uri.replace(\"www.\", \"\");\n            const domain = Utils.getDomain(uri);\n            if (domain != null && this.services.has(domain)) {\n              if (this.services.get(domain) != null) {\n                docs.set(c.id, this.services.get(domain));\n              }\n              inactive2faCiphers.push(c);\n            }\n          }\n        }\n      });\n      await Promise.all(promises);\n      this.ciphers = inactive2faCiphers;\n      this.cipherDocs = docs;\n    }\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  private async load2fa() {\n    if (this.services.size > 0) {\n      return;\n    }\n    const response = await fetch(new Request(\"https://api.2fa.directory/v3/totp.json\"));\n    if (response.status !== 200) {\n      throw new Error();\n    }\n    const responseJson = await response.json();\n    for (const service of responseJson) {\n      const serviceData = service[1];\n      if (serviceData.domain == null) {\n        continue;\n      }\n      if (serviceData.documentation == null) {\n        continue;\n      }\n      if (serviceData[\"additional-domains\"] != null) {\n        for (const additionalDomain of serviceData[\"additional-domains\"]) {\n          this.services.set(additionalDomain, serviceData.documentation);\n        }\n      }\n      this.services.set(serviceData.domain, serviceData.documentation);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordUseMap: Map<string, number>;\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const ciphersWithPasswords: CipherView[] = [];\n    this.passwordUseMap = new Map<string, number>();\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      ciphersWithPasswords.push(c);\n      if (this.passwordUseMap.has(c.login.password)) {\n        this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n      } else {\n        this.passwordUseMap.set(c.login.password, 1);\n      }\n    });\n    const reusedPasswordCiphers = ciphersWithPasswords.filter(\n      (c) =>\n        this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1\n    );\n    this.ciphers = reusedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from an organization view\n    return true;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const unsecuredCiphers = allCiphers.filter((c) => {\n      if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n        return false;\n      }\n      return c.login.uris.some((u) => u.uri != null && u.uri.indexOf(\"http://\") === 0);\n    });\n    this.ciphers = unsecuredCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge [badgeType]=\"passwordStrengthMap.get(c.id)[1]\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { BadgeTypes } from \"@bitwarden/components\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordStrengthMap = new Map<string, [string, BadgeTypes]>();\n\n  private passwordStrengthCache = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const weakPasswordCiphers: CipherView[] = [];\n    const isUserNameNotEmpty = (c: CipherView): boolean => {\n      return c.login.username != null && c.login.username.trim() !== \"\";\n    };\n    const getCacheKey = (c: CipherView): string => {\n      return c.login.password + \"_____\" + (isUserNameNotEmpty(c) ? c.login.username : \"\");\n    };\n\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const hasUserName = isUserNameNotEmpty(c);\n      const cacheKey = getCacheKey(c);\n      if (!this.passwordStrengthCache.has(cacheKey)) {\n        let userInput: string[] = [];\n        if (hasUserName) {\n          const atPosition = c.login.username.indexOf(\"@\");\n          if (atPosition > -1) {\n            userInput = userInput\n              .concat(\n                c.login.username\n                  .substr(0, atPosition)\n                  .trim()\n                  .toLowerCase()\n                  .split(/[^A-Za-z0-9]/)\n              )\n              .filter((i) => i.length >= 3);\n          } else {\n            userInput = c.login.username\n              .trim()\n              .toLowerCase()\n              .split(/[^A-Za-z0-9]/)\n              .filter((i) => i.length >= 3);\n          }\n        }\n        const result = this.passwordGenerationService.passwordStrength(\n          c.login.password,\n          userInput.length > 0 ? userInput : null\n        );\n        this.passwordStrengthCache.set(cacheKey, result.score);\n      }\n      const score = this.passwordStrengthCache.get(cacheKey);\n      if (score != null && score <= 2) {\n        this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n        weakPasswordCiphers.push(c);\n      }\n    });\n    weakPasswordCiphers.sort((a, b) => {\n      return (\n        this.passwordStrengthCache.get(getCacheKey(a)) -\n        this.passwordStrengthCache.get(getCacheKey(b))\n      );\n    });\n    this.ciphers = weakPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n\n  private scoreKey(score: number): [string, BadgeTypes] {\n    switch (score) {\n      case 4:\n        return [\"strong\", \"success\"];\n      case 3:\n        return [\"good\", \"primary\"];\n      case 2:\n        return [\"weak\", \"warning\"];\n      default:\n        return [\"veryWeak\", \"danger\"];\n    }\n  }\n}\n","export enum ReportVariant {\n  Enabled = \"Enabled\",\n  RequiresPremium = \"RequiresPremium\",\n  RequiresUpgrade = \"RequiresUpgrade\",\n}\n","<a\n  class=\"tw-block tw-h-full tw-max-w-72 tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 !tw-text-main tw-transition-all hover:tw-scale-105 hover:tw-no-underline focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2\"\n  [routerLink]=\"route\"\n>\n  <div class=\"tw-relative\">\n    <div\n      class=\"tw-flex tw-h-28 tw-bg-background-alt2 tw-text-center tw-text-primary-300\"\n      [ngClass]=\"{ 'tw-grayscale': disabled }\"\n    >\n      <div class=\"tw-m-auto\"><bit-icon [icon]=\"icon\" aria-hidden=\"true\"></bit-icon></div>\n    </div>\n    <div class=\"tw-p-5\" [ngClass]=\"{ 'tw-grayscale': disabled }\">\n      <h3 class=\"tw-mb-4 tw-text-xl tw-font-bold\">{{ title }}</h3>\n      <p class=\"tw-mb-0\">{{ description }}</p>\n    </div>\n    <span\n      bitBadge\n      badgeType=\"success\"\n      class=\"tw-absolute tw-left-2 tw-top-2 tw-leading-none\"\n      *ngIf=\"disabled\"\n    >\n      <ng-container *ngIf=\"requiresPremium\">{{ \"premium\" | i18n }}</ng-container>\n      <ng-container *ngIf=\"!requiresPremium\">{{ \"upgrade\" | i18n }}</ng-container>\n    </span>\n  </div>\n</a>\n","import { Component, Input } from \"@angular/core\";\n\nimport { Icon } from \"@bitwarden/components\";\n\nimport { ReportVariant } from \"../models/report-variant\";\n\n@Component({\n  selector: \"app-report-card\",\n  templateUrl: \"report-card.component.html\",\n})\nexport class ReportCardComponent {\n  @Input() title: string;\n  @Input() description: string;\n  @Input() route: string;\n  @Input() icon: Icon;\n  @Input() variant: ReportVariant;\n\n  protected get disabled() {\n    return this.variant != ReportVariant.Enabled;\n  }\n\n  protected get requiresPremium() {\n    return this.variant == ReportVariant.RequiresPremium;\n  }\n}\n","<div class=\"tw-inline-grid tw-grid-cols-3 tw-gap-4\">\n  <div *ngFor=\"let report of reports\">\n    <app-report-card\n      [title]=\"report.title | i18n\"\n      [description]=\"report.description | i18n\"\n      [route]=\"report.route\"\n      [variant]=\"report.variant\"\n      [icon]=\"report.icon\"\n    ></app-report-card>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportEntry } from \"../models/report-entry\";\n\n@Component({\n  selector: \"app-report-list\",\n  templateUrl: \"report-list.component.html\",\n})\nexport class ReportListComponent {\n  @Input() reports: ReportEntry[];\n}\n","export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StroageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency: \"$\" }} = {{ adjustedStorageTotal | currency: \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StorageRequest } from \"@bitwarden/common/models/request/storage.request\";\nimport { PaymentResponse } from \"@bitwarden/common/models/response/payment.response\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<PaymentResponse | void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.organizationApiService.updateStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"apiKeyTitle\">{{ apiKeyTitle | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ apiKeyDescription | i18n }}</p>\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n\n        <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{ apiKeyWarning | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          title=\"{{ 'oauth2ClientCredentials' | i18n }}\"\n          icon=\"bwi bwi-key\"\n          *ngIf=\"clientSecret\"\n        >\n          <p class=\"mb-1\">\n            <strong>client_id:</strong><br />\n            <code>{{ clientId }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>client_secret:</strong><br />\n            <code>{{ clientSecret }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>scope:</strong><br />\n            <code>{{ scope }}</code>\n          </p>\n          <p class=\"mb-0\">\n            <strong>grant_type:</strong><br />\n            <code>{{ grantType }}</code>\n          </p>\n        </app-callout>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (isRotation ? \"rotateApiKey\" : \"viewApiKey\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/api-key.response\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-api-key\",\n  templateUrl: \"api-key.component.html\",\n})\nexport class ApiKeyComponent {\n  keyType: string;\n  isRotation: boolean;\n  postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  entityId: string;\n  scope: string;\n  grantType: string;\n  apiKeyTitle: string;\n  apiKeyWarning: string;\n  apiKeyDescription: string;\n\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientId: string;\n  clientSecret: string;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.postKey(this.entityId, request));\n      const response = await this.formPromise;\n      this.clientSecret = response.apiKey;\n      this.clientId = `${this.keyType}.${this.entityId}`;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export enum TransactionType {\n  Charge = 0,\n  Credit = 1,\n  PromotionalCredit = 2,\n  ReferralCredit = 3,\n  Refund = 4,\n}\n","<h2 class=\"mt-3\">{{ \"invoices\" | i18n }}</h2>\n<p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n<table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n  <tbody>\n    <tr *ngFor=\"let i of invoices\">\n      <td>{{ i.date | date: \"mediumDate\" }}</td>\n      <td>\n        <a\n          href=\"{{ i.pdfUrl }}\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          class=\"mr-2\"\n          appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n        >\n          <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n        ></a>\n        <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n          {{ \"invoiceNumber\" | i18n: i.number }}</a\n        >\n      </td>\n      <td>{{ i.amount | currency: \"$\" }}</td>\n      <td>\n        <span *ngIf=\"i.paid\">\n          <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"paid\" | i18n }}\n        </span>\n        <span *ngIf=\"!i.paid\">\n          <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n          {{ \"unpaid\" | i18n }}\n        </span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n<p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n<table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n  <tbody>\n    <tr *ngFor=\"let t of transactions\">\n      <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n      <td>\n        <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n          {{ \"chargeNoun\" | i18n }}\n        </span>\n        <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n      </td>\n      <td>\n        <i\n          class=\"bwi bwi-fw\"\n          *ngIf=\"t.paymentMethodType\"\n          aria-hidden=\"true\"\n          [ngClass]=\"paymentMethodClasses(t.paymentMethodType)\"\n        ></i>\n        {{ t.details }}\n      </td>\n      <td\n        [ngClass]=\"{ 'text-strike': t.refunded }\"\n        title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n      >\n        {{ t.amount | currency: \"$\" }}\n      </td>\n    </tr>\n  </tbody>\n</table>\n<small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n","import { Component, Input } from \"@angular/core\";\n\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billing-history.response\";\n\n@Component({\n  selector: \"app-billing-history\",\n  templateUrl: \"billing-history.component.html\",\n})\nexport class BillingHistoryComponent {\n  @Input()\n  billing: BillingHistoryResponse;\n\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n\n  paymentMethodClasses(type: PaymentMethodType) {\n    switch (type) {\n      case PaymentMethodType.Card:\n        return [\"bwi-credit-card\"];\n      case PaymentMethodType.BankAccount:\n      case PaymentMethodType.WireTransfer:\n        return [\"bwi-bank\"];\n      case PaymentMethodType.BitPay:\n        return [\"bwi-bitcoin text-warning\"];\n      case PaymentMethodType.PayPal:\n        return [\"bwi-paypal text-primary\"];\n      default:\n        return [];\n    }\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationCreateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  planType: PlanType;\n  key: string;\n  keys: OrganizationKeysRequest;\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n  additionalSeats: number;\n  maxAutoscaleSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  collectionName: string;\n  taxIdNumber: string;\n  billingAddressLine1: string;\n  billingAddressLine2: string;\n  billingAddressCity: string;\n  billingAddressState: string;\n  billingAddressPostalCode: string;\n  billingAddressCountry: string;\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpgradeRequest {\n  businessName: string;\n  planType: PlanType;\n  additionalSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  billingAddressCountry: string;\n  billingAddressPostalCode: string;\n  keys: OrganizationKeysRequest;\n}\n","import { OrganizationCreateRequest } from \"../organization-create.request\";\n\nexport class ProviderOrganizationCreateRequest {\n  constructor(\n    public clientOwnerEmail: string,\n    public organizationCreateRequest: OrganizationCreateRequest\n  ) {}\n}\n","<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n  <p>{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_organization_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form\n  #form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n  *ngIf=\"!loading && !selfHosted && this.plans\"\n  class=\"tw-pt-6\"\n>\n  <app-org-info\n    (changedBusinessOwned)=\"changedOwnedBusiness()\"\n    [formGroup]=\"formGroup\"\n    [createOrganization]=\"createOrganization\"\n    [isProvider]=\"!!providerId\"\n    [acceptingSponsorship]=\"acceptingSponsorship\"\n  ></app-org-info>\n  <h2 class=\"mt-5\">{{ \"chooseYourPlan\" | i18n }}</h2>\n  <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"product\"\n      id=\"product{{ selectableProduct.product }}\"\n      [value]=\"selectableProduct.product\"\n      formControlName=\"product\"\n      (change)=\"changedProduct()\"\n    />\n    <label class=\"form-check-label\" for=\"product{{ selectableProduct.product }}\">\n      {{ selectableProduct.nameLocalizationKey | i18n }}\n      <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n: \"1\" }}</small>\n      <ng-container\n        *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"\n      >\n        <small>• {{ \"includeAllTeamsFeatures\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSso\">• {{ \"includeSsoAuthentication\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasPolicies\"\n          >• {{ \"includeEnterprisePolicies\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-container>\n      <ng-template #fullFeatureList>\n        <small *ngIf=\"selectableProduct.product == productTypes.Free\"\n          >• {{ \"limitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxUsers\">• {{ \"addShareUnlimitedUsers\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.maxCollections\"\n          >• {{ \"limitedCollections\" | i18n: selectableProduct.maxCollections }}</small\n        >\n        <small *ngIf=\"selectableProduct.maxAdditionalSeats\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxAdditionalSeats }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxCollections\"\n          >• {{ \"createUnlimitedCollections\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.baseStorageGb\"\n          >• {{ \"gbEncryptedFileStorage\" | i18n: selectableProduct.baseStorageGb + \"GB\" }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasGroups\">• {{ \"controlAccessWithGroups\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasApi\">• {{ \"trackAuditLogs\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasDirectory\"\n          >• {{ \"syncUsersFromDirectory\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.usersGetPremium\">• {{ \"usersGetPremium\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.product != productTypes.Free\"\n          >• {{ \"priorityCustomerSupport\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-template>\n      <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n        <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\">\n          {{ selectableProduct.basePrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }},\n          {{ \"includesXUsers\" | i18n: selectableProduct.baseSeats }}\n          <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n            {{ (\"additionalUsers\" | i18n).toLowerCase() }}\n            {{ selectableProduct.seatPrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </ng-container>\n        </ng-container>\n      </span>\n      <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n        {{ \"costPerUser\" | i18n: (selectableProduct.seatPrice / 12 | currency: \"$\") }} /{{\n          \"month\" | i18n\n        }}\n      </span>\n      <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{ \"freeForever\" | i18n }}</span>\n    </label>\n  </div>\n  <div *ngIf=\"formGroup.controls['product'].value !== productTypes.Free\">\n    <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n      <h2 class=\"mt-5\">{{ \"users\" | i18n }}</h2>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <label for=\"additionalSeats\">{{ \"userSeats\" | i18n }}</label>\n          <input\n            id=\"additionalSeats\"\n            class=\"form-control\"\n            type=\"number\"\n            name=\"additionalSeats\"\n            formControlName=\"additionalSeats\"\n            placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n            required\n          />\n          <small class=\"text-muted form-text\">{{ \"userSeatsHowManyDesc\" | i18n }}</small>\n        </div>\n      </div>\n    </ng-container>\n    <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalSeats\">{{ \"additionalUserSeats\" | i18n }}</label>\n        <input\n          id=\"additionalSeats\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalSeats\"\n          formControlName=\"additionalSeats\"\n          placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"userSeatsAdditionalDesc\"\n            | i18n: selectedPlan.baseSeats:(seatPriceMonthly(selectedPlan) | currency: \"$\")\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n        <input\n          id=\"additionalStorage\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalStorageGb\"\n          formControlName=\"additionalStorage\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"additionalStorageIntervalDesc\"\n            | i18n\n              : \"1 GB\"\n              : (additionalStoragePriceMonthly(selectedPlan) | currency: \"$\")\n              : (\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n        <div class=\"form-check\">\n          <input\n            id=\"premiumAccess\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"premiumAccessAddon\"\n            formControlName=\"premiumAccessAddon\"\n          />\n          <label for=\"premiumAccess\" class=\"form-check-label bold\">{{\n            \"premiumAccess\" | i18n\n          }}</label>\n        </div>\n        <small class=\"text-muted form-text\">{{\n          \"premiumAccessDesc\" | i18n: (3.33 | currency: \"$\"):(\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n    <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"plan\"\n        id=\"interval{{ selectablePlan.type }}\"\n        [value]=\"selectablePlan.type\"\n        formControlName=\"plan\"\n      />\n      <label class=\"form-check-label\" for=\"interval{{ selectablePlan.type }}\">\n        <ng-container *ngIf=\"selectablePlan.isAnnual\">\n          {{ \"annually\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\">\n              <span style=\"text-decoration: line-through\">{{\n                selectablePlan.basePrice | currency: \"$\"\n              }}</span>\n              {{ \"freeWithSponsorship\" | i18n }}\n            </ng-container>\n            <ng-template #notAcceptingSponsorship>\n              {{ selectablePlan.basePrice | currency: \"$\" }}\n              /{{ \"year\" | i18n }}\n            </ng-template>\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"year\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"year\" | i18n }}\n          </small>\n        </ng-container>\n        <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n          {{ \"monthly\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ selectablePlan.basePrice | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n        </ng-container>\n      </label>\n    </div>\n    <hr class=\"my-3\" />\n    <h2 class=\"spaced-header mb-4\">\n      {{ (createOrganization ? \"paymentInformation\" : \"billingInformation\") | i18n }}\n    </h2>\n    <small class=\"text-muted font-italic mb-3 d-block\">\n      {{ paymentDesc }}\n    </small>\n    <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    <div id=\"price\" class=\"my-4\">\n      <div class=\"text-muted text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"my-1 col-3 ml-0\" />\n      <p class=\"text-lg\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{\n          selectedPlanInterval | i18n\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"!createOrganization\">\n      <app-payment [showMethods]=\"false\"></app-payment>\n    </ng-container>\n  </div>\n  <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\n    <app-callout [type]=\"'error'\">{{ \"singleOrgBlockCreateMessage\" | i18n }}</app-callout>\n  </div>\n  <div class=\"mt-4\">\n    <button\n      type=\"submit\"\n      buttonType=\"primary\"\n      bitButton\n      [loading]=\"form.loading\"\n      [disabled]=\"!formGroup.valid\"\n    >\n      {{ \"submit\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { OrganizationCreateRequest } from \"@bitwarden/common/models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organization-keys.request\";\nimport { OrganizationUpgradeRequest } from \"@bitwarden/common/models/request/organization-upgrade.request\";\nimport { ProviderOrganizationCreateRequest } from \"@bitwarden/common/models/request/provider/provider-organization-create.request\";\nimport { PlanResponse } from \"@bitwarden/common/models/response/plan.response\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\ninterface OnSuccessArgs {\n  organizationId: string;\n}\n\n@Component({\n  selector: \"app-organization-plans\",\n  templateUrl: \"organization-plans.component.html\",\n})\nexport class OrganizationPlansComponent implements OnInit, OnDestroy {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n  @Input() organizationId: string;\n  @Input() showFree = true;\n  @Input() showCancel = false;\n  @Input() acceptingSponsorship = false;\n  @Input()\n  get product(): ProductType {\n    return this._product;\n  }\n  set product(product: ProductType) {\n    this._product = product;\n    this.formGroup?.controls?.product?.setValue(product);\n  }\n  private _product = ProductType.Free;\n\n  @Input()\n  get plan(): PlanType {\n    return this._plan;\n  }\n  set plan(plan: PlanType) {\n    this._plan = plan;\n    this.formGroup?.controls?.plan?.setValue(plan);\n  }\n  private _plan = PlanType.Free;\n  @Input() providerId: string;\n  @Output() onSuccess = new EventEmitter<OnSuccessArgs>();\n  @Output() onCanceled = new EventEmitter<void>();\n  @Output() onTrialBillingSuccess = new EventEmitter();\n\n  loading = true;\n  selfHosted = false;\n  productTypes = ProductType;\n  formPromise: Promise<string>;\n  singleOrgPolicyBlock = false;\n  isInTrialFlow = false;\n  discount = 0;\n\n  formGroup = this.formBuilder.group({\n    name: [\"\"],\n    billingEmail: [\"\", [Validators.email]],\n    businessOwned: [false],\n    premiumAccessAddon: [false],\n    additionalStorage: [0, [Validators.min(0), Validators.max(99)]],\n    additionalSeats: [0, [Validators.min(0), Validators.max(100000)]],\n    clientOwnerEmail: [\"\", [Validators.email]],\n    businessName: [\"\"],\n    plan: [this.plan],\n    product: [this.product],\n  });\n\n  plans: PlanResponse[];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private messagingService: MessagingService,\n    private formBuilder: UntypedFormBuilder,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    if (!this.selfHosted) {\n      const plans = await this.apiService.getPlans();\n      this.plans = plans.data;\n      if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n        this.formGroup.controls.businessOwned.setValue(true);\n      }\n    }\n\n    if (this.providerId) {\n      this.formGroup.controls.businessOwned.setValue(true);\n      this.changedOwnedBusiness();\n    }\n\n    if (!this.createOrganization || this.acceptingSponsorship) {\n      this.formGroup.controls.product.setValue(ProductType.Families);\n      this.changedProduct();\n    }\n\n    if (this.createOrganization) {\n      this.formGroup.controls.name.addValidators([Validators.required, Validators.maxLength(50)]);\n      this.formGroup.controls.billingEmail.addValidators(Validators.required);\n    }\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SingleOrg)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.singleOrgPolicyBlock = policyAppliesToActiveUser;\n      });\n\n    this.loading = false;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get createOrganization() {\n    return this.organizationId == null;\n  }\n\n  get selectedPlan() {\n    return this.plans.find((plan) => plan.type === this.formGroup.controls.plan.value);\n  }\n\n  get selectedPlanInterval() {\n    return this.selectedPlan.isAnnual ? \"year\" : \"month\";\n  }\n\n  get selectableProducts() {\n    let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n    if (this.formGroup.controls.businessOwned.value) {\n      validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n    }\n\n    if (!this.showFree) {\n      validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n    }\n\n    validPlans = validPlans.filter(\n      (plan) =>\n        !plan.legacyYear &&\n        !plan.disabled &&\n        (plan.isAnnual || plan.product === this.productTypes.Free)\n    );\n\n    if (this.acceptingSponsorship) {\n      const familyPlan = this.plans.find((plan) => plan.type === PlanType.FamiliesAnnually);\n      this.discount = familyPlan.basePrice;\n      validPlans = [familyPlan];\n    }\n\n    return validPlans;\n  }\n\n  get selectablePlans() {\n    return this.plans?.filter(\n      (plan) =>\n        !plan.legacyYear && !plan.disabled && plan.product === this.formGroup.controls.product.value\n    );\n  }\n\n  additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.additionalStoragePricePerGb;\n    }\n    return selectedPlan.additionalStoragePricePerGb / 12;\n  }\n\n  seatPriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.seatPrice;\n    }\n    return selectedPlan.seatPrice / 12;\n  }\n\n  additionalStorageTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalStorageOption) {\n      return 0;\n    }\n\n    return (\n      plan.additionalStoragePricePerGb *\n      Math.abs(this.formGroup.controls.additionalStorage.value || 0)\n    );\n  }\n\n  seatTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalSeatsOption) {\n      return 0;\n    }\n\n    return plan.seatPrice * Math.abs(this.formGroup.controls.additionalSeats.value || 0);\n  }\n\n  get subtotal() {\n    let subTotal = this.selectedPlan.basePrice;\n    if (\n      this.selectedPlan.hasAdditionalSeatsOption &&\n      this.formGroup.controls.additionalSeats.value\n    ) {\n      subTotal += this.seatTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasAdditionalStorageOption &&\n      this.formGroup.controls.additionalStorage.value\n    ) {\n      subTotal += this.additionalStorageTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasPremiumAccessOption &&\n      this.formGroup.controls.premiumAccessAddon.value\n    ) {\n      subTotal += this.selectedPlan.premiumAccessOptionPrice;\n    }\n    return subTotal - this.discount;\n  }\n\n  get freeTrial() {\n    return this.selectedPlan.trialPeriodDays != null;\n  }\n\n  get taxCharges() {\n    return this.taxComponent != null && this.taxComponent.taxRate != null\n      ? (this.taxComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total() {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  get paymentDesc() {\n    if (this.acceptingSponsorship) {\n      return this.i18nService.t(\"paymentSponsored\");\n    } else if (this.freeTrial && this.createOrganization) {\n      return this.i18nService.t(\"paymentChargedWithTrial\");\n    } else {\n      return this.i18nService.t(\"paymentCharged\", this.i18nService.t(this.selectedPlanInterval));\n    }\n  }\n\n  changedProduct() {\n    this.formGroup.controls.plan.setValue(this.selectablePlans[0].type);\n    if (!this.selectedPlan.hasPremiumAccessOption) {\n      this.formGroup.controls.premiumAccessAddon.setValue(false);\n    }\n    if (!this.selectedPlan.hasAdditionalStorageOption) {\n      this.formGroup.controls.additionalStorage.setValue(0);\n    }\n    if (!this.selectedPlan.hasAdditionalSeatsOption) {\n      this.formGroup.controls.additionalSeats.setValue(0);\n    } else if (\n      !this.formGroup.controls.additionalSeats.value &&\n      !this.selectedPlan.baseSeats &&\n      this.selectedPlan.hasAdditionalSeatsOption\n    ) {\n      this.formGroup.controls.additionalSeats.setValue(1);\n    }\n  }\n\n  changedOwnedBusiness() {\n    if (!this.formGroup.controls.businessOwned.value || this.selectedPlan.canBeUsedByBusiness) {\n      return;\n    }\n    this.formGroup.controls.product.setValue(ProductType.Teams);\n    this.formGroup.controls.plan.setValue(PlanType.TeamsAnnually);\n    this.changedProduct();\n  }\n\n  changedCountry() {\n    this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== \"US\";\n    // Bank Account payments are only available for US customers\n    if (\n      this.paymentComponent.hideBank &&\n      this.paymentComponent.method === PaymentMethodType.BankAccount\n    ) {\n      this.paymentComponent.method = PaymentMethodType.Card;\n      this.paymentComponent.changeMethod();\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  async submit() {\n    if (this.singleOrgPolicyBlock) {\n      return;\n    }\n\n    try {\n      const doSubmit = async (): Promise<string> => {\n        let orgId: string = null;\n        if (this.createOrganization) {\n          const shareKey = await this.cryptoService.makeShareKey();\n          const key = shareKey[0].encryptedString;\n          const collection = await this.cryptoService.encrypt(\n            this.i18nService.t(\"defaultCollection\"),\n            shareKey[1]\n          );\n          const collectionCt = collection.encryptedString;\n          const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n          if (this.selfHosted) {\n            orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n          } else {\n            orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            this.i18nService.t(\"organizationCreated\"),\n            this.i18nService.t(\"organizationReadyToGo\")\n          );\n        } else {\n          orgId = await this.updateOrganization(orgId);\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"organizationUpgraded\")\n          );\n        }\n\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n\n        if (!this.acceptingSponsorship && !this.isInTrialFlow) {\n          this.router.navigate([\"/organizations/\" + orgId]);\n        }\n\n        if (this.isInTrialFlow) {\n          this.onTrialBillingSuccess.emit({\n            orgId: orgId,\n            subLabelText: this.billingSubLabelText(),\n          });\n        }\n\n        return orgId;\n      };\n\n      this.formPromise = doSubmit();\n      const organizationId = await this.formPromise;\n      this.onSuccess.emit({ organizationId: organizationId });\n      this.messagingService.send(\"organizationCreated\", organizationId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async updateOrganization(orgId: string) {\n    const request = new OrganizationUpgradeRequest();\n    request.businessName = this.formGroup.controls.businessOwned.value\n      ? this.formGroup.controls.businessName.value\n      : null;\n    request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n    request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n    request.premiumAccessAddon =\n      this.selectedPlan.hasPremiumAccessOption && this.formGroup.controls.premiumAccessAddon.value;\n    request.planType = this.selectedPlan.type;\n    request.billingAddressCountry = this.taxComponent.taxInfo.country;\n    request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n    // Retrieve org info to backfill pub/priv key if necessary\n    const org = await this.organizationService.get(this.organizationId);\n    if (!org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    const result = await this.organizationApiService.upgrade(this.organizationId, request);\n    if (!result.success && result.paymentIntentClientSecret != null) {\n      await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n    }\n    return this.organizationId;\n  }\n\n  private async createCloudHosted(\n    key: string,\n    collectionCt: string,\n    orgKeys: [string, EncString],\n    orgKey: SymmetricCryptoKey\n  ) {\n    const request = new OrganizationCreateRequest();\n    request.key = key;\n    request.collectionName = collectionCt;\n    request.name = this.formGroup.controls.name.value;\n    request.billingEmail = this.formGroup.controls.billingEmail.value;\n    request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n    if (this.selectedPlan.type === PlanType.Free) {\n      request.planType = PlanType.Free;\n    } else {\n      const tokenResult = await this.paymentComponent.createPaymentToken();\n\n      request.paymentToken = tokenResult[0];\n      request.paymentMethodType = tokenResult[1];\n      request.businessName = this.formGroup.controls.businessOwned.value\n        ? this.formGroup.controls.businessName.value\n        : null;\n      request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n      request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n      request.premiumAccessAddon =\n        this.selectedPlan.hasPremiumAccessOption &&\n        this.formGroup.controls.premiumAccessAddon.value;\n      request.planType = this.selectedPlan.type;\n      request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n      request.billingAddressCountry = this.taxComponent.taxInfo.country;\n      if (this.taxComponent.taxInfo.includeTaxId) {\n        request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n        request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n        request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n        request.billingAddressCity = this.taxComponent.taxInfo.city;\n        request.billingAddressState = this.taxComponent.taxInfo.state;\n      }\n    }\n\n    if (this.providerId) {\n      const providerRequest = new ProviderOrganizationCreateRequest(\n        this.formGroup.controls.clientOwnerEmail.value,\n        request\n      );\n      const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n      providerRequest.organizationCreateRequest.key = (\n        await this.cryptoService.encrypt(orgKey.key, providerKey)\n      ).encryptedString;\n      const orgId = (\n        await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)\n      ).organizationId;\n\n      return orgId;\n    } else {\n      return (await this.organizationApiService.create(request)).id;\n    }\n  }\n\n  private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      throw new Error(this.i18nService.t(\"selectFile\"));\n    }\n\n    const fd = new FormData();\n    fd.append(\"license\", files[0]);\n    fd.append(\"key\", key);\n    fd.append(\"collectionName\", collectionCt);\n    const response = await this.organizationApiService.createLicense(fd);\n    const orgId = response.id;\n\n    await this.apiService.refreshIdentityToken();\n\n    // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n    const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    await this.organizationApiService.updateKeys(orgId, request);\n\n    return orgId;\n  }\n\n  private billingSubLabelText(): string {\n    const selectedPlan = this.selectedPlan;\n    const price = selectedPlan.basePrice === 0 ? selectedPlan.seatPrice : selectedPlan.basePrice;\n    let text = \"\";\n\n    if (selectedPlan.isAnnual) {\n      text += `${this.i18nService.t(\"annual\")} ($${price}/${this.i18nService.t(\"yr\")})`;\n    } else {\n      text += `${this.i18nService.t(\"monthly\")} ($${price}/${this.i18nService.t(\"monthAbbr\")})`;\n    }\n\n    return text;\n  }\n}\n","export class VerifyBankRequest {\n  amount1: number;\n  amount2: number;\n}\n","export class BitPayInvoiceRequest {\n  userId: string;\n  organizationId: string;\n  credit: boolean;\n  amount: number;\n  returnUrl: string;\n  name: string;\n  email: string;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"addCredit\" | i18n }}</h3>\n    <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-paypal\"\n          [value]=\"paymentMethodType.PayPal\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-paypal\">\n          <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n        >\n      </div>\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-bitcoin\"\n          [value]=\"paymentMethodType.BitPay\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n          <i class=\"bwi bwi-fw bwi-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <label for=\"creditAmount\">{{ \"amount\" | i18n }}</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n            <input\n              id=\"creditAmount\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"CreditAmount\"\n              [(ngModel)]=\"creditAmount\"\n              (blur)=\"formatAmount()\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      <small class=\"form-text text-muted\">{{ \"creditDelayed\" | i18n }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n<form #ppButtonForm action=\"{{ ppButtonFormAction }}\" method=\"post\" target=\"_top\">\n  <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n  <input type=\"hidden\" name=\"business\" value=\"{{ ppButtonBusinessId }}\" />\n  <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n  <input type=\"hidden\" name=\"no_note\" value=\"1\" />\n  <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n  <input type=\"hidden\" name=\"rm\" value=\"1\" />\n  <input type=\"hidden\" name=\"return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"cancel_return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n  <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\" />\n  <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\" />\n  <input type=\"hidden\" name=\"amount\" value=\"{{ creditAmount }}\" />\n  <input type=\"hidden\" name=\"custom\" value=\"{{ ppButtonCustomField }}\" />\n  <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\" />\n  <input type=\"hidden\" name=\"item_number\" value=\"{{ subject }}\" />\n</form>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PayPalConfig } from \"@bitwarden/common/abstractions/environment.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BitPayInvoiceRequest } from \"@bitwarden/common/models/request/bit-pay-invoice.request\";\n\n@Component({\n  selector: \"app-add-credit\",\n  templateUrl: \"add-credit.component.html\",\n})\nexport class AddCreditComponent implements OnInit {\n  @Input() creditAmount: string;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.PayPal;\n  @Input() organizationId: string;\n  @Output() onAdded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(\"ppButtonForm\", { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n  paymentMethodType = PaymentMethodType;\n  ppButtonFormAction: string;\n  ppButtonBusinessId: string;\n  ppButtonCustomField: string;\n  ppLoading = false;\n  subject: string;\n  returnUrl: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private name: string;\n  private email: string;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n    this.ppButtonFormAction = payPalConfig.buttonAction;\n    this.ppButtonBusinessId = payPalConfig.businessId;\n  }\n\n  async ngOnInit() {\n    if (this.organizationId != null) {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"20.00\";\n      }\n      this.ppButtonCustomField = \"organization_id:\" + this.organizationId;\n      const org = await this.organizationService.get(this.organizationId);\n      if (org != null) {\n        this.subject = org.name;\n        this.name = org.name;\n      }\n    } else {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"10.00\";\n      }\n      this.userId = await this.stateService.getUserId();\n      this.subject = await this.stateService.getEmail();\n      this.email = this.subject;\n      this.ppButtonCustomField = \"user_id:\" + this.userId;\n    }\n    this.ppButtonCustomField += \",account_credit:1\";\n    this.returnUrl = window.location.href;\n  }\n\n  async submit() {\n    if (this.creditAmount == null || this.creditAmount === \"\") {\n      return;\n    }\n\n    if (this.method === PaymentMethodType.PayPal) {\n      this.ppButtonFormRef.nativeElement.submit();\n      this.ppLoading = true;\n      return;\n    }\n    if (this.method === PaymentMethodType.BitPay) {\n      try {\n        const req = new BitPayInvoiceRequest();\n        req.email = this.email;\n        req.name = this.name;\n        req.credit = true;\n        req.amount = this.creditAmountNumber;\n        req.organizationId = this.organizationId;\n        req.userId = this.userId;\n        req.returnUrl = this.returnUrl;\n        this.formPromise = this.apiService.postBitPayInvoice(req);\n        const bitPayUrl: string = await this.formPromise;\n        this.platformUtilsService.launchUri(bitPayUrl);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      return;\n    }\n    try {\n      this.onAdded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  formatAmount() {\n    try {\n      if (this.creditAmount != null && this.creditAmount !== \"\") {\n        const floatAmount = Math.abs(parseFloat(this.creditAmount));\n        if (floatAmount > 0) {\n          this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n            .toFixed(2)\n            .toString();\n          return;\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.creditAmount = \"\";\n  }\n\n  get creditAmountNumber(): number {\n    if (this.creditAmount != null && this.creditAmount !== \"\") {\n      try {\n        return parseFloat(this.creditAmount);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return null;\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\n\nimport { OrganizationTaxInfoUpdateRequest } from \"./organization-tax-info-update.request\";\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n}\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PaymentRequest } from \"@bitwarden/common/models/request/payment.request\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-adjust-payment\",\n  templateUrl: \"adjust-payment.component.html\",\n})\nexport class AdjustPaymentComponent {\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n  @Input() currentType?: PaymentMethodType;\n  @Input() organizationId: string;\n  @Output() onAdjusted = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  paymentMethodType = PaymentMethodType;\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new PaymentRequest();\n      this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n        request.paymentToken = result[0];\n        request.paymentMethodType = result[1];\n        request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n        request.country = this.taxInfoComponent.taxInfo.country;\n        if (this.organizationId == null) {\n          return this.apiService.postAccountPayment(request);\n        } else {\n          request.taxId = this.taxInfoComponent.taxInfo.taxId;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          request.line1 = this.taxInfoComponent.taxInfo.line1;\n          request.line2 = this.taxInfoComponent.taxInfo.line2;\n          request.city = this.taxInfoComponent.taxInfo.city;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          return this.organizationApiService.updatePayment(this.organizationId, request);\n        }\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedPaymentMethod\")\n      );\n      this.onAdjusted.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  changeCountry() {\n    if (this.taxInfoComponent.taxInfo.country === \"US\") {\n      this.paymentComponent.hideBank = !this.organizationId;\n    } else {\n      this.paymentComponent.hideBank = true;\n      if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n        this.paymentComponent.method = PaymentMethodType.Card;\n        this.paymentComponent.changeMethod();\n      }\n    }\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">\n      {{ (currentType != null ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n    </h3>\n    <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"d-flex\" [ngClass]=\"headerClass\">\n  <h1>\n    {{ \"paymentMethod\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\">\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    [organizationId]=\"organizationId\"\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <app-callout\n      type=\"warning\"\n      title=\"{{ 'verifyBankAccount' | i18n }}\"\n      *ngIf=\"\n        forOrganization &&\n        paymentSource.type === paymentMethodType.BankAccount &&\n        paymentSource.needsVerification\n      \"\n    >\n      <p>{{ \"verifyBankAccountDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}</p>\n      <form\n        #verifyForm\n        class=\"form-inline\"\n        (ngSubmit)=\"verifyBank()\"\n        [formGroup]=\"verifyBankForm\"\n        [appApiAction]=\"verifyBankPromise\"\n        ngNativeValidate\n      >\n        <bit-form-field class=\"tw-mr-2 tw-w-40\">\n          <bit-label>{{ \"amountX\" | i18n: \"1\" }}</bit-label>\n          <input bitInput type=\"number\" step=\"1\" placeholder=\"xx\" formControlName=\"amount1\" />\n          <span bitPrefix>$0.</span>\n        </bit-form-field>\n        <bit-form-field class=\"tw-mr-2 tw-w-40\">\n          <bit-label>{{ \"amountX\" | i18n: \"2\" }}</bit-label>\n          <input bitInput type=\"number\" step=\"1\" placeholder=\"xx\" formControlName=\"amount2\" />\n          <span bitPrefix>$0.</span>\n        </bit-form-field>\n        <button\n          bitButton\n          buttonType=\"primary\"\n          type=\"submit\"\n          class=\"btn-submit\"\n          [disabled]=\"verifyForm.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"verifyBankAccount\" | i18n }}</span>\n        </button>\n      </form>\n    </app-callout>\n    <p>\n      <i class=\"bwi bwi-fw\" [ngClass]=\"paymentSourceClasses\"></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button bitButton buttonType=\"secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\">\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [organizationId]=\"organizationId\"\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n  <ng-container *ngIf=\"forOrganization\">\n    <h2 class=\"spaced-header\">{{ \"taxInformation\" | i18n }}</h2>\n    <p>{{ \"taxInformationDesc\" | i18n }}</p>\n    <div *ngIf=\"!org || loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </div>\n    <form\n      *ngIf=\"org && !loading\"\n      #formTax\n      (ngSubmit)=\"submitTaxInfo()\"\n      [appApiAction]=\"taxFormPromise\"\n      ngNativeValidate\n    >\n      <app-tax-info></app-tax-info>\n      <button\n        bitButton\n        buttonType=\"primary\"\n        type=\"submit\"\n        class=\"btn-submit\"\n        [disabled]=\"formTax.loading\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"save\" | i18n }}</span>\n      </button>\n    </form>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { VerifyBankRequest } from \"@bitwarden/common/models/request/verify-bank.request\";\nimport { BillingPaymentResponse } from \"@bitwarden/common/models/response/billing-payment.response\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organization.response\";\n\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-payment-method\",\n  templateUrl: \"payment-method.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PaymentMethodComponent implements OnInit {\n  @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingPaymentResponse;\n  org: OrganizationResponse;\n  paymentMethodType = PaymentMethodType;\n  organizationId: string;\n\n  verifyBankPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  verifyBankForm = this.formBuilder.group({\n    amount1: new FormControl<number>(null, [\n      Validators.required,\n      Validators.max(99),\n      Validators.min(0),\n    ]),\n    amount2: new FormControl<number>(null, [\n      Validators.required,\n      Validators.max(99),\n      Validators.min(0),\n    ]),\n  });\n\n  constructor(\n    protected apiService: ApiService,\n    protected organizationApiService: OrganizationApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private logService: LogService,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      if (params.organizationId) {\n        this.organizationId = params.organizationId;\n      } else if (this.platformUtilsService.isSelfHost()) {\n        this.router.navigate([\"/settings/subscription\"]);\n        return;\n      }\n\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n\n    if (this.forOrganization) {\n      const billingPromise = this.organizationApiService.getBilling(this.organizationId);\n      const orgPromise = this.organizationApiService.get(this.organizationId);\n\n      [this.billing, this.org] = await Promise.all([billingPromise, orgPromise]);\n    } else {\n      this.billing = await this.apiService.getUserBillingPayment();\n    }\n\n    this.loading = false;\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  async verifyBank() {\n    if (this.loading || !this.forOrganization) {\n      return;\n    }\n\n    try {\n      const request = new VerifyBankRequest();\n      request.amount1 = this.verifyBankForm.value.amount1;\n      request.amount2 = this.verifyBankForm.value.amount2;\n      this.verifyBankPromise = this.organizationApiService.verifyBank(this.organizationId, request);\n      await this.verifyBankPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"verifiedBankAccount\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submitTaxInfo() {\n    this.taxFormPromise = this.taxInfo.submitTaxInfo();\n    await this.taxFormPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"taxInfoUpdated\"));\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get forOrganization() {\n    return this.organizationId != null;\n  }\n\n  get headerClass() {\n    return this.forOrganization ? [\"page-header\"] : [\"tabbed-header\"];\n  }\n\n  get paymentSourceClasses() {\n    if (this.paymentSource == null) {\n      return [];\n    }\n    switch (this.paymentSource.type) {\n      case PaymentMethodType.Card:\n        return [\"bwi-credit-card\"];\n      case PaymentMethodType.BankAccount:\n        return [\"bwi-bank\"];\n      case PaymentMethodType.Check:\n        return [\"bwi-money\"];\n      case PaymentMethodType.AppleInApp:\n        return [\"bwi-apple text-muted\"];\n      case PaymentMethodType.GoogleInApp:\n        return [\"bwi-google text-muted\"];\n      case PaymentMethodType.PayPal:\n        return [\"bwi-paypal text-primary\"];\n      default:\n        return [];\n    }\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n  <div class=\"form-check form-check-inline mr-4\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-card\"\n      [value]=\"paymentMethodType.Card\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-card\">\n      <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i> {{ \"creditCard\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-bank\"\n      [value]=\"paymentMethodType.BankAccount\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-bank\">\n      <i class=\"bwi bwi-fw bwi-bank\" aria-hidden=\"true\"></i> {{ \"bankAccount\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-paypal\"\n      [value]=\"paymentMethodType.PayPal\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-paypal\">\n      <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-credit\"\n      [value]=\"paymentMethodType.Credit\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-credit\">\n      <i class=\"bwi bwi-fw bwi-dollar\" aria-hidden=\"true\"></i> {{ \"accountCredit\" | i18n }}</label\n    >\n  </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n  <div class=\"row\">\n    <div [ngClass]=\"trialFlow ? 'col-5' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-number-element\">{{ \"number\" | i18n }}</label>\n      <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div *ngIf=\"!trialFlow\" class=\"form-group col-8 d-flex align-items-end\">\n      <img\n        src=\"../../images/cards.png\"\n        alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n        width=\"323\"\n        height=\"32\"\n      />\n    </div>\n    <div [ngClass]=\"trialFlow ? 'col-3' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-expiry-element\">{{ \"expiration\" | i18n }}</label>\n      <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-4\">\n      <div class=\"d-flex\">\n        <label for=\"stripe-card-cvc-element\">\n          {{ \"securityCode\" | i18n }}\n        </label>\n        <a\n          href=\"https://www.cvvnumber.com/cvv.html\"\n          tabindex=\"-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"ml-auto\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n  <app-callout type=\"warning\" title=\"{{ 'verifyBankAccount' | i18n }}\">\n    {{ \"verifyBankAccountInitialDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"routing_number\">{{ \"routingNumber\" | i18n }}</label>\n      <input\n        id=\"routing_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"routing_number\"\n        [(ngModel)]=\"bank.routing_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_number\">{{ \"accountNumber\" | i18n }}</label>\n      <input\n        id=\"account_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_number\"\n        [(ngModel)]=\"bank.account_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_name\">{{ \"accountHolderName\" | i18n }}</label>\n      <input\n        id=\"account_holder_name\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_holder_name\"\n        [(ngModel)]=\"bank.account_holder_name\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_type\">{{ \"bankAccountType\" | i18n }}</label>\n      <select\n        id=\"account_holder_type\"\n        class=\"form-control\"\n        name=\"account_holder_type\"\n        [(ngModel)]=\"bank.account_holder_type\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option value=\"company\">{{ \"bankAccountTypeCompany\" | i18n }}</option>\n        <option value=\"individual\">{{ \"bankAccountTypeIndividual\" | i18n }}</option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n  <div class=\"mb-3\">\n    <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n    <small class=\"text-muted\">{{ \"paypalClickSubmit\" | i18n }}</small>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n  <app-callout type=\"note\">\n    {{ \"makeSureEnoughCredit\" | i18n }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\n\n@Component({\n  selector: \"app-payment\",\n  templateUrl: \"payment.component.html\",\n})\nexport class PaymentComponent implements OnInit, OnDestroy {\n  @Input() showMethods = true;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.Card;\n  @Input() hideBank = false;\n  @Input() hidePaypal = false;\n  @Input() hideCredit = false;\n  @Input() trialFlow = false;\n\n  private destroy$ = new Subject<void>();\n\n  bank: any = {\n    routing_number: null,\n    account_number: null,\n    account_holder_name: null,\n    account_holder_type: \"\",\n    currency: \"USD\",\n    country: \"US\",\n  };\n\n  paymentMethodType = PaymentMethodType;\n\n  private btScript: HTMLScriptElement;\n  private btInstance: any = null;\n  private stripeScript: HTMLScriptElement;\n  private stripe: any = null;\n  private stripeElements: any = null;\n  private stripeCardNumberElement: any = null;\n  private stripeCardExpiryElement: any = null;\n  private stripeCardCvcElement: any = null;\n  private StripeElementStyle: any;\n  private StripeElementClasses: any;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private themingService: AbstractThemingService\n  ) {\n    this.stripeScript = window.document.createElement(\"script\");\n    this.stripeScript.src = \"https://js.stripe.com/v3/\";\n    this.stripeScript.async = true;\n    this.stripeScript.onload = () => {\n      this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n      this.stripeElements = this.stripe.elements();\n      this.setStripeElement();\n    };\n    this.btScript = window.document.createElement(\"script\");\n    this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n    this.btScript.async = true;\n    this.StripeElementStyle = {\n      base: {\n        color: null,\n        fontFamily:\n          '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n          '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: \"14px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: null,\n        },\n      },\n      invalid: {\n        color: null,\n      },\n    };\n    this.StripeElementClasses = {\n      focus: \"is-focused\",\n      empty: \"is-empty\",\n      invalid: \"is-invalid\",\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.showOptions) {\n      this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n      this.hideBank = this.method !== PaymentMethodType.BankAccount;\n      this.hideCredit = this.method !== PaymentMethodType.Credit;\n    }\n    this.subscribeToTheme();\n    window.document.head.appendChild(this.stripeScript);\n    if (!this.hidePaypal) {\n      window.document.head.appendChild(this.btScript);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    window.document.head.removeChild(this.stripeScript);\n    window.setTimeout(() => {\n      Array.from(window.document.querySelectorAll(\"iframe\")).forEach((el) => {\n        if (el.src != null && el.src.indexOf(\"stripe\") > -1) {\n          try {\n            window.document.body.removeChild(el);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      });\n    }, 500);\n    if (!this.hidePaypal) {\n      window.document.head.removeChild(this.btScript);\n      window.setTimeout(() => {\n        Array.from(window.document.head.querySelectorAll(\"script\")).forEach((el) => {\n          if (el.src != null && el.src.indexOf(\"paypal\") > -1) {\n            try {\n              window.document.head.removeChild(el);\n            } catch (e) {\n              this.logService.error(e);\n            }\n          }\n        });\n        const btStylesheet = window.document.head.querySelector(\"#braintree-dropin-stylesheet\");\n        if (btStylesheet != null) {\n          try {\n            window.document.head.removeChild(btStylesheet);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      }, 500);\n    }\n  }\n\n  changeMethod() {\n    this.btInstance = null;\n\n    if (this.method === PaymentMethodType.PayPal) {\n      window.setTimeout(() => {\n        (window as any).braintree.dropin.create(\n          {\n            authorization: process.env.BRAINTREE_KEY,\n            container: \"#bt-dropin-container\",\n            paymentOptionPriority: [\"paypal\"],\n            paypal: {\n              flow: \"vault\",\n              buttonStyle: {\n                label: \"pay\",\n                size: \"medium\",\n                shape: \"pill\",\n                color: \"blue\",\n                tagline: \"false\",\n              },\n            },\n          },\n          (createErr: any, instance: any) => {\n            if (createErr != null) {\n              // eslint-disable-next-line\n              console.error(createErr);\n              return;\n            }\n            this.btInstance = instance;\n          }\n        );\n      }, 250);\n    } else {\n      this.setStripeElement();\n    }\n  }\n\n  createPaymentToken(): Promise<[string, PaymentMethodType]> {\n    return new Promise((resolve, reject) => {\n      if (this.method === PaymentMethodType.Credit) {\n        resolve([null, this.method]);\n      } else if (this.method === PaymentMethodType.PayPal) {\n        this.btInstance\n          .requestPaymentMethod()\n          .then((payload: any) => {\n            resolve([payload.nonce, this.method]);\n          })\n          .catch((err: any) => {\n            reject(err.message);\n          });\n      } else if (\n        this.method === PaymentMethodType.Card ||\n        this.method === PaymentMethodType.BankAccount\n      ) {\n        if (this.method === PaymentMethodType.Card) {\n          this.apiService\n            .postSetupPayment()\n            .then((clientSecret) =>\n              this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n            )\n            .then((result: any) => {\n              if (result.error) {\n                reject(result.error.message);\n              } else if (result.setupIntent && result.setupIntent.status === \"succeeded\") {\n                resolve([result.setupIntent.payment_method, this.method]);\n              } else {\n                reject();\n              }\n            });\n        } else {\n          this.stripe.createToken(\"bank_account\", this.bank).then((result: any) => {\n            if (result.error) {\n              reject(result.error.message);\n            } else if (result.token && result.token.id != null) {\n              resolve([result.token.id, this.method]);\n            } else {\n              reject();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.showMethods && this.stripeCardNumberElement == null) {\n        reject();\n        return;\n      }\n      const handleCardPayment = () =>\n        this.showMethods\n          ? this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n          : this.stripe.handleCardSetup(clientSecret);\n      return handleCardPayment().then(async (result: any) => {\n        if (result.error) {\n          reject(result.error.message);\n        } else if (result.paymentIntent && result.paymentIntent.status === \"succeeded\") {\n          if (successCallback != null) {\n            await successCallback();\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  private setStripeElement() {\n    window.setTimeout(() => {\n      if (this.showMethods && this.method === PaymentMethodType.Card) {\n        if (this.stripeCardNumberElement == null) {\n          this.stripeCardNumberElement = this.stripeElements.create(\"cardNumber\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        if (this.stripeCardExpiryElement == null) {\n          this.stripeCardExpiryElement = this.stripeElements.create(\"cardExpiry\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n          });\n        }\n        if (this.stripeCardCvcElement == null) {\n          this.stripeCardCvcElement = this.stripeElements.create(\"cardCvc\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        this.stripeCardNumberElement.mount(\"#stripe-card-number-element\");\n        this.stripeCardExpiryElement.mount(\"#stripe-card-expiry-element\");\n        this.stripeCardCvcElement.mount(\"#stripe-card-cvc-element\");\n      }\n    }, 50);\n  }\n\n  private subscribeToTheme() {\n    this.themingService.theme$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      const style = getComputedStyle(document.documentElement);\n      this.StripeElementStyle.base.color = `rgb(${style.getPropertyValue(\"--color-text-main\")})`;\n      this.StripeElementStyle.base[\"::placeholder\"].color = `rgb(${style.getPropertyValue(\n        \"--color-text-muted\"\n      )})`;\n      this.StripeElementStyle.invalid.color = `rgb(${style.getPropertyValue(\"--color-text-main\")})`;\n      this.StripeElementStyle.invalid.borderColor = `rgb(${style.getPropertyValue(\n        \"--color-danger-500\"\n      )})`;\n    });\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-purge-vault\",\n  templateUrl: \"purge-vault.component.html\",\n})\nexport class PurgeVaultComponent {\n  @Input() organizationId?: string = null;\n\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private router: Router,\n    private logService: LogService,\n    private syncService: SyncService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postPurgeCiphers(request, this.organizationId));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"vaultPurged\"));\n      this.syncService.fullSync(true);\n      if (this.organizationId != null) {\n        this.router.navigate([\"organizations\", this.organizationId, \"vault\"]);\n      } else {\n        this.router.navigate([\"vault\"]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"purgeVaultTitle\">{{ \"purgeVault\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ (organizationId ? \"purgeOrgVaultDesc\" : \"purgeVaultDesc\") | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"purgeVaultWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"purgeVault\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"row\">\n  <div [ngClass]=\"trialFlow ? 'col-7' : 'col-6'\">\n    <div class=\"form-group\">\n      <label for=\"addressCountry\">{{ \"country\" | i18n }}</label>\n      <select\n        id=\"addressCountry\"\n        class=\"form-control\"\n        [(ngModel)]=\"taxInfo.country\"\n        required\n        name=\"addressCountry\"\n        autocomplete=\"country\"\n        (change)=\"changeCountry()\"\n      >\n        <option value=\"\">-- Select --</option>\n        <option value=\"US\">United States</option>\n        <option value=\"CN\">China</option>\n        <option value=\"FR\">France</option>\n        <option value=\"DE\">Germany</option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"GB\">United Kingdom</option>\n        <option value=\"AU\">Australia</option>\n        <option value=\"IN\">India</option>\n        <option value=\"-\" disabled></option>\n        <option value=\"AF\">Afghanistan</option>\n        <option value=\"AX\">Åland Islands</option>\n        <option value=\"AL\">Albania</option>\n        <option value=\"DZ\">Algeria</option>\n        <option value=\"AS\">American Samoa</option>\n        <option value=\"AD\">Andorra</option>\n        <option value=\"AO\">Angola</option>\n        <option value=\"AI\">Anguilla</option>\n        <option value=\"AQ\">Antarctica</option>\n        <option value=\"AG\">Antigua and Barbuda</option>\n        <option value=\"AR\">Argentina</option>\n        <option value=\"AM\">Armenia</option>\n        <option value=\"AW\">Aruba</option>\n        <option value=\"AT\">Austria</option>\n        <option value=\"AZ\">Azerbaijan</option>\n        <option value=\"BS\">Bahamas</option>\n        <option value=\"BH\">Bahrain</option>\n        <option value=\"BD\">Bangladesh</option>\n        <option value=\"BB\">Barbados</option>\n        <option value=\"BY\">Belarus</option>\n        <option value=\"BE\">Belgium</option>\n        <option value=\"BZ\">Belize</option>\n        <option value=\"BJ\">Benin</option>\n        <option value=\"BM\">Bermuda</option>\n        <option value=\"BT\">Bhutan</option>\n        <option value=\"BO\">Bolivia, Plurinational State of</option>\n        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n        <option value=\"BA\">Bosnia and Herzegovina</option>\n        <option value=\"BW\">Botswana</option>\n        <option value=\"BV\">Bouvet Island</option>\n        <option value=\"BR\">Brazil</option>\n        <option value=\"IO\">British Indian Ocean Territory</option>\n        <option value=\"BN\">Brunei Darussalam</option>\n        <option value=\"BG\">Bulgaria</option>\n        <option value=\"BF\">Burkina Faso</option>\n        <option value=\"BI\">Burundi</option>\n        <option value=\"KH\">Cambodia</option>\n        <option value=\"CM\">Cameroon</option>\n        <option value=\"CV\">Cape Verde</option>\n        <option value=\"KY\">Cayman Islands</option>\n        <option value=\"CF\">Central African Republic</option>\n        <option value=\"TD\">Chad</option>\n        <option value=\"CL\">Chile</option>\n        <option value=\"CX\">Christmas Island</option>\n        <option value=\"CC\">Cocos (Keeling) Islands</option>\n        <option value=\"CO\">Colombia</option>\n        <option value=\"KM\">Comoros</option>\n        <option value=\"CG\">Congo</option>\n        <option value=\"CD\">Congo, the Democratic Republic of the</option>\n        <option value=\"CK\">Cook Islands</option>\n        <option value=\"CR\">Costa Rica</option>\n        <option value=\"CI\">Côte d'Ivoire</option>\n        <option value=\"HR\">Croatia</option>\n        <option value=\"CU\">Cuba</option>\n        <option value=\"CW\">Curaçao</option>\n        <option value=\"CY\">Cyprus</option>\n        <option value=\"CZ\">Czech Republic</option>\n        <option value=\"DK\">Denmark</option>\n        <option value=\"DJ\">Djibouti</option>\n        <option value=\"DM\">Dominica</option>\n        <option value=\"DO\">Dominican Republic</option>\n        <option value=\"EC\">Ecuador</option>\n        <option value=\"EG\">Egypt</option>\n        <option value=\"SV\">El Salvador</option>\n        <option value=\"GQ\">Equatorial Guinea</option>\n        <option value=\"ER\">Eritrea</option>\n        <option value=\"EE\">Estonia</option>\n        <option value=\"ET\">Ethiopia</option>\n        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n        <option value=\"FO\">Faroe Islands</option>\n        <option value=\"FJ\">Fiji</option>\n        <option value=\"FI\">Finland</option>\n        <option value=\"GF\">French Guiana</option>\n        <option value=\"PF\">French Polynesia</option>\n        <option value=\"TF\">French Southern Territories</option>\n        <option value=\"GA\">Gabon</option>\n        <option value=\"GM\">Gambia</option>\n        <option value=\"GE\">Georgia</option>\n        <option value=\"GH\">Ghana</option>\n        <option value=\"GI\">Gibraltar</option>\n        <option value=\"GR\">Greece</option>\n        <option value=\"GL\">Greenland</option>\n        <option value=\"GD\">Grenada</option>\n        <option value=\"GP\">Guadeloupe</option>\n        <option value=\"GU\">Guam</option>\n        <option value=\"GT\">Guatemala</option>\n        <option value=\"GG\">Guernsey</option>\n        <option value=\"GN\">Guinea</option>\n        <option value=\"GW\">Guinea-Bissau</option>\n        <option value=\"GY\">Guyana</option>\n        <option value=\"HT\">Haiti</option>\n        <option value=\"HM\">Heard Island and McDonald Islands</option>\n        <option value=\"VA\">Holy See (Vatican City State)</option>\n        <option value=\"HN\">Honduras</option>\n        <option value=\"HK\">Hong Kong</option>\n        <option value=\"HU\">Hungary</option>\n        <option value=\"IS\">Iceland</option>\n        <option value=\"ID\">Indonesia</option>\n        <option value=\"IR\">Iran, Islamic Republic of</option>\n        <option value=\"IQ\">Iraq</option>\n        <option value=\"IE\">Ireland</option>\n        <option value=\"IM\">Isle of Man</option>\n        <option value=\"IL\">Israel</option>\n        <option value=\"IT\">Italy</option>\n        <option value=\"JM\">Jamaica</option>\n        <option value=\"JP\">Japan</option>\n        <option value=\"JE\">Jersey</option>\n        <option value=\"JO\">Jordan</option>\n        <option value=\"KZ\">Kazakhstan</option>\n        <option value=\"KE\">Kenya</option>\n        <option value=\"KI\">Kiribati</option>\n        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n        <option value=\"KR\">Korea, Republic of</option>\n        <option value=\"KW\">Kuwait</option>\n        <option value=\"KG\">Kyrgyzstan</option>\n        <option value=\"LA\">Lao People's Democratic Republic</option>\n        <option value=\"LV\">Latvia</option>\n        <option value=\"LB\">Lebanon</option>\n        <option value=\"LS\">Lesotho</option>\n        <option value=\"LR\">Liberia</option>\n        <option value=\"LY\">Libya</option>\n        <option value=\"LI\">Liechtenstein</option>\n        <option value=\"LT\">Lithuania</option>\n        <option value=\"LU\">Luxembourg</option>\n        <option value=\"MO\">Macao</option>\n        <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n        <option value=\"MG\">Madagascar</option>\n        <option value=\"MW\">Malawi</option>\n        <option value=\"MY\">Malaysia</option>\n        <option value=\"MV\">Maldives</option>\n        <option value=\"ML\">Mali</option>\n        <option value=\"MT\">Malta</option>\n        <option value=\"MH\">Marshall Islands</option>\n        <option value=\"MQ\">Martinique</option>\n        <option value=\"MR\">Mauritania</option>\n        <option value=\"MU\">Mauritius</option>\n        <option value=\"YT\">Mayotte</option>\n        <option value=\"MX\">Mexico</option>\n        <option value=\"FM\">Micronesia, Federated States of</option>\n        <option value=\"MD\">Moldova, Republic of</option>\n        <option value=\"MC\">Monaco</option>\n        <option value=\"MN\">Mongolia</option>\n        <option value=\"ME\">Montenegro</option>\n        <option value=\"MS\">Montserrat</option>\n        <option value=\"MA\">Morocco</option>\n        <option value=\"MZ\">Mozambique</option>\n        <option value=\"MM\">Myanmar</option>\n        <option value=\"NA\">Namibia</option>\n        <option value=\"NR\">Nauru</option>\n        <option value=\"NP\">Nepal</option>\n        <option value=\"NL\">Netherlands</option>\n        <option value=\"NC\">New Caledonia</option>\n        <option value=\"NZ\">New Zealand</option>\n        <option value=\"NI\">Nicaragua</option>\n        <option value=\"NE\">Niger</option>\n        <option value=\"NG\">Nigeria</option>\n        <option value=\"NU\">Niue</option>\n        <option value=\"NF\">Norfolk Island</option>\n        <option value=\"MP\">Northern Mariana Islands</option>\n        <option value=\"NO\">Norway</option>\n        <option value=\"OM\">Oman</option>\n        <option value=\"PK\">Pakistan</option>\n        <option value=\"PW\">Palau</option>\n        <option value=\"PS\">Palestinian Territory, Occupied</option>\n        <option value=\"PA\">Panama</option>\n        <option value=\"PG\">Papua New Guinea</option>\n        <option value=\"PY\">Paraguay</option>\n        <option value=\"PE\">Peru</option>\n        <option value=\"PH\">Philippines</option>\n        <option value=\"PN\">Pitcairn</option>\n        <option value=\"PL\">Poland</option>\n        <option value=\"PT\">Portugal</option>\n        <option value=\"PR\">Puerto Rico</option>\n        <option value=\"QA\">Qatar</option>\n        <option value=\"RE\">Réunion</option>\n        <option value=\"RO\">Romania</option>\n        <option value=\"RU\">Russian Federation</option>\n        <option value=\"RW\">Rwanda</option>\n        <option value=\"BL\">Saint Barthélemy</option>\n        <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n        <option value=\"KN\">Saint Kitts and Nevis</option>\n        <option value=\"LC\">Saint Lucia</option>\n        <option value=\"MF\">Saint Martin (French part)</option>\n        <option value=\"PM\">Saint Pierre and Miquelon</option>\n        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n        <option value=\"WS\">Samoa</option>\n        <option value=\"SM\">San Marino</option>\n        <option value=\"ST\">Sao Tome and Principe</option>\n        <option value=\"SA\">Saudi Arabia</option>\n        <option value=\"SN\">Senegal</option>\n        <option value=\"RS\">Serbia</option>\n        <option value=\"SC\">Seychelles</option>\n        <option value=\"SL\">Sierra Leone</option>\n        <option value=\"SG\">Singapore</option>\n        <option value=\"SX\">Sint Maarten (Dutch part)</option>\n        <option value=\"SK\">Slovakia</option>\n        <option value=\"SI\">Slovenia</option>\n        <option value=\"SB\">Solomon Islands</option>\n        <option value=\"SO\">Somalia</option>\n        <option value=\"ZA\">South Africa</option>\n        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n        <option value=\"SS\">South Sudan</option>\n        <option value=\"ES\">Spain</option>\n        <option value=\"LK\">Sri Lanka</option>\n        <option value=\"SD\">Sudan</option>\n        <option value=\"SR\">Suriname</option>\n        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n        <option value=\"SZ\">Swaziland</option>\n        <option value=\"SE\">Sweden</option>\n        <option value=\"CH\">Switzerland</option>\n        <option value=\"SY\">Syrian Arab Republic</option>\n        <option value=\"TW\">Taiwan</option>\n        <option value=\"TJ\">Tajikistan</option>\n        <option value=\"TZ\">Tanzania, United Republic of</option>\n        <option value=\"TH\">Thailand</option>\n        <option value=\"TL\">Timor-Leste</option>\n        <option value=\"TG\">Togo</option>\n        <option value=\"TK\">Tokelau</option>\n        <option value=\"TO\">Tonga</option>\n        <option value=\"TT\">Trinidad and Tobago</option>\n        <option value=\"TN\">Tunisia</option>\n        <option value=\"TR\">Turkey</option>\n        <option value=\"TM\">Turkmenistan</option>\n        <option value=\"TC\">Turks and Caicos Islands</option>\n        <option value=\"TV\">Tuvalu</option>\n        <option value=\"UG\">Uganda</option>\n        <option value=\"UA\">Ukraine</option>\n        <option value=\"AE\">United Arab Emirates</option>\n        <option value=\"UM\">United States Minor Outlying Islands</option>\n        <option value=\"UY\">Uruguay</option>\n        <option value=\"UZ\">Uzbekistan</option>\n        <option value=\"VU\">Vanuatu</option>\n        <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n        <option value=\"VN\">Viet Nam</option>\n        <option value=\"VG\">Virgin Islands, British</option>\n        <option value=\"VI\">Virgin Islands, U.S.</option>\n        <option value=\"WF\">Wallis and Futuna</option>\n        <option value=\"EH\">Western Sahara</option>\n        <option value=\"YE\">Yemen</option>\n        <option value=\"ZM\">Zambia</option>\n        <option value=\"ZW\">Zimbabwe</option>\n      </select>\n    </div>\n  </div>\n  <div [ngClass]=\"trialFlow ? 'col-5' : 'col-3'\">\n    <div class=\"form-group\">\n      <label for=\"addressPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n      <input\n        id=\"addressPostalCode\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressPostalCode\"\n        [(ngModel)]=\"taxInfo.postalCode\"\n        [required]=\"taxInfo.country === 'US'\"\n        autocomplete=\"postal-code\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n    <div class=\"form-group form-check\">\n      <input\n        class=\"form-check-input\"\n        id=\"addressIncludeTaxId\"\n        name=\"addressIncludeTaxId\"\n        type=\"checkbox\"\n        [(ngModel)]=\"taxInfo.includeTaxId\"\n      />\n      <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{ \"includeVAT\" | i18n }}</label>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"taxId\">{{ \"taxIdNumber\" | i18n }}</label>\n      <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\" />\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine1\">{{ \"address1\" | i18n }}</label>\n      <input\n        id=\"addressLine1\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine1\"\n        [(ngModel)]=\"taxInfo.line1\"\n        autocomplete=\"address-line1\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine2\">{{ \"address2\" | i18n }}</label>\n      <input\n        id=\"addressLine2\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine2\"\n        [(ngModel)]=\"taxInfo.line2\"\n        autocomplete=\"address-line2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCity\">{{ \"cityTown\" | i18n }}</label>\n      <input\n        id=\"addressCity\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressCity\"\n        [(ngModel)]=\"taxInfo.city\"\n        autocomplete=\"address-level2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressState\">{{ \"stateProvince\" | i18n }}</label>\n      <input\n        id=\"addressState\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressState\"\n        [(ngModel)]=\"taxInfo.state\"\n        autocomplete=\"address-level1\"\n      />\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationTaxInfoUpdateRequest } from \"@bitwarden/common/models/request/organization-tax-info-update.request\";\nimport { TaxInfoUpdateRequest } from \"@bitwarden/common/models/request/tax-info-update.request\";\nimport { TaxInfoResponse } from \"@bitwarden/common/models/response/tax-info.response\";\nimport { TaxRateResponse } from \"@bitwarden/common/models/response/tax-rate.response\";\n\ntype TaxInfoView = Omit<TaxInfoResponse, \"taxIdType\"> & {\n  includeTaxId: boolean;\n  [key: string]: unknown;\n};\n\n@Component({\n  selector: \"app-tax-info\",\n  templateUrl: \"tax-info.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TaxInfoComponent {\n  @Input() trialFlow = false;\n  @Output() onCountryChanged = new EventEmitter();\n\n  loading = true;\n  organizationId: string;\n  taxInfo: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  taxRates: TaxRateResponse[];\n\n  private pristine: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      if (this.organizationId) {\n        try {\n          const taxInfo = await this.organizationApiService.getTaxInfo(this.organizationId);\n          if (taxInfo) {\n            this.taxInfo.taxId = taxInfo.taxId;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.line1 = taxInfo.line1;\n            this.taxInfo.line2 = taxInfo.line2;\n            this.taxInfo.city = taxInfo.city;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n            this.taxInfo.includeTaxId =\n              this.taxInfo.country !== \"US\" &&\n              (!!taxInfo.taxId ||\n                !!taxInfo.line1 ||\n                !!taxInfo.line2 ||\n                !!taxInfo.city ||\n                !!taxInfo.state);\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      } else {\n        try {\n          const taxInfo = await this.apiService.getTaxInfo();\n          if (taxInfo) {\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.pristine = Object.assign({}, this.taxInfo);\n      // If not the default (US) then trigger onCountryChanged\n      if (this.taxInfo.country !== \"US\") {\n        this.onCountryChanged.emit();\n      }\n    });\n\n    try {\n      const taxRates = await this.apiService.getTaxRates();\n      if (taxRates) {\n        this.taxRates = taxRates.data;\n      }\n    } catch (e) {\n      this.logService.error(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  get taxRate() {\n    if (this.taxRates != null) {\n      const localTaxRate = this.taxRates.find(\n        (x) => x.country === this.taxInfo.country && x.postalCode === this.taxInfo.postalCode\n      );\n      return localTaxRate?.rate ?? null;\n    }\n  }\n\n  getTaxInfoRequest(): TaxInfoUpdateRequest {\n    if (this.organizationId) {\n      const request = new OrganizationTaxInfoUpdateRequest();\n      request.taxId = this.taxInfo.taxId;\n      request.state = this.taxInfo.state;\n      request.line1 = this.taxInfo.line1;\n      request.line2 = this.taxInfo.line2;\n      request.city = this.taxInfo.city;\n      request.state = this.taxInfo.state;\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    } else {\n      const request = new TaxInfoUpdateRequest();\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    }\n  }\n\n  submitTaxInfo(): Promise<any> {\n    if (!this.hasChanged()) {\n      return new Promise<void>((resolve) => {\n        resolve();\n      });\n    }\n    const request = this.getTaxInfoRequest();\n    return this.organizationId\n      ? this.organizationApiService.updateTaxInfo(\n          this.organizationId,\n          request as OrganizationTaxInfoUpdateRequest\n        )\n      : this.apiService.putTaxInfo(request);\n  }\n\n  changeCountry() {\n    if (this.taxInfo.country === \"US\") {\n      this.taxInfo.includeTaxId = false;\n      this.taxInfo.taxId = null;\n      this.taxInfo.line1 = null;\n      this.taxInfo.line2 = null;\n      this.taxInfo.city = null;\n      this.taxInfo.state = null;\n    }\n    this.onCountryChanged.emit();\n  }\n\n  private hasChanged(): boolean {\n    for (const key in this.taxInfo) {\n      // eslint-disable-next-line\n      if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n  type: TwoFactorProviderType;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { TwoFactorProviderRequest } from \"@bitwarden/common/models/request/two-factor-provider.request\";\nimport { AuthResponseBase } from \"@bitwarden/common/types/authResponse\";\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n  @Output() onUpdated = new EventEmitter<boolean>();\n\n  type: TwoFactorProviderType;\n  organizationId: string;\n  twoFactorProviderType = TwoFactorProviderType;\n  enabled = false;\n  authed = false;\n\n  protected hashedSecret: string;\n  protected verificationType: VerificationType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected userVerificationService: UserVerificationService\n  ) {}\n\n  protected auth(authResponse: AuthResponseBase) {\n    this.hashedSecret = authResponse.secret;\n    this.verificationType = authResponse.verificationType;\n    this.authed = true;\n  }\n\n  protected async enable(enableFunction: () => Promise<void>) {\n    try {\n      await enableFunction();\n      this.onUpdated.emit(true);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async disable(promise: Promise<unknown>) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepDisableDesc\"),\n      this.i18nService.t(\"disable\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const request = await this.buildRequestModel(TwoFactorProviderRequest);\n      request.type = this.type;\n      if (this.organizationId != null) {\n        promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n      } else {\n        promise = this.apiService.putTwoFactorDisable(request);\n      }\n      await promise;\n      this.enabled = false;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"twoStepDisabled\"));\n      this.onUpdated.emit(false);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async buildRequestModel<T extends SecretVerificationRequest>(\n    requestClass: new () => T\n  ) {\n    return this.userVerificationService.buildRequest(\n      {\n        secret: this.hashedSecret,\n        type: this.verificationType,\n      },\n      requestClass,\n      true\n    );\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n  integrationKey: string;\n  secretKey: string;\n  host: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faDuoTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>Duo</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <strong>{{ \"twoFactorDuoIntegrationKey\" | i18n }}:</strong> {{ ikey }}\n            <br />\n            <strong>{{ \"twoFactorDuoSecretKey\" | i18n }}:</strong> {{ skey }}\n            <br />\n            <strong>{{ \"twoFactorDuoApiHostname\" | i18n }}:</strong> {{ host }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <p>{{ \"twoFactorDuoDesc\" | i18n }}</p>\n            <div class=\"form-group\">\n              <label for=\"ikey\">{{ \"twoFactorDuoIntegrationKey\" | i18n }}</label>\n              <input\n                id=\"ikey\"\n                type=\"text\"\n                name=\"IntegrationKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"ikey\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"skey\">{{ \"twoFactorDuoSecretKey\" | i18n }}</label>\n              <input\n                id=\"skey\"\n                type=\"password\"\n                name=\"SecretKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"skey\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"host\">{{ \"twoFactorDuoApiHostname\" | i18n }}</label>\n              <input\n                id=\"host\"\n                type=\"text\"\n                name=\"Host\"\n                class=\"form-control\"\n                [(ngModel)]=\"host\"\n                placeholder=\"{{ 'ex' | i18n }} api-xxxxxxxx.duosecurity.com\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorDuoRequest } from \"@bitwarden/common/models/request/update-two-factor-duo.request\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/models/response/two-factor-duo.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-duo\",\n  templateUrl: \"two-factor-duo.component.html\",\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Duo;\n  ikey: string;\n  skey: string;\n  host: string;\n  formPromise: Promise<TwoFactorDuoResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorDuoResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n    request.integrationKey = this.ikey;\n    request.secretKey = this.skey;\n    request.host = this.host;\n\n    return super.enable(async () => {\n      if (this.organizationId != null) {\n        this.formPromise = this.apiService.putTwoFactorOrganizationDuo(\n          this.organizationId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.putTwoFactorDuo(request);\n      }\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private processResponse(response: TwoFactorDuoResponse) {\n    this.ikey = response.integrationKey;\n    this.skey = response.secretKey;\n    this.host = response.host;\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n  token: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"authenticatorAppTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorDesc\" | i18n }}</p>\n            <p>\n              <strong>1. {{ \"twoStepAuthenticatorDownloadApp\" | i18n }}</strong>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              <p>{{ \"twoStepLoginProviderEnabled\" | i18n }}</p>\n              {{ \"twoStepAuthenticatorReaddDesc\" | i18n }}\n            </app-callout>\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorNeedApp\" | i18n }}</p>\n          </ng-container>\n          <ul class=\"bwi-ul\">\n            <li>\n              <i class=\"bwi bwi-li bwi-apple\"></i>{{ \"iosDevices\" | i18n }}:\n              <a\n                href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-android\"></i>{{ \"androidDevices\" | i18n }}:\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.authy.authy\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-windows\"></i>{{ \"windowsDevices\" | i18n }}:\n              <a\n                href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Microsoft Authenticator</a\n              >\n            </li>\n          </ul>\n          <p>{{ \"twoStepAuthenticatorAppsRecommended\" | i18n }}</p>\n          <p *ngIf=\"!enabled\">\n            <strong>2. {{ \"twoStepAuthenticatorScanCode\" | i18n }}</strong>\n          </p>\n          <hr *ngIf=\"enabled\" />\n          <p class=\"text-center\" [ngClass]=\"{ 'mb-0': enabled }\">\n            <canvas id=\"qr\"></canvas><br />\n            <code appA11yTitle=\"{{ 'key' | i18n }}\">{{ key }}</code>\n          </p>\n          <ng-container *ngIf=\"!enabled\">\n            <label for=\"token\">3. {{ \"twoStepAuthenticatorEnterCode\" | i18n }}</label>\n            <input\n              id=\"token\"\n              type=\"text\"\n              name=\"Token\"\n              class=\"form-control\"\n              [(ngModel)]=\"token\"\n              required\n              appInputVerbatim\n            />\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"@bitwarden/common/models/request/update-two-factor-authenticator.request\";\nimport { TwoFactorAuthenticatorResponse } from \"@bitwarden/common/models/response/two-factor-authenticator.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n// NOTE: There are additional options available but these are just the ones we are current using.\n// See: https://github.com/neocotic/qrious#examples\ninterface QRiousOptions {\n  element: HTMLElement;\n  value: string;\n  size: number;\n}\n\ndeclare global {\n  interface Window {\n    QRious: new (options: QRiousOptions) => unknown;\n  }\n}\n\n@Component({\n  selector: \"app-two-factor-authenticator\",\n  templateUrl: \"two-factor-authenticator.component.html\",\n})\nexport class TwoFactorAuthenticatorComponent\n  extends TwoFactorBaseComponent\n  implements OnInit, OnDestroy\n{\n  type = TwoFactorProviderType.Authenticator;\n  key: string;\n  token: string;\n  formPromise: Promise<TwoFactorAuthenticatorResponse>;\n\n  private qrScript: HTMLScriptElement;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    userVerificationService: UserVerificationService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n    this.qrScript = window.document.createElement(\"script\");\n    this.qrScript.src = \"scripts/qrious.min.js\";\n    this.qrScript.async = true;\n  }\n\n  ngOnInit() {\n    window.document.body.appendChild(this.qrScript);\n  }\n\n  ngOnDestroy() {\n    window.document.body.removeChild(this.qrScript);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorAuthenticatorResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n    request.token = this.token;\n    request.key = this.key;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorAuthenticatorResponse) {\n    this.token = null;\n    this.enabled = response.enabled;\n    this.key = response.key;\n    const email = await this.stateService.getEmail();\n    window.setTimeout(() => {\n      new window.QRious({\n        element: document.getElementById(\"qr\"),\n        value:\n          \"otpauth://totp/Bitwarden:\" +\n          Utils.encodeRFC3986URIComponent(email) +\n          \"?secret=\" +\n          encodeURIComponent(this.key) +\n          \"&issuer=Bitwarden\",\n        size: 160,\n      });\n    }, 100);\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n  token: string;\n  email: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faEmailTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"emailTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <strong>{{ \"email\" | i18n }}:</strong> {{ email }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <p class=\"d-flex\">\n              <span class=\"mr-3\">{{ \"twoFactorEmailDesc\" | i18n }}</span>\n              <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\" />\n            </p>\n            <div class=\"form-group\">\n              <label for=\"email\">1. {{ \"twoFactorEmailEnterEmail\" | i18n }}</label>\n              <input\n                id=\"email\"\n                type=\"text\"\n                name=\"Email\"\n                class=\"form-control\"\n                [(ngModel)]=\"email\"\n                required\n                inputmode=\"email\"\n                appInputVerbatim=\"false\"\n              />\n            </div>\n            <div class=\"mb-3 d-flex\">\n              <button\n                #sendBtn\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\"\n                (click)=\"sendEmail()\"\n                [appApiAction]=\"emailPromise\"\n                [disabled]=\"$any(sendBtn).loading\"\n              >\n                <i\n                  class=\"bwi bwi-spinner bwi-spin\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span>{{ \"sendEmail\" | i18n }}</span>\n              </button>\n              <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                {{ \"verificationCodeEmailSent\" | i18n: sentEmail }}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"token\">2. {{ \"twoFactorEmailEnterCode\" | i18n }}</label>\n              <input\n                id=\"token\"\n                type=\"text\"\n                name=\"Token\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/two-factor-email.request\";\nimport { UpdateTwoFactorEmailRequest } from \"@bitwarden/common/models/request/update-two-factor-email.request\";\nimport { TwoFactorEmailResponse } from \"@bitwarden/common/models/response/two-factor-email.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-email\",\n  templateUrl: \"two-factor-email.component.html\",\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Email;\n  email: string;\n  token: string;\n  sentEmail: string;\n  formPromise: Promise<TwoFactorEmailResponse>;\n  emailPromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorEmailResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  async sendEmail() {\n    try {\n      const request = await this.buildRequestModel(TwoFactorEmailRequest);\n      request.email = this.email;\n      this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n      await this.emailPromise;\n      this.sentEmail = this.email;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n    request.email = this.email;\n    request.token = this.token;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorEmail(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorEmailResponse) {\n    this.token = null;\n    this.email = response.email;\n    this.enabled = response.enabled;\n    if (!this.enabled && (this.email == null || this.email === \"\")) {\n      this.email = await this.stateService.getEmail();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faRecoveryTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"recoveryCodeTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\">\n      </app-two-factor-verify>\n      <ng-container *ngIf=\"authed\">\n        <div class=\"modal-body text-center\">\n          <ng-container *ngIf=\"code\">\n            <p>{{ \"twoFactorRecoveryYourCode\" | i18n }}:</p>\n            <code class=\"text-lg\">{{ code }}</code>\n          </ng-container>\n          <ng-container *ngIf=\"!code\">\n            {{ \"twoFactorRecoveryNoCode\" | i18n }}\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">\n            {{ \"printCode\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorRecoverResponse } from \"@bitwarden/common/models/response/two-factor-recover.response\";\n\n@Component({\n  selector: \"app-two-factor-recovery\",\n  templateUrl: \"two-factor-recovery.component.html\",\n})\nexport class TwoFactorRecoveryComponent {\n  type = -1;\n  code: string;\n  authed: boolean;\n  twoFactorProviderType = TwoFactorProviderType;\n\n  constructor(private i18nService: I18nService) {}\n\n  auth(authResponse: any) {\n    this.authed = true;\n    this.processResponse(authResponse.response);\n  }\n\n  print() {\n    const w = window.open();\n    w.document.write(\n      '<div style=\"font-size: 18px; text-align: center;\">' +\n        \"<p>\" +\n        this.i18nService.t(\"twoFactorRecoveryYourCode\") +\n        \":</p>\" +\n        \"<code style=\\\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\\\">\" +\n        this.code +\n        \"</code></div>\" +\n        '<p style=\"text-align: center;\">' +\n        new Date() +\n        \"</p>\"\n    );\n    w.onafterprint = () => w.close();\n    w.print();\n  }\n\n  private formatString(s: string) {\n    if (s == null) {\n      return null;\n    }\n    return s\n      .replace(/(.{4})/g, \"$1 \")\n      .trim()\n      .toUpperCase();\n  }\n\n  private processResponse(response: TwoFactorRecoverResponse) {\n    this.code = this.formatString(response.code);\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n  deviceResponse: PublicKeyCredential;\n  name: string;\n  id: number;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faU2fTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"webAuthnTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorWebAuthnWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorWebAuthnSupportWeb\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\" />\n          <ul class=\"bwi-ul\">\n            <li\n              *ngFor=\"let k of keys; let i = index\"\n              #removeKeyBtn\n              [appApiAction]=\"k.removePromise\"\n            >\n              <i class=\"bwi bwi-li bwi-key\"></i>\n              <strong *ngIf=\"!k.configured || !k.name\">{{ \"webAuthnkeyX\" | i18n: i + 1 }}</strong>\n              <strong *ngIf=\"k.configured && k.name\">{{ k.name }}</strong>\n              <ng-container *ngIf=\"k.configured && !$any(removeKeyBtn).loading\">\n                <ng-container *ngIf=\"k.migrated\">\n                  <span>{{ \"webAuthnMigrated\" | i18n }}</span>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                <i\n                  class=\"bwi bwi-spin bwi-spinner text-muted bwi-fw\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  *ngIf=\"$any(removeKeyBtn).loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                -\n                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{ \"remove\" | i18n }}</a>\n              </ng-container>\n            </li>\n          </ul>\n          <hr />\n          <p>{{ \"twoFactorWebAuthnAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorU2fGiveName\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fPlugInReadKey\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fSaveForm\" | i18n }}</li>\n          </ol>\n          <div class=\"row\">\n            <div class=\"form-group col-6\">\n              <label for=\"name\">{{ \"name\" | i18n }}</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"Name\"\n                class=\"form-control\"\n                [(ngModel)]=\"name\"\n                [disabled]=\"!keyIdAvailable\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            (click)=\"readKey()\"\n            class=\"btn btn-outline-secondary mr-2\"\n            [disabled]=\"$any(readKeyBtn).loading || webAuthnListening || !keyIdAvailable\"\n            #readKeyBtn\n            [appApiAction]=\"challengePromise\"\n          >\n            {{ \"readKey\" | i18n }}\n          </button>\n          <ng-container *ngIf=\"$any(readKeyBtn).loading\">\n            <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n          </ng-container>\n          <ng-container *ngIf=\"!$any(readKeyBtn).loading\">\n            <ng-container *ngIf=\"webAuthnListening\">\n              <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fWaiting\" | i18n }}...\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnResponse\">\n              <i class=\"bwi bwi-check-circle text-success\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fClickSave\" | i18n }}\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnError\">\n              <i class=\"bwi bwi-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fProblemReadingTryAgain\" | i18n }}\n            </ng-container>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"form.loading || !webAuthnResponse\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              *ngIf=\"form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!form.loading\">{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [disabled]=\"$any(disableBtn).loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"@bitwarden/common/models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"@bitwarden/common/models/request/update-two-factor-web-authn.request\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"@bitwarden/common/models/response/two-factor-web-authn.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  id: number;\n  name: string;\n  configured: boolean;\n  migrated?: boolean;\n  removePromise: Promise<TwoFactorWebAuthnResponse> | null;\n}\n\n@Component({\n  selector: \"app-two-factor-webauthn\",\n  templateUrl: \"two-factor-webauthn.component.html\",\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.WebAuthn;\n  name: string;\n  keys: Key[];\n  keyIdAvailable: number = null;\n  keysConfiguredCount = 0;\n  webAuthnError: boolean;\n  webAuthnListening: boolean;\n  webAuthnResponse: PublicKeyCredential;\n  challengePromise: Promise<ChallengeResponse>;\n  formPromise: Promise<TwoFactorWebAuthnResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorWebAuthnResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n      // Should never happen.\n      return Promise.reject();\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n    request.deviceResponse = this.webAuthnResponse;\n    request.id = this.keyIdAvailable;\n    request.name = this.name;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  disable() {\n    return super.disable(this.formPromise);\n  }\n\n  async remove(key: Key) {\n    if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n      return;\n    }\n    const name = key.name != null ? key.name : this.i18nService.t(\"webAuthnkeyX\", key.id as any);\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeU2fConfirmation\"),\n      name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n    request.id = key.id;\n    try {\n      key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n      const response = await key.removePromise;\n      key.removePromise = null;\n      await this.processResponse(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async readKey() {\n    if (this.keyIdAvailable == null) {\n      return;\n    }\n    const request = await this.buildRequestModel(SecretVerificationRequest);\n    try {\n      this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n      const challenge = await this.challengePromise;\n      this.readDevice(challenge);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private readDevice(webAuthnChallenge: ChallengeResponse) {\n    // eslint-disable-next-line\n    console.log(\"listening for key...\");\n    this.resetWebAuthn(true);\n\n    navigator.credentials\n      .create({\n        publicKey: webAuthnChallenge,\n      })\n      .then((data: PublicKeyCredential) => {\n        this.ngZone.run(() => {\n          this.webAuthnListening = false;\n          this.webAuthnResponse = data;\n        });\n      })\n      .catch((err) => {\n        // eslint-disable-next-line\n        console.error(err);\n        this.resetWebAuthn(false);\n        // TODO: Should we display the actual error?\n        this.webAuthnError = true;\n      });\n  }\n\n  private resetWebAuthn(listening = false) {\n    this.webAuthnResponse = null;\n    this.webAuthnError = false;\n    this.webAuthnListening = listening;\n  }\n\n  private processResponse(response: TwoFactorWebAuthnResponse) {\n    this.resetWebAuthn();\n    this.keys = [];\n    this.keyIdAvailable = null;\n    this.name = null;\n    this.keysConfiguredCount = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (response.keys != null) {\n        const key = response.keys.filter((k) => k.id === i);\n        if (key.length > 0) {\n          this.keysConfiguredCount++;\n          this.keys.push({\n            id: i,\n            name: key[0].name,\n            configured: true,\n            migrated: key[0].migrated,\n            removePromise: null,\n          });\n          continue;\n        }\n      }\n      this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n      if (this.keyIdAvailable == null) {\n        this.keyIdAvailable = i;\n      }\n    }\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>YubiKey</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorYubikeyWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorYubikeySupportUsb\" | i18n }}</li>\n              <li>{{ \"twoFactorYubikeySupportMobile\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\" />\n          <p>{{ \"twoFactorYubikeyAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorYubikeyPlugIn\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySelectKey\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeyTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySaveForm\" | i18n }}</li>\n          </ol>\n          <hr />\n          <div class=\"row\">\n            <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n              <label for=\"key{{ i + 1 }}\">{{ \"yubikeyX\" | i18n: i + 1 }}</label>\n              <input\n                id=\"key{{ i + 1 }}\"\n                type=\"password\"\n                name=\"Key{{ i + 1 }}\"\n                class=\"form-control\"\n                [(ngModel)]=\"k.key\"\n                *ngIf=\"!k.existingKey\"\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                <span class=\"mr-2\">{{ k.existingKey }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link text-danger ml-auto\"\n                  (click)=\"remove(k)\"\n                  appA11yTitle=\"{{ 'remove' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <strong class=\"d-block mb-2\">{{ \"nfcSupport\" | i18n }}</strong>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\" />\n            <label class=\"form-check-label\" for=\"nfc\">{{\n              \"twoFactorYubikeySupportsNfc\" | i18n\n            }}</label>\n          </div>\n          <small class=\"form-text text-muted\">{{ \"twoFactorYubikeySupportsNfcDesc\" | i18n }}</small>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"$any(disableBtn).loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"@bitwarden/common/models/request/update-two-factor-yubio-otp.request\";\nimport { TwoFactorYubiKeyResponse } from \"@bitwarden/common/models/response/two-factor-yubi-key.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  key: string;\n  existingKey: string;\n}\n\n@Component({\n  selector: \"app-two-factor-yubikey\",\n  templateUrl: \"two-factor-yubikey.component.html\",\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Yubikey;\n  keys: Key[];\n  nfc = false;\n\n  formPromise: Promise<TwoFactorYubiKeyResponse>;\n  disablePromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorYubiKeyResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n    request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n    request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n    request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n    request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n    request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n    request.nfc = this.nfc;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"yubikeysUpdated\"));\n    });\n  }\n\n  disable() {\n    return super.disable(this.disablePromise);\n  }\n\n  remove(key: Key) {\n    key.existingKey = null;\n    key.key = null;\n  }\n\n  private processResponse(response: TwoFactorYubiKeyResponse) {\n    this.enabled = response.enabled;\n    this.keys = [\n      { key: response.key1, existingKey: this.padRight(response.key1) },\n      { key: response.key2, existingKey: this.padRight(response.key2) },\n      { key: response.key3, existingKey: this.padRight(response.key3) },\n      { key: response.key4, existingKey: this.padRight(response.key4) },\n      { key: response.key5, existingKey: this.padRight(response.key5) },\n    ];\n    this.nfc = response.nfc || !response.enabled;\n  }\n\n  private padRight(str: string, character = \"•\", size = 44) {\n    if (str == null || character == null || str.length >= size) {\n      return str;\n    }\n    const max = (size - str.length) / character.length;\n    for (let i = 0; i < max; i++) {\n      str += character;\n    }\n    return str;\n  }\n}\n","import { Component, OnDestroy, OnInit, Type, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { TwoFactorAuthenticatorComponent } from \"./two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./two-factor-recovery.component\";\nimport { TwoFactorWebAuthnComponent } from \"./two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./two-factor-yubikey.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent implements OnInit, OnDestroy {\n  @ViewChild(\"recoveryTemplate\", { read: ViewContainerRef, static: true })\n  recoveryModalRef: ViewContainerRef;\n  @ViewChild(\"authenticatorTemplate\", { read: ViewContainerRef, static: true })\n  authenticatorModalRef: ViewContainerRef;\n  @ViewChild(\"yubikeyTemplate\", { read: ViewContainerRef, static: true })\n  yubikeyModalRef: ViewContainerRef;\n  @ViewChild(\"duoTemplate\", { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n  @ViewChild(\"emailTemplate\", { read: ViewContainerRef, static: true })\n  emailModalRef: ViewContainerRef;\n  @ViewChild(\"webAuthnTemplate\", { read: ViewContainerRef, static: true })\n  webAuthnModalRef: ViewContainerRef;\n\n  organizationId: string;\n  providers: any[] = [];\n  canAccessPremium: boolean;\n  showPolicyWarning = false;\n  loading = true;\n  modal: ModalRef;\n  formPromise: Promise<any>;\n\n  private destroy$ = new Subject<void>();\n  private twoFactorAuthPolicyAppliesToActiveUser: boolean;\n\n  constructor(\n    protected apiService: ApiService,\n    protected modalService: ModalService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n\n    for (const key in TwoFactorProviders) {\n      // eslint-disable-next-line\n      if (!TwoFactorProviders.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const p = (TwoFactorProviders as any)[key];\n      if (this.filterProvider(p.type)) {\n        continue;\n      }\n\n      this.providers.push({\n        type: p.type,\n        name: p.name,\n        description: p.description,\n        enabled: false,\n        premium: p.premium,\n        sort: p.sort,\n      });\n    }\n\n    this.providers.sort((a: any, b: any) => a.sort - b.sort);\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.TwoFactorAuthentication)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.twoFactorAuthPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    this.loading = true;\n    const providerList = await this.getTwoFactorProviders();\n    providerList.data.forEach((p) => {\n      this.providers.forEach((p2) => {\n        if (p.type === p2.type) {\n          p2.enabled = p.enabled;\n        }\n      });\n    });\n    this.evaluatePolicies();\n    this.loading = false;\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.Authenticator: {\n        const authComp = await this.openModal(\n          this.authenticatorModalRef,\n          TwoFactorAuthenticatorComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        authComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Yubikey: {\n        const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        yubiComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Duo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Duo);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Email: {\n        const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        emailComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Email);\n        });\n        break;\n      }\n      case TwoFactorProviderType.WebAuthn: {\n        const webAuthnComp = await this.openModal(\n          this.webAuthnModalRef,\n          TwoFactorWebAuthnComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  recoveryCode() {\n    this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorProviders();\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type === TwoFactorProviderType.OrganizationDuo;\n  }\n\n  protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n    const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n    this.modal = modal;\n\n    return childComponent;\n  }\n\n  protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n    if (!enabled && this.modal != null) {\n      this.modal.close();\n    }\n    this.providers.forEach((p) => {\n      if (p.type === type) {\n        p.enabled = enabled;\n      }\n    });\n    this.evaluatePolicies();\n  }\n\n  private async evaluatePolicies() {\n    if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n      this.showPolicyWarning = this.twoFactorAuthPolicyAppliesToActiveUser;\n    } else {\n      this.showPolicyWarning = false;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\nimport { TwoFactorResponse } from \"@bitwarden/common/types/twoFactorResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-two-factor-verify\",\n  templateUrl: \"two-factor-verify.component.html\",\n})\nexport class TwoFactorVerifyComponent {\n  @Input() type: TwoFactorProviderType;\n  @Input() organizationId: string;\n  @Output() onAuthed = new EventEmitter<AuthResponse<TwoFactorResponse>>();\n\n  secret: Verification;\n  formPromise: Promise<TwoFactorResponse>;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async submit() {\n    let hashedSecret: string;\n\n    try {\n      this.formPromise = this.userVerificationService.buildRequest(this.secret).then((request) => {\n        hashedSecret =\n          this.secret.type === VerificationType.MasterPassword\n            ? request.masterPasswordHash\n            : request.otp;\n        return this.apiCall(request);\n      });\n\n      const response = await this.formPromise;\n      this.onAuthed.emit({\n        response: response,\n        secret: hashedSecret,\n        verificationType: this.secret.type,\n      });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n    switch (this.type) {\n      case -1 as TwoFactorProviderType:\n        return this.apiService.getTwoFactorRecover(request);\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        if (this.organizationId != null) {\n          return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n        } else {\n          return this.apiService.getTwoFactorDuo(request);\n        }\n      case TwoFactorProviderType.Email:\n        return this.apiService.getTwoFactorEmail(request);\n      case TwoFactorProviderType.WebAuthn:\n        return this.apiService.getTwoFactorWebAuthn(request);\n      case TwoFactorProviderType.Authenticator:\n        return this.apiService.getTwoFactorAuthenticator(request);\n      case TwoFactorProviderType.Yubikey:\n        return this.apiService.getTwoFactorYubiKey(request);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"modal-body\">\n    <p>{{ \"twoStepLoginAuthDesc\" | i18n }}</p>\n    <app-user-verification [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\">\n    </app-user-verification>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"continue\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n      {{ \"close\" | i18n }}\n    </button>\n  </div>\n</form>\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button *ngIf=\"showCancel\" type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Input() showCancel = true;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<void | unknown> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.organizationApiService.updateLicense(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedLicense\"));\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { AcceptEmergencyComponent } from \"../accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"../accounts/accept-organization.component\";\nimport { HintComponent } from \"../accounts/hint.component\";\nimport { LockComponent } from \"../accounts/lock.component\";\nimport { RecoverDeleteComponent } from \"../accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"../accounts/recover-two-factor.component\";\nimport { RegisterFormModule } from \"../accounts/register-form/register-form.module\";\nimport { RemovePasswordComponent } from \"../accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"../accounts/set-password.component\";\nimport { SsoComponent } from \"../accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"../accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"../accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"../accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"../accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"../accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"../accounts/verify-recover-delete.component\";\nimport { DynamicAvatarComponent } from \"../components/dynamic-avatar.component\";\nimport { OrganizationSwitcherComponent } from \"../components/organization-switcher.component\";\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\nimport { PremiumBadgeComponent } from \"../components/premium-badge.component\";\nimport { SelectableAvatarComponent } from \"../components/selectable-avatar.component\";\nimport { UserVerificationPromptComponent } from \"../components/user-verification-prompt.component\";\nimport { UserVerificationComponent } from \"../components/user-verification.component\";\nimport { FooterComponent } from \"../layouts/footer.component\";\nimport { FrontendLayoutComponent } from \"../layouts/frontend-layout.component\";\nimport { NavbarComponent } from \"../layouts/navbar.component\";\nimport { ProductSwitcherModule } from \"../layouts/product-switcher/product-switcher.module\";\nimport { UserLayoutComponent } from \"../layouts/user-layout.component\";\nimport { OrganizationCreateModule } from \"../organizations/create/organization-create.module\";\nimport { OrganizationLayoutComponent } from \"../organizations/layouts/organization-layout.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"../organizations/manage/collections.component\";\nimport { EntityEventsComponent as OrgEntityEventsComponent } from \"../organizations/manage/entity-events.component\";\nimport { EventsComponent as OrgEventsComponent } from \"../organizations/manage/events.component\";\nimport { ManageComponent as OrgManageComponent } from \"../organizations/manage/manage.component\";\nimport { UserConfirmComponent as OrgUserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\nimport { AcceptFamilySponsorshipComponent } from \"../organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"../organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"../organizations/tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"../organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"../organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"../organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"../organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"../organizations/tools/weak-passwords-report.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"../organizations/vault/add-edit.component\";\nimport { AttachmentsComponent as OrgAttachmentsComponent } from \"../organizations/vault/attachments.component\";\nimport { CollectionsComponent as OrgCollectionsComponent } from \"../organizations/vault/collections.component\";\nimport { ProvidersComponent } from \"../providers/providers.component\";\nimport { AccessComponent } from \"../send/access.component\";\nimport { AddEditComponent as SendAddEditComponent } from \"../send/add-edit.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"../send/efflux-dates.component\";\nimport { SendComponent } from \"../send/send.component\";\nimport { AccountComponent } from \"../settings/account.component\";\nimport { AddCreditComponent } from \"../settings/add-credit.component\";\nimport { AdjustPaymentComponent } from \"../settings/adjust-payment.component\";\nimport { AdjustStorageComponent } from \"../settings/adjust-storage.component\";\nimport { ApiKeyComponent } from \"../settings/api-key.component\";\nimport { BillingHistoryViewComponent } from \"../settings/billing-history-view.component\";\nimport { BillingHistoryComponent } from \"../settings/billing-history.component\";\nimport { BillingSyncKeyComponent } from \"../settings/billing-sync-key.component\";\nimport { ChangeAvatarComponent } from \"../settings/change-avatar.component\";\nimport { ChangeEmailComponent } from \"../settings/change-email.component\";\nimport { ChangeKdfComponent } from \"../settings/change-kdf.component\";\nimport { ChangePasswordComponent } from \"../settings/change-password.component\";\nimport { CreateOrganizationComponent } from \"../settings/create-organization.component\";\nimport { DeauthorizeSessionsComponent } from \"../settings/deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"../settings/delete-account.component\";\nimport { DomainRulesComponent } from \"../settings/domain-rules.component\";\nimport { EmergencyAccessAddEditComponent } from \"../settings/emergency-access-add-edit.component\";\nimport { EmergencyAccessAttachmentsComponent } from \"../settings/emergency-access-attachments.component\";\nimport { EmergencyAccessConfirmComponent } from \"../settings/emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"../settings/emergency-access-takeover.component\";\nimport { EmergencyAccessViewComponent } from \"../settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"../settings/emergency-access.component\";\nimport { EmergencyAddEditComponent } from \"../settings/emergency-add-edit.component\";\nimport { LowKdfComponent } from \"../settings/low-kdf.component\";\nimport { OrganizationPlansComponent } from \"../settings/organization-plans.component\";\nimport { PaymentMethodComponent } from \"../settings/payment-method.component\";\nimport { PaymentComponent } from \"../settings/payment.component\";\nimport { PreferencesComponent } from \"../settings/preferences.component\";\nimport { PremiumComponent } from \"../settings/premium.component\";\nimport { ProfileComponent } from \"../settings/profile.component\";\nimport { PurgeVaultComponent } from \"../settings/purge-vault.component\";\nimport { SecurityKeysComponent } from \"../settings/security-keys.component\";\nimport { SecurityComponent } from \"../settings/security.component\";\nimport { SettingsComponent } from \"../settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"../settings/sponsored-families.component\";\nimport { SponsoringOrgRowComponent } from \"../settings/sponsoring-org-row.component\";\nimport { SubscriptionComponent } from \"../settings/subscription.component\";\nimport { TaxInfoComponent } from \"../settings/tax-info.component\";\nimport { TwoFactorAuthenticatorComponent } from \"../settings/two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"../settings/two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"../settings/two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"../settings/two-factor-recovery.component\";\nimport { TwoFactorSetupComponent } from \"../settings/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"../settings/two-factor-verify.component\";\nimport { TwoFactorWebAuthnComponent } from \"../settings/two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"../settings/two-factor-yubikey.component\";\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\nimport { UpdateLicenseComponent } from \"../settings/update-license.component\";\nimport { UserSubscriptionComponent } from \"../settings/user-subscription.component\";\nimport { VaultTimeoutInputComponent } from \"../settings/vault-timeout-input.component\";\nimport { VerifyEmailComponent } from \"../settings/verify-email.component\";\nimport { GeneratorComponent } from \"../tools/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"../tools/password-generator-history.component\";\nimport { ToolsComponent } from \"../tools/tools.component\";\nimport { AddEditCustomFieldsComponent } from \"../vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"../vault/add-edit.component\";\nimport { AttachmentsComponent } from \"../vault/attachments.component\";\nimport { CollectionsComponent } from \"../vault/collections.component\";\nimport { FolderAddEditComponent } from \"../vault/folder-add-edit.component\";\nimport { ShareComponent } from \"../vault/share.component\";\n\nimport { SharedModule } from \"./shared.module\";\n\n// Please do not add to this list of declarations - we should refactor these into modules when doing so makes sense until there are none left.\n// If you are building new functionality, please create or extend a feature module instead.\n@NgModule({\n  imports: [SharedModule, OrganizationCreateModule, RegisterFormModule, ProductSwitcherModule],\n  declarations: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptFamilySponsorshipComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BillingSyncKeyComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DomainRulesComponent,\n    DynamicAvatarComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    NavbarComponent,\n    OrganizationSwitcherComponent,\n    OrgAddEditComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrgAttachmentsComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgToolsComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserConfirmComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordRepromptComponent,\n    UserVerificationPromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ChangeAvatarComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RemovePasswordComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SelectableAvatarComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    BillingHistoryComponent,\n    BillingHistoryViewComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n    LowKdfComponent,\n  ],\n  exports: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DomainRulesComponent,\n    DynamicAvatarComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    NavbarComponent,\n    OrganizationSwitcherComponent,\n    OrgAddEditComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrgAttachmentsComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgToolsComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserConfirmComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ChangeAvatarComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RemovePasswordComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SelectableAvatarComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    BillingHistoryComponent,\n    BillingHistoryViewComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n    LowKdfComponent,\n  ],\n})\nexport class LooseComponentsModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BitActionDirective } from \"./bit-action.directive\";\nimport { BitSubmitDirective } from \"./bit-submit.directive\";\nimport { BitFormButtonDirective } from \"./form-button.directive\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [BitActionDirective, BitFormButtonDirective, BitSubmitDirective],\n  exports: [BitActionDirective, BitFormButtonDirective, BitSubmitDirective],\n})\nexport class AsyncActionsModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AvatarComponent } from \"./avatar.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [AvatarComponent],\n  declarations: [AvatarComponent],\n})\nexport class AvatarModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { BadgeModule } from \"../badge\";\nimport { SharedModule } from \"../shared\";\n\nimport { BadgeListComponent } from \"./badge-list.component\";\n\n@NgModule({\n  imports: [SharedModule, BadgeModule],\n  exports: [BadgeListComponent],\n  declarations: [BadgeListComponent],\n})\nexport class BadgeListModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonComponent } from \"./button.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ButtonComponent],\n  declarations: [ButtonComponent],\n})\nexport class ButtonModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CalloutComponent } from \"./callout.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CalloutComponent],\n  declarations: [CalloutComponent],\n})\nexport class CalloutModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ColorPasswordComponent } from \"./color-password.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ColorPasswordComponent],\n  declarations: [ColorPasswordComponent],\n})\nexport class ColorPasswordModule {}\n","import { DialogModule as CdkDialogModule } from \"@angular/cdk/dialog\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonModule } from \"../button\";\nimport { IconButtonModule } from \"../icon-button\";\nimport { SharedModule } from \"../shared\";\n\nimport { DialogService } from \"./dialog.service\";\nimport { DialogComponent } from \"./dialog/dialog.component\";\nimport { DialogCloseDirective } from \"./directives/dialog-close.directive\";\nimport { DialogTitleContainerDirective } from \"./directives/dialog-title-container.directive\";\nimport { SimpleConfigurableDialogComponent } from \"./simple-configurable-dialog/simple-configurable-dialog.component\";\nimport { IconDirective, SimpleDialogComponent } from \"./simple-dialog/simple-dialog.component\";\n\n@NgModule({\n  imports: [SharedModule, IconButtonModule, CdkDialogModule, ButtonModule],\n  declarations: [\n    DialogCloseDirective,\n    DialogTitleContainerDirective,\n    DialogComponent,\n    SimpleDialogComponent,\n    SimpleConfigurableDialogComponent,\n    IconDirective,\n  ],\n  exports: [\n    CdkDialogModule,\n    DialogComponent,\n    SimpleDialogComponent,\n    DialogCloseDirective,\n    IconDirective,\n  ],\n  providers: [DialogService],\n})\nexport class DialogModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconComponent } from \"./icon.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconComponent],\n  exports: [BitIconComponent],\n})\nexport class IconModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CellDirective } from \"./cell.directive\";\nimport { RowDirective } from \"./row.directive\";\nimport { SortableComponent } from \"./sortable.component\";\nimport { TableBodyDirective, TableComponent } from \"./table.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    TableComponent,\n    CellDirective,\n    RowDirective,\n    SortableComponent,\n    TableBodyDirective,\n  ],\n  exports: [TableComponent, CellDirective, RowDirective, SortableComponent, TableBodyDirective],\n})\nexport class TableModule {}\n","import { PortalModule } from \"@angular/cdk/portal\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { TabHeaderComponent } from \"./shared/tab-header.component\";\nimport { TabListContainerDirective } from \"./shared/tab-list-container.directive\";\nimport { TabListItemDirective } from \"./shared/tab-list-item.directive\";\nimport { TabBodyComponent } from \"./tab-group/tab-body.component\";\nimport { TabGroupComponent } from \"./tab-group/tab-group.component\";\nimport { TabLabelDirective } from \"./tab-group/tab-label.directive\";\nimport { TabComponent } from \"./tab-group/tab.component\";\nimport { TabLinkComponent } from \"./tab-nav-bar/tab-link.component\";\nimport { TabNavBarComponent } from \"./tab-nav-bar/tab-nav-bar.component\";\n\n@NgModule({\n  imports: [CommonModule, RouterModule, PortalModule],\n  exports: [\n    TabGroupComponent,\n    TabComponent,\n    TabLabelDirective,\n    TabNavBarComponent,\n    TabLinkComponent,\n  ],\n  declarations: [\n    TabGroupComponent,\n    TabComponent,\n    TabLabelDirective,\n    TabListContainerDirective,\n    TabListItemDirective,\n    TabHeaderComponent,\n    TabNavBarComponent,\n    TabLinkComponent,\n    TabBodyComponent,\n  ],\n})\nexport class TabsModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeModule } from \"../badge\";\n\nimport { ToggleGroupComponent } from \"./toggle-group.component\";\nimport { ToggleComponent } from \"./toggle.component\";\n\n@NgModule({\n  imports: [CommonModule, BadgeModule],\n  exports: [ToggleGroupComponent, ToggleComponent],\n  declarations: [ToggleGroupComponent, ToggleComponent],\n})\nexport class ToggleGroupModule {}\n","import { registerLocaleData } from \"@angular/common\";\nimport localeAf from \"@angular/common/locales/af\";\nimport localeAr from \"@angular/common/locales/ar\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEo from \"@angular/common/locales/eo\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeEu from \"@angular/common/locales/eu\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\n\nregisterLocaleData(localeAf, \"af\");\nregisterLocaleData(localeAr, \"ar\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEo, \"eo\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeEu, \"eu\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport {\n  AsyncActionsModule,\n  AvatarModule,\n  BadgeListModule,\n  BadgeModule,\n  ButtonModule,\n  CalloutModule,\n  CheckboxModule,\n  ColorPasswordModule,\n  DialogModule,\n  FormFieldModule,\n  IconButtonModule,\n  IconModule,\n  LinkModule,\n  MenuModule,\n  MultiSelectModule,\n  TableModule,\n  TabsModule,\n  RadioButtonModule,\n  ToggleGroupModule,\n} from \"@bitwarden/components\";\n\n// Register the locales for the application\nimport \"./locales\";\n\n/**\n * This NgModule should contain the most basic shared directives, pipes, and components. They\n * should be widely used by other modules to be considered for adding to this module. If in doubt\n * do not add to this module.\n *\n * See: https://angular.io/guide/module-types#shared-ngmodules\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InfiniteScrollModule,\n    RouterModule,\n    ToastrModule,\n    JslibModule,\n\n    // Component library modules\n    // Only add components that are used almost everywhere in the application\n    AsyncActionsModule,\n    AvatarModule,\n    BadgeListModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    CheckboxModule,\n    ColorPasswordModule,\n    DialogModule,\n    FormFieldModule,\n    IconButtonModule,\n    IconModule,\n    LinkModule,\n    MenuModule,\n    MultiSelectModule,\n    TableModule,\n    TabsModule,\n    RadioButtonModule,\n    ToggleGroupModule,\n\n    // Web specific\n  ],\n  exports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InfiniteScrollModule,\n    RouterModule,\n    ToastrModule,\n    JslibModule,\n\n    // Component library\n    AsyncActionsModule,\n    AvatarModule,\n    BadgeListModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    CheckboxModule,\n    ColorPasswordModule,\n    DialogModule,\n    FormFieldModule,\n    IconButtonModule,\n    IconModule,\n    LinkModule,\n    MenuModule,\n    MultiSelectModule,\n    TableModule,\n    TabsModule,\n    RadioButtonModule,\n    ToggleGroupModule,\n\n    // Web specific\n  ],\n  providers: [DatePipe],\n  bootstrap: [],\n})\nexport class SharedModule {}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { FieldView } from \"@bitwarden/common/models/view/field.view\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(\n    private i18nService: I18nService,\n    private eventCollectionService: EventCollectionService\n  ) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledHiddenFieldVisible,\n        this.cipher.id\n      );\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue: boolean | string = true;\n  @Input() falseValue: boolean | string = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<ng-container>\n  <h3 class=\"mt-4\">{{ \"customFields\" | i18n }}</h3>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n    <div\n      role=\"group\"\n      class=\"row\"\n      cdkDrag\n      *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n      attr.aria-label=\"{{ f.name }}\"\n    >\n      <div class=\"col-5 form-group\">\n        <div class=\"d-flex\">\n          <label for=\"fieldName{{ i }}\">{{ \"name\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/custom-fields/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"fieldName{{ i }}\"\n          type=\"text\"\n          name=\"Field.Name{{ i }}\"\n          [(ngModel)]=\"f.name\"\n          class=\"form-control\"\n          appInputVerbatim\n          [disabled]=\"cipher.isDeleted || viewOnly\"\n          [readonly]=\"!cipher.edit && editMode\"\n        />\n      </div>\n      <div class=\"col-7 form-group\">\n        <label for=\"fieldValue{{ i }}\">{{ \"value\" | i18n }}</label>\n        <div class=\"d-flex align-items-center\">\n          <!-- Text -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              appInputVerbatim\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              [readonly]=\"!cipher.edit && editMode\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', 'Field')\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Hidden -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              type=\"{{ f.showValue ? 'text' : 'password' }}\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              class=\"form-control text-monospace\"\n              appInputVerbatim\n              autocomplete=\"new-password\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"\n              [readonly]=\"!cipher.edit && editMode\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleFieldValue(f)\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n                >\n                </i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Linked -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\">\n            <select\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              class=\"form-control\"\n              [(ngModel)]=\"f.linkedId\"\n              *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            >\n              <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"flex-fill\">\n            <!-- Boolean -->\n            <input\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"f.value\"\n              *ngIf=\"f.type === fieldType.Boolean\"\n              appTrueFalseValue\n              trueValue=\"true\"\n              falseValue=\"false\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-danger ml-2\"\n            (click)=\"removeField(f)\"\n            appA11yTitle=\"{{ 'remove' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-muted cursor-move\"\n            appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-hamburger bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Add new custom field -->\n  <a\n    href=\"#\"\n    appStopClick\n    (click)=\"addField()\"\n    class=\"d-inline-block mb-2\"\n    *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n  >\n    <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomField\" | i18n }}\n  </a>\n  <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\">\n    <div class=\"col-5\">\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  @Input() viewOnly: boolean;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  constructor(i18nService: I18nService, eventCollectionService: EventCollectionService) {\n    super(i18nService, eventCollectionService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Observable, Subject, takeUntil, concatMap } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport {\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CardView } from \"@bitwarden/common/models/view/card.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identity.view\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\nimport { LoginView } from \"@bitwarden/common/models/view/login.view\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secure-note.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n  organization: Organization;\n\n  protected componentName = \"\";\n  protected destroy$ = new Subject<void>();\n  protected writeableCollections: CollectionView[];\n  private personalOwnershipPolicyAppliesToActiveUser: boolean;\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventCollectionService: EventCollectionService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"cardBrandMir\"), value: \"Mir\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"mx\"), value: i18nService.t(\"mx\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n      .pipe(\n        concatMap(async (policyAppliesToActiveUser) => {\n          this.personalOwnershipPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n          await this.init();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (this.personalOwnershipPolicyAppliesToActiveUser) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs\n      .filter(isNotProviderUser)\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .forEach((o) => {\n        if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n          this.ownershipOptions.push({ name: o.name, value: o.id });\n        }\n      });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventCollectionService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  getCardExpMonthDisplay() {\n    return this.cardExpMonthOptions.find((x) => x.value == this.cipher.card.expMonth)?.name;\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledPasswordVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledCardNumberVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledCardCodeVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipher.id == null\n      ? this.cipherService.createWithServer(cipher)\n      : this.cipherService.updateWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent implements OnInit, OnDestroy {\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  showRevisionDate = false;\n  hasPasswordHistory = false;\n  viewingPasswordHistory = false;\n  viewOnly = false;\n  showPasswordCount = false;\n\n  protected totpInterval: number;\n  protected override componentName = \"app-vault-add-edit\";\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    protected totpService: TotpService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected messagingService: MessagingService,\n    eventCollectionService: EventCollectionService,\n    protected policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n    this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n    this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n    this.cleanUp();\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (this.cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = window.setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n  toggleFavorite() {\n    this.cipher.favorite = !this.cipher.favorite;\n  }\n\n  togglePassword() {\n    super.togglePassword();\n\n    // Hide password count when password is hidden to be safe\n    if (!this.showPassword && this.showPasswordCount) {\n      this.togglePasswordCount();\n    }\n  }\n\n  togglePasswordCount() {\n    this.showPasswordCount = !this.showPasswordCount;\n\n    if (this.editMode && this.showPasswordCount) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledPasswordVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  launch(uri: LoginUriView) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (this.editMode) {\n      if (typeI18nKey === \"password\") {\n        this.eventCollectionService.collect(\n          EventType.Cipher_ClientToggledHiddenFieldVisible,\n          this.cipherId\n        );\n      } else if (typeI18nKey === \"securityCode\") {\n        this.eventCollectionService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n      } else if (aType === \"H_Field\") {\n        this.eventCollectionService.collect(\n          EventType.Cipher_ClientCopiedHiddenField,\n          this.cipherId\n        );\n      }\n    }\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      const options = (await this.passwordGenerationService.getOptions())?.[0] ?? {};\n      this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n    }\n    return confirmed;\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", {\n      organizationId: this.cipher.organizationId,\n    });\n  }\n\n  showGetPremium() {\n    if (this.canAccessPremium) {\n      return;\n    }\n    if (this.cipher.organizationUseTotp) {\n      this.upgradeOrganization();\n    } else {\n      this.premiumRequired();\n    }\n  }\n\n  viewHistory() {\n    this.viewingPasswordHistory = !this.viewingPasswordHistory;\n  }\n\n  protected cleanUp() {\n    if (this.totpInterval) {\n      window.clearInterval(this.totpInterval);\n    }\n  }\n\n  protected async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  protected allowOwnershipAssignment() {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationNameBadgeComponent } from \"./organization-name-badge.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationNameBadgeComponent],\n  exports: [OrganizationNameBadgeComponent],\n})\nexport class OrganizationBadgeModule {}\n","import { Observable } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/src/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/src/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/src/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/src/models/view/folder.view\";\n\nimport {\n  CipherTypeFilter,\n  CollectionFilter,\n  FolderFilter,\n  OrganizationFilter,\n} from \"../../shared/models/vault-filter.type\";\n\nexport abstract class VaultFilterService {\n  collapsedFilterNodes$: Observable<Set<string>>;\n  filteredFolders$: Observable<FolderView[]>;\n  filteredCollections$: Observable<CollectionView[]>;\n  organizationTree$: Observable<TreeNode<OrganizationFilter>>;\n  folderTree$: Observable<TreeNode<FolderFilter>>;\n  collectionTree$: Observable<TreeNode<CollectionFilter>>;\n  reloadCollections: () => Promise<void>;\n  getCollectionNodeFromTree: (id: string) => Promise<TreeNode<CollectionFilter>>;\n  setCollapsedFilterNodes: (collapsedFilterNodes: Set<string>) => Promise<void>;\n  expandOrgFilter: () => Promise<void>;\n  setOrganizationFilter: (organization: Organization) => void;\n  buildTypeTree: (\n    head: CipherTypeFilter,\n    array: CipherTypeFilter[]\n  ) => Observable<TreeNode<CipherTypeFilter>>;\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  BehaviorSubject,\n  combineLatestWith,\n  firstValueFrom,\n  map,\n  Observable,\n  of,\n  ReplaySubject,\n  switchMap,\n} from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { CollectionAdminView } from \"../../../organizations/core\";\nimport {\n  CipherTypeFilter,\n  CollectionFilter,\n  FolderFilter,\n  OrganizationFilter,\n} from \"../shared/models/vault-filter.type\";\n\nimport { VaultFilterService as VaultFilterServiceAbstraction } from \"./abstractions/vault-filter.service\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService implements VaultFilterServiceAbstraction {\n  protected _collapsedFilterNodes = new BehaviorSubject<Set<string>>(null);\n  collapsedFilterNodes$: Observable<Set<string>> = this._collapsedFilterNodes.pipe(\n    switchMap(async (nodes) => nodes ?? (await this.getCollapsedFilterNodes()))\n  );\n\n  organizationTree$: Observable<TreeNode<OrganizationFilter>> =\n    this.organizationService.organizations$.pipe(\n      switchMap((orgs) => this.buildOrganizationTree(orgs))\n    );\n\n  protected _organizationFilter = new BehaviorSubject<Organization>(null);\n\n  filteredFolders$: Observable<FolderView[]> = this.folderService.folderViews$.pipe(\n    combineLatestWith(this._organizationFilter),\n    switchMap(([folders, org]) => {\n      return this.filterFolders(folders, org);\n    })\n  );\n  folderTree$: Observable<TreeNode<FolderFilter>> = this.filteredFolders$.pipe(\n    map((folders) => this.buildFolderTree(folders))\n  );\n\n  // TODO: Remove once collections is refactored with observables\n  // replace with collection service observable\n  private collectionViews$ = new ReplaySubject<CollectionView[]>(1);\n  filteredCollections$: Observable<CollectionView[]> = this.collectionViews$.pipe(\n    combineLatestWith(this._organizationFilter),\n    switchMap(([collections, org]) => {\n      return this.filterCollections(collections, org);\n    })\n  );\n  collectionTree$: Observable<TreeNode<CollectionFilter>> = this.filteredCollections$.pipe(\n    map((collections) => this.buildCollectionTree(collections))\n  );\n\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService,\n    protected i18nService: I18nService\n  ) {}\n\n  // TODO: Remove once collections is refactored with observables\n  async reloadCollections() {\n    this.collectionViews$.next(await this.collectionService.getAllDecrypted());\n  }\n\n  async getCollectionNodeFromTree(id: string) {\n    const collections = await firstValueFrom(this.collectionTree$);\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionFilter>;\n  }\n\n  async setCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n    this._collapsedFilterNodes.next(collapsedFilterNodes);\n  }\n\n  protected async getCollapsedFilterNodes(): Promise<Set<string>> {\n    const nodes = new Set(await this.stateService.getCollapsedGroupings());\n    return nodes;\n  }\n\n  setOrganizationFilter(organization: Organization) {\n    if (organization?.id != \"AllVaults\") {\n      this._organizationFilter.next(organization);\n    } else {\n      this._organizationFilter.next(null);\n    }\n  }\n\n  async expandOrgFilter() {\n    const collapsedFilterNodes = await firstValueFrom(this.collapsedFilterNodes$);\n    if (!collapsedFilterNodes.has(\"AllVaults\")) {\n      return;\n    }\n    collapsedFilterNodes.delete(\"AllVaults\");\n    await this.setCollapsedFilterNodes(collapsedFilterNodes);\n  }\n\n  protected async buildOrganizationTree(\n    orgs?: Organization[]\n  ): Promise<TreeNode<OrganizationFilter>> {\n    const headNode = this.getOrganizationFilterHead();\n    if (!(await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership))) {\n      const myVaultNode = this.getOrganizationFilterMyVault();\n      headNode.children.push(myVaultNode);\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.SingleOrg)) {\n      orgs = orgs.slice(0, 1);\n    }\n    if (orgs) {\n      orgs.forEach((org) => {\n        const orgCopy = org as OrganizationFilter;\n        orgCopy.icon = \"bwi-business\";\n        const node = new TreeNode<OrganizationFilter>(orgCopy, headNode, orgCopy.name);\n        headNode.children.push(node);\n      });\n    }\n    return headNode;\n  }\n\n  protected getOrganizationFilterHead(): TreeNode<OrganizationFilter> {\n    const head = new Organization() as OrganizationFilter;\n    head.enabled = true;\n    return new TreeNode<OrganizationFilter>(head, null, \"allVaults\", \"AllVaults\");\n  }\n\n  protected getOrganizationFilterMyVault(): TreeNode<OrganizationFilter> {\n    const myVault = new Organization() as OrganizationFilter;\n    myVault.id = \"MyVault\";\n    myVault.icon = \"bwi-user\";\n    myVault.enabled = true;\n    myVault.hideOptions = true;\n    return new TreeNode<OrganizationFilter>(myVault, null, this.i18nService.t(\"myVault\"));\n  }\n\n  buildTypeTree(\n    head: CipherTypeFilter,\n    array?: CipherTypeFilter[]\n  ): Observable<TreeNode<CipherTypeFilter>> {\n    const headNode = new TreeNode<CipherTypeFilter>(head, null);\n    array?.forEach((filter) => {\n      const node = new TreeNode<CipherTypeFilter>(filter, headNode, filter.name);\n      headNode.children.push(node);\n    });\n    return of(headNode);\n  }\n\n  protected async filterCollections(\n    storedCollections: CollectionView[],\n    org?: Organization\n  ): Promise<CollectionView[]> {\n    return org?.id != null\n      ? storedCollections.filter((c) => c.organizationId === org.id)\n      : storedCollections;\n  }\n\n  protected buildCollectionTree(collections?: CollectionView[]): TreeNode<CollectionFilter> {\n    const headNode = this.getCollectionFilterHead();\n    if (!collections) {\n      return headNode;\n    }\n    const nodes: TreeNode<CollectionFilter>[] = [];\n    collections\n      .sort((a, b) => this.i18nService.collator.compare(a.name, b.name))\n      .forEach((c) => {\n        const collectionCopy = new CollectionView() as CollectionFilter;\n        collectionCopy.id = c.id;\n        collectionCopy.organizationId = c.organizationId;\n        collectionCopy.icon = \"bwi-collection\";\n        if (c instanceof CollectionAdminView) {\n          collectionCopy.groups = c.groups;\n          collectionCopy.assigned = c.assigned;\n        }\n        const parts =\n          c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n        ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n      });\n    nodes.forEach((n) => {\n      n.parent = headNode;\n      headNode.children.push(n);\n    });\n    return headNode;\n  }\n\n  protected getCollectionFilterHead(): TreeNode<CollectionFilter> {\n    const head = new CollectionView() as CollectionFilter;\n    return new TreeNode<CollectionFilter>(head, null, \"collections\", \"AllCollections\");\n  }\n\n  protected async filterFolders(\n    storedFolders: FolderView[],\n    org?: Organization\n  ): Promise<FolderView[]> {\n    if (org?.id == null) {\n      return storedFolders;\n    }\n    const ciphers = await this.cipherService.getAllDecrypted();\n    const orgCiphers = ciphers.filter((c) => c.organizationId == org?.id);\n    return storedFolders.filter(\n      (f) =>\n        orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n        ciphers.filter((c) => c.folderId == f.id).length < 1\n    );\n  }\n\n  protected buildFolderTree(folders?: FolderView[]): TreeNode<FolderFilter> {\n    const headNode = this.getFolderFilterHead();\n    if (!folders) {\n      return headNode;\n    }\n    const nodes: TreeNode<FolderFilter>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView() as FolderFilter;\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      folderCopy.icon = \"bwi-folder\";\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n\n    nodes.forEach((n) => {\n      n.parent = headNode;\n      headNode.children.push(n);\n    });\n    return headNode;\n  }\n\n  protected getFolderFilterHead(): TreeNode<FolderFilter> {\n    const head = new FolderView() as FolderFilter;\n    return new TreeNode<FolderFilter>(head, null, \"folders\", \"AllFolders\");\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { VaultFilterSectionComponent } from \"./components/vault-filter-section.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [VaultFilterSectionComponent],\n  exports: [SharedModule, VaultFilterSectionComponent],\n})\nexport class VaultFilterSharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LinkSsoComponent } from \"./components/link-sso.component\";\nimport { OrganizationOptionsComponent } from \"./components/organization-options.component\";\nimport { VaultFilterComponent } from \"./components/vault-filter.component\";\nimport { VaultFilterService as VaultFilterServiceAbstraction } from \"./services/abstractions/vault-filter.service\";\nimport { VaultFilterService } from \"./services/vault-filter.service\";\nimport { VaultFilterSharedModule } from \"./shared/vault-filter-shared.module\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent, OrganizationOptionsComponent, LinkSsoComponent],\n  exports: [VaultFilterComponent],\n  providers: [\n    {\n      provide: VaultFilterServiceAbstraction,\n      useClass: VaultFilterService,\n    },\n  ],\n})\nexport class VaultFilterModule {}\n","import {\n  flagEnabled as baseFlagEnabled,\n  devFlagEnabled as baseDevFlagEnabled,\n  devFlagValue as baseDevFlagValue,\n  SharedFlags,\n  SharedDevFlags,\n} from \"@bitwarden/common/misc/flags\";\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type Flags = {\n  secretsManager?: boolean;\n  showPasswordless?: boolean;\n} & SharedFlags;\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type DevFlags = {} & SharedDevFlags;\n\nexport function flagEnabled(flag: keyof Flags): boolean {\n  return baseFlagEnabled<Flags>(flag);\n}\n\nexport function devFlagEnabled(flag: keyof DevFlags) {\n  return baseDevFlagEnabled<DevFlags>(flag);\n}\n\nexport function devFlagValue(flag: keyof DevFlags) {\n  return baseDevFlagValue(flag);\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { CheckboxModule } from \"@bitwarden/components\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { LoginWithDeviceComponent } from \"./login-with-device.component\";\nimport { LoginComponent } from \"./login.component\";\n\n@NgModule({\n  imports: [SharedModule, CheckboxModule],\n  declarations: [LoginComponent, LoginWithDeviceComponent],\n  exports: [LoginComponent, LoginWithDeviceComponent],\n})\nexport class LoginModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { VerticalStepContentComponent } from \"./vertical-step-content.component\";\nimport { VerticalStep } from \"./vertical-step.component\";\nimport { VerticalStepperComponent } from \"./vertical-stepper.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [VerticalStepperComponent, VerticalStep, VerticalStepContentComponent],\n  exports: [VerticalStepperComponent, VerticalStep],\n})\nexport class VerticalStepperModule {}\n","import { CdkStepperModule } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormFieldModule } from \"@bitwarden/components\";\n\nimport { OrganizationCreateModule } from \"../../organizations/create/organization-create.module\";\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { RegisterFormModule } from \"../register-form/register-form.module\";\n\nimport { BillingComponent } from \"./billing.component\";\nimport { ConfirmationDetailsComponent } from \"./confirmation-details.component\";\nimport { AbmEnterpriseContentComponent } from \"./content/abm-enterprise-content.component\";\nimport { AbmTeamsContentComponent } from \"./content/abm-teams-content.component\";\nimport { CnetEnterpriseContentComponent } from \"./content/cnet-enterprise-content.component\";\nimport { CnetIndividualContentComponent } from \"./content/cnet-individual-content.component\";\nimport { CnetTeamsContentComponent } from \"./content/cnet-teams-content.component\";\nimport { DefaultContentComponent } from \"./content/default-content.component\";\nimport { EnterpriseContentComponent } from \"./content/enterprise-content.component\";\nimport { Enterprise1ContentComponent } from \"./content/enterprise1-content.component\";\nimport { Enterprise2ContentComponent } from \"./content/enterprise2-content.component\";\nimport { LogoCnetComponent } from \"./content/logo-cnet.component\";\nimport { LogoForbesComponent } from \"./content/logo-forbes.component\";\nimport { LogoUSNewsComponent } from \"./content/logo-us-news.component\";\nimport { TeamsContentComponent } from \"./content/teams-content.component\";\nimport { Teams1ContentComponent } from \"./content/teams1-content.component\";\nimport { Teams2ContentComponent } from \"./content/teams2-content.component\";\nimport { TrialInitiationComponent } from \"./trial-initiation.component\";\nimport { VerticalStepperModule } from \"./vertical-stepper/vertical-stepper.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CdkStepperModule,\n    VerticalStepperModule,\n    FormFieldModule,\n    RegisterFormModule,\n    OrganizationCreateModule,\n    LooseComponentsModule,\n  ],\n  declarations: [\n    TrialInitiationComponent,\n    EnterpriseContentComponent,\n    TeamsContentComponent,\n    ConfirmationDetailsComponent,\n    BillingComponent,\n    DefaultContentComponent,\n    EnterpriseContentComponent,\n    Enterprise1ContentComponent,\n    Enterprise2ContentComponent,\n    TeamsContentComponent,\n    Teams1ContentComponent,\n    Teams2ContentComponent,\n    CnetEnterpriseContentComponent,\n    CnetIndividualContentComponent,\n    CnetTeamsContentComponent,\n    AbmEnterpriseContentComponent,\n    AbmTeamsContentComponent,\n    LogoCnetComponent,\n    LogoForbesComponent,\n    LogoUSNewsComponent,\n  ],\n  exports: [TrialInitiationComponent],\n  providers: [TitleCasePipe],\n})\nexport class TrialInitiationModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule],\n  declarations: [EntityUsersComponent],\n  exports: [EntityUsersComponent],\n})\nexport class OrganizationManageModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { EnrollMasterPasswordReset } from \"./enroll-master-password-reset.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule, LooseComponentsModule],\n  declarations: [EnrollMasterPasswordReset],\n  exports: [EnrollMasterPasswordReset],\n})\nexport class OrganizationUserModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LoginModule } from \"./accounts/login/login.module\";\nimport { TrialInitiationModule } from \"./accounts/trial-initiation/trial-initiation.module\";\nimport { OrganizationCreateModule } from \"./organizations/create/organization-create.module\";\nimport { OrganizationManageModule } from \"./organizations/manage/organization-manage.module\";\nimport { OrganizationUserModule } from \"./organizations/users/organization-user.module\";\nimport { LooseComponentsModule, SharedModule } from \"./shared\";\nimport { OrganizationBadgeModule } from \"./vault/organization-badge/organization-badge.module\";\nimport { VaultFilterModule } from \"./vault/vault-filter/vault-filter.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationManageModule,\n    OrganizationUserModule,\n    OrganizationCreateModule,\n    LoginModule,\n  ],\n  exports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    LoginModule,\n  ],\n  bootstrap: [],\n})\nexport class OssModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [{ path: \"**\", redirectTo: \"\" }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WildcardRoutingModule {}\n","export class ProviderAddOrganizationRequest {\n  organizationId: string;\n  key: string;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderAddOrganizationRequest } from \"@bitwarden/common/models/request/provider/provider-add-organization.request\";\n\n@Injectable()\nexport class WebProviderService {\n  constructor(\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private apiService: ApiService\n  ) {}\n\n  async addOrganizationToProvider(providerId: string, organizationId: string) {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n    const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n    const request = new ProviderAddOrganizationRequest();\n    request.organizationId = organizationId;\n    request.key = encryptedOrgKey.encryptedString;\n\n    const response = await this.apiService.postProviderAddOrganization(providerId, request);\n    await this.syncService.fullSync(true);\n    return response;\n  }\n\n  async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n    await this.apiService.deleteProviderOrganization(providerId, organizationId);\n    await this.syncService.fullSync(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"addTitle\">\n          {{ \"addExistingOrganization\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <ng-container *ngIf=\"!loading\">\n          <table class=\"table table-hover table-list\">\n            <tr *ngFor=\"let o of organizations\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"o.name\" [id]=\"o.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ o.name }}\n              </td>\n              <td>\n                <button\n                  class=\"btn btn-outline-secondary pull-right\"\n                  (click)=\"add(o)\"\n                  [disabled]=\"formPromise\"\n                >\n                  Add\n                </button>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\n@Component({\n  selector: \"provider-add-organization\",\n  templateUrl: \"add-organization.component.html\",\n})\nexport class AddOrganizationComponent implements OnInit {\n  @Input() providerId: string;\n  @Input() organizations: Organization[];\n  @Output() onAddedOrganization = new EventEmitter();\n\n  provider: Provider;\n  formPromise: Promise<any>;\n  loading = true;\n\n  constructor(\n    private providerService: ProviderService,\n    private webProviderService: WebProviderService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private validationService: ValidationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    if (this.providerId == null) {\n      return;\n    }\n\n    this.provider = await this.providerService.get(this.providerId);\n\n    this.loading = false;\n  }\n\n  async add(organization: Organization) {\n    if (this.formPromise) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"addOrganizationConfirmation\", organization.name, this.provider.name),\n      organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.webProviderService.addOrganizationToProvider(\n        this.providerId,\n        organization.id\n      );\n      await this.formPromise;\n    } catch (e) {\n      this.validationService.showError(e);\n      return;\n    } finally {\n      this.formPromise = null;\n    }\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"organizationJoinedProvider\")\n    );\n    this.onAddedOrganization.emit();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Injectable()\nexport class ProviderPermissionsGuard implements CanActivate {\n  constructor(\n    private providerService: ProviderService,\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    if (provider == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!provider.isProviderAdmin && !provider.enabled) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"providerIsDisabled\"));\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (provider: Provider) => boolean = route.data?.providerPermissions;\n    const hasSpecifiedPermissions = permissionsCallback == null || permissionsCallback(provider);\n\n    if (!hasSpecifiedPermissions) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return this.router.createUrlTree([\"/providers\", provider.id]);\n    }\n\n    return true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header d-flex\">\n    <h1>{{ \"providers\" | i18n }}</h1>\n  </div>\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\">\n      <tbody>\n        <tr *ngFor=\"let p of providers\">\n          <td width=\"30\">\n            <bit-avatar [text]=\"p.name\" [id]=\"p.id\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{ p.name }}</a>\n            <ng-container *ngIf=\"!p.enabled\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-danger\"\n                title=\"{{ 'providerIsDisabled' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n            </ng-container>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-providers\",\n  templateUrl: \"providers.component.html\",\n})\nexport class ProvidersComponent implements OnInit {\n  providers: Provider[];\n  loaded = false;\n  actionPromise: Promise<any>;\n\n  constructor(private providerService: ProviderService, private i18nService: I18nService) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    await this.load();\n  }\n\n  async load() {\n    const providers = await this.providerService.getAll();\n    providers.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.providers = providers;\n    this.loaded = true;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"clients\" | i18n }}</h1>\n\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newClientOrganization\" | i18n }}\n    </a>\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"addExistingOrganization()\"\n      *ngIf=\"manageOrganizations && showAddExisting\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"addExistingOrganization\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container\n  *ngIf=\"!loading && (clients | search: searchText:'organizationName':'id') as searchedClients\"\n>\n  <p *ngIf=\"!searchedClients.length\">{{ \"noClientsInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedClients.length\">\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <thead>\n        <tr>\n          <th colspan=\"2\">{{ \"name\" | i18n }}</th>\n          <th>{{ \"numberOfUsers\" | i18n }}</th>\n          <th>{{ \"billingPlan\" | i18n }}</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let o of searchedClients\">\n          <td width=\"30\">\n            <bit-avatar [text]=\"o.organizationName\" [id]=\"o.id\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a [routerLink]=\"['/organizations', o.organizationId]\">{{ o.organizationName }}</a>\n          </td>\n          <td>\n            <span>{{ o.userCount }}</span>\n            <span *ngIf=\"o.seats != null\"> / {{ o.seats }}</span>\n          </td>\n          <td>\n            <span>{{ o.plan }}</span>\n          </td>\n          <td class=\"table-list-options\" *ngIf=\"manageOrganizations\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n\n<ng-template #add></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ProviderOrganizationOrganizationDetailsResponse } from \"@bitwarden/common/models/response/provider/provider-organization.response\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\nimport { AddOrganizationComponent } from \"./add-organization.component\";\n\nconst DisallowedPlanTypes = [\n  PlanType.Free,\n  PlanType.FamiliesAnnually2019,\n  PlanType.FamiliesAnnually,\n];\n\n@Component({\n  templateUrl: \"clients.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ClientsComponent implements OnInit {\n  @ViewChild(\"add\", { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n  providerId: string;\n  searchText: string;\n  addableOrganizations: Organization[];\n  loading = true;\n  manageOrganizations = false;\n  showAddExisting = false;\n\n  clients: ProviderOrganizationOrganizationDetailsResponse[];\n  pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected actionPromise: Promise<unknown>;\n  private pagedClientsCount = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private providerService: ProviderService,\n    private apiService: ApiService,\n    private searchService: SearchService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private validationService: ValidationService,\n    private webProviderService: WebProviderService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderClients(this.providerId);\n    this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n    this.manageOrganizations =\n      (await this.providerService.get(this.providerId)).type === ProviderUserType.ProviderAdmin;\n    const candidateOrgs = (await this.organizationService.getAll()).filter(\n      (o) => o.isOwner && o.providerId == null\n    );\n    const allowedOrgsIds = await Promise.all(\n      candidateOrgs.map((o) => this.organizationApiService.get(o.id))\n    ).then((orgs) =>\n      orgs.filter((o) => !DisallowedPlanTypes.includes(o.planType)).map((o) => o.id)\n    );\n    this.addableOrganizations = candidateOrgs.filter((o) => allowedOrgsIds.includes(o.id));\n\n    this.showAddExisting = this.addableOrganizations.length !== 0;\n    this.loading = false;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.clients && this.clients.length > this.pageSize;\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  async resetPaging() {\n    this.pagedClients = [];\n    this.loadMore();\n  }\n\n  loadMore() {\n    if (!this.clients || this.clients.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedClients.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n      pagedSize = this.pagedClientsCount;\n    }\n    if (this.clients.length > pagedLength) {\n      this.pagedClients = this.pagedClients.concat(\n        this.clients.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedClientsCount = this.pagedClients.length;\n    this.didScroll = this.pagedClients.length > this.pageSize;\n  }\n\n  async addExistingOrganization() {\n    const [modal] = await this.modalService.openViewRef(\n      AddOrganizationComponent,\n      this.addModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.organizations = this.addableOrganizations;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onAddedOrganization.subscribe(async () => {\n          try {\n            await this.load();\n            modal.close();\n          } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n          }\n        });\n      }\n    );\n  }\n\n  async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"detachOrganizationConfirmation\"),\n      organization.organizationName,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.webProviderService.detachOrganizastion(\n      this.providerId,\n      organization.id\n    );\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"detachedOrganization\", organization.organizationName)\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationPlansComponent } from \"@bitwarden/web-vault/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  providerId: string;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newClientOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newClientOrganizationDesc\" | i18n }}</p>\n<app-organization-plans [providerId]=\"providerId\"></app-organization-plans>\n","export class ProviderUserAcceptRequest {\n  token: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ providerName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinProviderDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserAcceptRequest } from \"@bitwarden/common/models/request/provider/provider-user-accept.request\";\nimport { BaseAcceptComponent } from \"@bitwarden/web-vault/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-provider\",\n  templateUrl: \"accept-provider.component.html\",\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n  providerName: string;\n\n  failedMessage = \"providerInviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"providerUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private apiService: ApiService,\n    platformUtilService: PlatformUtilsService\n  ) {\n    super(router, platformUtilService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params) {\n    const request = new ProviderUserAcceptRequest();\n    request.token = qParams.token;\n\n    await this.apiService.postProviderUserAccept(\n      qParams.providerId,\n      qParams.providerUserId,\n      request\n    );\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"providerInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params) {\n    this.providerName = qParams.providerName;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && $any(moreBtn).loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { BaseEventsComponent } from \"@bitwarden/web-vault/app/common/base.events.component\";\nimport { EventService } from \"@bitwarden/web-vault/app/core\";\n\n@Component({\n  selector: \"provider-events\",\n  templateUrl: \"events.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"provider-events\";\n  providerId: string;\n\n  private providerUsersUserIdMap = new Map<string, any>();\n  private providerUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    private providerService: ProviderService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n      if (provider == null || !provider.useEvents) {\n        this.router.navigate([\"/providers\", this.providerId]);\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderUsers(this.providerId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n      this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsProvider(\n      this.providerId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    if (r.installationId != null) {\n      return `Installation: ${r.installationId}`;\n    }\n\n    if (userId != null && this.providerUsersUserIdMap.has(userId)) {\n      return this.providerUsersUserIdMap.get(userId);\n    }\n\n    return null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"provider\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"provider-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  provider: Provider;\n  accessEvents = false;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.provider = await this.providerService.get(params.providerId);\n      this.accessEvents = this.provider.useEvents;\n    });\n  }\n}\n","export class ProviderUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class ProviderUserConfirmRequest {\n  key: string;\n}\n","type ProviderUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n  keys: ProviderUserBulkRequestEntry[];\n\n  constructor(keys: ProviderUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserBulkConfirmRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk.request\";\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from \"@bitwarden/web-vault/app/organizations/members/components/bulk/bulk-confirm.component\";\nimport { BulkUserDetails } from \"@bitwarden/web-vault/app/organizations/members/components/bulk/bulk-status.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/members/components/bulk/bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n  @Input() providerId: string;\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === ProviderUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new ProviderUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getProviderKey(this.providerId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk.request\";\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from \"@bitwarden/web-vault/app/organizations/members/components/bulk/bulk-remove.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/members/components/bulk/bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n  @Input() providerId: string;\n\n  async deleteUsers() {\n    const request = new ProviderUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeUsersWarning\");\n  }\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserInviteRequest {\n  emails: string[] = [];\n  type: ProviderUserType;\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserUpdateRequest {\n  type: ProviderUserType;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"providerInviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeServiceUser\"\n            [value]=\"userType.ServiceUser\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeServiceUser\">\n            {{ \"serviceUser\" | i18n }}\n            <small>{{ \"serviceUserDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeProviderAdmin\"\n            [value]=\"userType.ProviderAdmin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeProviderAdmin\">\n            {{ \"providerAdmin\" | i18n }}\n            <small>{{ \"providerAdminDesc\" | i18n }}</small>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissions.api\";\nimport { ProviderUserInviteRequest } from \"@bitwarden/common/models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"@bitwarden/common/models/request/provider/provider-user-update.request\";\n\n@Component({\n  selector: \"provider-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() providerUserId: string;\n  @Input() providerId: string;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  emails: string;\n  type: ProviderUserType = ProviderUserType.ServiceUser;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  userType = ProviderUserType;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.providerUserId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n        this.type = user.type;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new ProviderUserUpdateRequest();\n        request.type = this.type;\n        this.formPromise = this.apiService.putProviderUser(\n          this.providerId,\n          this.providerUserId,\n          request\n        );\n      } else {\n        const request = new ProviderUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.type = this.type;\n        this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"providerUsersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"$any(u).checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <bit-avatar [text]=\"u | userName\" [id]=\"u.userId\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"$any(u).twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.ProviderAdmin\">{{ \"providerAdmin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.ServiceUser\">{{ \"serviceUser\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"@bitwarden/common/models/request/provider/provider-user-confirm.request\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { ProviderUserBulkResponse } from \"@bitwarden/common/models/response/provider/provider-user-bulk.response\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/provider-user.response\";\nimport { BasePeopleComponent } from \"@bitwarden/web-vault/app/common/base.people.component\";\nimport { EntityEventsComponent } from \"@bitwarden/web-vault/app/organizations/manage/entity-events.component\";\nimport { BulkStatusComponent } from \"@bitwarden/web-vault/app/organizations/members/components/bulk/bulk-status.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\n\n@Component({\n  selector: \"provider-people\",\n  templateUrl: \"people.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PeopleComponent\n  extends BasePeopleComponent<ProviderUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = ProviderUserType;\n  userStatusType = ProviderUserStatusType;\n  providerId: string;\n  accessEvents = false;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    stateService: StateService,\n    private providerService: ProviderService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n\n      if (!provider.canManageUsers) {\n        this.router.navigate([\"../\"], { relativeTo: this.route });\n        return;\n      }\n\n      this.accessEvents = provider.useEvents;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    return this.apiService.getProviderUsers(this.providerId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteProviderUser(this.providerId, id);\n  }\n\n  revokeUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  restoreUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postProviderUserReinvite(this.providerId, id);\n  }\n\n  async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n    const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n    const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n    const request = new ProviderUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n  }\n\n  async edit(user: ProviderUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.providerId = this.providerId;\n        comp.providerUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async events(user: ProviderUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.providerId = this.providerId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === ProviderUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new ProviderUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  private async showBulkStatus(\n    users: ProviderUserUserDetailsResponse[],\n    filteredUsers: ProviderUserUserDetailsResponse[],\n    request: Promise<ListResponse<ProviderUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"provider\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <bit-avatar [text]=\"provider.name\" [id]=\"provider.id\"></bit-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ provider.name }}</span>\n          <small class=\"text-muted\">{{ \"provider\" | i18n }}</small>\n        </div>\n        <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\">\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"providerIsDisabled\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i>\n            {{ \"clients\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"providers-layout\",\n  templateUrl: \"providers-layout.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ProvidersLayoutComponent {\n  provider: Provider;\n  private providerId: string;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.provider = await this.providerService.get(this.providerId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showSettingsTab;\n  }\n\n  get showManageTab() {\n    return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n  }\n\n  get showSettingsTab() {\n    return this.provider.isProviderAdmin;\n  }\n\n  get manageRoute(): string {\n    switch (true) {\n      case this.provider.canManageUsers:\n        return \"manage/people\";\n      case this.provider.canAccessEventLogs:\n        return \"manage/events\";\n    }\n  }\n}\n","export class ProviderUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myProvider\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"provider && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"provider.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"provider.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <bit-avatar [text]=\"provider.name\" [id]=\"provider.id\" size=\"large\"></bit-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderUpdateRequest } from \"@bitwarden/common/models/request/provider/provider-update.request\";\nimport { ProviderResponse } from \"@bitwarden/common/models/response/provider/provider.response\";\n\n@Component({\n  selector: \"provider-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  selfHosted = false;\n  loading = true;\n  provider: ProviderResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private providerId: string;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      try {\n        this.provider = await this.apiService.getProvider(this.providerId);\n      } catch (e) {\n        this.logService.error(`Handled exception: ${e}`);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new ProviderUpdateRequest();\n      request.name = this.provider.name;\n      request.businessName = this.provider.businessName;\n      request.billingEmail = this.provider.billingEmail;\n\n      this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerUpdated\"));\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\n\n@Component({\n  selector: \"provider-settings\",\n  templateUrl: \"settings.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SettingsComponent {\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      await this.providerService.get(params.providerId);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myProvider\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setupProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"setupProviderLoginDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"@bitwarden/web-vault/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-setup-provider\",\n  templateUrl: \"setup-provider.component.html\",\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/providers/setup\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    // Empty\n  }\n}\n","export class ProviderSetupRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  token: string;\n  key: string;\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"setupProvider\" | i18n }}</h1>\n  </div>\n  <p>{{ \"setupProviderDesc\" | i18n }}</p>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\">\n    <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n      </div>\n      <div class=\"form-group col-6\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"billingEmail\"\n          required\n        />\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"submit\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ProviderSetupRequest } from \"@bitwarden/common/models/request/provider/provider-setup.request\";\n\n@Component({\n  selector: \"provider-setup\",\n  templateUrl: \"setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SetupComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  formPromise: Promise<any>;\n\n  providerId: string;\n  token: string;\n  name: string;\n  billingEmail: string;\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"emergencyInviteAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.providerId = qParams.providerId;\n      this.token = qParams.token;\n\n      // Check if provider exists, redirect if it does\n      try {\n        const provider = await this.apiService.getProvider(this.providerId);\n        if (provider.name != null) {\n          this.router.navigate([\"/providers\", provider.id], { replaceUrl: true });\n        }\n      } catch (e) {\n        this.validationService.showError(e);\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit();\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  async doSubmit() {\n    try {\n      const shareKey = await this.cryptoService.makeShareKey();\n      const key = shareKey[0].encryptedString;\n\n      const request = new ProviderSetupRequest();\n      request.name = this.name;\n      request.billingEmail = this.billingEmail;\n      request.token = this.token;\n      request.key = key;\n\n      const provider = await this.apiService.postProviderSetup(this.providerId, request);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerSetup\"));\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/providers\", provider.id]);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\nimport { FrontendLayoutComponent } from \"@bitwarden/web-vault/app/layouts/frontend-layout.component\";\nimport { ProvidersComponent } from \"@bitwarden/web-vault/app/providers/providers.component\";\n\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: ProvidersComponent,\n  },\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      {\n        path: \"setup-provider\",\n        component: SetupProviderComponent,\n        data: { titleId: \"setupProvider\" },\n      },\n      {\n        path: \"accept-provider\",\n        component: AcceptProviderComponent,\n        data: { titleId: \"acceptProvider\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"setup\",\n        component: SetupComponent,\n      },\n      {\n        path: \":providerId\",\n        component: ProvidersLayoutComponent,\n        canActivate: [ProviderPermissionsGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"clients\" },\n          { path: \"clients/create\", component: CreateOrganizationComponent },\n          { path: \"clients\", component: ClientsComponent, data: { titleId: \"clients\" } },\n          {\n            path: \"manage\",\n            component: ManageComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"people\",\n              },\n              {\n                path: \"people\",\n                component: PeopleComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"people\",\n                  providerPermissions: (provider: Provider) => provider.canManageUsers,\n                },\n              },\n              {\n                path: \"events\",\n                component: EventsComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"eventLogs\",\n                  providerPermissions: (provider: Provider) => provider.canAccessEventLogs,\n                },\n              },\n            ],\n          },\n          {\n            path: \"settings\",\n            component: SettingsComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"account\",\n              },\n              {\n                path: \"account\",\n                component: AccountComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"myProvider\",\n                  providerPermissions: (provider: Provider) => provider.isProviderAdmin,\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProvidersRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { ComponentFactoryResolver, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OssModule } from \"@bitwarden/web-vault/app/oss.module\";\n\nimport { AddOrganizationComponent } from \"./clients/add-organization.component\";\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { BulkConfirmComponent } from \"./manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./manage/bulk/bulk-remove.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { UserAddEditComponent } from \"./manage/user-add-edit.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { ProvidersRoutingModule } from \"./providers-routing.module\";\nimport { WebProviderService } from \"./services/webProvider.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, OssModule, JslibModule, ProvidersRoutingModule],\n  declarations: [\n    AcceptProviderComponent,\n    AccountComponent,\n    AddOrganizationComponent,\n    BulkConfirmComponent,\n    BulkRemoveComponent,\n    ClientsComponent,\n    CreateOrganizationComponent,\n    EventsComponent,\n    ManageComponent,\n    PeopleComponent,\n    ProvidersLayoutComponent,\n    SettingsComponent,\n    SetupComponent,\n    SetupProviderComponent,\n    UserAddEditComponent,\n  ],\n  providers: [WebProviderService, ProviderPermissionsGuard],\n})\nexport class ProvidersModule {\n  constructor(modalService: ModalService, componentFactoryResolver: ComponentFactoryResolver) {\n    modalService.registerComponentFactoryResolver(\n      AddOrganizationComponent,\n      componentFactoryResolver\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ProvidersModule } from \"./providers/providers.module\";\n\nconst routes: Routes = [\n  {\n    path: \"providers\",\n    loadChildren: () => ProvidersModule,\n  },\n  {\n    path: \"sm\",\n    loadChildren: async () =>\n      (await import(\"./secrets-manager/secrets-manager.module\")).SecretsManagerModule,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Component, Inject, NgZone, OnDestroy, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport * as jq from \"jquery\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventUploadService } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\n\nimport { PolicyListService, RouterService } from \"./core\";\nimport {\n  DisableSendPolicy,\n  MasterPasswordPolicy,\n  PasswordGeneratorPolicy,\n  PersonalOwnershipPolicy,\n  RequireSsoPolicy,\n  ResetPasswordPolicy,\n  SendOptionsPolicy,\n  SingleOrgPolicy,\n  TwoFactorAuthenticationPolicy,\n} from \"./organizations/policies\";\n\nconst BroadcasterSubscriptionId = \"AppComponent\";\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  private lastActivity: number = null;\n  private idleTimer: number = null;\n  private isIdle = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private broadcasterService: BroadcasterService,\n    private folderService: InternalFolderService,\n    private settingsService: SettingsService,\n    private syncService: SyncService,\n    private passwordGenerationService: PasswordGenerationService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private router: Router,\n    private toastrService: ToastrService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    private vaultTimeoutService: VaultTimeoutService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private sanitizer: DomSanitizer,\n    private searchService: SearchService,\n    private notificationsService: NotificationsService,\n    private routerService: RouterService,\n    private stateService: StateService,\n    private eventUploadService: EventUploadService,\n    private policyService: InternalPolicyService,\n    protected policyListService: PolicyListService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    this.i18nService.locale$.pipe(takeUntil(this.destroy$)).subscribe((locale) => {\n      this.document.documentElement.lang = locale;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousemove = () => this.recordActivity();\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"loggedIn\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"loggedOut\":\n            this.routerService.setPreviousUrl(null);\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"unlocked\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"authBlocked\":\n            this.routerService.setPreviousUrl(message.url);\n            this.router.navigate([\"/\"]);\n            break;\n          case \"logout\":\n            this.logOut(!!message.expired, message.redirect);\n            break;\n          case \"lockVault\":\n            await this.vaultTimeoutService.lock();\n            break;\n          case \"locked\":\n            this.notificationsService.updateConnection(false);\n            this.router.navigate([\"lock\"]);\n            break;\n          case \"lockedUrl\":\n            this.routerService.setPreviousUrl(message.url);\n            break;\n          case \"syncStarted\":\n            break;\n          case \"syncCompleted\":\n            break;\n          case \"upgradeOrganization\": {\n            const upgradeConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"upgradeOrganizationDesc\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (upgradeConfirmed) {\n              this.router.navigate([\n                \"organizations\",\n                message.organizationId,\n                \"settings\",\n                \"billing\",\n              ]);\n            }\n            break;\n          }\n          case \"premiumRequired\": {\n            const premiumConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"premiumRequiredDesc\"),\n              this.i18nService.t(\"premiumRequired\"),\n              this.i18nService.t(\"upgrade\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (premiumConfirmed) {\n              this.router.navigate([\"settings/subscription/premium\"]);\n            }\n            break;\n          }\n          case \"emailVerificationRequired\": {\n            const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"emailVerificationRequiredDesc\"),\n              this.i18nService.t(\"emailVerificationRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (emailVerificationConfirmed) {\n              this.platformUtilsService.launchUri(\n                \"https://bitwarden.com/help/create-bitwarden-account/\"\n              );\n            }\n            break;\n          }\n          case \"showToast\":\n            this.showToast(message);\n            break;\n          case \"setFullWidth\":\n            this.setFullWidth();\n            break;\n          case \"convertAccountToKeyConnector\":\n            this.router.navigate([\"/remove-password\"]);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const modals = Array.from(document.querySelectorAll(\".modal\"));\n        for (const modal of modals) {\n          (jq(modal) as any).modal(\"hide\");\n        }\n\n        if (document.querySelector(\".swal-modal\") != null) {\n          Swal.close(undefined);\n        }\n      }\n    });\n\n    this.policyListService.addPolicies([\n      new TwoFactorAuthenticationPolicy(),\n      new MasterPasswordPolicy(),\n      new ResetPasswordPolicy(),\n      new PasswordGeneratorPolicy(),\n      new SingleOrgPolicy(),\n      new RequireSsoPolicy(),\n      new PersonalOwnershipPolicy(),\n      new DisableSendPolicy(),\n      new SendOptionsPolicy(),\n    ]);\n\n    this.setFullWidth();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private async logOut(expired: boolean, redirect = true) {\n    await this.eventUploadService.uploadEvents();\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.syncService.setLastSync(new Date(0)),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n      this.keyConnectorService.clear(),\n    ]);\n\n    this.searchService.clearIndex();\n    this.authService.logOut(async () => {\n      if (expired) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          this.i18nService.t(\"loggedOut\"),\n          this.i18nService.t(\"loginExpired\")\n        );\n      }\n\n      await this.stateService.clean({ userId: userId });\n      Swal.close();\n      if (redirect) {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  private async recordActivity() {\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    this.stateService.setLastActive(now);\n    // Idle states\n    if (this.isIdle) {\n      this.isIdle = false;\n      this.idleStateChanged();\n    }\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idleTimer = window.setTimeout(() => {\n      if (!this.isIdle) {\n        this.isIdle = true;\n        this.idleStateChanged();\n      }\n    }, IdleTimeout);\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private idleStateChanged() {\n    if (this.isIdle) {\n      this.notificationsService.disconnectFromInactivity();\n    } else {\n      this.notificationsService.reconnectFromActivity();\n    }\n  }\n\n  private async setFullWidth() {\n    const enableFullWidth = await this.stateService.getEnableFullWidth();\n    if (enableFullWidth) {\n      document.body.classList.add(\"full-width\");\n    } else {\n      document.body.classList.remove(\"full-width\");\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"@bitwarden/web-vault/app/organizations/policies/base-policy.component\";\n\nexport class DisablePersonalVaultExportPolicy extends BasePolicy {\n  name = \"disablePersonalVaultExport\";\n  description = \"disablePersonalVaultExportDesc\";\n  type = PolicyType.DisablePersonalVaultExport;\n  component = DisablePersonalVaultExportPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-personal-vault-export\",\n  templateUrl: \"disable-personal-vault-export.component.html\",\n})\nexport class DisablePersonalVaultExportPolicyComponent extends BasePolicyComponent {}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"@bitwarden/web-vault/app/organizations/policies/base-policy.component\";\n\nexport class MaximumVaultTimeoutPolicy extends BasePolicy {\n  name = \"maximumVaultTimeout\";\n  description = \"maximumVaultTimeoutDesc\";\n  type = PolicyType.MaximumVaultTimeout;\n  component = MaximumVaultTimeoutPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-maximum-timeout\",\n  templateUrl: \"maximum-vault-timeout.component.html\",\n})\nexport class MaximumVaultTimeoutPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    hours: [null],\n    minutes: [null],\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder, private i18nService: I18nService) {\n    super();\n  }\n\n  loadData() {\n    const minutes = this.policyResponse.data?.minutes;\n\n    if (minutes == null) {\n      return;\n    }\n\n    this.data.patchValue({\n      hours: Math.floor(minutes / 60),\n      minutes: minutes % 60,\n    });\n  }\n\n  buildRequestData() {\n    if (this.data.value.hours == null && this.data.value.minutes == null) {\n      return null;\n    }\n\n    return {\n      minutes: this.data.value.hours * 60 + this.data.value.minutes,\n    };\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    const data = this.buildRequestData();\n    if (data?.minutes == null || data?.minutes <= 0) {\n      throw new Error(this.i18nService.t(\"invalidMaximumVaultTimeout\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <label for=\"hours\">{{ \"maximumVaultTimeoutLabel\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AppComponent as BaseAppComponent } from \"@bitwarden/web-vault/app/app.component\";\n\nimport { DisablePersonalVaultExportPolicy } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicy } from \"./policies/maximum-vault-timeout.component\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"../../../../apps/web/src/app/app.component.html\",\n})\nexport class AppComponent extends BaseAppComponent {\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.policyListService.addPolicies([\n      new MaximumVaultTimeoutPolicy(),\n      new DisablePersonalVaultExportPolicy(),\n    ]);\n  }\n}\n","import { ScimProviderType } from \"../../enums/scimProviderType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class ScimConfigApi extends BaseResponse {\n  enabled: boolean;\n  scimProvider: ScimProviderType;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.scimProvider = this.getResponseProperty(\"ScimProvider\");\n  }\n}\n","import { ScimProviderType } from \"../../enums/scimProviderType\";\n\nexport class ScimConfigRequest {\n  constructor(private enabled: boolean, private scimProvider: ScimProviderType = null) {}\n}\n","<div class=\"page-header\">\n  <h1>{{ \"scim\" | i18n }}</h1>\n</div>\n\n<p>{{ \"scimDescription\" | i18n }}</p>\n\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  [formGroup]=\"formData\"\n  *ngIf=\"!loading\"\n>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n        aria-describedby=\"scimEnabledCheckboxDescHelpText\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"scimEnabledCheckboxDesc\" | i18n }}</label>\n      <div id=\"scimEnabledCheckboxDescHelpText\">\n        <small class=\"form-text text-muted\">{{ \"scimEnabledCheckboxDescHelpText\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimUrl\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"endpointUrl\" />\n    <button\n      type=\"button\"\n      bitSuffix\n      bitIconButton=\"bwi-clone\"\n      (click)=\"copyScimUrl()\"\n      [appA11yTitle]=\"'copyScimUrl' | i18n\"\n    ></button>\n  </bit-form-field>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimApiKey\" | i18n }}</bit-label>\n    <input\n      bitInput\n      [type]=\"showScimKey ? 'text' : 'password'\"\n      formControlName=\"clientSecret\"\n      id=\"clientSecret\"\n    />\n    <ng-container>\n      <button\n        type=\"button\"\n        bitSuffix\n        [disabled]=\"$any(rotateButton).loading\"\n        [bitIconButton]=\"showScimKey ? 'bwi-eye-slash' : 'bwi-eye'\"\n        (click)=\"toggleScimKey()\"\n        [appA11yTitle]=\"'toggleVisibility' | i18n\"\n      ></button>\n    </ng-container>\n    <ng-container #rotateButton [appApiAction]=\"rotatePromise\">\n      <!-- TODO: Convert to async actions -->\n      <button\n        [loading]=\"$any(rotateButton).loading\"\n        type=\"button\"\n        bitSuffix\n        bitIconButton=\"bwi-generate\"\n        (click)=\"rotateScimKey()\"\n        [appA11yTitle]=\"'rotateScimKey' | i18n\"\n      ></button>\n    </ng-container>\n    <button\n      type=\"button\"\n      bitSuffix\n      bitIconButton=\"bwi-clone\"\n      (click)=\"copyScimKey()\"\n      [appA11yTitle]=\"'copyScimKey' | i18n\"\n    ></button>\n    <bit-hint>{{ \"scimApiKeyHelperText\" | i18n }}</bit-hint>\n  </bit-form-field>\n\n  <button\n    type=\"submit\"\n    buttonType=\"primary\"\n    bitButton\n    [loading]=\"form.loading\"\n    [disabled]=\"form.loading\"\n  >\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { ScimConfigApi } from \"@bitwarden/common/models/api/scim-config.api\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organization-api-key.request\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organization-connection.request\";\nimport { ScimConfigRequest } from \"@bitwarden/common/models/request/scim-config.request\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/api-key.response\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organization-connection.response\";\n\n@Component({\n  selector: \"app-org-manage-scim\",\n  templateUrl: \"scim.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ScimComponent implements OnInit {\n  loading = true;\n  organizationId: string;\n  existingConnectionId: string;\n  formPromise: Promise<OrganizationConnectionResponse<ScimConfigApi>>;\n  rotatePromise: Promise<ApiKeyResponse>;\n  enabled = new FormControl(false);\n  showScimSettings = false;\n  showScimKey = false;\n\n  formData = this.formBuilder.group({\n    endpointUrl: new FormControl({ value: \"\", disabled: true }),\n    clientSecret: new FormControl({ value: \"\", disabled: true }),\n  });\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private environmentService: EnvironmentService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    const connection = await this.apiService.getOrganizationConnection(\n      this.organizationId,\n      OrganizationConnectionType.Scim,\n      ScimConfigApi\n    );\n    await this.setConnectionFormValues(connection);\n  }\n\n  async loadApiKey() {\n    const apiKeyRequest = new OrganizationApiKeyRequest();\n    apiKeyRequest.type = OrganizationApiKeyType.Scim;\n    apiKeyRequest.masterPasswordHash = \"N/A\";\n    const apiKeyResponse = await this.organizationApiService.getOrCreateApiKey(\n      this.organizationId,\n      apiKeyRequest\n    );\n    this.formData.setValue({\n      endpointUrl: this.getScimEndpointUrl(),\n      clientSecret: apiKeyResponse.apiKey,\n    });\n  }\n\n  async copyScimUrl() {\n    this.platformUtilsService.copyToClipboard(this.getScimEndpointUrl());\n  }\n\n  async rotateScimKey() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"rotateScimKeyWarning\"),\n      this.i18nService.t(\"rotateScimKey\"),\n      this.i18nService.t(\"rotateKey\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    const request = new OrganizationApiKeyRequest();\n    request.type = OrganizationApiKeyType.Scim;\n    request.masterPasswordHash = \"N/A\";\n\n    this.rotatePromise = this.organizationApiService.rotateApiKey(this.organizationId, request);\n\n    try {\n      const response = await this.rotatePromise;\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: response.apiKey,\n      });\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimApiKeyRotated\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.rotatePromise = null;\n  }\n\n  async copyScimKey() {\n    this.platformUtilsService.copyToClipboard(this.formData.get(\"clientSecret\").value);\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.organizationId,\n        OrganizationConnectionType.Scim,\n        true,\n        new ScimConfigRequest(this.enabled.value)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(request, ScimConfigApi);\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          ScimConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this.formPromise) as OrganizationConnectionResponse<ScimConfigApi>;\n      await this.setConnectionFormValues(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimSettingsSaved\"));\n    } catch (e) {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  getScimEndpointUrl() {\n    return this.environmentService.getScimUrl() + \"/\" + this.organizationId;\n  }\n\n  toggleScimKey() {\n    this.showScimKey = !this.showScimKey;\n    document.getElementById(\"clientSecret\").focus();\n  }\n\n  private async setConnectionFormValues(connection: OrganizationConnectionResponse<ScimConfigApi>) {\n    this.existingConnectionId = connection?.id;\n    if (connection !== null && connection.config?.enabled) {\n      this.showScimSettings = true;\n      this.enabled.setValue(true);\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: \"\",\n      });\n      await this.loadApiKey();\n    } else {\n      this.showScimSettings = false;\n      this.enabled.setValue(false);\n    }\n    this.loading = false;\n  }\n}\n","import { SsoConfigApi } from \"../../api/sso-config.api\";\n\nexport class OrganizationSsoRequest {\n  enabled = false;\n  identifier: string;\n  data: SsoConfigApi;\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { SsoConfigApi } from \"../api/sso-config.api\";\n\nimport { View } from \"./view\";\n\nexport class SsoConfigView extends View {\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  openId: {\n    authority: string;\n    clientId: string;\n    clientSecret: string;\n    metadataAddress: string;\n    redirectBehavior: OpenIdConnectRedirectBehavior;\n    getClaimsFromUserInfoEndpoint: boolean;\n    additionalScopes: string;\n    additionalUserIdClaimTypes: string;\n    additionalEmailClaimTypes: string;\n    additionalNameClaimTypes: string;\n    acrValues: string;\n    expectedReturnAcrValue: string;\n  };\n\n  saml: {\n    spNameIdFormat: Saml2NameIdFormat;\n    spOutboundSigningAlgorithm: string;\n    spSigningBehavior: Saml2SigningBehavior;\n    spMinIncomingSigningAlgorithm: string;\n    spWantAssertionsSigned: boolean;\n    spValidateCertificates: boolean;\n\n    idpEntityId: string;\n    idpBindingType: Saml2BindingType;\n    idpSingleSignOnServiceUrl: string;\n    idpSingleLogoutServiceUrl: string;\n    idpX509PublicCert: string;\n    idpOutboundSigningAlgorithm: string;\n    idpAllowUnsolicitedAuthnResponse: boolean;\n    idpAllowOutboundLogoutRequests: boolean;\n    idpWantAuthnRequestsSigned: boolean;\n  };\n\n  constructor(api: SsoConfigApi) {\n    super();\n    if (api == null) {\n      return;\n    }\n\n    this.configType = api.configType;\n\n    this.keyConnectorEnabled = api.keyConnectorEnabled;\n    this.keyConnectorUrl = api.keyConnectorUrl;\n\n    if (this.configType === SsoType.OpenIdConnect) {\n      this.openId = {\n        authority: api.authority,\n        clientId: api.clientId,\n        clientSecret: api.clientSecret,\n        metadataAddress: api.metadataAddress,\n        redirectBehavior: api.redirectBehavior,\n        getClaimsFromUserInfoEndpoint: api.getClaimsFromUserInfoEndpoint,\n        additionalScopes: api.additionalScopes,\n        additionalUserIdClaimTypes: api.additionalUserIdClaimTypes,\n        additionalEmailClaimTypes: api.additionalEmailClaimTypes,\n        additionalNameClaimTypes: api.additionalNameClaimTypes,\n        acrValues: api.acrValues,\n        expectedReturnAcrValue: api.expectedReturnAcrValue,\n      };\n    } else if (this.configType === SsoType.Saml2) {\n      this.saml = {\n        spNameIdFormat: api.spNameIdFormat,\n        spOutboundSigningAlgorithm: api.spOutboundSigningAlgorithm,\n        spSigningBehavior: api.spSigningBehavior,\n        spMinIncomingSigningAlgorithm: api.spMinIncomingSigningAlgorithm,\n        spWantAssertionsSigned: api.spWantAssertionsSigned,\n        spValidateCertificates: api.spValidateCertificates,\n\n        idpEntityId: api.idpEntityId,\n        idpBindingType: api.idpBindingType,\n        idpSingleSignOnServiceUrl: api.idpSingleSignOnServiceUrl,\n        idpSingleLogoutServiceUrl: api.idpSingleLogoutServiceUrl,\n        idpX509PublicCert: api.idpX509PublicCert,\n        idpOutboundSigningAlgorithm: api.idpOutboundSigningAlgorithm,\n        idpAllowUnsolicitedAuthnResponse: api.idpAllowUnsolicitedAuthnResponse,\n        idpWantAuthnRequestsSigned: api.idpWantAuthnRequestsSigned,\n\n        // Value is inverted in the view model (allow instead of disable)\n        idpAllowOutboundLogoutRequests:\n          api.idpDisableOutboundLogoutRequests == null\n            ? null\n            : !api.idpDisableOutboundLogoutRequests,\n      };\n    }\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"input[appInputStripSpaces]\",\n})\nexport class InputStripSpacesDirective {\n  constructor(private el: ElementRef<HTMLInputElement>) {}\n\n  @HostListener(\"input\") onInput() {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/ /g, \"\");\n  }\n}\n","import { Directive, HostListener, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appCopyClick]\",\n})\nexport class CopyClickDirective {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  @Input(\"appCopyClick\") valueToCopy = \"\";\n\n  @HostListener(\"click\") onClick() {\n    this.platformUtilsService.copyToClipboard(this.valueToCopy);\n  }\n}\n","import { Directive, HostListener, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appLaunchClick]\",\n})\nexport class LaunchClickDirective {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  @Input(\"appLaunchClick\") uriToLaunch = \"\";\n\n  @HostListener(\"click\") onClick() {\n    if (!Utils.isNullOrWhitespace(this.uriToLaunch)) {\n      this.platformUtilsService.launchUri(this.uriToLaunch);\n    }\n  }\n}\n","import { Directive, Input, OnInit, Self } from \"@angular/core\";\nimport { ControlValueAccessor, UntypedFormControl, NgControl, Validators } from \"@angular/forms\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Directive()\nexport abstract class BaseCvaComponent implements ControlValueAccessor, OnInit {\n  get describedById() {\n    return this.showDescribedBy ? this.controlId + \"Desc\" : null;\n  }\n\n  get showDescribedBy() {\n    return this.helperText != null || this.controlDir.control.hasError(\"required\");\n  }\n\n  get isRequired() {\n    return this.controlDir.control.hasValidator(Validators.required);\n  }\n\n  @Input() label: string;\n  @Input() controlId: string;\n  @Input() helperText: string;\n\n  internalControl = new UntypedFormControl(\"\");\n\n  protected onChange: any;\n  protected onTouched: any;\n\n  constructor(@Self() public controlDir: NgControl) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit() {\n    this.internalControl.valueChanges.subscribe(this.onValueChangesInternal);\n  }\n\n  onBlurInternal() {\n    this.onTouched();\n  }\n\n  // CVA interfaces\n  writeValue(value: string) {\n    this.internalControl.setValue(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.internalControl.disable();\n    } else {\n      this.internalControl.enable();\n    }\n  }\n\n  protected onValueChangesInternal: any = (value: string) => this.onChange(value);\n  // End CVA interfaces\n}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [attr.id]=\"controlId\"\n      [attr.aria-describedby]=\"describedById\"\n      [formControl]=\"internalControl\"\n      (blur)=\"onBlurInternal()\"\n    />\n    <label class=\"form-check-label\" [attr.for]=\"controlId\">{{ label }}</label>\n  </div>\n  <small *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\" class=\"form-text text-muted\">{{\n    helperText\n  }}</small>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-checkbox\",\n  templateUrl: \"input-checkbox.component.html\",\n})\nexport class InputCheckboxComponent extends BaseCvaComponent {}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"singleSignOn\" | i18n }}</h1>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [formGroup]=\"ssoConfigForm\"\n  [appApiAction]=\"formPromise\"\n  *ngIf=\"!loading\"\n>\n  <p>\n    {{ \"ssoPolicyHelpStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"ssoPolicyHelpLink\" | i18n }}</a>\n    {{ \"ssoPolicyHelpEnd\" | i18n }}\n    <br />\n    {{ \"ssoPolicyHelpKeyConnector\" | i18n }}\n  </p>\n\n  <!-- Root form -->\n  <ng-container>\n    <app-input-checkbox\n      controlId=\"enabled\"\n      [formControl]=\"enabled\"\n      [label]=\"'allowSso' | i18n\"\n      [helperText]=\"'allowSsoDesc' | i18n\"\n    ></app-input-checkbox>\n\n    <bit-form-field>\n      <bit-label>{{ \"ssoIdentifier\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" [formControl]=\"ssoIdentifier\" />\n      <bit-hint>{{ \"ssoIdentifierHint\" | i18n }}</bit-hint>\n    </bit-form-field>\n\n    <hr />\n\n    <div class=\"form-group\">\n      <label>{{ \"memberDecryptionOption\" | i18n }}</label>\n      <div class=\"form-check form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionPass\"\n          [value]=\"false\"\n          formControlName=\"keyConnectorEnabled\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionPass\">\n          {{ \"masterPass\" | i18n }}\n          <small>{{ \"memberDecryptionPassDesc\" | i18n }}</small>\n        </label>\n      </div>\n      <div class=\"form-check mt-2 form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionKey\"\n          [value]=\"true\"\n          formControlName=\"keyConnectorEnabled\"\n          [attr.disabled]=\"!organization.useKeyConnector || null\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionKey\">\n          {{ \"keyConnector\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/about-key-connector/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n          <small>{{ \"memberDecryptionKeyConnectorDesc\" | i18n }}</small>\n        </label>\n      </div>\n    </div>\n\n    <!-- Key Connector -->\n    <ng-container *ngIf=\"ssoConfigForm.get('keyConnectorEnabled').value\">\n      <app-callout type=\"warning\" [useAlertRole]=\"true\">\n        {{ \"keyConnectorWarning\" | i18n }}\n      </app-callout>\n\n      <bit-form-field>\n        <bit-label>{{ \"keyConnectorUrl\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"text\"\n          required\n          formControlName=\"keyConnectorUrl\"\n          appInputStripSpaces\n          (input)=\"haveTestedKeyConnector = false\"\n        />\n        <button\n          bitSuffix\n          bitButton\n          [disabled]=\"!enableTestKeyConnector\"\n          type=\"button\"\n          (click)=\"validateKeyConnectorUrl()\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"keyConnectorUrl.pending\"\n          ></i>\n          <span *ngIf=\"!keyConnectorUrl.pending\">\n            {{ \"keyConnectorTest\" | i18n }}\n          </span>\n        </button>\n        <bit-hint\n          aria-live=\"polite\"\n          *ngIf=\"haveTestedKeyConnector && !keyConnectorUrl.hasError('invalidUrl')\"\n        >\n          <small class=\"text-success\">\n            <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n            {{ \"keyConnectorTestSuccess\" | i18n }}\n          </small>\n        </bit-hint>\n      </bit-form-field>\n    </ng-container>\n\n    <hr />\n\n    <bit-form-field>\n      <bit-label>{{ \"type\" | i18n }}</bit-label>\n      <select bitInput formControlName=\"configType\">\n        <option *ngFor=\"let o of ssoTypeOptions\" [ngValue]=\"o.value\" disabled=\"{{ o.disabled }}\">\n          {{ o.name }}\n        </option>\n      </select>\n    </bit-form-field>\n  </ng-container>\n\n  <!-- OIDC -->\n  <div\n    *ngIf=\"ssoConfigForm.get('configType').value === ssoType.OpenIdConnect\"\n    [formGroup]=\"openIdForm\"\n  >\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"openIdConnectConfig\" | i18n }}</h2>\n\n      <bit-form-field>\n        <bit-label>{{ \"callbackPath\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"callbackPath\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"callbackPath\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"signedOutCallbackPath\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"signedOutCallbackPath\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"signedOutCallbackPath\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"authority\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"authority\" appInputStripSpaces />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"clientId\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"clientId\" appInputStripSpaces />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"clientSecret\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"clientSecret\" appInputStripSpaces />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"metadataAddress\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"metadataAddress\" appInputStripSpaces />\n        <bit-hint>{{ \"openIdAuthorityRequired\" | i18n }}</bit-hint>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"oidcRedirectBehavior\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"redirectBehavior\">\n          <option\n            *ngFor=\"let o of connectRedirectOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <app-input-checkbox\n        controlId=\"getClaimsFromUserInfoEndpoint\"\n        formControlName=\"getClaimsFromUserInfoEndpoint\"\n        [label]=\"'getClaimsFromUserInfoEndpoint' | i18n\"\n      ></app-input-checkbox>\n\n      <!-- Optional customizations -->\n      <div\n        class=\"section-header d-flex flex-row align-items-center mt-3 mb-3\"\n        (click)=\"toggleOpenIdCustomizations()\"\n      >\n        <h3 class=\"mb-0 mr-2\" id=\"customizations-header\">\n          {{ \"openIdOptionalCustomizations\" | i18n }}\n        </h3>\n        <button\n          class=\"mb-1 btn btn-link\"\n          type=\"button\"\n          appStopClick\n          role=\"button\"\n          aria-controls=\"customizations\"\n          [attr.aria-expanded]=\"showOpenIdCustomizations\"\n          aria-labelledby=\"customizations-header\"\n        >\n          <i\n            class=\"bwi\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': !showOpenIdCustomizations,\n              'bwi-angle-down': showOpenIdCustomizations\n            }\"\n          ></i>\n        </button>\n      </div>\n      <div id=\"customizations\" [hidden]=\"!showOpenIdCustomizations\">\n        <bit-form-field>\n          <bit-label>{{ \"additionalScopes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalScopes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"additionalUserIdClaimTypes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalUserIdClaimTypes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"additionalEmailClaimTypes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalEmailClaimTypes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"additionalNameClaimTypes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalNameClaimTypes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"acrValues\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"acrValues\" />\n          <bit-hint>acr_values</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"expectedReturnAcrValue\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"expectedReturnAcrValue\" />\n          <bit-hint>acr_validaton</bit-hint>\n        </bit-form-field>\n      </div>\n    </div>\n  </div>\n\n  <!-- SAML2 SP -->\n  <div *ngIf=\"ssoConfigForm.get('configType').value === ssoType.Saml2\" [formGroup]=\"samlForm\">\n    <!-- SAML2 SP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlSpConfig\" | i18n }}</h2>\n\n      <bit-form-field>\n        <bit-label>{{ \"spEntityId\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"spEntityId\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"spEntityId\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spMetadataUrl\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"spMetadataUrl\" />\n        <button\n          bitButton\n          bitSuffix\n          type=\"button\"\n          [appLaunchClick]=\"spMetadataUrl\"\n          [appA11yTitle]=\"'launch' | i18n\"\n        >\n          <i class=\"bwi bwi-lg bwi-external-link\" aria-hidden=\"true\"></i>\n        </button>\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"spMetadataUrl\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spAcsUrl\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"spAcsUrl\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"spAcsUrl\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spNameIdFormat\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spNameIdFormat\">\n          <option\n            *ngFor=\"let o of saml2NameIdFormatOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spOutboundSigningAlgorithm\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spOutboundSigningAlgorithm\">\n          <option\n            *ngFor=\"let o of samlSigningAlgorithmOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spSigningBehavior\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spSigningBehavior\">\n          <option\n            *ngFor=\"let o of saml2SigningBehaviourOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spMinIncomingSigningAlgorithm\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spMinIncomingSigningAlgorithm\">\n          <option\n            *ngFor=\"let o of samlSigningAlgorithmOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <app-input-checkbox\n        controlId=\"spWantAssertionsSigned\"\n        formControlName=\"spWantAssertionsSigned\"\n        [label]=\"'spWantAssertionsSigned' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"spValidateCertificates\"\n        formControlName=\"spValidateCertificates\"\n        [label]=\"'spValidateCertificates' | i18n\"\n      ></app-input-checkbox>\n    </div>\n\n    <!-- SAML2 IDP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlIdpConfig\" | i18n }}</h2>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpEntityId\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"idpEntityId\" />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpBindingType\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"idpBindingType\">\n          <option\n            *ngFor=\"let o of saml2BindingTypeOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpSingleSignOnServiceUrl\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"text\"\n          formControlName=\"idpSingleSignOnServiceUrl\"\n          appInputStripSpaces\n        />\n        <bit-hint>{{ \"idpSingleSignOnServiceUrlRequired\" | i18n }}</bit-hint>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpSingleLogoutServiceUrl\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"text\"\n          formControlName=\"idpSingleLogoutServiceUrl\"\n          appInputStripSpaces\n        />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpX509PublicCert\" | i18n }}</bit-label>\n        <textarea bitInput rows=\"6\" formControlName=\"idpX509PublicCert\"></textarea>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpOutboundSigningAlgorithm\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"idpOutboundSigningAlgorithm\">\n          <option\n            *ngFor=\"let o of samlSigningAlgorithmOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <!--TODO: Uncomment once Unsolicited IdP Response is supported-->\n      <!-- <app-input-checkbox\n        controlId=\"idpAllowUnsolicitedAuthnResponse\"\n        formControlName=\"idpAllowUnsolicitedAuthnResponse\"\n        [label]=\"'idpAllowUnsolicitedAuthnResponse' | i18n\"\n      ></app-input-checkbox> -->\n\n      <app-input-checkbox\n        controlId=\"idpAllowOutboundLogoutRequests\"\n        formControlName=\"idpAllowOutboundLogoutRequests\"\n        [label]=\"'idpAllowOutboundLogoutRequests' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"idpWantAuthnRequestsSigned\"\n        formControlName=\"idpWantAuthnRequestsSigned\"\n        [label]=\"'idpSignAuthenticationRequests' | i18n\"\n      ></app-input-checkbox>\n    </div>\n  </div>\n\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </button>\n  <bit-error-summary [formGroup]=\"ssoConfigForm\"></bit-error-summary>\n</form>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  UntypedFormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\nimport { ControlsOf } from \"@bitwarden/angular/types/controls-of\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"@bitwarden/common/enums/ssoEnums\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SsoConfigApi } from \"@bitwarden/common/models/api/sso-config.api\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSsoRequest } from \"@bitwarden/common/models/request/organization/organization-sso.request\";\nimport { OrganizationSsoResponse } from \"@bitwarden/common/models/response/organization/organization-sso.response\";\nimport { SsoConfigView } from \"@bitwarden/common/models/view/sso-config.view\";\n\nconst defaultSigningAlgorithm = \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\";\n\n@Component({\n  selector: \"app-org-manage-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent implements OnInit, OnDestroy {\n  readonly ssoType = SsoType;\n\n  readonly ssoTypeOptions: SelectOptions[] = [\n    { name: this.i18nService.t(\"selectType\"), value: SsoType.None, disabled: true },\n    { name: \"OpenID Connect\", value: SsoType.OpenIdConnect },\n    { name: \"SAML 2.0\", value: SsoType.Saml2 },\n  ];\n\n  readonly samlSigningAlgorithms = [\n    \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha384\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha512\",\n  ];\n\n  readonly saml2SigningBehaviourOptions: SelectOptions[] = [\n    {\n      name: \"If IdP Wants Authn Requests Signed\",\n      value: Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned,\n    },\n    { name: \"Always\", value: Saml2SigningBehavior.Always },\n    { name: \"Never\", value: Saml2SigningBehavior.Never },\n  ];\n  readonly saml2BindingTypeOptions: SelectOptions[] = [\n    { name: \"Redirect\", value: Saml2BindingType.HttpRedirect },\n    { name: \"HTTP POST\", value: Saml2BindingType.HttpPost },\n  ];\n  readonly saml2NameIdFormatOptions: SelectOptions[] = [\n    { name: \"Not Configured\", value: Saml2NameIdFormat.NotConfigured },\n    { name: \"Unspecified\", value: Saml2NameIdFormat.Unspecified },\n    { name: \"Email Address\", value: Saml2NameIdFormat.EmailAddress },\n    { name: \"X.509 Subject Name\", value: Saml2NameIdFormat.X509SubjectName },\n    { name: \"Windows Domain Qualified Name\", value: Saml2NameIdFormat.WindowsDomainQualifiedName },\n    { name: \"Kerberos Principal Name\", value: Saml2NameIdFormat.KerberosPrincipalName },\n    { name: \"Entity Identifier\", value: Saml2NameIdFormat.EntityIdentifier },\n    { name: \"Persistent\", value: Saml2NameIdFormat.Persistent },\n    { name: \"Transient\", value: Saml2NameIdFormat.Transient },\n  ];\n\n  readonly connectRedirectOptions: SelectOptions[] = [\n    { name: \"Redirect GET\", value: OpenIdConnectRedirectBehavior.RedirectGet },\n    { name: \"Form POST\", value: OpenIdConnectRedirectBehavior.FormPost },\n  ];\n\n  private destory$ = new Subject<void>();\n\n  showOpenIdCustomizations = false;\n\n  loading = true;\n  haveTestedKeyConnector = false;\n  organizationId: string;\n  organization: Organization;\n  formPromise: Promise<OrganizationSsoResponse>;\n\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  protected enabled = this.formBuilder.control(false);\n\n  protected ssoIdentifier = this.formBuilder.control(\"\", {\n    validators: [Validators.maxLength(50), Validators.required],\n  });\n\n  protected openIdForm = this.formBuilder.group<ControlsOf<SsoConfigView[\"openId\"]>>(\n    {\n      authority: new FormControl(\"\", Validators.required),\n      clientId: new FormControl(\"\", Validators.required),\n      clientSecret: new FormControl(\"\", Validators.required),\n      metadataAddress: new FormControl(),\n      redirectBehavior: new FormControl(\n        OpenIdConnectRedirectBehavior.RedirectGet,\n        Validators.required\n      ),\n      getClaimsFromUserInfoEndpoint: new FormControl(),\n      additionalScopes: new FormControl(),\n      additionalUserIdClaimTypes: new FormControl(),\n      additionalEmailClaimTypes: new FormControl(),\n      additionalNameClaimTypes: new FormControl(),\n      acrValues: new FormControl(),\n      expectedReturnAcrValue: new FormControl(),\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  protected samlForm = this.formBuilder.group<ControlsOf<SsoConfigView[\"saml\"]>>(\n    {\n      spNameIdFormat: new FormControl(Saml2NameIdFormat.NotConfigured),\n      spOutboundSigningAlgorithm: new FormControl(defaultSigningAlgorithm),\n      spSigningBehavior: new FormControl(Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned),\n      spMinIncomingSigningAlgorithm: new FormControl(defaultSigningAlgorithm),\n      spWantAssertionsSigned: new FormControl(),\n      spValidateCertificates: new FormControl(),\n\n      idpEntityId: new FormControl(\"\", Validators.required),\n      idpBindingType: new FormControl(Saml2BindingType.HttpRedirect),\n      idpSingleSignOnServiceUrl: new FormControl(),\n      idpSingleLogoutServiceUrl: new FormControl(),\n      idpX509PublicCert: new FormControl(\"\", Validators.required),\n      idpOutboundSigningAlgorithm: new FormControl(defaultSigningAlgorithm),\n      idpAllowUnsolicitedAuthnResponse: new FormControl(),\n      idpAllowOutboundLogoutRequests: new FormControl(true),\n      idpWantAuthnRequestsSigned: new FormControl(),\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  protected ssoConfigForm = this.formBuilder.group<ControlsOf<SsoConfigView>>({\n    configType: new FormControl(SsoType.None),\n    keyConnectorEnabled: new FormControl(false),\n    keyConnectorUrl: new FormControl(\"\"),\n    openId: this.openIdForm,\n    saml: this.samlForm,\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.ssoConfigForm\n      .get(\"configType\")\n      .valueChanges.pipe(takeUntil(this.destory$))\n      .subscribe((newType: SsoType) => {\n        if (newType === SsoType.OpenIdConnect) {\n          this.openIdForm.enable();\n          this.samlForm.disable();\n        } else if (newType === SsoType.Saml2) {\n          this.openIdForm.disable();\n          this.samlForm.enable();\n        } else {\n          this.openIdForm.disable();\n          this.samlForm.disable();\n        }\n      });\n\n    this.samlForm\n      .get(\"spSigningBehavior\")\n      .valueChanges.pipe(takeUntil(this.destory$))\n      .subscribe(() => this.samlForm.get(\"idpX509PublicCert\").updateValueAndValidity());\n\n    this.route.params\n      .pipe(\n        concatMap(async (params) => {\n          this.organizationId = params.organizationId;\n          await this.load();\n        }),\n        takeUntil(this.destory$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destory$.next();\n    this.destory$.complete();\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    const ssoSettings = await this.organizationApiService.getSso(this.organizationId);\n    this.populateForm(ssoSettings);\n\n    this.callbackPath = ssoSettings.urls.callbackPath;\n    this.signedOutCallbackPath = ssoSettings.urls.signedOutCallbackPath;\n    this.spEntityId = ssoSettings.urls.spEntityId;\n    this.spMetadataUrl = ssoSettings.urls.spMetadataUrl;\n    this.spAcsUrl = ssoSettings.urls.spAcsUrl;\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.validateForm(this.ssoConfigForm);\n\n    if (this.ssoConfigForm.value.keyConnectorEnabled) {\n      this.haveTestedKeyConnector = false;\n      await this.validateKeyConnectorUrl();\n    }\n\n    if (!this.ssoConfigForm.valid) {\n      this.readOutErrors();\n      return;\n    }\n\n    const request = new OrganizationSsoRequest();\n    request.enabled = this.enabled.value;\n    request.identifier = this.ssoIdentifier.value;\n    request.data = SsoConfigApi.fromView(this.ssoConfigForm.getRawValue());\n\n    this.formPromise = this.organizationApiService.updateSso(this.organizationId, request);\n\n    try {\n      const response = await this.formPromise;\n      this.populateForm(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"ssoSettingsSaved\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  async validateKeyConnectorUrl() {\n    if (this.haveTestedKeyConnector) {\n      return;\n    }\n\n    this.keyConnectorUrl.markAsPending();\n\n    try {\n      await this.apiService.getKeyConnectorAlive(this.keyConnectorUrl.value);\n      this.keyConnectorUrl.updateValueAndValidity();\n    } catch {\n      this.keyConnectorUrl.setErrors({\n        invalidUrl: { message: this.i18nService.t(\"keyConnectorTestFail\") },\n      });\n    }\n\n    this.haveTestedKeyConnector = true;\n  }\n\n  toggleOpenIdCustomizations() {\n    this.showOpenIdCustomizations = !this.showOpenIdCustomizations;\n  }\n\n  getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n\n  get enableTestKeyConnector() {\n    return (\n      this.ssoConfigForm.get(\"keyConnectorEnabled\").value &&\n      !Utils.isNullOrWhitespace(this.keyConnectorUrl?.value)\n    );\n  }\n\n  get keyConnectorUrl() {\n    return this.ssoConfigForm.get(\"keyConnectorUrl\");\n  }\n\n  get samlSigningAlgorithmOptions(): SelectOptions[] {\n    return this.samlSigningAlgorithms.map((algorithm) => ({ name: algorithm, value: algorithm }));\n  }\n\n  private validateForm(form: UntypedFormGroup) {\n    Object.values(form.controls).forEach((control: AbstractControl) => {\n      if (control.disabled) {\n        return;\n      }\n\n      if (control instanceof UntypedFormGroup) {\n        this.validateForm(control);\n      } else {\n        control.markAsDirty();\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  private populateForm(ssoSettings: OrganizationSsoResponse) {\n    this.enabled.setValue(ssoSettings.enabled);\n    this.ssoIdentifier.setValue(ssoSettings.identifier);\n    if (ssoSettings.data != null) {\n      const ssoConfigView = new SsoConfigView(ssoSettings.data);\n      this.ssoConfigForm.patchValue(ssoConfigView);\n    }\n  }\n\n  private readOutErrors() {\n    const errorText = this.i18nService.t(\"error\");\n    const errorCount = this.getErrorCount(this.ssoConfigForm);\n    const errorCountText = this.i18nService.t(\n      errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\",\n      errorCount.toString()\n    );\n\n    const div = document.createElement(\"div\");\n    div.className = \"sr-only\";\n    div.id = \"srErrorCount\";\n    div.setAttribute(\"aria-live\", \"polite\");\n    div.innerText = errorText + \": \" + errorCountText;\n\n    const existing = document.getElementById(\"srErrorCount\");\n    if (existing != null) {\n      existing.remove();\n    }\n\n    document.body.append(div);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { canAccessSettingsTab } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationPermissionsGuard } from \"@bitwarden/web-vault/app/organizations/guards/org-permissions.guard\";\nimport { OrganizationLayoutComponent } from \"@bitwarden/web-vault/app/organizations/layouts/organization-layout.component\";\nimport { SettingsComponent } from \"@bitwarden/web-vault/app/organizations/settings/settings.component\";\n\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\n\nconst routes: Routes = [\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    children: [\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessSettingsTab,\n        },\n        children: [\n          {\n            path: \"sso\",\n            component: SsoComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageSso,\n            },\n          },\n          {\n            path: \"scim\",\n            component: ScimComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageScim,\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"@bitwarden/web-vault/app/shared/shared.module\";\n\nimport { InputCheckboxComponent } from \"./components/input-checkbox.component\";\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\nimport { OrganizationsRoutingModule } from \"./organizations-routing.module\";\n\n@NgModule({\n  imports: [SharedModule, OrganizationsRoutingModule],\n  declarations: [InputCheckboxComponent, SsoComponent, ScimComponent],\n})\nexport class OrganizationsModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { CoreModule } from \"@bitwarden/web-vault/app/core\";\nimport { OssRoutingModule } from \"@bitwarden/web-vault/app/oss-routing.module\";\nimport { OssModule } from \"@bitwarden/web-vault/app/oss.module\";\nimport { WildcardRoutingModule } from \"@bitwarden/web-vault/app/wildcard-routing.module\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { OrganizationsModule } from \"./organizations/organizations.module\";\nimport { DisablePersonalVaultExportPolicyComponent } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicyComponent } from \"./policies/maximum-vault-timeout.component\";\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    OssModule,\n    JslibModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    InfiniteScrollModule,\n    DragDropModule,\n    AppRoutingModule,\n    OssRoutingModule,\n    OrganizationsModule, // Must be after OssRoutingModule for competing routes to resolve properly\n    RouterModule,\n    WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n  ],\n  declarations: [\n    AppComponent,\n    DisablePersonalVaultExportPolicyComponent,\n    MaximumVaultTimeoutPolicyComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport \"bootstrap\";\nimport \"jquery\";\nimport \"popper.js\";\n\nrequire(\"@bitwarden/web-vault/scss/styles.scss\");\nrequire(\"@bitwarden/web-vault/scss/tailwind.css\");\n\nimport { AppModule } from \"./app/app.module\";\n\nif (process.env.NODE_ENV === \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"tw-text-muted bwi bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n  Mir: \"card-mir\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Mir: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 17, blocks: [5, 4, 4, 4] },\n    { cardLength: 18, blocks: [6, 4, 4, 4] },\n    { cardLength: 19, blocks: [7, 4, 4, 4] },\n  ],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { CopyClickDirective } from \"./directives/copy-click.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { LaunchClickDirective } from \"./directives/launch-click.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\nimport { UserTypePipe } from \"./pipes/user-type.pipe\";\nimport { PasswordStrengthComponent } from \"./shared/components/password-strength/password-strength.component\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n    UserTypePipe,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BitwardenToastModule,\n    BoxRowDirective,\n    CalloutComponent,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n    UserTypePipe,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe, UserTypePipe],\n})\nexport class JslibModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string | number, p2?: string | number, p3?: string | number): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ntype PropertyValueFunction<T> = (item: T) => { toString: () => string };\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform<T>(\n    items: T[],\n    searchText: string,\n    prop1?: keyof T,\n    prop2?: keyof T,\n    prop3?: keyof T\n  ): T[];\n  transform<T>(\n    items: T[],\n    searchText: string,\n    prop1?: PropertyValueFunction<T>,\n    prop2?: PropertyValueFunction<T>,\n    prop3?: PropertyValueFunction<T>\n  ): T[];\n  transform<T>(\n    items: T[],\n    searchText: string,\n    prop1?: keyof T | PropertyValueFunction<T>,\n    prop2?: keyof T | PropertyValueFunction<T>,\n    prop3?: keyof T | PropertyValueFunction<T>\n  ): T[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (prop1 != null) {\n        const propValue = typeof prop1 === \"function\" ? prop1(i) : i[prop1];\n\n        if (propValue?.toString().toLowerCase().indexOf(searchText) > -1) {\n          return true;\n        }\n      }\n\n      if (prop2 != null) {\n        const propValue = typeof prop2 === \"function\" ? prop2(i) : i[prop2];\n\n        if (propValue?.toString().toLowerCase().indexOf(searchText) > -1) {\n          return true;\n        }\n      }\n\n      if (prop3 != null) {\n        const propValue = typeof prop3 === \"function\" ? prop3(i) : i[prop3];\n\n        if (propValue?.toString().toLowerCase().indexOf(searchText) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\n\n@Pipe({\n  name: \"userType\",\n})\nexport class UserTypePipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(value?: OrganizationUserType): string {\n    if (value == null) {\n      return this.i18nService.t(\"unknown\");\n    }\n    switch (value) {\n      case OrganizationUserType.Owner:\n        return this.i18nService.t(\"owner\");\n      case OrganizationUserType.Admin:\n        return this.i18nService.t(\"admin\");\n      case OrganizationUserType.User:\n        return this.i18nService.t(\"user\");\n      case OrganizationUserType.Manager:\n        return this.i18nService.t(\"manager\");\n      case OrganizationUserType.Custom:\n        return this.i18nService.t(\"custom\");\n    }\n  }\n}\n","import { InjectionToken } from \"@angular/core\";\n\nimport {\n  AbstractMemoryStorageService,\n  AbstractStorageService,\n} from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractMemoryStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals?: boolean;\n  replaceTopModal?: boolean;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  /**\n   * @deprecated Use `dialogService.open` (in web) or `modalService.open` (in desktop/browser) instead.\n   * If replacing an existing call to this method, also remove any `@ViewChild` and `<ng-template>` associated with the\n   * existing usage.\n   */\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config: ModalConfig = {}) {\n    const { replaceTopModal = false, allowMultipleModals = false } = config;\n\n    if (this.modalCount > 0 && replaceTopModal) {\n      this.topModal.instance.close();\n    }\n\n    if (this.modalCount > 0 && !allowMultipleModals) {\n      return;\n    }\n\n    const [modalRef] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  closeAll(): void {\n    this.modalList.forEach((modal) => modal.instance.close());\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\n\nexport interface PasswordColorText {\n  color: string;\n  text: string;\n}\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() showText = false;\n  @Input() email: string;\n  @Input() name: string;\n  @Input() set password(value: string) {\n    this.updatePasswordStrength(value);\n  }\n  @Output() passwordStrengthResult = new EventEmitter<any>();\n  @Output() passwordScoreColor = new EventEmitter<PasswordColorText>();\n\n  masterPasswordScore: number;\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  private masterPasswordStrengthTimeout: any;\n\n  //used by desktop and browser to display strength text color\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  //used by desktop and browser to display strength text\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  constructor(\n    private i18nService: I18nService,\n    private passwordGenerationService: PasswordGenerationService\n  ) {}\n\n  ngOnChanges(): void {\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      this.scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n\n      switch (this.masterPasswordScore) {\n        case 4:\n          this.color = \"bg-success\";\n          this.text = this.i18nService.t(\"strong\");\n          break;\n        case 3:\n          this.color = \"bg-primary\";\n          this.text = this.i18nService.t(\"good\");\n          break;\n        case 2:\n          this.color = \"bg-warning\";\n          this.text = this.i18nService.t(\"weak\");\n          break;\n        default:\n          this.color = \"bg-danger\";\n          this.text = this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n          break;\n      }\n\n      this.setPasswordScoreText(this.color, this.text);\n    }, 300);\n  }\n\n  updatePasswordStrength(password: string) {\n    const masterPassword = password;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    this.passwordStrengthResult.emit(strengthResult);\n    this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n  }\n\n  getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.email;\n    const name = this.name;\n    const atPosition = email?.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  setPasswordScoreText(color: string, text: string) {\n    color = color.slice(3);\n    this.passwordScoreColor.emit({ color: color, text: text });\n  }\n}\n","import { Verification } from \"../../types/verification\";\n\nexport abstract class AccountApiService {\n  abstract deleteAccount(verification: Verification): Promise<void>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { ProfileResponse } from \"../../models/response/profile.response\";\nexport abstract class AvatarUpdateService {\n  avatarUpdate$ = new Observable<string | null>();\n  abstract pushUpdate(color: string): Promise<ProfileResponse | void>;\n  abstract loadColorFromState(): Promise<string | null>;\n}\n","export abstract class AnonymousHubService {\n  createHubConnection: (token: string) => void;\n  stopHubConnection: () => void;\n}\n","import { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CollectionBulkDeleteRequest } from \"../models/request/collection-bulk-delete.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { DeviceVerificationRequest } from \"../models/request/device-verification.request\";\nimport { EmailTokenRequest } from \"../models/request/email-token.request\";\nimport { EmailRequest } from \"../models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergency-access-update.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { UserApiTokenRequest } from \"../models/request/identity-token/user-api-token.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PasswordHintRequest } from \"../models/request/password-hint.request\";\nimport { PasswordRequest } from \"../models/request/password.request\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordless-create-auth.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SecretVerificationRequest } from \"../models/request/secret-verification.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { SetPasswordRequest } from \"../models/request/set-password.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { TwoFactorEmailRequest } from \"../models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/two-factor-recovery.request\";\nimport { UpdateAvatarRequest } from \"../models/request/update-avatar.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { UpdateProfileRequest } from \"../models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/update-two-factor-yubio-otp.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { ApiKeyResponse } from \"../models/response/api-key.response\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../models/response/attachment.response\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\nimport { RegisterResponse } from \"../models/response/authentication/register.response\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport {\n  CollectionAccessDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DeviceVerificationResponse } from \"../models/response/device-verification.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergency-access.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { IdentityCaptchaResponse } from \"../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/key-connector-user-key.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { PreloginResponse } from \"../models/response/prelogin.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SsoPreValidateResponse } from \"../models/response/sso-pre-validate.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { SyncResponse } from \"../models/response/sync.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../models/response/two-factor-recover.response\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/two-factor-yubi-key.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\n\n/**\n * @deprecated The `ApiService` class is deprecated and calls should be extracted into individual\n * api services. The `send` method is still allowed to be used within api services. For background\n * of this decision please read https://contributing.bitwarden.com/architecture/adr/refactor-api-service.\n */\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | UserApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putAvatar: (request: UpdateAvatarRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<RegisterResponse>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<void>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postConvertToKeyConnector: () => Promise<void>;\n  //passwordless\n  postAuthRequest: (request: PasswordlessCreateAuthRequest) => Promise<AuthRequestResponse>;\n  getAuthResponse: (id: string, accessCode: string) => Promise<AuthRequestResponse>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putPartialCipher: (id: string, request: CipherPartialRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  getCollectionAccessDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionAccessDetailsResponse>;\n  getManyCollectionsWithAccessDetails: (\n    orgId: string\n  ) => Promise<ListResponse<CollectionAccessDetailsResponse>>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteManyCollections: (request: CollectionBulkDeleteRequest) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getSync: () => Promise<SyncResponse>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n  getKnownDevice: (email: string, deviceIdentifier: string) => Promise<boolean>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<void>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n  getOrganizationExport: (organizationId: string) => Promise<OrganizationExportResponse>;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { BreachAccountResponse } from \"../models/response/breach-account.response\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { AuthRequestPushNotification } from \"../models/response/notification.response\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  accessCode: string;\n  authRequestId: string;\n\n  logIn: (\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithUserApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  authingWithPasswordless: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n  authResponsePushNotifiction: (notification: AuthRequestPushNotification) => Promise<any>;\n\n  getPushNotifcationObs$: () => Observable<any>;\n}\n","export interface MessageBase {\n  command: string;\n}\n\nexport abstract class BroadcasterService {\n  send: (message: MessageBase, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: MessageBase) => void) => void;\n  unsubscribe: (id: string) => void;\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  createWithServer: (cipher: Cipher) => Promise<any>;\n  updateWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: CipherView, b: CipherView) => number;\n  sortCiphersByLastUsedThenName: (a: CipherView, b: CipherView) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { KdfConfig } from \"../models/domain/kdf-config\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  getKeyForUserEncryption: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfConfig: KdfConfig\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfConfig: KdfConfig,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfConfig: KdfConfig\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuffer: EncArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  argon2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    iterations: number,\n    memory: number,\n    parallelism: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { Decryptable } from \"../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../interfaces/initializer-metadata.interface\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class EncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract encryptToBytes: (\n    plainValue: ArrayBuffer,\n    key?: SymmetricCryptoKey\n  ) => Promise<EncArrayBuffer>;\n  abstract decryptToUtf8: (encString: EncString, key: SymmetricCryptoKey) => Promise<string>;\n  abstract decryptToBytes: (encThing: IEncrypted, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  abstract resolveLegacyKey: (key: SymmetricCryptoKey, encThing: IEncrypted) => SymmetricCryptoKey;\n  abstract decryptItems: <T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ) => Promise<T[]>;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n  isCloud: () => boolean;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport abstract class EventCollectionService {\n  collect: (\n    eventType: EventType,\n    cipherId?: string,\n    uploadImmediately?: boolean,\n    organizationId?: string\n  ) => Promise<any>;\n}\n","export abstract class EventUploadService {\n  uploadEvents: (userId?: string) => Promise<void>;\n}\n","import { EventView } from \"../models/view/event.view\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { Folder } from \"../../models/domain/folder\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { FolderView } from \"../../models/view/folder.view\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  getAllFromState: () => Promise<Folder[]>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getFromState: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string | number, p2?: string | number, p3?: string | number) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n}\n","export abstract class LoginService {\n  getEmail: () => string;\n  getRememberEmail: () => boolean;\n  setEmail: (value: string) => void;\n  setRememberEmail: (value: boolean) => void;\n  clearValues: () => void;\n  saveEmailSettings: () => Promise<void>;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { ListResponse } from \"../../models/response/list.response\";\n\nimport {\n  OrganizationUserAcceptRequest,\n  OrganizationUserBulkConfirmRequest,\n  OrganizationUserConfirmRequest,\n  OrganizationUserInviteRequest,\n  OrganizationUserResetPasswordEnrollmentRequest,\n  OrganizationUserResetPasswordRequest,\n  OrganizationUserUpdateGroupsRequest,\n  OrganizationUserUpdateRequest,\n} from \"./requests\";\nimport {\n  OrganizationUserBulkPublicKeyResponse,\n  OrganizationUserBulkResponse,\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"./responses\";\n\n/**\n * Service for interacting with Organization Users via the API\n */\nexport abstract class OrganizationUserService {\n  /**\n   * Retrieve a single organization user by Id\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   * @param options - Options for the request\n   */\n  abstract getOrganizationUser(\n    organizationId: string,\n    id: string,\n    options?: {\n      includeGroups?: boolean;\n    }\n  ): Promise<OrganizationUserDetailsResponse>;\n\n  /**\n   * Retrieve a list of groups Ids the specified organization user belongs to\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]>;\n\n  /**\n   * Retrieve a list of all users that belong to the specified organization\n   * @param organizationId - Identifier for the organization\n   * @param options - Options for the request\n   */\n  abstract getAllUsers(\n    organizationId: string,\n    options?: {\n      includeCollections?: boolean;\n      includeGroups?: boolean;\n    }\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n\n  /**\n   * Retrieve reset password details for the specified organization user\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse>;\n\n  /**\n   * Create new organization user invite(s) for the specified organization\n   * @param organizationId - Identifier for the organization\n   * @param request - New user invitation request details\n   */\n  abstract postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<void>;\n\n  /**\n   * Re-invite the specified organization user\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract postOrganizationUserReinvite(organizationId: string, id: string): Promise<any>;\n\n  /**\n   * Re-invite many organization users for the specified organization\n   * @param organizationId - Identifier for the organization\n   * @param ids - A list of organization user identifiers\n   * @return List of user ids, including both those that were successfully re-invited and those that had an error\n   */\n  abstract postManyOrganizationUserReinvite(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Accept an organization user invitation\n   * @param organizationId - Identifier for the organization to accept\n   * @param id - Organization user identifier\n   * @param request - Request details for accepting the invitation\n   */\n  abstract postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<void>;\n\n  /**\n   * Confirm an organization user that has accepted their invitation\n   * @param organizationId - Identifier for the organization to confirm\n   * @param id - Organization user identifier\n   * @param request - Request details for confirming the user\n   */\n  abstract postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<void>;\n\n  /**\n   * Retrieve a list of the specified users' public keys\n   * @param organizationId - Identifier for the organization to accept\n   * @param ids - A list of organization user identifiers to retrieve public keys for\n   */\n  abstract postOrganizationUsersPublicKey(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n\n  /**\n   * Confirm many organization users that have accepted their invitations\n   * @param organizationId - Identifier for the organization to confirm users\n   * @param request - Bulk request details for confirming the user\n   */\n  abstract postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Update an organization users\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param request - Request details for updating the user\n   */\n  abstract putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<void>;\n\n  /**\n   * Update an organization user's groups\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param groupIds - List of group ids to associate the user with\n   */\n  abstract putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    groupIds: OrganizationUserUpdateGroupsRequest\n  ): Promise<void>;\n\n  /**\n   * Update an organization user's reset password enrollment\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param userId - Organization user identifier\n   * @param request - Reset password enrollment details\n   */\n  abstract putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void>;\n\n  /**\n   * Reset an organization user's password\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param request - Reset password details\n   */\n  abstract putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<void>;\n\n  /**\n   * Delete an organization user\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract deleteOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Delete many organization users\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to delete\n   * @return List of user ids, including both those that were successfully deleted and those that had an error\n   */\n  abstract deleteManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Revoke an organization user's access to the organization\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract revokeOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Revoke many organization users' access to the organization\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to revoke\n   * @return List of user ids, including both those that were successfully revoked and those that had an error\n   */\n  abstract revokeManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Restore an organization user's access to the organization\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract restoreOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Restore many organization users' access to the organization\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to restore\n   * @return List of user ids, including both those that were successfully restored and those that had an error\n   */\n  abstract restoreManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organization-sso.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { ApiKeyResponse } from \"../../models/response/api-key.response\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organization-sso.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\n\nexport class OrganizationApiServiceAbstraction {\n  get: (id: string) => Promise<OrganizationResponse>;\n  getBilling: (id: string) => Promise<BillingResponse>;\n  getSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getLicense: (id: string, installationId: string) => Promise<unknown>;\n  getAutoEnrollStatus: (identifier: string) => Promise<OrganizationAutoEnrollStatusResponse>;\n  create: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  createLicense: (data: FormData) => Promise<OrganizationResponse>;\n  save: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n  updatePayment: (id: string, request: PaymentRequest) => Promise<void>;\n  upgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n  updateSubscription: (id: string, request: OrganizationSubscriptionUpdateRequest) => Promise<void>;\n  updateSeats: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  updateStorage: (id: string, request: StorageRequest) => Promise<PaymentResponse>;\n  verifyBank: (id: string, request: VerifyBankRequest) => Promise<void>;\n  cancel: (id: string) => Promise<void>;\n  reinstate: (id: string) => Promise<void>;\n  leave: (id: string) => Promise<void>;\n  delete: (id: string, request: SecretVerificationRequest) => Promise<void>;\n  updateLicense: (id: string, data: FormData) => Promise<void>;\n  importDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<void>;\n  getOrCreateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getApiKeyInformation: (\n    id: string,\n    organizationApiKeyType?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  rotateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  updateTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<void>;\n  getKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  updateKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n  getSso: (id: string) => Promise<OrganizationSsoResponse>;\n  updateSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;\n  selfHostedSyncLicense: (id: string) => Promise<void>;\n}\n","import { map, Observable } from \"rxjs\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { I18nService } from \"../i18n.service\";\n\nexport function canAccessVaultTab(org: Organization): boolean {\n  return org.canViewAssignedCollections || org.canViewAllCollections || org.canManageGroups;\n}\n\nexport function canAccessSettingsTab(org: Organization): boolean {\n  return (\n    org.isOwner ||\n    org.canManagePolicies ||\n    org.canManageSso ||\n    org.canManageScim ||\n    org.canAccessImportExport\n  );\n}\n\nexport function canAccessMembersTab(org: Organization): boolean {\n  return org.canManageUsers || org.canManageUsersPassword;\n}\n\nexport function canAccessGroupsTab(org: Organization): boolean {\n  return org.canManageGroups;\n}\n\nexport function canAccessReportingTab(org: Organization): boolean {\n  return org.canAccessReports || org.canAccessEventLogs;\n}\n\nexport function canAccessBillingTab(org: Organization): boolean {\n  return org.canManageBilling;\n}\n\nexport function canAccessOrgAdmin(org: Organization): boolean {\n  return (\n    canAccessMembersTab(org) ||\n    canAccessGroupsTab(org) ||\n    canAccessReportingTab(org) ||\n    canAccessBillingTab(org) ||\n    canAccessSettingsTab(org) ||\n    canAccessVaultTab(org)\n  );\n}\n\nexport function getOrganizationById(id: string) {\n  return map<Organization[], Organization | undefined>((orgs) => orgs.find((o) => o.id === id));\n}\n\nexport function canAccessAdmin(i18nService: I18nService) {\n  return map<Organization[], Organization[]>((orgs) =>\n    orgs.filter(canAccessOrgAdmin).sort(Utils.getSortFunction(i18nService, \"name\"))\n  );\n}\n\nexport function isNotProviderUser(org: Organization): boolean {\n  return !org.isProviderUser;\n}\n\nexport abstract class OrganizationService {\n  organizations$: Observable<Organization[]>;\n\n  get: (id: string) => Organization;\n  getByIdentifier: (identifier: string) => Organization;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the organization\n   */\n  getFromState: (id: string) => Promise<Organization>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: () => boolean;\n}\n\nexport abstract class InternalOrganizationService extends OrganizationService {\n  replace: (organizations: { [id: string]: OrganizationData }) => Promise<void>;\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { PasswordGeneratorOptions } from \"../models/domain/password-generator-options\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/password-generator-policy-options\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: PasswordGeneratorOptions) => Promise<string>;\n  generatePassphrase: (options: PasswordGeneratorOptions) => Promise<string>;\n  getOptions: () => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: PasswordGeneratorOptions\n  ) => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: PasswordGeneratorOptions) => Promise<void>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<void>;\n  clear: (userId?: string) => Promise<void>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) => void;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  getApplicationVersionNumber: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean,\n    target?: string\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiServiceAbstraction {\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport abstract class PolicyService {\n  policies$: Observable<Policy[]>;\n  masterPasswordPolicyOptions$: (policies?: Policy[]) => Observable<MasterPasswordPolicyOptions>;\n  policyAppliesToActiveUser$: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean\n  ) => Observable<boolean>;\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n\nexport abstract class InternalPolicyService extends PolicyService {\n  upsert: (policy: PolicyData) => Promise<any>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<void>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { CipherView } from \"../models/view/cipher.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport abstract class SettingsService {\n  settings$: Observable<AccountSettingsSettings>;\n\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { LocalData } from \"../models/data/local.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport { Account, AccountSettingsSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { KdfConfig } from \"../models/domain/kdf-config\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts$: Observable<{ [userId: string]: T }>;\n  activeAccount$: Observable<string>;\n  activeAccountUnlocked$: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDuckDuckGoSharedKey: (options?: StorageOptions) => Promise<string>;\n  setDuckDuckGoSharedKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableDuckDuckGoBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableDuckDuckGoBrowserIntegration: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfConfig: (options?: StorageOptions) => Promise<KdfConfig>;\n  setKdfConfig: (kdfConfig: KdfConfig, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<{ [cipherId: string]: LocalData }>;\n  setLocalData: (\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  getSettings: (options?: StorageOptions) => Promise<AccountSettingsSettings>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  setSettings: (value: AccountSettingsSettings, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  getServerConfig: (options?: StorageOptions) => Promise<ServerConfigData>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  setServerConfig: (value: ServerConfigData, options?: StorageOptions) => Promise<void>;\n\n  getAvatarColor: (options?: StorageOptions) => Promise<string | null | undefined>;\n  setAvatarColor: (value: string, options?: StorageOptions) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { MemoryStorageOptions, StorageOptions } from \"../models/domain/storage-options\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n\nexport abstract class AbstractMemoryStorageService extends AbstractStorageService {\n  // Used to identify the service in the session sync decorator framework\n  static readonly TYPE = \"MemoryStorageService\";\n  readonly type = AbstractMemoryStorageService.TYPE;\n\n  abstract get<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n  abstract getBypassCache<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notification.response\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { Verification } from \"../../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","export abstract class ValidationService {\n  showError: (data: any) => string[];\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n}\n","export abstract class VaultTimeoutSettingsService {\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: (userId?: string) => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  UserApi = 2,\n  Passwordless = 3,\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { KdfConfig } from \"../models/domain/kdf-config\";\n\nexport enum KdfType {\n  PBKDF2_SHA256 = 0,\n  Argon2id = 1,\n}\n\nexport const DEFAULT_ARGON2_MEMORY = 64;\nexport const DEFAULT_ARGON2_PARALLELISM = 4;\nexport const DEFAULT_ARGON2_ITERATIONS = 3;\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_PBKDF2_ITERATIONS = 600000;\nexport const DEFAULT_KDF_CONFIG = new KdfConfig(DEFAULT_PBKDF2_ITERATIONS);\nexport const SEND_KDF_ITERATIONS = 100000;\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","export enum OrganizationApiKeyType {\n  Default = 0,\n  BillingSync = 1,\n  Scim = 2,\n}\n","export enum OrganizationConnectionType {\n  CloudBillingSync = 1,\n  Scim = 2,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1,\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","export enum PaymentMethodType {\n  Card = 0,\n  BankAccount = 1,\n  PayPal = 2,\n  BitPay = 3,\n  Credit = 4,\n  WireTransfer = 5,\n  AppleInApp = 6,\n  GoogleInApp = 7,\n  Check = 8,\n}\n","export enum PlanType {\n  Free = 0,\n  FamiliesAnnually2019 = 1,\n  TeamsMonthly2019 = 2,\n  TeamsAnnually2019 = 3,\n  EnterpriseMonthly2019 = 4,\n  EnterpriseAnnually2019 = 5,\n  Custom = 6,\n  FamiliesAnnually = 7,\n  TeamsMonthly = 8,\n  TeamsAnnually = 9,\n  EnterpriseMonthly = 10,\n  EnterpriseAnnually = 11,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedFlags = {\n  multithreadDecryption: boolean;\n};\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedDevFlags = {};\n\nfunction getFlags<T>(envFlags: string | T): T {\n  if (typeof envFlags === \"string\") {\n    return JSON.parse(envFlags) as T;\n  } else {\n    return envFlags as T;\n  }\n}\n\n/**\n * Gets the value of a feature flag from environment.\n * All flags default to \"on\" (true).\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the feature flag to check\n * @returns The value of the flag\n */\nexport function flagEnabled<Flags extends SharedFlags>(flag: keyof Flags): boolean {\n  const flags = getFlags<Flags>(process.env.FLAGS);\n  return flags[flag] == null || !!flags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n */\nexport function devFlagEnabled<DevFlags extends SharedDevFlags>(flag: keyof DevFlags): boolean {\n  if (process.env.ENV !== \"development\") {\n    return false;\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag] == null || !!devFlags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n * @throws Error if the flag is not enabled\n */\nexport function devFlagValue<DevFlags extends SharedDevFlags>(\n  flag: keyof DevFlags\n): DevFlags[keyof DevFlags] {\n  if (!devFlagEnabled(flag)) {\n    throw new Error(`This method should not be called, it is protected by a disabled dev flag.`);\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag];\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/item.view\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/tree-node\";\n\nexport class ServiceUtils {\n  /**\n   * Recursively adds a node to nodeTree\n   * @param {TreeNode<ITreeNodeObject>[]} nodeTree - An array of TreeNodes that the node will be added to\n   * @param {number} partIndex - Index of the `parts` array that is being processed\n   * @param {string[]} parts - Array of strings that represent the path to the `obj` node\n   * @param {ITreeNodeObject} obj - The node to be added to the tree\n   * @param {ITreeNodeObject} parent - The parent node of the `obj` node\n   * @param {string} delimiter - The delimiter used to split the path string, will be used to combine the path for missing nodes\n   */\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: TreeNode<ITreeNodeObject> | undefined,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end: boolean = partIndex === parts.length - 1;\n    const partName: string = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== partName) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node exists with the same name as the node being added\n        nodeTree.push(new TreeNode(obj, parent, partName));\n        return;\n      }\n      // Move down the tree to the next level\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i],\n        delimiter\n      );\n      return;\n    }\n\n    // If there's no node here with the same name...\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      // And we're at the end of the path given, add the node\n      if (end) {\n        nodeTree.push(new TreeNode(obj, parent, partName));\n        return;\n      }\n      // And we're not at the end of the path, combine the current name with the next name\n      // 1, *1.2, 1.2.1 becomes\n      // 1, *1.2/1.2.1\n      const newPartName = partName + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  /**\n   * Searches a tree for a node with a matching `id`\n   * @param {TreeNode<ITreeNodeObject>} nodeTree - A single TreeNode branch that will be searched\n   * @param {string} id - The id of the node to be found\n   * @returns {TreeNode<ITreeNodeObject>} The node with a matching `id`\n   */\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>,\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    if (nodeTree.node.id === id) {\n      return nodeTree;\n    }\n    for (let i = 0; i < nodeTree.children.length; i++) {\n      if (nodeTree.children[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree.children[i], id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Searches an array of tree nodes for a node with a matching `id`\n   * @param {TreeNode<ITreeNodeObject>} nodeTree - An array of TreeNode branches that will be searched\n   * @param {string} id - The id of the node to be found\n   * @returns {TreeNode<ITreeNodeObject>} The node with a matching `id`\n   */\n  static getTreeNodeObjectFromList(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObjectFromList(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","/* eslint-disable no-useless-escape */\nimport { getHostname, parse } from \"tldts\";\nimport { Merge } from \"type-fest\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n  getEncryptService: () => EncryptService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n  static readonly validHosts: string[] = [\"localhost\"];\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (buffer == null) {\n      return null;\n    }\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"file:\")) {\n      return null;\n    }\n\n    // Does uriString contain invalid characters\n    // TODO Needs to possibly be extended, although '!' is a reserved character\n    if (uriString.indexOf(\"!\") > 0) {\n      return null;\n    }\n\n    try {\n      const hostname = getHostname(uriString, { validHosts: this.validHosts });\n      if (hostname != null) {\n        return hostname;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    try {\n      const parseResult = parse(uriString, { validHosts: this.validHosts });\n      if (parseResult != null && parseResult.hostname != null) {\n        if (parseResult.hostname === \"localhost\" || parseResult.isIp) {\n          return parseResult.hostname;\n        }\n\n        if (parseResult.domain != null) {\n          return parseResult.domain;\n        }\n        return null;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction<T>(\n    i18nService: I18nService,\n    prop: { [K in keyof T]: T[K] extends string ? K : never }[keyof T]\n  ): (a: T, b: T) => number {\n    return (a, b) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      // The `as unknown as string` here is unfortunate because typescript doesn't property understand that the return of T[prop] will be a string\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop] as unknown as string, b[prop] as unknown as string)\n        : (a[prop] as unknown as string).localeCompare(b[prop] as unknown as string);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static isPromise(obj: any): obj is Promise<unknown> {\n    return (\n      obj != undefined && typeof obj[\"then\"] === \"function\" && typeof obj[\"catch\"] === \"function\"\n    );\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (this.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n   * https://stackoverflow.com/a/3943023/6869691\n   *\n   * @param {string} bgColor\n   * @param {number} [threshold] see stackoverflow link above\n   * @param {boolean} [svgTextFill]\n   * Indicates if this method is performed on an SVG <text> 'fill' attribute (e.g. <text fill=\"black\"></text>).\n   * This check is necessary because the '!important' tag cannot be used in a 'fill' attribute.\n   */\n  static pickTextColorBasedOnBgColor(bgColor: string, threshold = 186, svgTextFill = false) {\n    const bgColorHexNums = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(bgColorHexNums.substring(0, 2), 16); // hexToR\n    const g = parseInt(bgColorHexNums.substring(2, 4), 16); // hexToG\n    const b = parseInt(bgColorHexNums.substring(4, 6), 16); // hexToB\n    const blackColor = svgTextFill ? \"black\" : \"black !important\";\n    const whiteColor = svgTextFill ? \"white\" : \"white !important\";\n    return r * 0.299 + g * 0.587 + b * 0.114 > threshold ? blackColor : whiteColor;\n  }\n\n  static stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  /**\n   * @throws Will throw an error if the ContainerService has not been attached to the window object\n   */\n  static getContainerService(): BitwardenContainerService {\n    if (this.global.bitwardenContainerService == null) {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n    return this.global.bitwardenContainerService;\n  }\n\n  static validateHexColor(color: string) {\n    return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(color);\n  }\n\n  /**\n   * Converts map to a Record<string, V> with the same data. Inverse of recordToMap\n   * Useful in toJSON methods, since Maps are not serializable\n   * @param map\n   * @returns\n   */\n  static mapToRecord<K extends string | number, V>(map: Map<K, V>): Record<string, V> {\n    if (map == null) {\n      return null;\n    }\n    if (!(map instanceof Map)) {\n      return map;\n    }\n    return Object.fromEntries(map);\n  }\n\n  /**\n   * Converts record to a Map<string, V> with the same data. Inverse of mapToRecord\n   * Useful in fromJSON methods, since Maps are not serializable\n   *\n   * Warning: If the record has string keys that are numbers, they will be converted to numbers in the map\n   * @param record\n   * @returns\n   */\n  static recordToMap<K extends string | number, V>(record: Record<K, V>): Map<K, V> {\n    if (record == null) {\n      return null;\n    } else if (record instanceof Map) {\n      return record;\n    }\n\n    const entries = Object.entries(record);\n    if (entries.length === 0) {\n      return new Map();\n    }\n\n    if (isNaN(Number(entries[0][0]))) {\n      return new Map(entries) as Map<K, V>;\n    } else {\n      return new Map(entries.map((e) => [Number(e[0]), e[1]])) as Map<K, V>;\n    }\n  }\n\n  /** Applies Object.assign, but converts the type nicely using Type-Fest Merge<Destination, Source> */\n  static merge<Destination, Source>(\n    destination: Destination,\n    source: Source\n  ): Merge<Destination, Source> {\n    return Object.assign(destination, source) as unknown as Merge<Destination, Source>;\n  }\n\n  /**\n   * encodeURIComponent escapes all characters except the following:\n   * alphabetic, decimal digits, - _ . ! ~ * ' ( )\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent#encoding_for_rfc3986\n   */\n  static encodeRFC3986URIComponent(str: string): string {\n    return encodeURIComponent(str).replace(\n      /[!'()*]/g,\n      (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n    );\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  static delay(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (typeof window !== \"undefined\") {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nimport { LoginUriApi } from \"./login-uri.api\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/base.response\";\nimport { SsoConfigView } from \"../view/sso-config.view\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: string;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { AttachmentResponse } from \"../response/attachment.response\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/card.api\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipher.response\";\n\nimport { AttachmentData } from \"./attachment.data\";\nimport { CardData } from \"./card.data\";\nimport { FieldData } from \"./field.data\";\nimport { IdentityData } from \"./identity.data\";\nimport { LoginData } from \"./login.data\";\nimport { PasswordHistoryData } from \"./password-history.data\";\nimport { SecureNoteData } from \"./secure-note.data\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.creationDate = response.creationDate;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collection.response\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/field.api\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { FolderResponse } from \"../response/folder.response\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { IdentityApi } from \"../api/identity.api\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/login-uri.api\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/login.api\";\n\nimport { LoginUriData } from \"./login-uri.data\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/password-history.response\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policy.response\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profile-provider.response\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { SendFileApi } from \"../api/send-file.api\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/send-text.api\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/send.response\";\n\nimport { SendFileData } from \"./send-file.data\";\nimport { SendTextData } from \"./send-text.data\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport {\n  ServerConfigResponse,\n  ThirdPartyServerConfigResponse,\n  EnvironmentServerConfigResponse,\n} from \"../response/server-config.response\";\n\nexport class ServerConfigData {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: string;\n\n  constructor(serverConfigResponse: Partial<ServerConfigResponse>) {\n    this.version = serverConfigResponse?.version;\n    this.gitHash = serverConfigResponse?.gitHash;\n    this.server = serverConfigResponse?.server\n      ? new ThirdPartyServerConfigData(serverConfigResponse.server)\n      : null;\n    this.utcDate = new Date().toISOString();\n    this.environment = serverConfigResponse?.environment\n      ? new EnvironmentServerConfigData(serverConfigResponse.environment)\n      : null;\n  }\n\n  static fromJSON(obj: Jsonify<ServerConfigData>): ServerConfigData {\n    return Object.assign(new ServerConfigData({}), obj, {\n      server: obj?.server ? ThirdPartyServerConfigData.fromJSON(obj.server) : null,\n      environment: obj?.environment ? EnvironmentServerConfigData.fromJSON(obj.environment) : null,\n    });\n  }\n}\n\nexport class ThirdPartyServerConfigData {\n  name: string;\n  url: string;\n\n  constructor(response: Partial<ThirdPartyServerConfigResponse>) {\n    this.name = response.name;\n    this.url = response.url;\n  }\n\n  static fromJSON(obj: Jsonify<ThirdPartyServerConfigData>): ThirdPartyServerConfigData {\n    return Object.assign(new ThirdPartyServerConfigData({}), obj);\n  }\n}\n\nexport class EnvironmentServerConfigData {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(response: Partial<EnvironmentServerConfigResponse>) {\n    this.vault = response.vault;\n    this.api = response.api;\n    this.identity = response.identity;\n    this.notifications = response.notifications;\n    this.sso = response.sso;\n  }\n\n  static fromJSON(obj: Jsonify<EnvironmentServerConfigData>): EnvironmentServerConfigData {\n    return Object.assign(new EnvironmentServerConfigData({}), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { CollectionData } from \"../data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\nimport { EventData } from \"../data/event.data\";\nimport { FolderData } from \"../data/folder.data\";\nimport { OrganizationData } from \"../data/organization.data\";\nimport { PolicyData } from \"../data/policy.data\";\nimport { ProviderData } from \"../data/provider.data\";\nimport { SendData } from \"../data/send.data\";\nimport { ServerConfigData } from \"../data/server-config.data\";\nimport { CipherView } from \"../view/cipher.view\";\nimport { CollectionView } from \"../view/collection.view\";\nimport { SendView } from \"../view/send.view\";\n\nimport { EncString } from \"./enc-string\";\nimport { EnvironmentUrls } from \"./environment-urls\";\nimport { GeneratedPasswordHistory } from \"./generated-password-history\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n\n  toJSON() {\n    return {\n      encrypted: this.encrypted,\n      decrypted:\n        this.decrypted instanceof ArrayBuffer\n          ? Utils.fromBufferToByteString(this.decrypted)\n          : this.decrypted,\n    };\n  }\n\n  static fromJSON<TEncrypted, TDecrypted>(\n    obj: { encrypted?: Jsonify<TEncrypted>; decrypted?: string | Jsonify<TDecrypted> },\n    decryptedFromJson?: (decObj: Jsonify<TDecrypted> | string) => TDecrypted,\n    encryptedFromJson?: (encObj: Jsonify<TEncrypted>) => TEncrypted\n  ) {\n    if (obj == null) {\n      return null;\n    }\n\n    const pair = new EncryptionPair<TEncrypted, TDecrypted>();\n    if (obj?.encrypted != null) {\n      pair.encrypted = encryptedFromJson\n        ? encryptedFromJson(obj.encrypted)\n        : (obj.encrypted as TEncrypted);\n    }\n    if (obj?.decrypted != null) {\n      pair.decrypted = decryptedFromJson\n        ? decryptedFromJson(obj.decrypted)\n        : (obj.decrypted as TDecrypted);\n    }\n    return pair;\n  }\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Record<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Record<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n\n  toJSON() {\n    return Utils.merge(this, {\n      publicKey: Utils.fromBufferToByteString(this.publicKey),\n    });\n  }\n\n  static fromJSON(obj: DeepJsonify<AccountKeys>): AccountKeys {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(\n      new AccountKeys(),\n      { cryptoMasterKey: SymmetricCryptoKey.fromJSON(obj?.cryptoMasterKey) },\n      {\n        cryptoSymmetricKey: EncryptionPair.fromJSON(\n          obj?.cryptoSymmetricKey,\n          SymmetricCryptoKey.fromJSON\n        ),\n      },\n      { organizationKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.organizationKeys) },\n      { providerKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.providerKeys) },\n      {\n        privateKey: EncryptionPair.fromJSON<string, ArrayBuffer>(\n          obj?.privateKey,\n          (decObj: string) => Utils.fromByteStringToArray(decObj).buffer\n        ),\n      },\n      {\n        publicKey: Utils.fromByteStringToArray(obj?.publicKey)?.buffer,\n      }\n    );\n  }\n\n  static initRecordEncryptionPairsFromJSON(obj: any) {\n    return EncryptionPair.fromJSON(obj, (decObj: any) => {\n      if (obj == null) {\n        return null;\n      }\n\n      const record: Record<string, SymmetricCryptoKey> = {};\n      for (const id in decObj) {\n        record[id] = SymmetricCryptoKey.fromJSON(decObj[id]);\n      }\n      return record;\n    });\n  }\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  name?: string;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfMemory?: number;\n  kdfParallelism?: number;\n  kdfType?: KdfType;\n\n  static fromJSON(obj: Jsonify<AccountProfile>): AccountProfile {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountProfile(), obj);\n  }\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: AccountSettingsSettings; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n  serverConfig?: ServerConfigData;\n  avatarColor?: string;\n\n  static fromJSON(obj: Jsonify<AccountSettings>): AccountSettings {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountSettings(), obj, {\n      environmentUrls: EnvironmentUrls.fromJSON(obj?.environmentUrls),\n      pinProtected: EncryptionPair.fromJSON<string, EncString>(\n        obj?.pinProtected,\n        EncString.fromJSON\n      ),\n      serverConfig: ServerConfigData.fromJSON(obj?.serverConfig),\n    });\n  }\n}\n\nexport type AccountSettingsSettings = {\n  equivalentDomains?: string[][];\n};\n\nexport class AccountTokens {\n  accessToken?: string;\n  refreshToken?: string;\n  securityStamp?: string;\n\n  static fromJSON(obj: Jsonify<AccountTokens>): AccountTokens {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountTokens(), obj);\n  }\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n\n  static fromJSON(json: Jsonify<Account>): Account {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Account({}), json, {\n      keys: AccountKeys.fromJSON(json?.keys),\n      profile: AccountProfile.fromJSON(json?.profile),\n      settings: AccountSettings.fromJSON(json?.settings),\n      tokens: AccountTokens.fromJSON(json?.tokens),\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachment.data\";\nimport { AttachmentView } from \"../view/attachment.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      view.key = await this.decryptAttachmentKey(orgId, encKey);\n    }\n\n    return view;\n  }\n\n  private async decryptAttachmentKey(orgId: string, encKey?: SymmetricCryptoKey) {\n    try {\n      if (encKey == null) {\n        encKey = await this.getKeyForDecryption(orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      const decValue = await encryptService.decryptToBytes(this.key, encKey);\n      return new SymmetricCryptoKey(decValue);\n    } catch (e) {\n      // TODO: error?\n    }\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Attachment>>): Attachment {\n    if (obj == null) {\n      return null;\n    }\n\n    const key = EncString.fromJSON(obj.key);\n    const fileName = EncString.fromJSON(obj.fileName);\n\n    return Object.assign(new Attachment(), obj, {\n      key,\n      fileName,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardData } from \"../data/card.data\";\nimport { CardView } from \"../view/card.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Card>>): Card {\n    if (obj == null) {\n      return null;\n    }\n\n    const cardholderName = EncString.fromJSON(obj.cardholderName);\n    const brand = EncString.fromJSON(obj.brand);\n    const number = EncString.fromJSON(obj.number);\n    const expMonth = EncString.fromJSON(obj.expMonth);\n    const expYear = EncString.fromJSON(obj.expYear);\n    const code = EncString.fromJSON(obj.code);\n    return Object.assign(new Card(), obj, {\n      cardholderName,\n      brand,\n      number,\n      expMonth,\n      expYear,\n      code,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerKey } from \"../../services/cryptography/initializer-key\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { LocalData } from \"../data/local.data\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secure-note\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Cipher extends Domain implements Decryptable<CipherView> {\n  readonly initializerKey = InitializerKey.Cipher;\n\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: LocalData;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  creationDate: Date;\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: LocalData = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.creationDate = this.creationDate != null ? this.creationDate.toISOString() : null;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n\n  static fromJSON(obj: Jsonify<Cipher>) {\n    if (obj == null) {\n      return null;\n    }\n\n    const domain = new Cipher();\n    const name = EncString.fromJSON(obj.name);\n    const notes = EncString.fromJSON(obj.notes);\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => Attachment.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => Field.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => Password.fromJSON(ph));\n\n    Object.assign(domain, obj, {\n      name,\n      notes,\n      revisionDate,\n      deletedDate,\n      attachments,\n      fields,\n      passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        domain.card = Card.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        domain.login = Login.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return domain;\n  }\n}\n","import { CollectionData } from \"../data/collection.data\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    if (obj == null) {\n      return null;\n    }\n\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = encType + \".\" + iv + \"|\" + data;\n    } else {\n      this.encryptedString = encType + \".\" + data;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString += \"|\" + mac;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    try {\n      if (key == null) {\n        key = await this.getKeyForDecryption(orgId);\n      }\n      if (key == null) {\n        throw new Error(\"No key to decrypt EncString with orgId \" + orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      this.decryptedValue = await encryptService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nexport class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n\n  static fromJSON(obj: Jsonify<EnvironmentUrls>): EnvironmentUrls {\n    return Object.assign(new EnvironmentUrls(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/field.data\";\nimport { FieldView } from \"../view/field.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Field>>): Field {\n    if (obj == null) {\n      return null;\n    }\n\n    const name = EncString.fromJSON(obj.name);\n    const value = EncString.fromJSON(obj.value);\n\n    return Object.assign(new Field(), obj, {\n      name,\n      value,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FolderData } from \"../data/folder.data\";\nimport { FolderView } from \"../view/folder.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n\n  static fromJSON(obj: Jsonify<Folder>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new Folder(), obj, { name: EncString.fromJSON(obj.name), revisionDate });\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityData } from \"../data/identity.data\";\nimport { IdentityView } from \"../view/identity.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n\n  static fromJSON(obj: Jsonify<Identity>): Identity {\n    if (obj == null) {\n      return null;\n    }\n\n    const title = EncString.fromJSON(obj.title);\n    const firstName = EncString.fromJSON(obj.firstName);\n    const middleName = EncString.fromJSON(obj.middleName);\n    const lastName = EncString.fromJSON(obj.lastName);\n    const address1 = EncString.fromJSON(obj.address1);\n    const address2 = EncString.fromJSON(obj.address2);\n    const address3 = EncString.fromJSON(obj.address3);\n    const city = EncString.fromJSON(obj.city);\n    const state = EncString.fromJSON(obj.state);\n    const postalCode = EncString.fromJSON(obj.postalCode);\n    const country = EncString.fromJSON(obj.country);\n    const company = EncString.fromJSON(obj.company);\n    const email = EncString.fromJSON(obj.email);\n    const phone = EncString.fromJSON(obj.phone);\n    const ssn = EncString.fromJSON(obj.ssn);\n    const username = EncString.fromJSON(obj.username);\n    const passportNumber = EncString.fromJSON(obj.passportNumber);\n    const licenseNumber = EncString.fromJSON(obj.licenseNumber);\n\n    return Object.assign(new Identity(), obj, {\n      title,\n      firstName,\n      middleName,\n      lastName,\n      address1,\n      address2,\n      address3,\n      city,\n      state,\n      postalCode,\n      country,\n      company,\n      email,\n      phone,\n      ssn,\n      username,\n      passportNumber,\n      licenseNumber,\n    });\n  }\n}\n","export class KdfConfig {\n  iterations: number;\n  memory?: number;\n  parallelism?: number;\n\n  constructor(iterations: number, memory?: number, parallelism?: number) {\n    this.iterations = iterations;\n    this.memory = memory;\n    this.parallelism = parallelism;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/login-uri.data\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n\n  static fromJSON(obj: Jsonify<LoginUri>): LoginUri {\n    if (obj == null) {\n      return null;\n    }\n\n    const uri = EncString.fromJSON(obj.uri);\n    return Object.assign(new LoginUri(), obj, {\n      uri,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginData } from \"../data/login.data\";\nimport { LoginView } from \"../view/login.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { LoginUri } from \"./login-uri\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Login>>): Login {\n    if (obj == null) {\n      return null;\n    }\n\n    const username = EncString.fromJSON(obj.username);\n    const password = EncString.fromJSON(obj.password);\n    const totp = EncString.fromJSON(obj.totp);\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUri.fromJSON(uri));\n\n    return Object.assign(new Login(), obj, {\n      username,\n      password,\n      totp,\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { OrganizationData } from \"../data/organization.data\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useCustomPermissions = obj.useCustomPermissions;\n    this.useResetPassword = obj.useResetPassword;\n    this.useSecretsManager = obj.useSecretsManager;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return (this.isAdmin || this.permissions.accessEventLogs) && this.useEvents;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return this.isManager || this.permissions.createNewCollections;\n  }\n\n  get canEditAnyCollection() {\n    return this.isAdmin || this.permissions.editAnyCollection;\n  }\n\n  get canUseAdminCollections() {\n    return this.canEditAnyCollection;\n  }\n\n  get canDeleteAnyCollection() {\n    return this.isAdmin || this.permissions.deleteAnyCollection;\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return this.isManager || this.permissions.editAssignedCollections;\n  }\n\n  get canDeleteAssignedCollections() {\n    return this.isManager || this.permissions.deleteAssignedCollections;\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return (this.isAdmin || this.permissions.manageGroups) && this.useGroups;\n  }\n\n  get canManageSso() {\n    return (this.isAdmin || this.permissions.manageSso) && this.useSso;\n  }\n\n  get canManageScim() {\n    return (this.isAdmin || this.permissions.manageScim) && this.useScim;\n  }\n\n  get canManagePolicies() {\n    return (this.isAdmin || this.permissions.managePolicies) && this.usePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n\n  get canAccessSecretsManager() {\n    return this.useSecretsManager;\n  }\n\n  static fromJSON(json: Jsonify<Organization>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Organization(), json, {\n      familySponsorshipLastSyncDate: new Date(json.familySponsorshipLastSyncDate),\n      familySponsorshipValidUntil: new Date(json.familySponsorshipValidUntil),\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { PasswordHistoryData } from \"../data/password-history.data\";\nimport { PasswordHistoryView } from \"../view/password-history.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Password>>): Password {\n    if (obj == null) {\n      return null;\n    }\n\n    const password = EncString.fromJSON(obj.password);\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new Password(), obj, {\n      password,\n      lastUsedDate,\n    });\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policy.data\";\n\nimport Domain from \"./domain-base\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secure-note.data\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nimport Domain from \"./domain-base\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n\n  static fromJSON(obj: Jsonify<SecureNote>): SecureNote {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new SecureNote(), obj);\n  }\n}\n","import { SendFileData } from \"../data/send-file.data\";\nimport { SendFileView } from \"../view/send-file.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/send-text.data\";\nimport { SendTextView } from \"../view/send-text.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  node: T;\n  parent: TreeNode<T>;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, parent: TreeNode<T>, name?: string, id?: string) {\n    this.parent = parent;\n    this.node = node;\n    if (name) {\n      this.node.name = name;\n    }\n    if (id) {\n      this.node.id = id;\n    }\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n  zoomFactor?: number;\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CardView } from \"../view/card.view\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/enc-string\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/field.view\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identity.view\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/enc-string\";\nimport { LoginUri as LoginUriDomain } from \"../domain/login-uri\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/login.view\";\n\nimport { LoginUriExport } from \"./login-uri.export\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secure-note\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { CardExport } from \"./card.export\";\nimport { FieldExport } from \"./field.export\";\nimport { IdentityExport } from \"./identity.export\";\nimport { LoginExport } from \"./login.export\";\nimport { SecureNoteExport } from \"./secure-note.export\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { CipherExport } from \"./cipher.export\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CollectionView } from \"../view/collection.view\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport { CollectionExport } from \"./collection.export\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folder.view\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folder.view\";\n\nimport { FolderExport } from \"./folder.export\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/card.api\";\nimport { FieldApi } from \"../api/field.api\";\nimport { IdentityApi } from \"../api/identity.api\";\nimport { LoginUriApi } from \"../api/login-uri.api\";\nimport { LoginApi } from \"../api/login.api\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachment.request\";\nimport { PasswordHistoryRequest } from \"./password-history.request\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Collection } from \"../domain/collection\";\n\nimport { SelectionReadOnlyRequest } from \"./selection-read-only.request\";\n\nexport class CollectionRequest {\n  name: string;\n  externalId: string;\n  groups: SelectionReadOnlyRequest[] = [];\n  users: SelectionReadOnlyRequest[] = [];\n\n  constructor(collection?: Collection) {\n    if (collection == null) {\n      return;\n    }\n    this.name = collection.name ? collection.name.encryptedString : null;\n    this.externalId = collection.externalId;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenTwoFactorRequest {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class OrganizationApiKeyRequest extends SecretVerificationRequest {\n  type: OrganizationApiKeyType = OrganizationApiKeyType.Default;\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\n\nimport { BillingSyncConfigRequest } from \"./billing-sync-config.request\";\nimport { ScimConfigRequest } from \"./scim-config.request\";\n\n/**API request config types for OrganizationConnectionRequest */\nexport type OrganizationConnectionRequestConfigs = BillingSyncConfigRequest | ScimConfigRequest;\n\nexport class OrganizationConnectionRequest {\n  constructor(\n    public organizationId: string,\n    public type: OrganizationConnectionType,\n    public enabled: boolean,\n    public config: OrganizationConnectionRequestConfigs\n  ) {}\n}\n","import { KeysRequest } from \"./keys.request\";\n\nexport class OrganizationKeysRequest extends KeysRequest {\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    super(publicKey, encryptedPrivateKey);\n  }\n}\n","import { TaxInfoUpdateRequest } from \"./tax-info-update.request\";\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n  taxId: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n  authRequestAccessCode: string;\n}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export class TaxInfoUpdateRequest {\n  country: string;\n  postalCode: string;\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n  authRequestId: string;\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/card.api\";\nimport { FieldApi } from \"../api/field.api\";\nimport { IdentityApi } from \"../api/identity.api\";\nimport { LoginApi } from \"../api/login.api\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\n\nimport { AttachmentResponse } from \"./attachment.response\";\nimport { BaseResponse } from \"./base.response\";\nimport { PasswordHistoryResponse } from \"./password-history.response\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n  avatarColor: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.avatarColor = this.getResponseProperty(\"AvatarColor\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n  avatarColor: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.avatarColor = this.getResponseProperty(\"AvatarColor\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  kdfMemory?: number;\n  kdfParallelism?: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.kdfMemory = this.getResponseProperty(\"KdfMemory\");\n    this.kdfParallelism = this.getResponseProperty(\"KdfParallelism\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (status === 429) {\n      this.message = \"Rate limit exceeded. Try again later.\";\n    } else if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetric-crypto-key\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { InitializerKey } from \"../../services/cryptography/initializer-key\";\nimport { LocalData } from \"../data/local.data\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachment.view\";\nimport { CardView } from \"./card.view\";\nimport { FieldView } from \"./field.view\";\nimport { IdentityView } from \"./identity.view\";\nimport { LoginView } from \"./login.view\";\nimport { PasswordHistoryView } from \"./password-history.view\";\nimport { SecureNoteView } from \"./secure-note.view\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View, InitializerMetadata {\n  readonly initializerKey = InitializerKey.CipherView;\n\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: LocalData;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  creationDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.creationDate = c.creationDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/tree-node\";\nimport { CollectionAccessDetailsResponse } from \"../response/collection.response\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionAccessDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/tree-node\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n\n  static fromJSON(obj: Jsonify<FolderView>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new FolderView(), obj, { revisionDate });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/login-uri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./item.view\";\nimport { LoginUriView } from \"./login-uri.view\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secure-note\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","import { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { SendFile } from \"../domain/send-file\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(json: DeepJsonify<SendFileView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendFileView(), json);\n  }\n}\n","import { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { SendText } from \"../domain/send-text\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(json: DeepJsonify<SendTextView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendTextView(), json);\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetric-crypto-key\";\n\nimport { SendFileView } from \"./send-file.view\";\nimport { SendTextView } from \"./send-text.view\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n\n  toJSON() {\n    return Utils.merge(this, {\n      key: Utils.fromBufferToB64(this.key),\n    });\n  }\n\n  static fromJSON(json: DeepJsonify<SendView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendView(), json, {\n      key: Utils.fromB64ToArray(json.key)?.buffer,\n      cryptoKey: SymmetricCryptoKey.fromJSON(json.cryptoKey),\n      text: SendTextView.fromJSON(json.text),\n      file: SendFileView.fromJSON(json.file),\n      revisionDate: json.revisionDate == null ? null : new Date(json.revisionDate),\n      deletionDate: json.deletionDate == null ? null : new Date(json.deletionDate),\n      expirationDate: json.expirationDate == null ? null : new Date(json.expirationDate),\n    });\n  }\n}\n","export class View {}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export enum InitializerKey {\n  Cipher = 0,\n  CipherView = 1,\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n\n  // TODO, make Jsonify<State,TGlobalState,TAccount> work. It currently doesn't because Globals doesn't implement Jsonify.\n  static fromJSON<TGlobalState extends GlobalState, TAccount extends Account>(\n    obj: any,\n    accountDeserializer: (json: Jsonify<TAccount>) => TAccount\n  ): State<TGlobalState, TAccount> {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new State(null), obj, {\n      accounts: State.buildAccountMapFromJSON(obj?.accounts, accountDeserializer),\n    });\n  }\n\n  private static buildAccountMapFromJSON<TAccount extends Account>(\n    jsonAccounts: { [userId: string]: Jsonify<TAccount> },\n    accountDeserializer: (json: Jsonify<TAccount>) => TAccount\n  ) {\n    if (!jsonAccounts) {\n      return {};\n    }\n    const accounts: { [userId: string]: TAccount } = {};\n    for (const userId in jsonAccounts) {\n      accounts[userId] = accountDeserializer(jsonAccounts[userId]);\n    }\n    return accounts;\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport {\n  AbstractMemoryStorageService,\n  AbstractStorageService,\n} from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { LocalData } from \"../models/data/local.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport {\n  Account,\n  AccountData,\n  AccountSettings,\n  AccountSettingsSettings,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { KdfConfig } from \"../models/domain/kdf-config\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nconst DDG_SHARED_KEY = \"DuckDuckGoSharedKey\";\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  protected accountsSubject = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  accounts$ = this.accountsSubject.asObservable();\n\n  protected activeAccountSubject = new BehaviorSubject<string | null>(null);\n  activeAccount$ = this.activeAccountSubject.asObservable();\n\n  protected activeAccountUnlockedSubject = new BehaviorSubject<boolean>(false);\n  activeAccountUnlocked$ = this.activeAccountUnlockedSubject.asObservable();\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  protected accountDiskCache = new BehaviorSubject<Record<string, TAccount>>({});\n\n  // default account serializer, must be overridden by child class\n  protected accountDeserializer = Account.fromJSON as (json: Jsonify<TAccount>) => TAccount;\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractMemoryStorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccountSubject\n      .pipe(\n        concatMap(async (userId) => {\n          if (userId == null && this.activeAccountUnlockedSubject.getValue() == false) {\n            return;\n          } else if (userId == null) {\n            this.activeAccountUnlockedSubject.next(false);\n          }\n\n          // FIXME: This should be refactored into AuthService or a similar service,\n          //  as checking for the existance of the crypto key is a low level\n          //  implementation detail.\n          this.activeAccountUnlockedSubject.next((await this.getCryptoMasterKey()) != null);\n        })\n      )\n      .subscribe();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccountSubject.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      if (state.accounts == null) {\n        state.accounts = {};\n      }\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccountSubject.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccountSubject.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccountSubject.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlockedSubject.getValue() != nextValue) {\n        this.activeAccountUnlockedSubject.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  @withPrototypeForArrayMembers(CipherView, CipherView.fromJSON)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return Utils.recordToMap(account?.keys?.organizationKeys?.decrypted);\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = Utils.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return Utils.recordToMap(account?.keys?.providerKeys?.decrypted);\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = Utils.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDuckDuckGoSharedKey(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(DDG_SHARED_KEY, options);\n  }\n\n  async setDuckDuckGoSharedKey(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    value == null\n      ? await this.secureStorageService.remove(DDG_SHARED_KEY, options)\n      : await this.secureStorageService.save(DDG_SHARED_KEY, value, options);\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableDuckDuckGoBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableDuckDuckGoBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableDuckDuckGoBrowserIntegration(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableDuckDuckGoBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfConfig(options?: StorageOptions): Promise<KdfConfig> {\n    const iterations = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n    const memory = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfMemory;\n    const parallelism = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfParallelism;\n    return new KdfConfig(iterations, memory, parallelism);\n  }\n\n  async setKdfConfig(config: KdfConfig, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = config.iterations;\n    account.profile.kdfMemory = config.memory;\n    account.profile.kdfParallelism = config.parallelism;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<{ [cipherId: string]: LocalData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n\n  async setLocalData(\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    return keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<AccountSettingsSettings> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: AccountSettingsSettings, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async setServerConfig(value: ServerConfigData, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.serverConfig = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getServerConfig(options: StorageOptions): Promise<ServerConfigData> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.serverConfig;\n  }\n\n  async getAvatarColor(options?: StorageOptions): Promise<string | null | undefined> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.avatarColor;\n  }\n\n  async setAvatarColor(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.avatarColor = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.value[options.userId];\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    this.setDiskCache(options.userId, account);\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    this.deleteDiskCache(options.userId);\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accountsSubject.next({});\n        return;\n      }\n\n      this.accountsSubject.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      this.deleteDiskCache(userId);\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected async state(): Promise<State<TGlobalState, TAccount>> {\n    const state = await this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state, {\n      deserializer: (s) => State.fromJSON(s, this.accountDeserializer),\n    });\n    return state;\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n\n  private setDiskCache(key: string, value: TAccount, options?: StorageOptions) {\n    if (this.useAccountCache) {\n      this.accountDiskCache.value[key] = value;\n      this.accountDiskCache.next(this.accountDiskCache.value);\n    }\n  }\n\n  private deleteDiskCache(key: string) {\n    if (this.useAccountCache) {\n      delete this.accountDiskCache.value[key];\n      this.accountDiskCache.next(this.accountDiskCache.value);\n    }\n  }\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? r\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","import { Directive, HostListener, Input, OnDestroy, Optional } from \"@angular/core\";\nimport { BehaviorSubject, finalize, Subject, takeUntil, tap } from \"rxjs\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\nimport { FunctionReturningAwaitable, functionToObservable } from \"../utils/function-to-observable\";\n\n/**\n * Allow a single button to perform async actions on click and reflect the progress in the UI by automatically\n * activating the loading effect while the action is processed.\n */\n@Directive({\n  selector: \"[bitAction]\",\n})\nexport class BitActionDirective implements OnDestroy {\n  private destroy$ = new Subject<void>();\n  private _loading$ = new BehaviorSubject<boolean>(false);\n\n  disabled = false;\n\n  @Input(\"bitAction\") protected handler: FunctionReturningAwaitable;\n\n  readonly loading$ = this._loading$.asObservable();\n\n  constructor(\n    private buttonComponent: ButtonLikeAbstraction,\n    @Optional() private validationService?: ValidationService,\n    @Optional() private logService?: LogService\n  ) {}\n\n  get loading() {\n    return this._loading$.value;\n  }\n\n  set loading(value: boolean) {\n    this._loading$.next(value);\n    this.buttonComponent.loading = value;\n  }\n\n  @HostListener(\"click\")\n  protected async onClick() {\n    if (!this.handler || this.loading || this.disabled || this.buttonComponent.disabled) {\n      return;\n    }\n\n    this.loading = true;\n    functionToObservable(this.handler)\n      .pipe(\n        tap({\n          error: (err: unknown) => {\n            this.logService?.error(`Async action exception: ${err}`);\n            this.validationService?.showError(err);\n          },\n        }),\n        finalize(() => (this.loading = false)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit, Optional } from \"@angular/core\";\nimport { FormGroupDirective } from \"@angular/forms\";\nimport { BehaviorSubject, catchError, filter, of, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\n\nimport { FunctionReturningAwaitable, functionToObservable } from \"../utils/function-to-observable\";\n\n/**\n * Allow a form to perform async actions on submit, disabling the form while the action is processing.\n */\n@Directive({\n  selector: \"[formGroup][bitSubmit]\",\n})\nexport class BitSubmitDirective implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  private _loading$ = new BehaviorSubject<boolean>(false);\n  private _disabled$ = new BehaviorSubject<boolean>(false);\n\n  @Input(\"bitSubmit\") protected handler: FunctionReturningAwaitable;\n\n  readonly loading$ = this._loading$.asObservable();\n  readonly disabled$ = this._disabled$.asObservable();\n\n  constructor(\n    private formGroupDirective: FormGroupDirective,\n    @Optional() validationService?: ValidationService,\n    @Optional() logService?: LogService\n  ) {\n    formGroupDirective.ngSubmit\n      .pipe(\n        filter(() => !this.disabled),\n        switchMap(() => {\n          // Calling functionToObservable exectues the sync part of the handler\n          // allowing the function to check form validity before it gets disabled.\n          const awaitable = functionToObservable(this.handler);\n\n          // Disable form\n          this.loading = true;\n\n          return awaitable.pipe(\n            catchError((err: unknown) => {\n              logService?.error(`Async submit exception: ${err}`);\n              validationService?.showError(err);\n              return of(undefined);\n            })\n          );\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe({\n        next: () => (this.loading = false),\n        complete: () => (this.loading = false),\n      });\n  }\n\n  ngOnInit(): void {\n    this.formGroupDirective.statusChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((c) => this._disabled$.next(c === \"DISABLED\"));\n  }\n\n  get disabled() {\n    return this._disabled$.value;\n  }\n\n  set disabled(value: boolean) {\n    this._disabled$.next(value);\n  }\n\n  get loading() {\n    return this._loading$.value;\n  }\n\n  set loading(value: boolean) {\n    this.disabled = value;\n    this._loading$.next(value);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Directive, Input, OnDestroy, Optional } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\n\nimport { BitActionDirective } from \"./bit-action.directive\";\nimport { BitSubmitDirective } from \"./bit-submit.directive\";\n\n/**\n * This directive has two purposes:\n *\n * When attached to a submit button:\n * - Activates the button loading effect while the form is processing an async submit action.\n * - Disables the button while a `bitAction` directive on another button is being processed.\n *\n * When attached to a button with `bitAction` directive inside of a form:\n * - Disables the button while the `bitSubmit` directive is processing an async submit action.\n * - Disables the button while a `bitAction` directive on another button is being processed.\n * - Disables form submission while the `bitAction` directive is processing an async action.\n */\n@Directive({\n  selector: \"button[bitFormButton]\",\n})\nexport class BitFormButtonDirective implements OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  @Input() type: string;\n\n  constructor(\n    buttonComponent: ButtonLikeAbstraction,\n    @Optional() submitDirective?: BitSubmitDirective,\n    @Optional() actionDirective?: BitActionDirective\n  ) {\n    if (submitDirective && buttonComponent) {\n      submitDirective.loading$.pipe(takeUntil(this.destroy$)).subscribe((loading) => {\n        if (this.type === \"submit\") {\n          buttonComponent.loading = loading;\n        } else {\n          buttonComponent.disabled = loading;\n        }\n      });\n\n      submitDirective.disabled$.pipe(takeUntil(this.destroy$)).subscribe((disabled) => {\n        buttonComponent.disabled = disabled;\n      });\n    }\n\n    if (submitDirective && actionDirective) {\n      actionDirective.loading$.pipe(takeUntil(this.destroy$)).subscribe((disabled) => {\n        submitDirective.disabled = disabled;\n      });\n\n      submitDirective.disabled$.pipe(takeUntil(this.destroy$)).subscribe((disabled) => {\n        actionDirective.disabled = disabled;\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Component, Input, OnChanges } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\ntype SizeTypes = \"xlarge\" | \"large\" | \"default\" | \"small\" | \"xsmall\";\n\nconst SizeClasses: Record<SizeTypes, string[]> = {\n  xlarge: [\"tw-h-24\", \"tw-w-24\"],\n  large: [\"tw-h-16\", \"tw-w-16\"],\n  default: [\"tw-h-10\", \"tw-w-10\"],\n  small: [\"tw-h-7\", \"tw-w-7\"],\n  xsmall: [\"tw-h-6\", \"tw-w-6\"],\n};\n\n@Component({\n  selector: \"bit-avatar\",\n  template: `<img *ngIf=\"src\" [src]=\"src\" title=\"{{ title || text }}\" [ngClass]=\"classList\" />`,\n})\nexport class AvatarComponent implements OnChanges {\n  @Input() border = false;\n  @Input() color?: string;\n  @Input() id?: string;\n  @Input() text?: string;\n  @Input() title: string;\n  @Input() size: SizeTypes = \"default\";\n\n  private svgCharCount = 2;\n  private svgFontSize = 20;\n  private svgFontWeight = 300;\n  private svgSize = 48;\n  src: SafeResourceUrl;\n\n  constructor(public sanitizer: DomSanitizer) {}\n\n  ngOnChanges() {\n    this.generate();\n  }\n\n  get classList() {\n    return [\"tw-rounded-full\"]\n      .concat(SizeClasses[this.size] ?? [])\n      .concat(this.border ? [\"tw-border\", \"tw-border-solid\", \"tw-border-secondary-500\"] : []);\n  }\n\n  private generate() {\n    let chars: string = null;\n    const upperCaseText = this.text?.toUpperCase() ?? \"\";\n\n    chars = this.getFirstLetters(upperCaseText, this.svgCharCount);\n\n    if (chars == null) {\n      chars = this.unicodeSafeSubstring(upperCaseText, this.svgCharCount);\n    }\n\n    // If the chars contain an emoji, only show it.\n    if (chars.match(Utils.regexpEmojiPresentation)) {\n      chars = chars.match(Utils.regexpEmojiPresentation)[0];\n    }\n\n    let svg: HTMLElement;\n    let hexColor = this.color;\n\n    if (!Utils.isNullOrWhitespace(this.color)) {\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    } else if (!Utils.isNullOrWhitespace(this.id)) {\n      hexColor = Utils.stringToColor(this.id.toString());\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    } else {\n      hexColor = Utils.stringToColor(upperCaseText);\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    }\n\n    const charObj = this.createTextElement(chars, hexColor);\n    svg.appendChild(charObj);\n    const html = window.document.createElement(\"div\").appendChild(svg).outerHTML;\n    const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n    this.src = this.sanitizer.bypassSecurityTrustResourceUrl(\n      \"data:image/svg+xml;base64,\" + svgHtml\n    );\n  }\n\n  private getFirstLetters(data: string, count: number): string {\n    const parts = data.split(\" \");\n    if (parts.length > 1) {\n      let text = \"\";\n      for (let i = 0; i < count; i++) {\n        text += this.unicodeSafeSubstring(parts[i], 1);\n      }\n      return text;\n    }\n    return null;\n  }\n\n  private createSvgElement(size: number, color: string): HTMLElement {\n    const svgTag = window.document.createElement(\"svg\");\n    svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svgTag.setAttribute(\"pointer-events\", \"none\");\n    svgTag.setAttribute(\"width\", size.toString());\n    svgTag.setAttribute(\"height\", size.toString());\n    svgTag.style.backgroundColor = color;\n    svgTag.style.width = size + \"px\";\n    svgTag.style.height = size + \"px\";\n    return svgTag;\n  }\n\n  private createTextElement(character: string, color: string): HTMLElement {\n    const textTag = window.document.createElement(\"text\");\n    textTag.setAttribute(\"text-anchor\", \"middle\");\n    textTag.setAttribute(\"y\", \"50%\");\n    textTag.setAttribute(\"x\", \"50%\");\n    textTag.setAttribute(\"dy\", \"0.35em\");\n    textTag.setAttribute(\"pointer-events\", \"auto\");\n    textTag.setAttribute(\"fill\", Utils.pickTextColorBasedOnBgColor(color, 135, true));\n    textTag.setAttribute(\n      \"font-family\",\n      '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n        'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"'\n    );\n    textTag.textContent = character;\n    textTag.style.fontWeight = this.svgFontWeight.toString();\n    textTag.style.fontSize = this.svgFontSize + \"px\";\n    return textTag;\n  }\n\n  private unicodeSafeSubstring(str: string, count: number) {\n    const characters = str.match(/./gu);\n    return characters != null ? characters.slice(0, count).join(\"\") : \"\";\n  }\n}\n","<div class=\"tw-inline-flex tw-gap-2\">\n  <span *ngFor=\"let item of filteredItems; let last = last\" bitBadge [badgeType]=\"badgeType\">\n    {{ item }}\n    <span class=\"tw-sr-only\" *ngIf=\"!last || isFiltered\">, </span>\n  </span>\n  <span *ngIf=\"isFiltered\" bitBadge [badgeType]=\"badgeType\">\n    {{ \"plusNMore\" | i18n: (items.length - filteredItems.length).toString() }}\n  </span>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { BadgeTypes } from \"../badge\";\n\n@Component({\n  selector: \"bit-badge-list\",\n  templateUrl: \"badge-list.component.html\",\n})\nexport class BadgeListComponent implements OnChanges {\n  private _maxItems: number;\n\n  protected filteredItems: string[] = [];\n  protected isFiltered = false;\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n  @Input() items: string[] = [];\n\n  @Input()\n  get maxItems(): number | undefined {\n    return this._maxItems;\n  }\n\n  set maxItems(value: number | undefined) {\n    this._maxItems = value == undefined ? undefined : Math.max(1, value);\n  }\n\n  ngOnChanges() {\n    if (this.maxItems == undefined || this.items.length <= this.maxItems) {\n      this.filteredItems = this.items;\n    } else {\n      this.filteredItems = this.items.slice(0, this.maxItems - 1);\n    }\n    this.isFiltered = this.items.length > this.filteredItems.length;\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\nexport type BadgeTypes = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\";\n\nconst styles: Record<BadgeTypes, string[]> = {\n  primary: [\"tw-bg-primary-500\"],\n  secondary: [\"tw-bg-text-muted\"],\n  success: [\"tw-bg-success-500\"],\n  danger: [\"tw-bg-danger-500\"],\n  warning: [\"tw-bg-warning-500\"],\n  info: [\"tw-bg-info-500\"],\n};\n\nconst hoverStyles: Record<BadgeTypes, string[]> = {\n  primary: [\"hover:tw-bg-primary-700\"],\n  secondary: [\"hover:tw-bg-secondary-700\"],\n  success: [\"hover:tw-bg-success-700\"],\n  danger: [\"hover:tw-bg-danger-700\"],\n  warning: [\"hover:tw-bg-warning-700\"],\n  info: [\"hover:tw-bg-info-700\"],\n};\n\n@Directive({\n  selector: \"span[bitBadge], a[bitBadge], button[bitBadge]\",\n})\nexport class BadgeDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-inline\",\n      \"tw-py-0.5\",\n      \"tw-px-1.5\",\n      \"tw-font-bold\",\n      \"tw-text-center\",\n      \"!tw-text-contrast\",\n      \"tw-rounded\",\n      \"tw-border-none\",\n      \"tw-box-border\",\n      \"tw-whitespace-nowrap\",\n      \"tw-text-xs\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n    ]\n      .concat(styles[this.badgeType])\n      .concat(this.hasHoverEffects ? hoverStyles[this.badgeType] : []);\n  }\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n\n  private hasHoverEffects = false;\n\n  constructor(el: ElementRef<Element>) {\n    this.hasHoverEffects = el?.nativeElement?.nodeName != \"SPAN\";\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeDirective } from \"./badge.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BadgeDirective],\n  declarations: [BadgeDirective],\n})\nexport class BadgeModule {}\n","<ng-template>\n  <i *ngIf=\"icon\" class=\"bwi {{ icon }} !tw-mr-2\" aria-hidden=\"true\"></i><ng-content></ng-content>\n</ng-template>\n","import { Component, EventEmitter, Input, Output, TemplateRef, ViewChild } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-breadcrumb\",\n  templateUrl: \"./breadcrumb.component.html\",\n})\nexport class BreadcrumbComponent {\n  @Input()\n  icon?: string;\n\n  @Input()\n  route?: string | any[] = undefined;\n\n  @Input()\n  queryParams?: Record<string, string> = {};\n\n  @Output()\n  click = new EventEmitter();\n\n  @ViewChild(TemplateRef, { static: true }) content: TemplateRef<unknown>;\n\n  onClick(args: unknown) {\n    this.click.next(args);\n  }\n}\n","<ng-container *ngFor=\"let breadcrumb of beforeOverflow; let last = last\">\n  <ng-container *ngIf=\"breadcrumb.route\">\n    <a\n      bitLink\n      linkType=\"primary\"\n      class=\"tw-my-2 tw-inline-block\"\n      [routerLink]=\"breadcrumb.route\"\n      [queryParams]=\"breadcrumb.queryParams\"\n    >\n      <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n    </a>\n  </ng-container>\n  <ng-container *ngIf=\"!breadcrumb.route\">\n    <button\n      bitLink\n      linkType=\"primary\"\n      class=\"tw-my-2 tw-inline-block\"\n      (click)=\"breadcrumb.onClick($event)\"\n    >\n      <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n    </button>\n  </ng-container>\n  <i *ngIf=\"!last\" class=\"bwi bwi-angle-right tw-mx-1.5 tw-text-main\"></i>\n</ng-container>\n\n<ng-container *ngIf=\"hasOverflow\">\n  <i *ngIf=\"beforeOverflow.length > 0\" class=\"bwi bwi-angle-right tw-mx-1.5 tw-text-main\"></i>\n\n  <button\n    bitIconButton=\"bwi-ellipsis-h\"\n    [bitMenuTriggerFor]=\"overflowMenu\"\n    size=\"small\"\n    aria-haspopup\n  ></button>\n\n  <bit-menu #overflowMenu>\n    <ng-container *ngFor=\"let breadcrumb of overflow\">\n      <ng-container *ngIf=\"breadcrumb.route\">\n        <a\n          bitMenuItem\n          linkType=\"primary\"\n          [routerLink]=\"breadcrumb.route\"\n          [queryParams]=\"breadcrumb.queryParams\"\n        >\n          <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n        </a>\n      </ng-container>\n      <ng-container *ngIf=\"!breadcrumb.route\">\n        <button bitMenuItem linkType=\"primary\" (click)=\"breadcrumb.onClick($event)\">\n          <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n        </button>\n      </ng-container>\n    </ng-container>\n  </bit-menu>\n  <i class=\"bwi bwi-angle-right tw-mx-1.5 tw-text-main\"></i>\n\n  <ng-container *ngFor=\"let breadcrumb of afterOverflow; let last = last\">\n    <ng-container *ngIf=\"breadcrumb.route\">\n      <a\n        bitLink\n        linkType=\"primary\"\n        class=\"tw-my-2 tw-inline-block\"\n        [routerLink]=\"breadcrumb.route\"\n        [queryParams]=\"breadcrumb.queryParams\"\n      >\n        <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n      </a>\n    </ng-container>\n    <ng-container *ngIf=\"!breadcrumb.route\">\n      <button\n        bitLink\n        linkType=\"primary\"\n        class=\"tw-my-2 tw-inline-block\"\n        (click)=\"breadcrumb.onClick($event)\"\n      >\n        <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n      </button>\n    </ng-container>\n    <i *ngIf=\"!last\" class=\"bwi bwi-angle-right tw-mx-1.5 tw-text-main\"></i>\n  </ng-container>\n</ng-container>\n","import { Component, ContentChildren, Input, QueryList } from \"@angular/core\";\n\nimport { BreadcrumbComponent } from \"./breadcrumb.component\";\n\n@Component({\n  selector: \"bit-breadcrumbs\",\n  templateUrl: \"./breadcrumbs.component.html\",\n})\nexport class BreadcrumbsComponent {\n  @Input()\n  show = 3;\n\n  private breadcrumbs: BreadcrumbComponent[] = [];\n\n  @ContentChildren(BreadcrumbComponent)\n  protected set breadcrumbList(value: QueryList<BreadcrumbComponent>) {\n    this.breadcrumbs = value.toArray();\n  }\n\n  protected get beforeOverflow() {\n    if (this.hasOverflow) {\n      return this.breadcrumbs.slice(0, this.show - 1);\n    }\n\n    return this.breadcrumbs;\n  }\n\n  protected get overflow() {\n    return this.breadcrumbs.slice(this.show - 1, -1);\n  }\n\n  protected get afterOverflow() {\n    return this.breadcrumbs.slice(-1);\n  }\n\n  protected get hasOverflow() {\n    return this.breadcrumbs.length > this.show;\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { IconButtonModule } from \"../icon-button\";\nimport { LinkModule } from \"../link\";\nimport { MenuModule } from \"../menu\";\n\nimport { BreadcrumbComponent } from \"./breadcrumb.component\";\nimport { BreadcrumbsComponent } from \"./breadcrumbs.component\";\n\n@NgModule({\n  imports: [CommonModule, LinkModule, IconButtonModule, MenuModule, RouterModule],\n  declarations: [BreadcrumbsComponent, BreadcrumbComponent],\n  exports: [BreadcrumbsComponent, BreadcrumbComponent],\n})\nexport class BreadcrumbsModule {}\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { Input, HostBinding, Component } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction, ButtonType } from \"../shared/button-like.abstraction\";\n\nconst focusRing = [\n  \"focus-visible:tw-ring\",\n  \"focus-visible:tw-ring-offset-2\",\n  \"focus-visible:tw-ring-primary-700\",\n  \"focus-visible:tw-z-10\",\n];\n\nconst buttonStyles: Record<ButtonType, string[]> = {\n  primary: [\n    \"tw-border-primary-500\",\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"disabled:tw-bg-primary-500/60\",\n    \"disabled:tw-border-primary-500/60\",\n    \"disabled:!tw-text-contrast/60\",\n    \"disabled:tw-bg-clip-padding\",\n    \"disabled:tw-cursor-not-allowed\",\n    ...focusRing,\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"tw-border-text-muted\",\n    \"!tw-text-muted\",\n    \"hover:tw-bg-text-muted\",\n    \"hover:tw-border-text-muted\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-text-muted/60\",\n    \"disabled:!tw-text-muted/60\",\n    \"disabled:tw-cursor-not-allowed\",\n    ...focusRing,\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"tw-border-danger-500\",\n    \"!tw-text-danger\",\n    \"hover:tw-bg-danger-500\",\n    \"hover:tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-danger-500/60\",\n    \"disabled:!tw-text-danger/60\",\n    \"disabled:tw-cursor-not-allowed\",\n    ...focusRing,\n  ],\n  unstyled: [],\n};\n\n@Component({\n  selector: \"button[bitButton], a[bitButton]\",\n  templateUrl: \"button.component.html\",\n  providers: [{ provide: ButtonLikeAbstraction, useExisting: ButtonComponent }],\n})\nexport class ButtonComponent implements ButtonLikeAbstraction {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-py-1.5\",\n      \"tw-px-3\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-text-center\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n    ]\n      .concat(this.block ? [\"tw-w-full\", \"tw-block\"] : [\"tw-inline-block\"])\n      .concat(buttonStyles[this.buttonType ?? \"secondary\"]);\n  }\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    const disabled = this.disabled != null && this.disabled !== false;\n    return disabled || this.loading ? true : null;\n  }\n\n  @Input() buttonType: ButtonType;\n\n  private _block = false;\n\n  @Input()\n  get block(): boolean {\n    return this._block;\n  }\n\n  set block(value: boolean | \"\") {\n    this._block = coerceBooleanProperty(value);\n  }\n\n  @Input() loading = false;\n\n  @Input() disabled = false;\n\n  setButtonType(value: \"primary\" | \"secondary\" | \"danger\" | \"unstyled\") {\n    this.buttonType = value;\n  }\n}\n","<span class=\"tw-relative\">\n  <span [ngClass]=\"{ 'tw-invisible': loading }\">\n    <ng-content></ng-content>\n  </span>\n  <span\n    class=\"tw-absolute tw-inset-0 tw-flex tw-items-center tw-justify-center\"\n    [ngClass]=\"{ 'tw-invisible': !loading }\"\n  >\n    <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" aria-hidden=\"true\"></i>\n  </span>\n</span>\n","<div\n  class=\"tw-mb-4 tw-box-border tw-rounded tw-border tw-border-l-8 tw-border-solid tw-border-secondary-300 tw-bg-background-alt tw-py-3 tw-px-5 tw-leading-5 tw-text-main\"\n  [ngClass]=\"calloutClass\"\n>\n  <h3\n    class=\"tw-mt-0 tw-mb-2 tw-text-base tw-font-bold tw-uppercase\"\n    [ngClass]=\"headerClass\"\n    *ngIf=\"title\"\n  >\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\ntype CalloutTypes = \"success\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<CalloutTypes, string> = {\n  success: \"bwi-check\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\nconst defaultI18n: Partial<Record<CalloutTypes, string>> = {\n  warning: \"warning\",\n  danger: \"error\",\n};\n\n@Component({\n  selector: \"bit-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type: CalloutTypes = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() useAlertRole = false;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.icon ??= defaultIcon[this.type];\n    if (this.title == null && defaultI18n[this.type] != null) {\n      this.title = this.i18nService.t(defaultI18n[this.type]);\n    }\n  }\n\n  get calloutClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"tw-border-l-danger-500\";\n      case \"info\":\n        return \"tw-border-l-info-500\";\n      case \"success\":\n        return \"tw-border-l-success-500\";\n      case \"warning\":\n        return \"tw-border-l-warning-500\";\n    }\n  }\n\n  get headerClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"!tw-text-danger\";\n      case \"info\":\n        return \"!tw-text-info\";\n      case \"success\":\n        return \"!tw-text-success\";\n      case \"warning\":\n        return \"!tw-text-warning\";\n    }\n  }\n}\n","import { Component, HostBinding, Input, Optional, Self } from \"@angular/core\";\nimport { NgControl, Validators } from \"@angular/forms\";\n\nimport { BitFormControlAbstraction } from \"../form-control\";\n\n@Component({\n  selector: \"input[type=checkbox][bitCheckbox]\",\n  template: \"\",\n  providers: [{ provide: BitFormControlAbstraction, useExisting: CheckboxComponent }],\n})\nexport class CheckboxComponent implements BitFormControlAbstraction {\n  @HostBinding(\"class\")\n  protected inputClasses = [\n    \"tw-appearance-none\",\n    \"tw-outline-none\",\n    \"tw-relative\",\n    \"tw-transition\",\n    \"tw-cursor-pointer\",\n    \"tw-inline-block\",\n    \"tw-rounded\",\n    \"tw-border\",\n    \"tw-border-solid\",\n    \"tw-border-secondary-500\",\n    \"tw-h-3.5\",\n    \"tw-w-3.5\",\n    \"tw-mr-1.5\",\n    \"tw-bottom-[-1px]\", // Fix checkbox looking off-center\n\n    \"before:tw-content-['']\",\n    \"before:tw-block\",\n    \"before:tw-absolute\",\n    \"before:tw-inset-0\",\n\n    \"hover:tw-border-2\",\n    \"[&>label]:tw-border-2\",\n\n    \"focus-visible:tw-ring-2\",\n    \"focus-visible:tw-ring-offset-2\",\n    \"focus-visible:tw-ring-primary-700\",\n\n    \"disabled:tw-cursor-auto\",\n    \"disabled:tw-border\",\n    \"disabled:tw-bg-secondary-100\",\n\n    \"checked:tw-bg-primary-500\",\n    \"checked:tw-border-primary-500\",\n\n    \"checked:hover:tw-bg-primary-700\",\n    \"checked:hover:tw-border-primary-700\",\n    \"[&>label:hover]:checked:tw-bg-primary-700\",\n    \"[&>label:hover]:checked:tw-border-primary-700\",\n\n    \"checked:before:tw-bg-text-contrast\",\n    \"checked:before:tw-mask-image-[var(--mask-image)]\",\n    \"checked:before:tw-mask-position-[center]\",\n    \"checked:before:tw-mask-repeat-[no-repeat]\",\n\n    \"checked:disabled:tw-border-secondary-100\",\n    \"checked:disabled:tw-bg-secondary-100\",\n\n    \"checked:disabled:before:tw-bg-text-muted\",\n  ];\n\n  constructor(@Optional() @Self() private ngControl?: NgControl) {}\n\n  @HostBinding(\"style.--mask-image\")\n  protected maskImage = `url('data:image/svg+xml,%3Csvg class=\"svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"8\" height=\"8\" viewBox=\"0 0 10 10\"%3E%3Cpath d=\"M0.5 6.2L2.9 8.6L9.5 1.4\" fill=\"none\" stroke=\"white\" stroke-width=\"2\"%3E%3C/path%3E%3C/svg%3E')`;\n\n  @HostBinding()\n  @Input()\n  get disabled() {\n    return this._disabled ?? this.ngControl?.disabled ?? false;\n  }\n  set disabled(value: any) {\n    this._disabled = value != null && value !== false;\n  }\n  private _disabled: boolean;\n\n  @Input()\n  get required() {\n    return (\n      this._required ?? this.ngControl?.control?.hasValidator(Validators.requiredTrue) ?? false\n    );\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl.errors)[0];\n    return [key, this.ngControl.errors[key]];\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormControlModule } from \"../form-control\";\nimport { SharedModule } from \"../shared\";\n\nimport { CheckboxComponent } from \"./checkbox.component\";\n\n@NgModule({\n  imports: [SharedModule, CommonModule, FormControlModule],\n  declarations: [CheckboxComponent],\n  exports: [CheckboxComponent],\n})\nexport class CheckboxModule {}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nenum CharacterType {\n  Letter,\n  Emoji,\n  Special,\n  Number,\n}\n\n@Component({\n  selector: \"bit-color-password\",\n  template: `<div\n    *ngFor=\"let character of passwordArray; index as i\"\n    [class]=\"getCharacterClass(character)\"\n  >\n    <span>{{ character }}</span>\n    <span *ngIf=\"showCount\" class=\"tw-whitespace-nowrap tw-text-xs tw-leading-5 tw-text-main\">{{\n      i + 1\n    }}</span>\n  </div>`,\n})\nexport class ColorPasswordComponent {\n  @Input() private password: string = null;\n  @Input() showCount = false;\n\n  characterStyles: Record<CharacterType, string[]> = {\n    [CharacterType.Emoji]: [],\n    [CharacterType.Letter]: [\"tw-text-main\"],\n    [CharacterType.Special]: [\"tw-text-danger\"],\n    [CharacterType.Number]: [\"tw-text-primary-500\"],\n  };\n\n  @HostBinding(\"class\")\n  get classList() {\n    return [\"tw-min-w-0\", \"tw-whitespace-pre-wrap\", \"tw-break-all\"];\n  }\n\n  get passwordArray() {\n    // Convert to an array to handle cases that strings have special characters, i.e.: emoji.\n    return Array.from(this.password);\n  }\n\n  getCharacterClass(character: string) {\n    const charType = this.getCharacterType(character);\n    const charClass = this.characterStyles[charType].concat(\"tw-inline-flex\");\n\n    if (this.showCount) {\n      return charClass.concat([\n        \"tw-flex-col\",\n        \"tw-items-center\",\n        \"tw-w-7\",\n        \"tw-py-1\",\n        \"odd:tw-bg-secondary-100\",\n        \"even:tw-bg-background\",\n      ]);\n    }\n\n    return charClass;\n  }\n\n  private getCharacterType(character: string): CharacterType {\n    if (character.match(Utils.regexpEmojiPresentation)) {\n      return CharacterType.Emoji;\n    }\n\n    if (character.match(/\\d/)) {\n      return CharacterType.Number;\n    }\n\n    const specials = [\"&\", \"<\", \">\", \" \"];\n    if (specials.includes(character) || character.match(/[^\\w ]/)) {\n      return CharacterType.Special;\n    }\n\n    return CharacterType.Letter;\n  }\n}\n","import { style, animate, trigger, transition, group } from \"@angular/animations\";\n\nexport const fadeIn = trigger(\"fadeIn\", [\n  transition(\":enter\", [\n    style({ opacity: 0, transform: \"translateY(-50px)\" }),\n    group([\n      animate(\"0.15s linear\", style({ opacity: 1 })),\n      animate(\"0.3s ease-out\", style({ transform: \"none\" })),\n    ]),\n  ]),\n]);\n","<bit-simple-dialog>\n  <i bit-dialog-icon class=\"bwi tw-text-3xl\" [class]=\"iconClasses\" aria-hidden=\"true\"></i>\n\n  <span bitDialogTitle>{{ title }}</span>\n\n  <div bitDialogContent>{{ content }}</div>\n\n  <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n    <button bitButton buttonType=\"primary\" (click)=\"dialogRef.close(SimpleDialogCloseType.ACCEPT)\">\n      {{ acceptButtonText }}\n    </button>\n\n    <button\n      *ngIf=\"showCancelButton\"\n      bitButton\n      buttonType=\"secondary\"\n      (click)=\"dialogRef.close(SimpleDialogCloseType.CANCEL)\"\n    >\n      {{ cancelButtonText }}\n    </button>\n  </div>\n</bit-simple-dialog>\n","import { DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { SimpleDialogCloseType } from \"./models/simple-dialog-close-type.enum\";\nimport { SimpleDialogOptions } from \"./models/simple-dialog-options\";\nimport { SimpleDialogType } from \"./models/simple-dialog-type.enum\";\nimport { Translation } from \"./models/translation\";\n\nconst DEFAULT_ICON: Record<SimpleDialogType, string> = {\n  [SimpleDialogType.PRIMARY]: \"bwi-business\",\n  [SimpleDialogType.SUCCESS]: \"bwi-star\",\n  [SimpleDialogType.INFO]: \"bwi-info-circle\",\n  [SimpleDialogType.WARNING]: \"bwi-exclamation-triangle\",\n  [SimpleDialogType.DANGER]: \"bwi-error\",\n};\n\nconst DEFAULT_COLOR: Record<SimpleDialogType, string> = {\n  [SimpleDialogType.PRIMARY]: \"tw-text-primary-500\",\n  [SimpleDialogType.SUCCESS]: \"tw-text-success\",\n  [SimpleDialogType.INFO]: \"tw-text-info\",\n  [SimpleDialogType.WARNING]: \"tw-text-warning\",\n  [SimpleDialogType.DANGER]: \"tw-text-danger\",\n};\n\n@Component({\n  selector: \"bit-simple-configurable-dialog\",\n  templateUrl: \"./simple-configurable-dialog.component.html\",\n})\nexport class SimpleConfigurableDialogComponent {\n  SimpleDialogType = SimpleDialogType;\n  SimpleDialogCloseType = SimpleDialogCloseType;\n\n  get iconClasses() {\n    return [\n      this.simpleDialogOpts.icon ?? DEFAULT_ICON[this.simpleDialogOpts.type],\n      DEFAULT_COLOR[this.simpleDialogOpts.type],\n    ];\n  }\n\n  title: string;\n  content: string;\n  acceptButtonText: string;\n  cancelButtonText: string;\n\n  showCancelButton = this.simpleDialogOpts.cancelButtonText !== null;\n\n  constructor(\n    public dialogRef: DialogRef,\n    private i18nService: I18nService,\n    @Inject(DIALOG_DATA) public simpleDialogOpts?: SimpleDialogOptions\n  ) {\n    this.localizeText();\n  }\n\n  private localizeText() {\n    this.title = this.translate(this.simpleDialogOpts.title);\n    this.content = this.translate(this.simpleDialogOpts.content);\n    this.acceptButtonText = this.translate(this.simpleDialogOpts.acceptButtonText, \"yes\");\n\n    if (this.showCancelButton) {\n      // If accept text is overridden, use cancel, otherwise no\n      this.cancelButtonText = this.translate(\n        this.simpleDialogOpts.cancelButtonText,\n        this.simpleDialogOpts.acceptButtonText !== undefined ? \"cancel\" : \"no\"\n      );\n    }\n  }\n\n  private translate(translation: string | Translation, defaultKey?: string): string {\n    // Translation interface use implies we must localize.\n    if (typeof translation === \"object\") {\n      return this.i18nService.t(translation.key, ...translation.placeholders);\n    }\n\n    // Use string that is already translated or use default key post translate\n    return translation ?? this.i18nService.t(defaultKey);\n  }\n}\n","import {\n  DEFAULT_DIALOG_CONFIG,\n  Dialog,\n  DialogConfig,\n  DialogRef,\n  DIALOG_SCROLL_STRATEGY,\n} from \"@angular/cdk/dialog\";\nimport { ComponentType, Overlay, OverlayContainer } from \"@angular/cdk/overlay\";\nimport {\n  Inject,\n  Injectable,\n  Injector,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n} from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { filter, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { SimpleDialogOptions } from \"./simple-configurable-dialog/models/simple-dialog-options\";\nimport { SimpleConfigurableDialogComponent } from \"./simple-configurable-dialog/simple-configurable-dialog.component\";\n\n@Injectable()\nexport class DialogService extends Dialog implements OnDestroy {\n  private _destroy$ = new Subject<void>();\n\n  private backDropClasses = [\n    \"tw-fixed\",\n    \"tw-bg-black\",\n    \"tw-bg-opacity-30\",\n    \"tw-inset-0\",\n    \"tw-z-40\",\n  ];\n\n  constructor(\n    /** Parent class constructor */\n    _overlay: Overlay,\n    _injector: Injector,\n    @Optional() @Inject(DEFAULT_DIALOG_CONFIG) _defaultOptions: DialogConfig,\n    @Optional() @SkipSelf() _parentDialog: Dialog,\n    _overlayContainer: OverlayContainer,\n    @Inject(DIALOG_SCROLL_STRATEGY) scrollStrategy: any,\n\n    /** Not in parent class */\n    @Optional() router: Router,\n    @Optional() authService: AuthService\n  ) {\n    super(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy);\n\n    /** Close all open dialogs if the vault locks */\n    if (router && authService) {\n      router.events\n        .pipe(\n          filter((event) => event instanceof NavigationEnd),\n          switchMap(() => authService.getAuthStatus()),\n          filter((v) => v !== AuthenticationStatus.Unlocked),\n          takeUntil(this._destroy$)\n        )\n        .subscribe(() => this.closeAll());\n    }\n  }\n\n  override ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n    super.ngOnDestroy();\n  }\n\n  override open<R = unknown, D = unknown, C = unknown>(\n    componentOrTemplateRef: ComponentType<C> | TemplateRef<C>,\n    config?: DialogConfig<D, DialogRef<R, C>>\n  ): DialogRef<R, C> {\n    config = {\n      backdropClass: this.backDropClasses,\n      ...config,\n    };\n\n    return super.open(componentOrTemplateRef, config);\n  }\n\n  /**\n   * Opens a simple dialog.\n   *\n   * @param {SimpleDialogOptions} simpleDialogOptions - An object containing options for the dialog.\n   * @returns `DialogRef` - The reference to the opened dialog.\n   * Contains a closed observable which can be subscribed to for determining which button\n   * a user pressed (see `SimpleDialogCloseType`)\n   */\n  openSimpleDialog(simpleDialogOptions: SimpleDialogOptions): DialogRef {\n    // Method needs to return dialog reference so devs can sub to closed and get results.\n    return this.open(SimpleConfigurableDialogComponent, {\n      data: simpleDialogOptions,\n      disableClose: simpleDialogOptions.disableClose,\n    });\n  }\n}\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { fadeIn } from \"../animations\";\n\n@Component({\n  selector: \"bit-dialog\",\n  templateUrl: \"./dialog.component.html\",\n  animations: [fadeIn],\n})\nexport class DialogComponent {\n  @Input() dialogSize: \"small\" | \"default\" | \"large\" = \"default\";\n\n  private _disablePadding = false;\n  @Input() set disablePadding(value: boolean | \"\") {\n    this._disablePadding = coerceBooleanProperty(value);\n  }\n  get disablePadding() {\n    return this._disablePadding;\n  }\n\n  @HostBinding(\"class\") classes = [\"tw-flex\", \"tw-flex-col\", \"tw-py-4\", \"tw-max-h-screen\"];\n\n  get width() {\n    switch (this.dialogSize) {\n      case \"small\": {\n        return \"tw-w-96\";\n      }\n      case \"large\": {\n        return \"tw-w-75vw\";\n      }\n      default: {\n        return \"tw-w-50vw\";\n      }\n    }\n  }\n}\n","<div\n  [ngClass]=\"width\"\n  class=\"tw-flex tw-flex-col tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-text-contrast tw-text-main\"\n  @fadeIn\n>\n  <div\n    class=\"tw-flex tw-items-center tw-gap-4 tw-border-0 tw-border-b tw-border-solid tw-border-secondary-300 tw-p-4\"\n  >\n    <h1 bitDialogTitleContainer class=\"tw-mb-0 tw-grow tw-text-lg tw-uppercase\">\n      <ng-content select=\"[bitDialogTitle]\"></ng-content>\n    </h1>\n    <button\n      type=\"button\"\n      bitIconButton=\"bwi-close\"\n      buttonType=\"main\"\n      size=\"default\"\n      bitDialogClose\n      [attr.title]=\"'close' | i18n\"\n      [attr.aria-label]=\"'close' | i18n\"\n    ></button>\n  </div>\n\n  <div class=\"tw-overflow-y-auto tw-pb-8\" [ngClass]=\"{ 'tw-p-4': !disablePadding }\">\n    <ng-content select=\"[bitDialogContent]\"></ng-content>\n  </div>\n\n  <div\n    class=\"tw-border-0 tw-border-t tw-border-solid tw-border-secondary-300 tw-bg-background-alt tw-p-4\"\n  >\n    <ng-content select=\"[bitDialogFooter]\"></ng-content>\n  </div>\n</div>\n","import { DialogRef } from \"@angular/cdk/dialog\";\nimport { Directive, HostListener, Input, Optional } from \"@angular/core\";\n\n@Directive({\n  selector: \"[bitDialogClose]\",\n})\nexport class DialogCloseDirective {\n  @Input(\"bit-dialog-close\") dialogResult: any;\n\n  constructor(@Optional() public dialogRef: DialogRef<any>) {}\n\n  @HostListener(\"click\") close(): void {\n    this.dialogRef.close(this.dialogResult);\n  }\n}\n","import { CdkDialogContainer, DialogRef } from \"@angular/cdk/dialog\";\nimport { Directive, HostBinding, Input, OnInit, Optional } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"[bitDialogTitleContainer]\",\n})\nexport class DialogTitleContainerDirective implements OnInit {\n  @HostBinding(\"id\") id = `bit-dialog-title-${nextId++}`;\n\n  @Input() simple = false;\n\n  constructor(@Optional() private dialogRef: DialogRef<any>) {}\n\n  ngOnInit(): void {\n    // Based on angular/components, licensed under MIT\n    // https://github.com/angular/components/blob/14.2.0/src/material/dialog/dialog-content-directives.ts#L121-L128\n    if (this.dialogRef) {\n      Promise.resolve().then(() => {\n        const container = this.dialogRef.containerInstance as CdkDialogContainer;\n\n        if (container && !container._ariaLabelledBy) {\n          container._ariaLabelledBy = this.id;\n        }\n      });\n    }\n  }\n}\n","export enum SimpleDialogCloseType {\n  ACCEPT = \"accept\",\n  CANCEL = \"cancel\",\n}\n","export enum SimpleDialogType {\n  PRIMARY = \"primary\",\n  SUCCESS = \"success\",\n  INFO = \"info\",\n  WARNING = \"warning\",\n  DANGER = \"danger\",\n}\n","<div\n  class=\"tw-my-4 tw-flex tw-max-h-screen tw-w-96 tw-max-w-90vw tw-flex-col tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-text-contrast tw-text-main\"\n  @fadeIn\n>\n  <div class=\"tw-flex tw-flex-col tw-items-center tw-gap-2 tw-px-4 tw-pt-4 tw-text-center\">\n    <ng-content *ngIf=\"hasIcon; else elseBlock\" select=\"[bit-dialog-icon]\"></ng-content>\n    <ng-template #elseBlock>\n      <i class=\"bwi bwi-exclamation-triangle tw-text-3xl tw-text-warning\" aria-hidden=\"true\"></i>\n    </ng-template>\n    <h1 bitDialogTitleContainer class=\"tw-mb-0 tw-text-base tw-font-semibold\">\n      <ng-content select=\"[bitDialogTitle]\"></ng-content>\n    </h1>\n  </div>\n  <div class=\"tw-overflow-y-auto tw-px-4 tw-pt-2 tw-pb-4 tw-text-center tw-text-base\">\n    <ng-content select=\"[bitDialogContent]\"></ng-content>\n  </div>\n  <div class=\"tw-border-0 tw-border-t tw-border-solid tw-border-secondary-300 tw-p-4\">\n    <ng-content select=\"[bitDialogFooter]\"></ng-content>\n  </div>\n</div>\n","import { Component, ContentChild, Directive } from \"@angular/core\";\n\nimport { fadeIn } from \"../animations\";\n\n@Directive({ selector: \"[bit-dialog-icon]\" })\nexport class IconDirective {}\n\n@Component({\n  selector: \"bit-simple-dialog\",\n  templateUrl: \"./simple-dialog.component.html\",\n  animations: [fadeIn],\n})\nexport class SimpleDialogComponent {\n  @ContentChild(IconDirective) icon!: IconDirective;\n\n  get hasIcon() {\n    return this.icon != null;\n  }\n}\n","export abstract class BitFormControlAbstraction {\n  disabled: boolean;\n  required: boolean;\n  hasError: boolean;\n  error: [string, any];\n}\n","<label [class]=\"labelClasses\">\n  <ng-content></ng-content>\n  <span [class]=\"labelContentClasses\">\n    <ng-content select=\"bit-label\"></ng-content>\n    <span *ngIf=\"required\" class=\"tw-text-xs tw-font-normal\"> ({{ \"required\" | i18n }})</span>\n  </span>\n</label>\n<div>\n  <ng-content select=\"bit-hint\" *ngIf=\"!hasError\"></ng-content>\n</div>\n<div *ngIf=\"hasError\" class=\"tw-mt-1 tw-text-danger\">\n  <i class=\"bwi bwi-error\"></i> {{ displayError }}\n</div>\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { Component, ContentChild, HostBinding, Input } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitFormControlAbstraction } from \"./form-control.abstraction\";\n\n@Component({\n  selector: \"bit-form-control\",\n  templateUrl: \"form-control.component.html\",\n})\nexport class FormControlComponent {\n  @Input() label: string;\n\n  private _inline = false;\n  @Input() get inline() {\n    return this._inline;\n  }\n  set inline(value: boolean | \"\") {\n    this._inline = coerceBooleanProperty(value);\n  }\n\n  @ContentChild(BitFormControlAbstraction) protected formControl: BitFormControlAbstraction;\n\n  @HostBinding(\"class\") get classes() {\n    return [\"tw-mb-6\"].concat(this.inline ? [\"tw-inline-block\", \"tw-mr-4\"] : [\"tw-block\"]);\n  }\n\n  constructor(private i18nService: I18nService) {}\n\n  protected get labelClasses() {\n    return [\"tw-transition\", \"tw-select-none\", \"tw-mb-0\"].concat(\n      this.formControl.disabled ? \"tw-cursor-auto\" : \"tw-cursor-pointer\"\n    );\n  }\n\n  protected get labelContentClasses() {\n    return [\"tw-font-semibold\"].concat(\n      this.formControl.disabled ? \"tw-text-muted\" : \"tw-text-main\"\n    );\n  }\n\n  get required() {\n    return this.formControl.required;\n  }\n\n  get hasError() {\n    return this.formControl.hasError;\n  }\n\n  get error() {\n    return this.formControl.error;\n  }\n\n  get displayError() {\n    switch (this.error[0]) {\n      case \"required\":\n        return this.i18nService.t(\"inputRequired\");\n      default:\n        // Attempt to show a custom error message.\n        if (this.error[1]?.message) {\n          return this.error[1]?.message;\n        }\n\n        return this.error;\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { FormControlComponent } from \"./form-control.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitLabel } from \"./label.directive\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [FormControlComponent, BitLabel, BitHintComponent],\n  exports: [FormControlComponent, BitLabel, BitHintComponent],\n})\nexport class FormControlModule {}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"bit-hint\",\n  host: {\n    class: \"tw-text-muted tw-inline-block tw-mt-1\",\n  },\n})\nexport class BitHintComponent {\n  @HostBinding() id = `bit-hint-${nextId++}`;\n}\n","import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"bit-label\",\n})\nexport class BitLabel {}\n","import { Component, Input } from \"@angular/core\";\nimport { AbstractControl, UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"bit-error-summary\",\n  template: ` <ng-container *ngIf=\"errorCount > 0\">\n    <i class=\"bwi bwi-error\"></i> {{ \"fieldsNeedAttention\" | i18n: errorString }}\n  </ng-container>`,\n  host: {\n    class: \"tw-block tw-text-danger tw-mt-2\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorSummary {\n  @Input()\n  formGroup: UntypedFormGroup;\n\n  get errorCount(): number {\n    return this.getErrorCount(this.formGroup);\n  }\n\n  get errorString() {\n    return this.errorCount.toString();\n  }\n\n  private getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n\n      if (!control.dirty && control.untouched) {\n        return acc;\n      }\n\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n}\n","export type InputTypes =\n  | \"text\"\n  | \"password\"\n  | \"number\"\n  | \"datetime-local\"\n  | \"email\"\n  | \"checkbox\"\n  | \"search\";\n\nexport abstract class BitFormFieldControl {\n  ariaDescribedBy: string;\n  id: string;\n  labelForId: string;\n  required: boolean;\n  hasError: boolean;\n  error: [string, any];\n  type?: InputTypes;\n  spellcheck?: boolean;\n  focus?: () => void;\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-error\",\n  template: `<i class=\"bwi bwi-error\"></i> {{ displayError }}`,\n  host: {\n    class: \"tw-block tw-mt-1 tw-text-danger\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorComponent {\n  @HostBinding() id = `bit-error-${nextId++}`;\n\n  @Input() error: [string, any];\n\n  constructor(private i18nService: I18nService) {}\n\n  get displayError() {\n    switch (this.error[0]) {\n      case \"required\":\n        return this.i18nService.t(\"inputRequired\");\n      case \"email\":\n        return this.i18nService.t(\"inputEmail\");\n      case \"minlength\":\n        return this.i18nService.t(\"inputMinLength\", this.error[1]?.requiredLength);\n      case \"maxlength\":\n        return this.i18nService.t(\"inputMaxLength\", this.error[1]?.requiredLength);\n      case \"forbiddenCharacters\":\n        return this.i18nService.t(\"inputForbiddenCharacters\", this.error[1]?.characters.join(\", \"));\n      case \"multipleEmails\":\n        return this.i18nService.t(\"multipleInputEmails\");\n      default:\n        // Attempt to show a custom error message.\n        if (this.error[1]?.message) {\n          return this.error[1]?.message;\n        }\n\n        return this.error;\n    }\n  }\n}\n","<label class=\"tw-mb-1 tw-block tw-font-semibold tw-text-main\" [attr.for]=\"input.labelForId\">\n  <ng-content select=\"bit-label\"></ng-content>\n  <span *ngIf=\"input.required\" class=\"tw-text-xs tw-font-normal\"> ({{ \"required\" | i18n }})</span>\n</label>\n<div class=\"tw-flex\">\n  <div *ngIf=\"prefixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitPrefix]\"></ng-content>\n  </div>\n  <ng-content></ng-content>\n  <div *ngIf=\"suffixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitSuffix]\"></ng-content>\n  </div>\n</div>\n<ng-container [ngSwitch]=\"input.hasError\">\n  <ng-content select=\"bit-hint\" *ngSwitchCase=\"false\"></ng-content>\n  <bit-error [error]=\"input.error\" *ngSwitchCase=\"true\"></bit-error>\n</ng-container>\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  ContentChildren,\n  QueryList,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { BitHintComponent } from \"../form-control/hint.component\";\n\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldControl } from \"./form-field-control\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@Component({\n  selector: \"bit-form-field\",\n  templateUrl: \"./form-field.component.html\",\n  host: {\n    class: \"tw-mb-6 tw-block\",\n  },\n})\nexport class BitFormFieldComponent implements AfterContentChecked {\n  @ContentChild(BitFormFieldControl) input: BitFormFieldControl;\n  @ContentChild(BitHintComponent) hint: BitHintComponent;\n\n  @ViewChild(BitErrorComponent) error: BitErrorComponent;\n\n  @ContentChildren(BitPrefixDirective) prefixChildren: QueryList<BitPrefixDirective>;\n  @ContentChildren(BitSuffixDirective) suffixChildren: QueryList<BitSuffixDirective>;\n\n  ngAfterContentChecked(): void {\n    if (this.error) {\n      this.input.ariaDescribedBy = this.error.id;\n    } else if (this.hint) {\n      this.input.ariaDescribedBy = this.hint.id;\n    } else {\n      this.input.ariaDescribedBy = undefined;\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"./input.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitInputDirective],\n  exports: [BitInputDirective],\n})\nexport class InputModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { FormControlModule } from \"../form-control\";\nimport { BitInputDirective } from \"../input/input.directive\";\nimport { InputModule } from \"../input/input.module\";\nimport { MultiSelectComponent } from \"../multi-select/multi-select.component\";\nimport { MultiSelectModule } from \"../multi-select/multi-select.module\";\nimport { SharedModule } from \"../shared\";\n\nimport { BitErrorSummary } from \"./error-summary.component\";\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldComponent } from \"./form-field.component\";\nimport { BitPasswordInputToggleDirective } from \"./password-input-toggle.directive\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@NgModule({\n  imports: [SharedModule, FormControlModule, InputModule, MultiSelectModule],\n  declarations: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitPasswordInputToggleDirective,\n    BitPrefixDirective,\n    BitSuffixDirective,\n  ],\n  exports: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitInputDirective,\n    BitPasswordInputToggleDirective,\n    BitPrefixDirective,\n    BitSuffixDirective,\n    MultiSelectComponent,\n    FormControlModule,\n  ],\n})\nexport class FormFieldModule {}\n","import {\n  AfterContentInit,\n  Directive,\n  EventEmitter,\n  Host,\n  HostBinding,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitIconButtonComponent } from \"../icon-button/icon-button.component\";\n\nimport { BitFormFieldComponent } from \"./form-field.component\";\n\n@Directive({\n  selector: \"[bitPasswordInputToggle]\",\n})\nexport class BitPasswordInputToggleDirective implements AfterContentInit, OnChanges {\n  /**\n   * Whether the input is toggled to show the password.\n   */\n  @HostBinding(\"attr.aria-pressed\") @Input() toggled = false;\n  @Output() toggledChange = new EventEmitter<boolean>();\n\n  @HostBinding(\"attr.title\") title = this.i18nService.t(\"toggleVisibility\");\n  @HostBinding(\"attr.aria-label\") label = this.i18nService.t(\"toggleVisibility\");\n\n  /**\n   * Click handler to toggle the state of the input type.\n   */\n  @HostListener(\"click\") onClick() {\n    this.toggled = !this.toggled;\n    this.toggledChange.emit(this.toggled);\n\n    this.update();\n\n    this.formField.input?.focus();\n  }\n\n  constructor(\n    @Host() private button: BitIconButtonComponent,\n    private formField: BitFormFieldComponent,\n    private i18nService: I18nService\n  ) {}\n\n  get icon() {\n    return this.toggled ? \"bwi-eye-slash\" : \"bwi-eye\";\n  }\n\n  ngOnChanges(): void {\n    this.update();\n  }\n\n  ngAfterContentInit(): void {\n    this.toggled = this.formField.input.type !== \"password\";\n    this.button.icon = this.icon;\n  }\n\n  private update() {\n    this.button.icon = this.icon;\n    if (this.formField.input?.type != null) {\n      this.formField.input.type = this.toggled ? \"text\" : \"password\";\n      this.formField.input.spellcheck = this.toggled ? false : undefined;\n    }\n  }\n}\n","import { Directive, HostBinding, Input, OnInit, Optional } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\n\nexport const PrefixClasses = [\n  \"tw-bg-background-alt\",\n  \"tw-border\",\n  \"tw-border-solid\",\n  \"tw-border-secondary-500\",\n  \"tw-text-muted\",\n  \"tw-rounded-none\",\n];\n\nexport const PrefixButtonClasses = [\n  \"hover:tw-bg-text-muted\",\n  \"hover:tw-text-contrast\",\n  \"disabled:tw-opacity-100\",\n  \"disabled:tw-bg-secondary-100\",\n  \"disabled:hover:tw-bg-secondary-100\",\n  \"disabled:hover:tw-text-muted\",\n  \"focus-visible:tw-ring-primary-700\",\n\n  \"focus-visible:tw-border-primary-700\",\n  \"focus-visible:tw-ring-1\",\n  \"focus-visible:tw-ring-inset\",\n  \"focus-visible:tw-ring-primary-700\",\n  \"focus-visible:tw-z-10\",\n];\n\nexport const PrefixStaticContentClasses = [\"tw-block\", \"tw-px-3\", \"tw-py-1.5\"];\n\n@Directive({\n  selector: \"[bitPrefix]\",\n})\nexport class BitPrefixDirective implements OnInit {\n  constructor(@Optional() private buttonComponent: ButtonLikeAbstraction) {}\n\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\n      \"tw-border-r-0\",\n      \"first:tw-rounded-l\",\n\n      \"focus-visible:tw-border-r\",\n      \"focus-visible:tw-mr-[-1px]\",\n    ]).concat(this.buttonComponent != undefined ? PrefixButtonClasses : PrefixStaticContentClasses);\n  }\n\n  ngOnInit(): void {\n    this.buttonComponent?.setButtonType(\"unstyled\");\n  }\n}\n","import { Directive, HostBinding, Input, Optional } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\n\nimport { PrefixButtonClasses, PrefixClasses, PrefixStaticContentClasses } from \"./prefix.directive\";\n\n@Directive({\n  selector: \"[bitSuffix]\",\n})\nexport class BitSuffixDirective {\n  constructor(@Optional() private buttonComponent: ButtonLikeAbstraction) {}\n\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\n      \"tw-border-l-0\",\n      \"last:tw-rounded-r\",\n\n      \"focus-visible:tw-border-l\",\n      \"focus-visible:tw-ml-[-1px]\",\n    ]).concat(this.buttonComponent != undefined ? PrefixButtonClasses : PrefixStaticContentClasses);\n  }\n\n  ngOnInit(): void {\n    this.buttonComponent?.setButtonType(\"unstyled\");\n  }\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction, ButtonType } from \"../shared/button-like.abstraction\";\n\nexport type IconButtonType = ButtonType | \"contrast\" | \"main\" | \"muted\" | \"light\";\n\nconst focusRing = [\n  // Workaround for box-shadow with transparent offset issue:\n  // https://github.com/tailwindlabs/tailwindcss/issues/3595\n  // Remove `before:` and use regular `tw-ring` when browser no longer has bug, or better:\n  // switch to `outline` with `outline-offset` when Safari supports border radius on outline.\n  // Using `box-shadow` to create outlines is a hack and as such `outline` should be preferred.\n  \"tw-relative\",\n  \"before:tw-content-['']\",\n  \"before:tw-block\",\n  \"before:tw-absolute\",\n  \"before:-tw-inset-[3px]\",\n  \"before:tw-rounded-md\",\n  \"before:tw-transition\",\n  \"before:tw-ring\",\n  \"before:tw-ring-transparent\",\n  \"focus-visible:tw-z-10\",\n];\n\nconst styles: Record<IconButtonType, string[]> = {\n  contrast: [\n    \"tw-bg-transparent\",\n    \"!tw-text-contrast\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-text-contrast\",\n    \"focus-visible:before:tw-ring-text-contrast\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  main: [\n    \"tw-bg-transparent\",\n    \"!tw-text-main\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-text-main\",\n    \"focus-visible:before:tw-ring-text-main\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  muted: [\n    \"tw-bg-transparent\",\n    \"!tw-text-muted\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-primary-700\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  primary: [\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"tw-border-primary-500\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-primary-500\",\n    \"disabled:hover:tw-bg-primary-500\",\n    ...focusRing,\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"!tw-text-muted\",\n    \"tw-border-text-muted\",\n    \"hover:!tw-text-contrast\",\n    \"hover:tw-bg-text-muted\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-text-muted\",\n    \"disabled:hover:tw-bg-transparent\",\n    \"disabled:hover:!tw-text-muted\",\n    \"disabled:hover:tw-border-text-muted\",\n    ...focusRing,\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"!tw-text-danger\",\n    \"tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"hover:tw-bg-danger-500\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-danger-500\",\n    \"disabled:hover:tw-bg-transparent\",\n    \"disabled:hover:!tw-text-danger\",\n    \"disabled:hover:tw-border-danger-500\",\n    ...focusRing,\n  ],\n  light: [\n    \"tw-bg-transparent\",\n    \"!tw-text-alt2\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-text-alt2\",\n    \"focus-visible:before:tw-ring-text-alt2\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  unstyled: [],\n};\n\nexport type IconButtonSize = \"default\" | \"small\";\n\nconst sizes: Record<IconButtonSize, string[]> = {\n  default: [\"tw-px-2.5\", \"tw-py-1.5\"],\n  small: [\"tw-leading-none\", \"tw-text-base\", \"tw-p-1\"],\n};\n\n@Component({\n  selector: \"button[bitIconButton]:not(button[bitButton])\",\n  templateUrl: \"icon-button.component.html\",\n  providers: [{ provide: ButtonLikeAbstraction, useExisting: BitIconButtonComponent }],\n})\nexport class BitIconButtonComponent implements ButtonLikeAbstraction {\n  @Input(\"bitIconButton\") icon: string;\n\n  @Input() buttonType: IconButtonType;\n\n  @Input() size: IconButtonSize = \"default\";\n\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n    ]\n      .concat(styles[this.buttonType ?? \"main\"])\n      .concat(sizes[this.size]);\n  }\n\n  get iconClass() {\n    return [this.icon, \"!tw-m-0\"];\n  }\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    const disabled = this.disabled != null && this.disabled !== false;\n    return disabled || this.loading ? true : null;\n  }\n\n  @Input() loading = false;\n  @Input() disabled = false;\n\n  setButtonType(value: \"primary\" | \"secondary\" | \"danger\" | \"unstyled\") {\n    this.buttonType = value;\n  }\n}\n","<span class=\"tw-relative\">\n  <span [ngClass]=\"{ 'tw-invisible': loading }\">\n    <i class=\"bwi\" [ngClass]=\"iconClass\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"tw-absolute tw-inset-0 tw-flex tw-items-center tw-justify-center\"\n    [ngClass]=\"{ 'tw-invisible': !loading }\"\n  >\n    <i\n      class=\"bwi bwi-spinner bwi-spin\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{ 'bwi-lg': size === 'default' }\"\n    ></i>\n  </span>\n</span>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconButtonComponent } from \"./icon-button.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconButtonComponent],\n  exports: [BitIconButtonComponent],\n})\nexport class IconButtonModule {}\n","import { Component, HostBinding, Input } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { Icon, isIcon } from \"./icon\";\n\n@Component({\n  selector: \"bit-icon\",\n  template: ``,\n})\nexport class BitIconComponent {\n  @Input() icon: Icon;\n\n  @HostBinding()\n  protected get innerHtml() {\n    if (!isIcon(this.icon)) {\n      return \"\";\n    }\n\n    const svg = this.icon.svg;\n    return this.domSanitizer.bypassSecurityTrustHtml(svg);\n  }\n\n  constructor(private domSanitizer: DomSanitizer) {}\n}\n","class Icon {\n  constructor(readonly svg: string) {}\n}\n\n// We only export the type to prohibit the creation of Icons without using\n// the `svgIcon` template literal tag.\nexport type { Icon };\n\nexport function isIcon(icon: unknown): icon is Icon {\n  return icon instanceof Icon;\n}\n\nexport class DynamicContentNotAllowedError extends Error {\n  constructor() {\n    super(\"Dynamic content in icons is not allowed due to risk of user-injected XSS.\");\n  }\n}\n\nexport function svgIcon(strings: TemplateStringsArray, ...values: unknown[]): Icon {\n  if (values.length > 0) {\n    throw new DynamicContentNotAllowedError();\n  }\n\n  return new Icon(strings[0]);\n}\n","import { svgIcon } from \"../icon\";\n\nexport const Search = svgIcon`\n<svg width=\"120\" height=\"120\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <g opacity=\".49\">\n    <path class=\"tw-fill-secondary-300\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.36 73.256a30.004 30.004 0 0 0 10.346 1.826c16.282 0 29.482-12.912 29.482-28.84 0-.384-.008-.766-.023-1.145h28.726v39.57H40.36v-11.41Z\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M21.546 46.241c0 15.929 13.2 28.841 29.482 28.841S80.51 62.17 80.51 46.241c0-15.928-13.2-28.841-29.482-28.841S21.546 30.313 21.546 46.241Z\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-fill-secondary-500\" d=\"M35.36 70.595a1.2 1.2 0 0 0-2.4 0h2.4Zm77.475-30.356a2.343 2.343 0 0 1 2.365 2.33h2.4c0-2.593-2.107-4.73-4.765-4.73v2.4Zm2.365 2.33v46.047h2.4V42.57h-2.4Zm0 46.047c0 1.293-1.058 2.33-2.365 2.33v2.4c2.59 0 4.765-2.069 4.765-4.73h-2.4Zm-2.365 2.33h-75.11v2.4h75.11v-2.4Zm-75.11 0a2.343 2.343 0 0 1-2.365-2.33h-2.4c0 2.594 2.107 4.73 4.766 4.73v-2.4Zm-2.365-2.33v-18.02h-2.4v18.02h2.4Zm44.508-48.377h32.967v-2.4H79.868v2.4Z\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M79.907 45.287h29.114v39.57H40.487V73.051\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M57.356 102.56h35.849\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M68.954 92.147v10.413m11.599-10.413v10.413\" stroke-width=\"4\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"m27.44 64.945-4.51 4.51L5.72 86.663a3 3 0 0 0 0 4.243l1.238 1.238a3 3 0 0 0 4.243 0L28.41 74.936l4.51-4.51\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M101.293 53.154H85.178m16.115 6.043H90.214m-5.036 0h-7.553m23.668 6.043h-7.05m-5.54 0h-15.61m28.2 6.042H85.178m-5.538 0h-8.562m30.215 6.043H78.632m-5.539 0H60m-5.54 0h-8.057\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M29.164 33.01h41.529a2.4 2.4 0 0 1 2.4 2.4v6.28a2.4 2.4 0 0 1-2.4 2.4h-41.53a2.4 2.4 0 0 1-2.4-2.4v-6.28a2.4 2.4 0 0 1 2.4-2.4Z\" stroke-width=\"4\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M22.735 54.16h34.361a2.4 2.4 0 0 1 2.4 2.4v6.28a2.4 2.4 0 0 1-2.4 2.4H28.778m50.358-11.08h-6.161a2.4 2.4 0 0 0-2.4 2.4v6.414a2.266 2.266 0 0 0 2.266 2.265\" stroke-width=\"4\" stroke-linecap=\"round\" />\n  </g>\n</svg>\n`;\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  NgZone,\n  Optional,\n  Self,\n} from \"@angular/core\";\nimport { NgControl, Validators } from \"@angular/forms\";\n\nimport { BitFormFieldControl, InputTypes } from \"../form-field/form-field-control\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"input[bitInput], select[bitInput], textarea[bitInput]\",\n  providers: [{ provide: BitFormFieldControl, useExisting: BitInputDirective }],\n})\nexport class BitInputDirective implements BitFormFieldControl {\n  @HostBinding(\"class\") @Input() get classList() {\n    return [\n      \"tw-block\",\n      \"tw-w-full\",\n      \"tw-px-3\",\n      \"tw-py-1.5\",\n      \"tw-bg-background-alt\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      this.hasError ? \"tw-border-danger-500\" : \"tw-border-secondary-500\",\n      \"tw-text-main\",\n      \"tw-placeholder-text-muted\",\n      // Rounded\n      \"tw-rounded-none\",\n      \"first:tw-rounded-l\",\n      \"last:tw-rounded-r\",\n      // Focus\n      \"focus:tw-outline-none\",\n      \"focus:tw-border-primary-700\",\n      \"focus:tw-ring-1\",\n      \"focus:tw-ring-inset\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n      \"disabled:tw-bg-secondary-100\",\n    ].filter((s) => s != \"\");\n  }\n\n  @HostBinding() @Input() id = `bit-input-${nextId++}`;\n\n  @HostBinding(\"attr.aria-describedby\") ariaDescribedBy: string;\n\n  @HostBinding(\"attr.aria-invalid\") get ariaInvalid() {\n    return this.hasError ? true : undefined;\n  }\n\n  @HostBinding(\"attr.type\") @Input() type?: InputTypes;\n\n  @HostBinding(\"attr.spellcheck\") @Input() spellcheck?: boolean;\n\n  @HostBinding()\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  @Input() hasPrefix = false;\n  @Input() hasSuffix = false;\n\n  get labelForId(): string {\n    return this.id;\n  }\n\n  private isActive = true;\n  @HostListener(\"blur\")\n  onBlur() {\n    this.isActive = true;\n  }\n\n  @HostListener(\"input\")\n  onInput() {\n    this.isActive = false;\n  }\n\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched && this.isActive;\n  }\n\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl.errors)[0];\n    return [key, this.ngControl.errors[key]];\n  }\n\n  constructor(\n    @Optional() @Self() private ngControl: NgControl,\n    private ngZone: NgZone,\n    private elementRef: ElementRef<HTMLInputElement>\n  ) {}\n\n  focus() {\n    this.ngZone.runOutsideAngular(() => {\n      const end = this.elementRef.nativeElement.value.length;\n      this.elementRef.nativeElement.setSelectionRange(end, end);\n      this.elementRef.nativeElement.focus();\n    });\n  }\n}\n","import { Input, HostBinding, Directive } from \"@angular/core\";\n\nexport type LinkType = \"primary\" | \"secondary\" | \"contrast\";\n\nconst linkStyles: Record<LinkType, string[]> = {\n  primary: [\n    \"!tw-text-primary-500\",\n    \"hover:!tw-text-primary-500\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:!tw-text-primary-500/60\",\n  ],\n  secondary: [\n    \"!tw-text-main\",\n    \"hover:!tw-text-main\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:!tw-text-muted/60\",\n  ],\n  contrast: [\n    \"!tw-text-contrast\",\n    \"hover:!tw-text-contrast\",\n    \"focus-visible:before:tw-ring-text-contrast\",\n    \"disabled:!tw-text-contrast/60\",\n  ],\n};\n\nconst commonStyles = [\n  \"tw-leading-none\",\n  \"tw-p-0\",\n  \"tw-font-semibold\",\n  \"tw-bg-transparent\",\n  \"tw-border-0\",\n  \"tw-border-none\",\n  \"tw-rounded\",\n  \"tw-transition\",\n  \"hover:tw-underline\",\n  \"hover:tw-decoration-1\",\n  \"disabled:tw-no-underline\",\n  \"disabled:tw-cursor-not-allowed\",\n  \"focus-visible:tw-outline-none\",\n  \"focus-visible:tw-underline\",\n  \"focus-visible:tw-decoration-1\",\n\n  // Workaround for html button tag not being able to be set to `display: inline`\n  // and at the same time not being able to use `tw-ring-offset` because of box-shadow issue.\n  // https://github.com/w3c/csswg-drafts/issues/3226\n  // Add `tw-inline`, add `tw-py-0.5` and use regular `tw-ring` if issue is fixed.\n  //\n  // https://github.com/tailwindlabs/tailwindcss/issues/3595\n  // Remove `before:` and use regular `tw-ring` when browser no longer has bug, or better:\n  // switch to `outline` with `outline-offset` when Safari supports border radius on outline.\n  // Using `box-shadow` to create outlines is a hack and as such `outline` should be preferred.\n  \"tw-relative\",\n  \"before:tw-content-['']\",\n  \"before:tw-block\",\n  \"before:tw-absolute\",\n  \"before:-tw-inset-x-[0.1em]\",\n  \"before:tw-rounded-md\",\n  \"before:tw-transition\",\n  \"focus-visible:before:tw-ring-2\",\n  \"focus-visible:before:tw-ring-text-contrast\",\n  \"focus-visible:tw-z-10\",\n];\n\n@Directive()\nabstract class LinkDirective {\n  @Input()\n  linkType: LinkType = \"primary\";\n}\n\n@Directive({\n  selector: \"a[bitLink]\",\n})\nexport class AnchorLinkDirective extends LinkDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\"before:-tw-inset-y-[0.125rem]\"]\n      .concat(commonStyles)\n      .concat(linkStyles[this.linkType] ?? []);\n  }\n}\n\n@Directive({\n  selector: \"button[bitLink]\",\n})\nexport class ButtonLinkDirective extends LinkDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\"before:-tw-inset-y-[0.25rem]\"]\n      .concat(commonStyles)\n      .concat(linkStyles[this.linkType] ?? []);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AnchorLinkDirective, ButtonLinkDirective } from \"./link.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [AnchorLinkDirective, ButtonLinkDirective],\n  declarations: [AnchorLinkDirective, ButtonLinkDirective],\n})\nexport class LinkModule {}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-menu-divider\",\n  templateUrl: \"./menu-divider.component.html\",\n})\nexport class MenuDividerComponent {}\n","<div\n  class=\"tw-my-2 tw-border-0 tw-border-t tw-border-solid tw-border-t-secondary-500\"\n  role=\"separator\"\n></div>\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding } from \"@angular/core\";\n\n@Directive({\n  selector: \"[bitMenuItem]\",\n})\nexport class MenuItemDirective implements FocusableOption {\n  @HostBinding(\"class\") classList = [\n    \"tw-block\",\n    \"tw-py-1\",\n    \"tw-px-4\",\n    \"!tw-text-main\",\n    \"!tw-no-underline\",\n    \"tw-cursor-pointer\",\n    \"tw-border-none\",\n    \"tw-bg-background\",\n    \"tw-text-left\",\n    \"hover:tw-bg-secondary-100\",\n    \"focus:tw-bg-secondary-100\",\n    \"focus:tw-z-50\",\n    \"focus:tw-outline-none\",\n    \"focus:tw-ring\",\n    \"focus:tw-ring-offset-2\",\n    \"focus:tw-ring-primary-700\",\n    \"active:!tw-ring-0\",\n    \"active:!tw-ring-offset-0\",\n  ];\n  @HostBinding(\"attr.role\") role = \"menuitem\";\n  @HostBinding(\"tabIndex\") tabIndex = \"-1\";\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { filter, mergeWith } from \"rxjs/operators\";\n\nimport { MenuComponent } from \"./menu.component\";\n\n@Directive({\n  selector: \"[bitMenuTriggerFor]\",\n})\nexport class MenuTriggerForDirective implements OnDestroy {\n  @HostBinding(\"attr.aria-expanded\") isOpen = false;\n  @HostBinding(\"attr.aria-haspopup\") get hasPopup(): \"menu\" | \"dialog\" {\n    return this.menu?.ariaRole || \"menu\";\n  }\n  @HostBinding(\"attr.role\") role = \"button\";\n\n  @Input(\"bitMenuTriggerFor\") menu: MenuComponent;\n\n  private overlayRef: OverlayRef;\n  private defaultMenuConfig: OverlayConfig = {\n    panelClass: \"bit-menu-panel\",\n    hasBackdrop: true,\n    backdropClass: \"cdk-overlay-transparent-backdrop\",\n    scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    positionStrategy: this.overlay\n      .position()\n      .flexibleConnectedTo(this.elementRef)\n      .withPositions([\n        {\n          originX: \"start\",\n          originY: \"bottom\",\n          overlayX: \"start\",\n          overlayY: \"top\",\n        },\n        {\n          originX: \"end\",\n          originY: \"bottom\",\n          overlayX: \"end\",\n          overlayY: \"top\",\n        },\n      ])\n      .withLockedPosition(true)\n      .withFlexibleDimensions(false)\n      .withPush(true),\n  };\n  private closedEventsSub: Subscription;\n  private keyDownEventsSub: Subscription;\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private viewContainerRef: ViewContainerRef,\n    private overlay: Overlay\n  ) {}\n\n  @HostListener(\"click\") toggleMenu() {\n    this.isOpen ? this.destroyMenu() : this.openMenu();\n  }\n\n  ngOnDestroy() {\n    this.disposeAll();\n  }\n\n  private openMenu() {\n    if (this.menu == null) {\n      throw new Error(\"Cannot find bit-menu element\");\n    }\n\n    this.isOpen = true;\n    this.overlayRef = this.overlay.create(this.defaultMenuConfig);\n\n    const templatePortal = new TemplatePortal(this.menu.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n\n    this.closedEventsSub = this.getClosedEvents().subscribe((event: KeyboardEvent | undefined) => {\n      if (event?.key === \"Tab\") {\n        // Required to ensure tab order resumes correctly\n        this.elementRef.nativeElement.focus();\n      }\n      this.destroyMenu();\n    });\n    this.keyDownEventsSub =\n      this.menu.keyManager &&\n      this.overlayRef\n        .keydownEvents()\n        .subscribe((event: KeyboardEvent) => this.menu.keyManager.onKeydown(event));\n  }\n\n  private destroyMenu() {\n    if (this.overlayRef == null || !this.isOpen) {\n      return;\n    }\n\n    this.isOpen = false;\n    this.disposeAll();\n  }\n\n  private getClosedEvents(): Observable<any> {\n    const detachments = this.overlayRef.detachments();\n    const escKey = this.overlayRef.keydownEvents().pipe(\n      filter((event: KeyboardEvent) => {\n        const keys = this.menu.ariaRole === \"menu\" ? [\"Escape\", \"Tab\"] : [\"Escape\"];\n        return keys.includes(event.key);\n      })\n    );\n    const backdrop = this.overlayRef.backdropClick();\n    const menuClosed = this.menu.closed;\n\n    return detachments.pipe(mergeWith(escKey, backdrop, menuClosed));\n  }\n\n  private disposeAll() {\n    this.closedEventsSub?.unsubscribe();\n    this.overlayRef?.dispose();\n    this.keyDownEventsSub?.unsubscribe();\n  }\n}\n","<ng-template>\n  <div\n    (click)=\"closed.emit()\"\n    class=\"tw-flex tw-shrink-0 tw-flex-col tw-rounded tw-border tw-border-solid tw-border-secondary-500 tw-bg-background tw-bg-clip-padding tw-py-2\"\n    [attr.role]=\"ariaRole\"\n    [attr.aria-label]=\"ariaLabel\"\n    cdkTrapFocus\n    [cdkTrapFocusAutoCapture]=\"true\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  Component,\n  Output,\n  TemplateRef,\n  ViewChild,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  Input,\n} from \"@angular/core\";\n\nimport { MenuItemDirective } from \"./menu-item.directive\";\n\n@Component({\n  selector: \"bit-menu\",\n  templateUrl: \"./menu.component.html\",\n  exportAs: \"menuComponent\",\n})\nexport class MenuComponent implements AfterContentInit {\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @Output() closed = new EventEmitter<void>();\n  @ContentChildren(MenuItemDirective, { descendants: true })\n  menuItems: QueryList<MenuItemDirective>;\n  keyManager?: FocusKeyManager<MenuItemDirective>;\n\n  @Input() ariaRole: \"menu\" | \"dialog\" = \"menu\";\n\n  @Input() ariaLabel: string;\n\n  ngAfterContentInit() {\n    if (this.ariaRole === \"menu\") {\n      this.keyManager = new FocusKeyManager(this.menuItems).withWrap();\n    }\n  }\n}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { MenuDividerComponent } from \"./menu-divider.component\";\nimport { MenuItemDirective } from \"./menu-item.directive\";\nimport { MenuTriggerForDirective } from \"./menu-trigger-for.directive\";\nimport { MenuComponent } from \"./menu.component\";\n\n@NgModule({\n  imports: [A11yModule, CommonModule, OverlayModule],\n  declarations: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n  exports: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n})\nexport class MenuModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\n\nimport { BadgeModule } from \"../badge\";\nimport { SharedModule } from \"../shared\";\n\nimport { MultiSelectComponent } from \"./multi-select.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NgSelectModule, BadgeModule, SharedModule],\n  exports: [MultiSelectComponent],\n  declarations: [MultiSelectComponent],\n})\nexport class MultiSelectModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormControlModule } from \"../form-control\";\n\nimport { RadioButtonComponent } from \"./radio-button.component\";\nimport { RadioGroupComponent } from \"./radio-group.component\";\nimport { RadioInputComponent } from \"./radio-input.component\";\n\n@NgModule({\n  imports: [CommonModule, FormControlModule],\n  declarations: [RadioInputComponent, RadioButtonComponent, RadioGroupComponent],\n  exports: [FormControlModule, RadioInputComponent, RadioButtonComponent, RadioGroupComponent],\n})\nexport class RadioButtonModule {}\n","export type ButtonType = \"primary\" | \"secondary\" | \"danger\" | \"unstyled\";\n\nexport abstract class ButtonLikeAbstraction {\n  loading: boolean;\n  disabled: boolean;\n  setButtonType: (value: ButtonType) => void;\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n/**\n * Temporarily duplicate this pipe\n */\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { I18nPipe } from \"./i18n.pipe\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [I18nPipe],\n  exports: [CommonModule, I18nPipe],\n})\nexport class SharedModule {}\n","import { HostBinding, Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"th[bitCell], td[bitCell]\",\n})\nexport class CellDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\"tw-p-3\"];\n  }\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"tr[bitRow]\",\n})\nexport class RowDirective {\n  @Input() alignContent: \"top\" | \"middle\" | \"bottom\" | \"baseline\" = \"baseline\";\n\n  get alignmentClass(): string {\n    switch (this.alignContent) {\n      case \"top\":\n        return \"tw-align-top\";\n      case \"middle\":\n        return \"tw-align-middle\";\n      case \"bottom\":\n        return \"tw-align-bottom\";\n      default:\n        return \"tw-align-baseline\";\n    }\n  }\n\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-border-0\",\n      \"tw-border-b\",\n      \"tw-border-secondary-300\",\n      \"tw-border-solid\",\n      \"hover:tw-bg-background-alt\",\n      \"last:tw-border-0\",\n      this.alignmentClass,\n    ];\n  }\n}\n","<table class=\"tw-w-full tw-table-auto tw-leading-normal tw-text-main\">\n  <thead\n    class=\"tw-text-bold tw-border-0 tw-border-b-2 tw-border-solid tw-border-secondary-300 tw-text-muted\"\n  >\n    <ng-content select=\"[header]\"></ng-content>\n  </thead>\n  <tbody>\n    <ng-container\n      *ngTemplateOutlet=\"templateVariable.template; context: { $implicit: rows }\"\n    ></ng-container>\n  </tbody>\n</table>\n","import { isDataSource } from \"@angular/cdk/collections\";\nimport {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnDestroy,\n  TemplateRef,\n} from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { TableDataSource } from \"./table-data-source\";\n\n@Directive({\n  selector: \"ng-template[body]\",\n})\nexport class TableBodyDirective {\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  constructor(public readonly template: TemplateRef<any>) {}\n}\n\n@Component({\n  selector: \"bit-table\",\n  templateUrl: \"./table.component.html\",\n})\nexport class TableComponent implements OnDestroy, AfterContentChecked {\n  @Input() dataSource: TableDataSource<any>;\n\n  @ContentChild(TableBodyDirective) templateVariable: TableBodyDirective;\n\n  protected rows: Observable<readonly any[]>;\n\n  private _initialized = false;\n\n  ngAfterContentChecked(): void {\n    if (!this._initialized && isDataSource(this.dataSource)) {\n      this._initialized = true;\n\n      const dataStream = this.dataSource.connect();\n      this.rows = dataStream;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (isDataSource(this.dataSource)) {\n      this.dataSource.disconnect();\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\n/**\n * Component used for styling the tab header/background for both content and navigation tabs\n */\n@Component({\n  selector: \"bit-tab-header\",\n  host: {\n    class:\n      \"tw-h-16 tw-pl-4 tw-bg-background-alt tw-flex tw-items-end tw-border-0 tw-border-b tw-border-solid tw-border-secondary-300\",\n  },\n  template: `<ng-content></ng-content>`,\n})\nexport class TabHeaderComponent {}\n","import { Directive } from \"@angular/core\";\n\n/**\n * Directive used for styling the container for bit tab labels\n */\n@Directive({\n  selector: \"[bitTabListContainer]\",\n  host: {\n    class: \"tw-inline-flex tw-flex-wrap tw-leading-5\",\n  },\n})\nexport class TabListContainerDirective {}\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\n/**\n * Directive used for styling tab header items for both nav links (anchor tags)\n * and content tabs (button tags)\n */\n@Directive({ selector: \"[bitTabListItem]\" })\nexport class TabListItemDirective implements FocusableOption {\n  @Input() active: boolean;\n  @Input() disabled: boolean;\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    return this.disabled || null; // native disabled attr must be null when false\n  }\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  click() {\n    this.elementRef.nativeElement.click();\n  }\n\n  @HostBinding(\"class\")\n  get classList(): string[] {\n    return this.baseClassList\n      .concat(this.active ? this.activeClassList : [])\n      .concat(this.disabled ? this.disabledClassList : [])\n      .concat(this.textColorClassList);\n  }\n\n  /**\n   * Classes used for styling tab item text color.\n   * Separate text color class list required to override bootstrap classes in Web.\n   */\n  get textColorClassList(): string[] {\n    if (this.disabled) {\n      return [\"!tw-text-muted\", \"hover:!tw-text-muted\"];\n    }\n    if (this.active) {\n      return [\"!tw-text-primary-500\", \"hover:!tw-text-primary-700\"];\n    }\n    return [\"!tw-text-main\", \"hover:!tw-text-main\"];\n  }\n\n  get baseClassList(): string[] {\n    return [\n      \"tw-block\",\n      \"tw-relative\",\n      \"tw-py-2\",\n      \"tw-px-4\",\n      \"tw-font-semibold\",\n      \"tw-transition\",\n      \"tw-rounded-t\",\n      \"tw-border-0\",\n      \"tw-border-x\",\n      \"tw-border-t-4\",\n      \"tw-border-transparent\",\n      \"tw-border-solid\",\n      \"tw-bg-transparent\",\n      \"hover:tw-underline\",\n      \"focus-visible:tw-z-10\",\n      \"focus-visible:tw-outline-none\",\n      \"focus-visible:tw-ring-2\",\n      \"focus-visible:tw-ring-primary-700\",\n    ];\n  }\n\n  get disabledClassList(): string[] {\n    return [\"!tw-bg-secondary-100\", \"!tw-no-underline\", \"tw-cursor-not-allowed\"];\n  }\n\n  get activeClassList(): string[] {\n    return [\n      \"tw--mb-px\",\n      \"tw-border-x-secondary-300\",\n      \"tw-border-t-primary-500\",\n      \"tw-border-b\",\n      \"tw-border-b-background\",\n      \"tw-bg-background\",\n      \"hover:tw-border-t-primary-700\",\n      \"focus-visible:tw-border-t-primary-700\",\n      \"focus-visible:!tw-text-primary-700\",\n    ];\n  }\n}\n","import { TemplatePortal } from \"@angular/cdk/portal\";\nimport { Component, HostBinding, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-tab-body\",\n  templateUrl: \"tab-body.component.html\",\n})\nexport class TabBodyComponent {\n  private _firstRender: boolean;\n\n  @Input() content: TemplatePortal;\n  @Input() preserveContent = false;\n\n  @HostBinding(\"attr.hidden\") get hidden() {\n    return !this.active || null;\n  }\n\n  @Input()\n  get active() {\n    return this._active;\n  }\n  set active(value: boolean) {\n    this._active = value;\n    if (this._active) {\n      this._firstRender = true;\n    }\n  }\n  private _active: boolean;\n\n  /**\n   * The tab content to render.\n   * Inactive tabs that have never been rendered/active do not have their\n   * content rendered by default for performance. If `preserveContent` is `true`\n   * then the content persists after the first time content is rendered.\n   */\n  get tabContent() {\n    if (this.active) {\n      return this.content;\n    }\n    if (this.preserveContent && this._firstRender) {\n      return this.content;\n    }\n    return null;\n  }\n}\n","<bit-tab-header>\n  <div\n    bitTabListContainer\n    role=\"tablist\"\n    [attr.aria-label]=\"label\"\n    (keydown)=\"keyManager.onKeydown($event)\"\n  >\n    <button\n      bitTabListItem\n      *ngFor=\"let tab of tabs; let i = index\"\n      type=\"button\"\n      role=\"tab\"\n      [id]=\"getTabLabelId(i)\"\n      [active]=\"tab.isActive\"\n      [disabled]=\"tab.disabled\"\n      [attr.aria-selected]=\"selectedIndex === i\"\n      [attr.tabindex]=\"selectedIndex === i ? 0 : -1\"\n      (click)=\"selectTab(i)\"\n    >\n      <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n\n      <ng-template #content>\n        <ng-template [ngIf]=\"tab.templateLabel\" [ngIfElse]=\"tabTextLabel\">\n          <ng-container [ngTemplateOutlet]=\"tab.templateLabel.templateRef\"></ng-container>\n        </ng-template>\n\n        <ng-template #tabTextLabel>{{ tab.textLabel }}</ng-template>\n      </ng-template>\n    </button>\n  </div>\n</bit-tab-header>\n<div class=\"tw-px-4 tw-pt-5\">\n  <bit-tab-body\n    role=\"tabpanel\"\n    *ngFor=\"let tab of tabs; let i = index\"\n    [id]=\"getTabContentId(i)\"\n    [attr.tabindex]=\"tab.contentTabIndex\"\n    [attr.labeledby]=\"getTabLabelId(i)\"\n    [active]=\"tab.isActive\"\n    [content]=\"tab.content\"\n    [preserveContent]=\"preserveContent\"\n  >\n  </bit-tab-body>\n</div>\n","<ng-template [cdkPortalOutlet]=\"tabContent\"></ng-template>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport { coerceNumberProperty } from \"@angular/cdk/coercion\";\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChildren,\n} from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { TabListItemDirective } from \"../shared/tab-list-item.directive\";\n\nimport { TabComponent } from \"./tab.component\";\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-tab-group\",\n  templateUrl: \"./tab-group.component.html\",\n})\nexport class TabGroupComponent\n  implements AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy\n{\n  private readonly _groupId: number;\n  private readonly destroy$ = new Subject<void>();\n  private _indexToSelect: number | null = 0;\n\n  /**\n   * Aria label for the tab list menu\n   */\n  @Input() label = \"\";\n\n  /**\n   * Keep the content of off-screen tabs in the DOM.\n   * Useful for keeping <audio> or <video> elements from re-initializing\n   * after navigating between tabs.\n   */\n  @Input() preserveContent = false;\n\n  @ContentChildren(TabComponent) tabs: QueryList<TabComponent>;\n  @ViewChildren(TabListItemDirective) tabLabels: QueryList<TabListItemDirective>;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value: number) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when the tab selection has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<BitTabChangeEvent> =\n    new EventEmitter<BitTabChangeEvent>();\n\n  /**\n   * Focus key manager for keeping tab controls accessible.\n   * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tablist_role#keyboard_interactions\n   */\n  keyManager: FocusKeyManager<TabListItemDirective>;\n\n  constructor() {\n    this._groupId = nextId++;\n  }\n\n  protected getTabContentId(id: number): string {\n    return `bit-tab-content-${this._groupId}-${id}`;\n  }\n\n  protected getTabLabelId(id: number): string {\n    return `bit-tab-label-${this._groupId}-${id}`;\n  }\n\n  selectTab(index: number) {\n    this.selectedIndex = index;\n  }\n\n  /**\n   * After content is checked, the tab group knows what tabs are defined and which index\n   * should be currently selected.\n   */\n  ngAfterContentChecked(): void {\n    const indexToSelect = (this._indexToSelect = this._clampTabIndex(this._indexToSelect));\n\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit({\n          index: indexToSelect,\n          tab: this.tabs.toArray()[indexToSelect],\n        });\n      }\n\n      // These values need to be updated after change detection as\n      // the checked content may have references to them.\n      Promise.resolve().then(() => {\n        this.tabs.forEach((tab, index) => (tab.isActive = index === indexToSelect));\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n\n      // Manually update the _selectedIndex and keyManager active item\n      this._selectedIndex = indexToSelect;\n      if (this.keyManager) {\n        this.keyManager.setActiveItem(indexToSelect);\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.keyManager = new FocusKeyManager(this.tabLabels)\n      .withHorizontalOrientation(\"ltr\")\n      .withWrap()\n      .withHomeAndEnd();\n  }\n\n  ngAfterContentInit() {\n    // Subscribe to any changes in the number of tabs, in order to be able\n    // to re-render content when new tabs are added or removed.\n    this.tabs.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n      // If the selected tab didn't explicitly change, keep the previously\n      // selected tab selected/active\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this.tabs.toArray();\n        let selectedTab: TabComponent | undefined;\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Set both _indexToSelect and _selectedIndex to avoid firing a change\n            // event which could cause an infinite loop if adding a tab within the\n            // selectedIndexChange event\n            this._indexToSelect = this._selectedIndex = i;\n            selectedTab = tabs[i];\n            break;\n          }\n        }\n\n        // No active tab found and a tab does exist means the active tab\n        // was removed, so a new active tab must be set manually\n        if (!selectedTab && tabs[indexToSelect]) {\n          tabs[indexToSelect].isActive = true;\n          this.selectedTabChange.emit({\n            index: indexToSelect,\n            tab: tabs[indexToSelect],\n          });\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private _clampTabIndex(index: number): number {\n    return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n  }\n}\n\nexport class BitTabChangeEvent {\n  /**\n   * The currently selected tab index\n   */\n  index: number;\n  /**\n   * The currently selected tab\n   */\n  tab: TabComponent;\n}\n","import { Directive, TemplateRef } from \"@angular/core\";\n\n/**\n * Used to identify template based tab labels (allows complex labels instead of just plaintext)\n *\n * @example\n * ```\n * <bit-tab>\n *   <ng-template bitTabLabel>\n *     <i class=\"bwi bwi-search\"></i> Search\n *   </ng-template>\n *\n *   <p>Tab Content</p>\n * </bit-tab>\n * ```\n */\n@Directive({\n  selector: \"[bitTabLabel]\",\n})\nexport class TabLabelDirective {\n  constructor(public templateRef: TemplateRef<unknown>) {}\n}\n","<ng-template><ng-content></ng-content></ng-template>\n","import { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Component,\n  ContentChild,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { TabLabelDirective } from \"./tab-label.directive\";\n\n@Component({\n  selector: \"bit-tab\",\n  templateUrl: \"./tab.component.html\",\n  host: {\n    role: \"tabpanel\",\n  },\n})\nexport class TabComponent implements OnInit {\n  @Input() disabled = false;\n  @Input(\"label\") textLabel = \"\";\n\n  /**\n   * Optional tabIndex for the tabPanel that contains this tab's content.\n   *\n   * If the tabpanel does not contain any focusable elements or the first element with content is not focusable,\n   * this should be set to 0 to include it in the tab sequence of the page.\n   *\n   * @remarks See note 4 of https://www.w3.org/WAI/ARIA/apg/patterns/tabpanel/\n   */\n  @Input() contentTabIndex: number | undefined;\n\n  @ViewChild(TemplateRef, { static: true }) implicitContent: TemplateRef<unknown>;\n  @ContentChild(TabLabelDirective) templateLabel: TabLabelDirective;\n\n  private _contentPortal: TemplatePortal | null = null;\n\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  isActive: boolean;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {}\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this.implicitContent, this._viewContainerRef);\n  }\n}\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { AfterViewInit, Component, HostListener, Input, OnDestroy, ViewChild } from \"@angular/core\";\nimport { IsActiveMatchOptions, RouterLinkActive } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { TabListItemDirective } from \"../shared/tab-list-item.directive\";\n\nimport { TabNavBarComponent } from \"./tab-nav-bar.component\";\n\n@Component({\n  selector: \"bit-tab-link\",\n  templateUrl: \"tab-link.component.html\",\n})\nexport class TabLinkComponent implements FocusableOption, AfterViewInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  @ViewChild(TabListItemDirective) tabItem: TabListItemDirective;\n  @ViewChild(\"rla\") routerLinkActive: RouterLinkActive;\n\n  readonly routerLinkMatchOptions: IsActiveMatchOptions = {\n    queryParams: \"ignored\",\n    matrixParams: \"ignored\",\n    paths: \"subset\",\n    fragment: \"ignored\",\n  };\n\n  @Input() route: string | any[];\n  @Input() disabled = false;\n\n  @HostListener(\"keydown\", [\"$event\"]) onKeyDown(event: KeyboardEvent) {\n    if (event.code === \"Space\") {\n      this.tabItem.click();\n    }\n  }\n\n  get active() {\n    return this.routerLinkActive?.isActive ?? false;\n  }\n\n  constructor(private _tabNavBar: TabNavBarComponent) {}\n\n  focus(): void {\n    this.tabItem.focus();\n  }\n\n  ngAfterViewInit() {\n    // The active state of tab links are tracked via the routerLinkActive directive\n    // We need to watch for changes to tell the parent nav group when the tab is active\n    this.routerLinkActive.isActiveChange\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((_) => this._tabNavBar.updateActiveLink());\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<a\n  bitTabListItem\n  [routerLink]=\"disabled ? null : route\"\n  routerLinkActive\n  [routerLinkActiveOptions]=\"routerLinkMatchOptions\"\n  #rla=\"routerLinkActive\"\n  [active]=\"rla.isActive\"\n  [disabled]=\"disabled\"\n  [attr.aria-disabled]=\"disabled\"\n  ariaCurrentWhenActive=\"page\"\n  role=\"link\"\n>\n  <ng-content></ng-content>\n</a>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  forwardRef,\n  Input,\n  QueryList,\n} from \"@angular/core\";\n\nimport { TabLinkComponent } from \"./tab-link.component\";\n\n@Component({\n  selector: \"bit-tab-nav-bar\",\n  templateUrl: \"tab-nav-bar.component.html\",\n  host: {\n    class: \"tw-block\",\n  },\n})\nexport class TabNavBarComponent implements AfterContentInit {\n  @ContentChildren(forwardRef(() => TabLinkComponent)) tabLabels: QueryList<TabLinkComponent>;\n  @Input() label = \"\";\n\n  /**\n   * Focus key manager for keeping tab controls accessible.\n   * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tablist_role#keyboard_interactions\n   */\n  keyManager: FocusKeyManager<TabLinkComponent>;\n\n  ngAfterContentInit(): void {\n    this.keyManager = new FocusKeyManager(this.tabLabels)\n      .withHorizontalOrientation(\"ltr\")\n      .withWrap()\n      .withHomeAndEnd();\n  }\n\n  updateActiveLink() {\n    // Keep the keyManager in sync with active tabs\n    const items = this.tabLabels.toArray();\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.keyManager.updateActiveItem(i);\n      }\n    }\n  }\n}\n","<bit-tab-header>\n  <nav bitTabListContainer [attr.aria-label]=\"label\" (keydown)=\"keyManager.onKeydown($event)\">\n    <ng-content></ng-content>\n  </nav>\n</bit-tab-header>\n","import { from, Observable, of, throwError } from \"rxjs\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nexport type FunctionReturningAwaitable =\n  | (() => unknown)\n  | (() => Promise<unknown>)\n  | (() => Observable<unknown>);\n\nexport function functionToObservable(func: FunctionReturningAwaitable): Observable<unknown> {\n  let awaitable: unknown;\n  try {\n    awaitable = func();\n  } catch (error) {\n    return throwError(() => error);\n  }\n\n  if (Utils.isPromise(awaitable)) {\n    return from(awaitable);\n  }\n\n  if (awaitable instanceof Observable) {\n    return awaitable;\n  }\n\n  return of(awaitable);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + (chunkId === 768 ? \"encrypt-worker\" : chunkId) + \".\" + {\"4\":\"8a369e022e36de907798\",\"182\":\"23420f2414eaaa896d64\",\"200\":\"8cb9f157d69d8278533d\",\"277\":\"19bc2bfb71040620f8ad\",\"527\":\"cc38fe0c333aeaa2e967\",\"584\":\"238f402a694e2a33f299\",\"612\":\"32ceb910e37ba5e3c759\",\"754\":\"e713aaed65268e767101\",\"768\":\"b14a1a81b1a83c7f6614\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t148: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [734], () => (__webpack_require__(35207)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","RegisterFormModule","BaseAcceptComponent","constructor","router","platformUtilService","i18nService","route","stateService","loading","authed","requiredParameters","failedShortMessage","failedMessage","ngOnInit","this","queryParams","pipe","subscribe","qParams","error","some","e","errorMessage","getIsAuthenticated","email","authedHandler","message","unauthedHandler","t","showToast","timeout","navigate","EventView","data","humanReadableMessage","appIcon","appName","userId","userName","userEmail","date","ip","type","installationId","systemUser","BaseEventsComponent","eventService","exportService","platformUtilsService","logService","fileDownloadService","loaded","dirtyDates","defaultDates","getDefaultDateFilters","start","end","exportEvents","appApiPromiseUnfulfilled","dates","parseDates","exportPromise","export","loadEvents","clearExisting","events","promise","loadAndParseEvents","continuationToken","refreshPromise","morePromise","result","length","concat","startDate","endDate","response","requestEvents","Promise","all","map","r","actingUserId","eventInfo","getEventInfo","user","getUserName","name","ipAddress","formatDateFilters","getEventExport","fileName","getFileName","exportFileName","download","blobData","blobOptions","UserConfirmComponent","cryptoService","onConfirmedUser","dontAskAgain","publicKey","fingerprint","getFingerprint","buffer","join","submit","setAutoConfirmFingerprints","emit","BasePeopleComponent","apiService","searchService","validationService","modalService","searchPipe","userNamePipe","statusMap","Map","users","pagedUsers","allUsers","activeUsers","didScroll","pageSize","pagedUsersCount","allCount","invitedCount","has","userStatusType","Invited","get","acceptedCount","Accepted","confirmedCount","Confirmed","revokedCount","Revoked","showConfirmUsers","showBulkConfirmUsers","load","getUsers","clear","status","set","L","Array","isArray","sort","forEach","u","push","filter","selectAll","resetPaging","loadMore","pagedLength","pagedSize","slice","checkUser","select","checked","filteredUsers","transform","searchText","selectCount","i","invite","edit","removeUserConfirmationDialog","showDialog","remove","actionPromise","deleteUser","id","removeUser","showError","revoke","revokeWarningMessage","revokeUser","restore","restoreUser","reinvite","reinviteUser","confirm","confirmUser","self","mapIndex","indexOf","splice","updateUser","publicKeyResponse","getUserPublicKey","autoConfirm","getAutoConfirmFingerPrints","modal","openViewRef","confirmModalRef","comp","formPromise","close","info","isSearching","isSearchable","isPaging","searching","getCheckedUsers","index","DynamicAvatarComponent","accountUpdateService","border","size","destroy$","text","toUpperCase","color$","avatarUpdate$","ngOnDestroy","next","complete","NotPremiumDirective","templateRef","viewContainer","getCanAccessPremium","createEmbeddedView","premiumRequired","PremiumBadgeComponent","messagingService","send","keyConnectorService","userVerificationService","usesKeyConnector","disableRequestOTP","sentCode","secret","getUsesKeyConnector","processChanges","value","valueChanges","requestOTP","writeValue","obj","setValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","disable","enable","UserVerificationComponent","provide","multi","useExisting","opacity","AccountService","InternalAccountService","ConfigApiServiceAbstraction","FileUploadService","SyncNotifierService","UserVerificationApiServiceAbstraction","AccountFactory","accountConstructor","create","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","StateVersion","theme","window","stateVersion","One","environmentUrls","UpdateAvatarRequest","avatarColor","NotificationType","NotificationResponse","super","contextId","getResponseProperty","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","AuthRequest","AuthRequestResponse","AuthRequestPushNotification","organizationId","collectionIds","revisionDate","Date","AnonymousHubService","environmentService","authService","createHubConnection","token","url","getNotificationsUrl","anonHubConnection","HubConnectionBuilder","withUrl","skipNegotiation","transport","withHubProtocol","MessagePackHubProtocol","build","catch","on","ProcessNotification","stopHubConnection","stop","notification","authResponsePushNotifiction","DeviceRequest","appId","getDevice","getDeviceString","identifier","pushToken","TokenRequest","twoFactor","device","alterIdentityTokenHeaders","headers","setTwoFactor","setPasswordlessAccessCode","accessCode","passwordlessAuthRequest","toIdentityToken","clientId","scope","client_id","deviceType","deviceIdentifier","deviceName","authRequest","provider","twoFactorToken","twoFactorProvider","twoFactorRemember","remember","UserApiTokenRequest","clientSecret","startsWith","grant_type","client_secret","ApiKeyResponse","apiKey","AttachmentUploadDataResponse","attachmentId","fileUploadType","cipherResponse","cipherMiniResponse","requestDeviceType","requestIpAddress","key","masterPasswordHash","creationDate","requestApproved","RegisterResponse","captchaBypassToken","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","hasNoHistory","cardBrand","description","needsVerification","pdfUrl","number","paid","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","details","BillingHistoryResponse","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","domain","isActive","isVerified","logoPath","modifiedDate","pwnCount","title","CollectionResponse","externalId","CollectionDetailsResponse","readOnly","CollectionAccessDetailsResponse","groups","assigned","g","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EventResponse","providerId","cipherId","collectionId","groupId","policyId","organizationUserId","providerUserId","providerOrganizationId","IdentityCaptchaResponse","siteKey","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","resetMasterPassword","privateKey","kdf","kdfIterations","kdfMemory","kdfParallelism","forcePasswordReset","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders2","captchaToken","twoFactorProviders","prop","hasOwnProperty","parseInt","KeyConnectorUserKeyResponse","OrganizationConnectionResponse","configType","enabled","rawConfig","config","OrganizationExportResponse","collections","c","ciphers","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","ProfileOrganizationResponse","usePolicies","useGroups","useDirectory","useEvents","useTotp","use2fa","useApi","useSso","useKeyConnector","useScim","useCustomPermissions","useResetPassword","useSecretsManager","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","hasPublicAndPrivateKeys","ssoBound","permissions","resetPasswordEnrolled","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","keyConnectorEnabled","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","organizations","providers","providerOrganizations","emailVerified","masterPasswordHint","premiumPersonally","premiumFromOrganization","culture","twoFactorEnabled","securityStamp","o","PaymentResponse","userProfile","paymentIntentClientSecret","success","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","hasTotp","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","legacyYear","disabled","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","PreloginResponse","ProviderOrganizationResponse","settings","userCount","plan","ProviderOrganizationOrganizationDetailsResponse","organizationName","OrganizationUserBulkPublicKeyResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","ProviderResponse","businessName","billingEmail","SendAccessResponse","file","expirationDate","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","accessId","notes","maxAccessCount","accessCount","deletionDate","password","hideEmail","SendFileUploadDataResponse","sendResponse","SsoPreValidateResponse","SubscriptionResponse","storageName","storageGb","license","expiration","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","items","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","interval","sponsoredSubscriptionItem","FolderResponse","SyncResponse","folders","policies","sends","profile","f","p","s","TaxInfoResponse","taxId","taxIdType","line1","line2","city","state","postalCode","country","TaxRateResponse","rate","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","host","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","code","TwoFactorWebAuthnResponse","keys","k","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","AuditService","cryptoFunctionService","passwordLeaked","hashBytes","hash","hashStart","substr","hashEnding","nativeFetch","Request","match","split","find","v","breachedAccounts","username","getHibpBreach","statusCode","Error","limit","throttleKey","target","propertyKey","descriptor","originalMethod","allThrottles","throttles","getThrottles","argsThrottleKey","queue","resolve","reject","exec","onFinally","delete","apply","then","val","err","PasswordTokenRequest","captchaResponse","AuthResult","captchaSiteKey","requiresCaptcha","requiresTwoFactor","LogInStrategy","tokenService","appIdService","twoFactorService","logInTwoFactor","tokenRequest","startLogIn","clearSelectedProvider","postIdentityToken","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","buildDeviceRequest","getAppId","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","saveAccountInformation","tokenResponse","accountInformation","decodeToken","addAccount","sub","hasPremiumPersonally","premium","kdfType","tokens","setTwoFactorToken","setUserKey","setEncKey","setEncPrivateKey","createKeyPairForOldAccount","setProviders","makeKeyPair","postAccountKeys","encryptedString","PasswordLogInStrategy","setKey","setKeyHash","localHashedPassword","logIn","credentials","masterPassword","makePreloginKey","hashPassword","hashedPassword","PasswordlessLogInStrategy","passwordlessCredentials","authRequestId","decKey","localPasswordHash","SsoTokenRequest","codeVerifier","redirectUri","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","orgId","getAndSetKey","redirectUrl","UserApiLogInStrategy","getKeyConnectorUrl","setApiKeyClientId","setApiKeyClientSecret","PreloginRequest","sequentialize","cacheKey","caches","cache","getCache","argsCacheKey","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","clearTimeout","setTimeout","lastUsedIndex","Math","max","cipher","localData","lastLaunched","x","y","valueOf","getNextIndex","CipherBulkMoveRequest","ids","folderId","CipherBulkRestoreRequest","CipherBulkShareRequest","CipherPartialRequest","favorite","CipherShareRequest","DomainMatchBlacklist","Set","CipherService","settingsService","fileUploadService","encryptService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","encrypt","model","originalCipher","existingCipher","decrypt","passwordHistory","login","ph","lastUsedDate","passwordRevisionDate","hasFields","existingHiddenFields","fields","hiddenFields","ef","matchedField","reprompt","getOrgKey","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachments","attachmentsModel","promises","encAttachments","attachment","sizeName","fieldsModel","encFields","reduce","field","encField","encryptField","fieldModel","linkedId","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","getAll","getAllDecrypted","reindexCiphers","hasKey","orgKeys","getOrgKeys","userKey","getKeyForUserEncryption","grouped","agg","decCiphers","Object","entries","groupedCiphers","decryptItems","flat","getLocaleSortingFunction","getUserId","indexedEntityId","getAllDecryptedForGrouping","groupingId","folder","isDeleted","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","firstValueFrom","settings$","matches","eqDomain","matchingDomains","getDefaultUriMatch","deletedDate","uris","uri","domainUrlHost","urlHost","RegExp","test","getAllFromApiForOrganization","getCiphersOrganization","cr","getLastUsedForUrl","autofillOnPageLoad","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","getTime","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","createWithServer","request","postCipherCreate","postCipher","upsert","updateWithServer","putCipher","putPartialCipher","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","putShareCipher","shareManyWithServer","encCiphers","putShareCiphers","toCipherData","saveAttachmentWithServer","unencryptedFile","admin","reader","FileReader","readAsArrayBuffer","onload","evt","cData","saveAttachmentRawWithServer","onerror","filename","encFileName","dataEncKey","makeEncKey","encData","encryptToBytes","fileSize","byteLength","adminRequest","uploadDataResponse","postCipherAttachment","uploadCipherAttachment","getSingleMessage","legacyServerAttachmentFileUpload","fd","FormData","blob","Blob","append","Buffer","from","filepath","contentType","postCipherAttachmentAdminLegacy","postCipherAttachmentLegacy","saveCollectionsWithServer","putCipherCollections","replace","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","putMoveCiphers","deleteWithServer","deleteCipher","deleteManyWithServer","deleteManyCiphers","deleteAttachment","deleteAttachmentWithServer","deleteCipherAttachment","a","b","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","collator","compare","localeCompare","softDelete","setDeletedDate","toISOString","softDeleteWithServer","putDeleteCipher","softDeleteManyWithServer","putDeleteManyCiphers","clearDeletedDate","restoreWithServer","putRestoreCipher","restoreManyWithServer","putRestoreManyCiphers","restores","attachmentView","attachmentResponse","toString","encBuf","decBuf","decryptFromBytes","postShareCipherAttachment","theProp","theObj","modelProp","totp","loginUri","secureNote","card","cardholderName","brand","expMonth","expYear","identity","firstName","middleName","lastName","address1","address2","address3","company","phone","ssn","passportNumber","licenseNumber","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","ServerConfigResponse","version","gitHash","server","ThirdPartyServerConfigResponse","environment","EnvironmentServerConfigResponse","vault","api","notifications","sso","ServerConfig","serverConfigData","utcDate","getAgeInMilliseconds","isValid","expiresSoon","static","EFFLongWordList","BaseEncryptedOrganizationKey","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","decValue","rsaDecrypt","toData","providerKey","getProviderKey","decryptToBytes","CryptoService","setCryptoMasterKey","storeKey","keyHash","encKey","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","orgs","providerOrgs","encOrgKeyData","org","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","providerKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","getKey","keySuffix","inMemoryKey","getCryptoMasterKey","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","warning","clearSecretKeyStore","getKeyHash","compareAndUpdateKeyHash","storedKeyHash","localKeyHash","serverKeyHash","getEncKey","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","hasKeyStored","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","hasEncKey","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","makeKey","salt","kdfConfig","iterations","pbkdf2","memory","parallelism","saltHash","argon2","makeKeyFromPin","pin","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","pinKey","makePinKey","makeShareKey","shareKey","randomBytes","rsaEncrypt","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","theKey","buildEncKey","remakeEncKey","plainValue","encBytes","encValue","privateKeyValue","headerPieces","encPieces","encType","alg","encString","keyForEnc","decryptToUtf8","encBuffer","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","Uint8Array","shouldStoreKey","keyB64","getVaultTimeout","getBiometricUnlock","supportsSecureStorage","getCryptoMasterKeyBiometric","newKey","macKey","minimumEntropy","entropyPerWord","log","numWords","hashArr","phrase","hashNumber","remainder","mod","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","encryptionType","symmetricCryptoKey","EncryptedObject","EncryptServiceImplementation","logMacFailures","plainBuf","encObj","aesEncrypt","iv","mac","macLen","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","macData","compareFast","logMacFailed","aesDecryptFast","encThing","macBytes","ivBytes","dataBytes","hmac","aesDecrypt","item","msg","classInitializers","MultithreadEncryptServiceImplementation","clear$","Subject","worker","Worker","URL","restartTimeout","postMessage","JSON","stringify","fromEvent","parse","jsonItem","className","initializerKey","takeUntil","defaultIfEmpty","terminate","EventRequest","EventExport","event","FileUploadType","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","Headers","toUTCString","searchParams","body","method","blobResponse","fetch","baseUrl","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","json","blockListUrl","blockListXml","expiry","isNaN","setTime","now","utfBlockId","blockIdList","xml","Version","year","month","day","parts","Number","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","SetKeyConnectorKeyRequest","orgIdentifier","KeyConnectorUserKeyRequest","LoginService","getEmail","_email","getRememberEmail","_rememberEmail","setEmail","setRememberEmail","clearValues","saveEmailSettings","setRememberedEmail","OrganizationUserResponse","accessAll","OrganizationUserUserDetailsResponse","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","resetPasswordKey","encryptedPrivateKey","OrganizationUserBulkResponse","OrganizationUserBulkRequest","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","resetPasswordEnabled","KeysResponse","OrganizationKeysResponse","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","planType","maxAutoscaleSeats","OrganizationSubscriptionResponse","OrganizationSsoResponse","urls","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","PasswordGeneratorPolicyOptions","defaultType","minLength","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","ambiguous","minNumber","uppercase","minUppercase","lowercase","minLowercase","special","minSpecial","wordSeparator","ResetPasswordPolicyOptions","autoEnrollEnabled","Provider","canAccess","isProviderAdmin","canCreateOrganizations","canManageUsers","canAccessEventLogs","SearchService","cipherService","indexing","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","locale$","locale","registeredPipeline","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","query","normalizeSearchQuery","builder","Builder","pipeline","add","ref","boost","extractor","subTitle","uriExtractor","fieldExtractor","attachmentExtractor","searchCiphers","results","trim","toLowerCase","every","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","search","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","deleted","hasUris","searchSends","toLocaleLowerCase","sendsMatched","lowPriorityMatched","joined","hasAttachments","lastIndexOf","hostname","protocolIndex","queryIndex","substring","searchableFields","metadata","includes","normalize","Send","buildDomainModel","getCryptoService","cryptoKey","decryptObj","TokenService","decoded","setTokens","clientIdClientSecret","setToken","setRefreshToken","setClientId","setClientSecret","getClientId","getApiKeyClientId","getClientSecret","getApiKeyClientSecret","setAccessToken","getToken","getAccessToken","getRefreshToken","clearTwoFactorToken","clearToken","getTokenExpirationDate","exp","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","round","tokenNeedsRefresh","minutes","getEmailVerified","email_verified","getName","getIssuer","iss","getIsExternal","amr","v1Keys","alwaysShowDock","autoConfirmFingerprints","autoFillOnPageLoadDefault","biometricAwaitingAcceptance","biometricFingerprintValidated","biometricText","biometricUnlock","clearClipboard","collapsedGroupings","convertAccountToKeyConnector","defaultUriMatch","disableAddLoginNotification","disableAutoBiometricsPrompt","disableAutoTotpCopy","disableBadgeCounter","disableChangedPasswordNotification","disableContextMenuItem","disableFavicon","disableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","enableAlwaysOnTop","enableAutoFillOnPageLoad","enableBiometric","enableBrowserIntegration","enableBrowserIntegrationFingerprint","enableCloseToTray","enableFullWidth","enableMinimizeToTray","enableStartToTray","enableTray","encOrgKeys","encPrivate","entityId","entityType","eventCollection","history","installedVersion","lastActive","mainWindowSize","minimizeOnCopyToClipboard","neverDomains","noAutoPromptBiometricsText","openAtLogin","passwordGenerationOptions","pinProtected","protectedPin","ssoCodeVerifier","ssoIdentifier","ssoState","stamp","usesConnector","vaultTimeoutAction","vaultTimeout","rememberedEmail","v1KeyPrefixes","lastSync","partialKeys","storageService","secureStorageService","stateFactory","needsMigration","currentStateVersion","getCurrentStateVersion","Latest","migrate","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","authenticatedAccounts","getAuthenticatedAccounts","account","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","migrateAccountFrom5To6","Six","clearV1Keys","clearingUserId","keyPrefix","globals","noAutoPromptBiometrics","ssoOrganizationIdentifier","defaultAccount","accountSettings","autoConfirmFingerPrints","assign","decrypted","encrypted","addEditCipherInfo","passwordGenerationHistory","apiKeyClientSecret","cryptoMasterKey","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","cryptoSymmetricKey","legacyEtmKey","organizationKeys","apiKeyClientId","authenticationStatus","everBeenUnlocked","decodedToken","accountActivity","save","authenticatedUserIds","getGlobals","encryptedOrgKeys","options","htmlStorageLocation","newVersion","OrganizationData","SyncService","folderService","collectionService","policyService","sendService","providerService","folderApiService","organizationService","logoutCallback","syncInProgress","getLastSync","setLastSync","toJSON","fullSync","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","refreshIdentityToken","getSync","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","syncUpsertFolder","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","getFullCipherDetails","syncDeleteCipher","syncUpsertSend","localSend","remoteSend","getSend","sendId","syncDeleteSend","successfully","getAccountRevisionDate","getSecurityStamp","setAvatarColor","setSecurityStamp","setEmailVerified","setHasPremiumPersonally","setHasPremiumFromOrganization","setForcePasswordReset","setUsesKeyConnector","isProviderUser","userNeedsMigration","setConvertAccountRequired","removeConvertAccountRequired","eqDomains","global","setEquivalentDomains","B32Chars","SteamChars","VerifyOTPRequest","OTP","AnonAddyForwarder","generate","anonaddy","requestInit","redirect","Authorization","website","DuckDuckGoForwarder","address","FastmailForwarder","accountId","getAccountId","using","methodCalls","emailPrefix","fastmail","prefix","methodResponses","created","notCreated","primaryAccounts","FirefoxRelayForwarder","generated_for","full_address","ForwarderOptions","FastmailForwarderOptions","AnonAddyForwarderOptions","SimpleLoginForwarder","Authentication","note","alias","wordCapitalize","wordIncludeNumber","subaddressType","catchallType","forwardedService","forwardedAnonAddyDomain","DecryptParameters","BroadcasterService","subscribers","messageCallback","unsubscribe","modalRef","showPassword","togglePassword","component","protectedFields","showPasswordPrompt","open","allowMultipleModals","onClosedPromise","ThemeBuilder","configuredTheme","systemTheme","effectiveTheme","updateSystemTheme","updateConfiguredTheme","ThemingService","document","_theme","BehaviorSubject","theme$","monitorThemeChanges","getTheme","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","getValue","setTheme","documentElement","classList","matchMedia","JslibServicesModule","useValue","useFactory","translationLocale","deps","navigator","language","expired","useClass","makeAndGetAppId","getAnonymousAppId","existingId","guid","pushNotificationSubject","logInStrategy","strategy","clearState","saveState","logOut","callback","authingWithUserApiKey","authingWithSso","authingWithPassword","authingWithPasswordless","getAuthStatus","getEverBeenUnlocked","preloginResponse","postPrelogin","getPushNotifcationObs$","asObservable","startSessionTimeout","clearSessionTimeout","sessionTimeout","P","injector","_folders","_folderViews","folders$","folderViews$","activeAccountUnlocked$","concatMap","unlocked","getEncryptedFolders","updateObservables","getAllFromState","getFromState","getAllDecryptedFromState","values","decryptFolders","setEncryptedFolders","updates","cId","foldersMap","decryptFolderPromises","decryptedFolders","noneFolder","postFolder","putFolder","deleteFolder","accountService","deleteAccount","verification","verificationRequest","buildRequest","_avatarUpdate$","loadColorFromState","getAvatarColor","color","pushUpdate","putAvatar","setDecryptedCollections","collection","decryptMany","decCollections","getEncryptedCollections","decryptedCollections","getDecryptedCollections","getAllNested","nodes","collectionCopy","getNested","setEncryptedCollections","urlsSubject","scimUrl","activeAccount$","setUrlsFromStorage","hasBaseUrl","notificationsUrl","getWebVaultUrl","webVaultUrl","getSendUrl","getIconsUrl","iconsUrl","getApiUrl","apiUrl","getIdentityUrl","identityUrl","getEventsUrl","eventsUrl","getScimUrl","getEnvironmentUrls","envUrls","base","webVault","icons","keyConnector","setUrls","formatUrl","scim","setEnvironmentUrls","getUrls","isCloud","getCode","period","digits","keyB32","isOtpAuth","isSteamAuth","params","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","floor","timeBytes","keyBytes","b32ToBytes","sign","offset","binary","otp","fullCode","trunc","getTimeInterval","l","b32ToHex","cleanedInput","bits","hex","byteIndex","charAt","chunk","signature","generatePassword","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getOptions","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","enforcedPolicyOptions","getPasswordGeneratorPolicyOptions","currentPolicy","useUpper","useLower","minNumbers","saveOptions","getHistory","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decryptHistory","setDecryptedPasswordGenerationHistory","addHistory","currentHistory","matchesPrevious","unshift","pop","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","passwordStrength","userInputs","globalUserInputs","finalUserInputs","normalizeOptions","str","num","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","generateUsername","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","subaddressEmail","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwarder","forwarderOptions","forwardedSimpleLoginApiKey","forwardedAnonAddyApiToken","forwardedFirefoxApiToken","forwardedFastmailApiToken","forwardedDuckDuckGoToken","getUsernameGenerationOptions","setUsernameGenerationOptions","charSet","width","customUserAgent","isWebClient","isDesktopClient","Accept","identityToken","getClientType","qsStringify","getCredentials","responseJson","isJsonResponse","TwoFactorProviders2","HCaptcha_SiteKey","doAuthRefresh","postAuthRequest","getAuthResponse","path","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postEmailToken","postEmail","postPassword","setPassword","postSetKeyConnectorKey","postSecurityStamp","postPasswordHint","postRegister","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountVerifyPassword","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","getSsoUserIdentifier","postUserApiKey","postUserRotateApiKey","putUpdateTempPassword","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","postCipherAdmin","putCipherAdmin","deleteCipherAdmin","deleteManyCiphersAdmin","putCipherCollectionsAdmin","postPurgeCiphers","putDeleteCipherAdmin","putDeleteManyCiphersAdmin","putRestoreCipherAdmin","getAttachmentData","emergencyAccessId","deleteCipherAttachmentAdmin","renewAttachmentUploadUrl","postAttachmentFile","getCollectionAccessDetails","getUserCollections","getCollections","getManyCollectionsWithAccessDetails","getCollectionUsers","dr","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteManyCollections","deleteCollectionUser","getGroupUsers","putGroupUsers","deleteGroupUser","getPlans","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","btoa","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","postTwoFactorEmail","getDeviceVerificationSettings","putDeviceVerificationSettings","getKnownDevice","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getOrganizationExport","getApplicationVersionNumber","preValidateSso","encodeURIComponent","postCreateSponsorship","sponsoredOrgId","isSelfHost","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","doRefreshToken","doApiTokenRefresh","deviceRequest","hasResponse","alterHeaders","requestUrl","href","responseType","responseIsJson","tokenError","isTextResponse","Message","typeHeader","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","_settings","getSettings","setSettings","setVaultTimeoutOptions","action","setVaultTimeout","currentAction","getVaultTimeoutAction","setVaultTimeoutAction","isPinLockSet","getProtectedPin","isBiometricLockSet","policyAppliesToUser","policy","setEverBeenUnlocked","setDecryptedPinProtected","setProtectedPin","vaultTimeoutSettingsService","lockedCallback","loggedOutCallback","inited","init","checkOnInterval","startCheck","checkVaultTimeout","setInterval","isViewOpen","accounts","accounts$","shouldLock","executeTimeoutAction","lock","pinSet","getDecryptedPinProtected","authStatus","getLastActive","vaultTimeoutSeconds","getExport","format","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","extension","getFullYear","padNumber","getMonth","getDate","getHours","getMinutes","getSeconds","decFolders","exportCiphers","buildCommonCipher","exportData","exportPromises","decCol","decCipher","collectionsMap","orgKey","padCharacter","numString","login_uri","login_username","login_password","login_totp","syncService","connected","inactive","reconnectTimer","signalrConnection","off","accessTokenFactory","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","isAuthenticated","payloadUserId","UserId","myUserId","random","win","crypto","subtle","wasmSupported","checkIfWasmSupported","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","passwordArr","saltArr","pass","time","mem","hashLen","ArgonType","Argon2id","ikm","outputByteSize","hkdfParams","prk","infoBuf","infoArr","runningOkmLength","previousT","n","okm","md","valueBytes","toByteString","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","bytes","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","encKeyB64","macKeyB64","parameters","dataBuffer","decipher","finish","output","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","arr","getRandomValues","buf","WebAssembly","instantiate","module","Module","of","Instance","cryptoFunctionservice","uploadEvents","getEventCollection","req","clearEvents","setEventCollection","eventUploadService","collect","eventType","uploadImmediately","orgIds","_policies","policies$","getEncryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","prototype","call","setDecryptedPolicies","masterPasswordPolicyOptions$","obsPolicies","filteredPolicies","minComplexity","requireUpper","requireLower","requireNumbers","requireSpecial","policyAppliesToActiveUser$","policyType","policyFilter","checkPoliciesThatApplyToUser","evaluateMasterPassword","newPassword","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","mapPoliciesFromToken","policiesResponse","setEncryptedPolicies","isExcemptFromPolicies","organization","isExemptFromPolicies","policiesMap","policySet","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","getMasterPasswordPoliciesForInvitedUsers","putPolicy","setDecryptedSends","fileData","passwordHash","hidden","ArrayBuffer","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","saveWithServer","sendData","legacyServerSendFileUpload","setEncryptedSends","removePasswordWithServer","loggedInUsingSso","requiredByOrganization","getManagingOrganization","userIsNotUsingKeyConnector","migrateUser","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","pubKey","privKey","setPasswordRequest","setConvertAccountToKeyConnector","getConvertAccountRequired","getConvertAccountToKeyConnector","userVerificationApiService","requestClass","alreadyHashed","validateInput","verifyUser","postAccountVerifyOTP","postAccountRequestOTP","_organizations","organizations$","getOrganizations","organizationsMap","canManageSponsorships","hasOrganizations","getByIdentifier","setOrganizations","getOrganizationUser","URLSearchParams","includeGroups","getOrganizationUserGroups","getAllUsers","includeCollections","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPasswordEnrollment","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","revokeOrganizationUser","revokeManyOrganizationUsers","restoreOrganizationUser","restoreManyOrganizationUsers","getProviders","getFormValidationErrors","controls","errors","control","controlErrors","keyError","controlName","errorName","getBilling","getSubscription","getLicense","getAutoEnrollStatus","createLicense","updatePayment","upgrade","updateSubscription","updateSeats","updateStorage","verifyBank","cancel","reinstate","leave","updateLicense","importDirectory","getOrCreateApiKey","getApiKeyInformation","organizationApiKeyType","rotateApiKey","updateTaxInfo","getKeys","updateKeys","getSso","updateSso","selfHostedSyncLicense","_sync","sync$","configApiService","_serverConfig","serverConfig$","switchMap","timer","E","buildServerConfig","serverConfig","getServerConfig","fetchServerConfig","setServerConfig","defaultErrorMessage","validationErrors","getAllMessages","MemoryStorageService","store","getBypassCache","BroadcasterMessagingService","broadcasterService","subscriber","arg","command","EventService","setDate","toDateTimeLocalString","filterStart","filterEnd","ev","EventOptions","appInfo","getAppInfo","getEventMessage","humanReadableMsg","formatCipherId","getShortId","formatCollectionId","formatGroupId","formatOrgUserId","formatPolicyId","p1","formatProviderUserId","formatProviderOrganizationId","shortId","cipherInfo","makeAnchor","setAttribute","outerHTML","createElement","innerHTML","pad","norm","abs","HtmlStorageService","defaultOptions","localStorage","getItem","sessionStorage","setItem","removeItem","ContainerService","attachToGlobal","bitwardenContainerService","getEncryptService","InitService","notificationsService","vaultTimeoutService","themingService","location","origin","getLocale","ModalService","componentFactoryResolver","applicationRef","el","modalOpen","setupHandlers","onCreated","first","modals","querySelectorAll","show","shown","focus","closed","onClose","PasswordRepromptComponent","PasswordRepromptService","PolicyListService","addPolicies","FileDownloadBuilder","_request","fileType","downloadMethod","fileNameLower","endsWith","WebFileDownloadService","isSafari","createObjectURL","style","position","appendChild","click","removeChild","CoreModule","parentModule","initService","rememberEmail","systemLanguage","localesDirectory","getLocalesJson","_locale","ReplaySubject","supportedTranslationLocales","defaultLocale","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","p2","p3","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","filePath","localesResult","migrationStateFrom1To2","RouterService","activatedRoute","titleService","previousUrl","undefined","currentUrl","child","firstChild","titleId","snapshot","rawTitle","updateUrl","doNotSaveUrl","newTitle","setTitle","setPreviousUrl","getPreviousUrl","AccountSettings","Account","StateService","memoryStorageService","stateMigrationService","useAccountCache","reconcileOptions","defaultInMemoryOptions","ClientType","WebPlatformUtilsService","browserCache","userAgent","chrome","Web","isFirefox","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","launchUri","sameWindow","rel","getApplicationVersion","supportsWebAuthn","PublicKeyCredential","supportsDuo","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","querySelector","removeAttribute","iconHtmlStr","confirmed","heightAuto","buttonsStyling","icon","iconHtml","html","titleText","showCancelButton","cancelButtonText","showConfirmButton","confirmButtonText","isDev","copyToClipboard","doc","clipboardData","setData","queryCommandSupported","textarea","textContent","copyEl","contains","execCommand","debug","console","warn","readFromClipboard","supportsBiometric","authenticateBiometric","FooterComponent","FrontendLayoutComponent","NavbarComponent","selfHosted","ProductSwitcherContentComponent","products$","combineLatest","paramMap","routeOrg","smOrg","canAccessSecretsManager","products","pm","appRoute","marketingRoute","sm","bento","other","ProductSwitcherComponent","changeDetector","isEnabled","buttonType","ngAfterViewInit","detectChanges","ProductSwitcherModule","CoreOrganizationModule","OrganizationUserUpdateRequest","OrganizationUserInviteRequest","emails","OrganizationUserAdminView","UserAdminService","organizationUserService","userResponse","view","hidePasswords","CollectionAdminService","collectionResponse","anyResponse","isCollectionAccessDetailsResponse","group","GroupRequest","OrganizationGroupBulkRequest","GroupService","deleteMany","groupIds","listResponse","gr","members","postGroup","putGroup","GroupResponse","GroupDetailsResponse","CollectionAccessSelectionView","CollectionAdminView","GroupView","OrganizationCreateModule","changedBusinessOwned","OrganizationInformationComponent","nameOnly","createOrganization","isProvider","acceptingSponsorship","OrganizationPermissionsGuard","canActivate","createUrlTree","isOwner","permissionsCallback","organizationPermissions","root","queryParamMap","itemId","OrganizationRedirectGuard","customRedirect","autoRedirectCallback","redirectPath","OrganizationSwitcherComponent","activeOrganization","OrganizationLayoutComponent","_destroy","organization$","mergeMap","canShowVaultTab","canShowSettingsTab","canShowMembersTab","canShowGroupsTab","canShowReportsTab","canShowBillingTab","getReportTabLabel","EntityEventsComponent","showUser","orgUsersUserIdMap","orgUsersIdMap","entity","OrganizationUserBulkConfirmRequest","BulkConfirmComponent","publicKeys","fingerprints","statuses","done","excludedUsers","isAccepted","getPublicKeys","entry","getCryptoKey","userIdsWithKeys","encryptedKey","postConfirmRequest","BulkRemoveComponent","deleteUsers","removeUsersWarning","BulkStatusComponent","PolicyRequest","BasePolicy","display","BasePolicyComponent","policyResponse","loadData","patchValue","buildRequestData","policiesEnabledMap","PoliciesModule","DisableSendPolicy","DisableSendPolicyComponent","MasterPasswordPolicy","MasterPasswordPolicyComponent","formBuilder","showKeyConnectorInfo","passwordScores","PasswordGeneratorPolicy","PasswordGeneratorPolicyComponent","defaultTypes","PersonalOwnershipPolicy","PersonalOwnershipPolicyComponent","RequireSsoPolicy","RequireSsoPolicyComponent","singleOrgEnabled","ResetPasswordPolicy","ResetPasswordPolicyComponent","SendOptionsPolicy","SendOptionsPolicyComponent","disableHideEmail","SingleOrgPolicy","SingleOrgPolicyComponent","TwoFactorAuthenticationPolicy","TwoFactorAuthenticationPolicyComponent","PolicyEditComponent","policyApiService","cdr","onSavedPolicy","factory","resolveComponentFactory","policyComponent","policyFormRef","createComponent","instance","Enabled","PoliciesComponent","policyListService","parent","policyIdFromEvents","orgPolicy","orgPolicies","op","editModalRef","OrganizationUpdateRequest","CountBasedLocalizationKey","singular","plural","count","OrganizationContentSummaryItem","localizationKeyOptions","localizationKey","OrganizationContentSummary","totalItemCount","itemCountByType","DeleteOrganizationComponent","organizationApiService","deleteOrganizationRequestType","organizationContentSummary","onSuccess","buildOrganizationContentSummary","organizationItems","cipherType","getOrganizationItemCountByType","getOrganizationItemLocalizationKeysByType","viewApiKey","AccountComponent","canManageBilling","canUseApi","orgShareKey","deleteOrganization","deleteModalRef","purgeVault","purgeModalRef","apiKeyModalRef","postKey","bind","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKeyModalRef","isRotation","recoveryCode","manage","TwoFactorSetupComponent","duoComp","openModal","duoModalRef","onUpdated","updateStatus","filterProvider","routes","children","pathMatch","canManagePolicies","canAccessImportExport","canManageSso","canManageScim","loadChildren","m","OrganizationImportExportModule","OrganizationSettingsRoutingModule","OrganizationSettingsModule","SettingsComponent","findSortedIndex","sortedArray","compareFn","low","high","mid","FormSelectionList","controlFactory","allItems","selectedItems","deselectedItems","formArray","selectItems","initialValue","selectItem","deselectItems","deselectItem","deselectAll","findIndex","selectedOption","sortedInsertIndex","newControl","insert","deselectedOption","removeAt","populateItems","selectedItem","nextId","MultiSelectComponent","ngControl","removeSelectedItems","searchInputId","onItemsConfirmed","valueAccessor","placeholder","loadingText","isSelected","selected","onDropdownClosed","updatedBaseItems","baseItems","notifyOnChange","notifyOnTouched","onBlur","ariaDescribedBy","_ariaDescribedBy","searchInput","nativeElement","labelForId","required","_required","hasValidator","hasError","touched","UserTypePipe","unknownText","handleBlur","selectionList","PermissionMode","AccessSelectorComponent","permissionControl","initialPermission","fg","permission","readonly","accessAllItems","permissionMode","Edit","_itemComparator","formGroup","itemType","permissionList","perm","labelId","_permissionMode","Hidden","getRawValue","itemIcon","notifyOnTouch","pauseChangeNotification","permissionLabelId","accessAllLabelId","canEditItemPermission","listName","labelName","CollectionPermission","AccessItemType","convertToPermission","ViewExceptPass","View","EditExceptPass","convertToSelectionView","hidePassword","AccessSelectorModule","CollectionDialogTabType","CollectionDialogResult","CollectionDialogComponent","dialogRef","groupService","characters","nestOptions","accessItems","String","char","forbiddenCharacters","access","markAllAsTouched","invalid","tabIndex","Access","collectionView","editMode","Saved","Deleted","initialTab","Info","shareReplay","refCount","bufferSize","groups$","collectionDetails","mapGroupToAccessItemView","mapUserToAccessItemView","nameParts","parseName","deletedParentName","accessSelections","selection","mapToAccessSelections","parentCollectionId","Canceled","role","openCollectionDialog","dialogService","CollectionDialogModule","SharedOrganizationModule","copy","togglePasswordCount","checkPassword","upgradeOrganization","removeUri","launch","loginUriMatchChanged","addUri","toggleCardNumber","toggleCardCode","organizationChanged","viewHistory","repromptChanged","toggleFavorite","AddEditComponent","auditService","totpService","passwordGenerationService","eventCollectionService","passwordRepromptService","componentName","allowOwnershipAssignment","ownershipOptions","allowPersonal","cloneMode","canEditAnyCollection","loadCollections","loadCipher","encryptCipher","saveCipher","EmergencyAccessAcceptRequest","AcceptEmergencyComponent","OrganizationUserAcceptRequest","AcceptOrganizationComponent","getOrganizationInvitation","prepareOrganizationInvitation","prepareAcceptRequest","setOrganizationInvitation","performResetPasswordAutoEnroll","policyList","orgName","PasswordHintRequest","loginService","successRoute","onSuccessfulSubmit","HintComponent","ngZone","pinLock","webVaultHostname","invalidPinAttempts","handlePinRequiredUnlock","handleMasterPasswordRequiredUnlock","unlockBiometric","biometricLock","doContinue","input","getElementById","isStable","onStable","take","doUnlockWithPin","failed","getKdfType","getKdfConfig","setKeyAndContinue","doUnlockWithMasterPassword","passwordValid","decPin","getDisableFavicon","setDisableFavicon","getBiometricText","hideInput","vaultUrl","LockComponent","routerService","navigateByUrl","CaptchaIFrame","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","connectorLink","sendMessage","iframe","src","contentWindow","base64Encode","fromCharCode","cleanup","removeEventListener","createParams","initComponent","addEventListener","validMessage","parsedMessage","height","AuthRequestType","CaptchaProtectedComponent","setupCaptcha","captcha","showCaptcha","handleCaptchaRequired","PasswordLogInCredentials","SsoLogInCredentials","PasswordlessLogInCredentials","PasswordlessCreateAuthRequest","fingerprintPhrase","startPasswordlessLogin","LoginWithDeviceComponent","anonymousHubService","showResendNotification","twoFactorRoute","forcePasswordResetRoute","getCurrentNavigation","confirmResponse","buildAuthRequest","reqResponse","passwordlessRequest","requestId","buildLoginCredntials","loginResponse","onSuccessfulLoginTwoFactorNavigate","onSuccessfulLoginForceResetNavigate","onSuccessfulLogin","onSuccessfulLoginNavigate","authRequestKeyPair","AuthenticateAndUnlock","decMasterPasswordHash","formValidationErrorService","validatedEmail","paramEmailSet","loggedEmail","selfHostedDomain","queryParamsEmail","getRememberedEmail","errorText","getErrorToastMessage","setFormValues","launchSsoBrowser","ssoRedirectUri","passwordOptions","numbers","codeVerifierHash","codeChallenge","setSsoState","setSsoCodeVerifier","webUrl","validateEmail","markAsTouched","toggleValidateEmail","getLoginWithDevice","reset","shift","errorTag","res","showLoginWithDevice","goToRegister","goToHint","LoginComponent","showResetPasswordAutoEnrollWarning","showPasswordless","goAfterLogIn","resetPasswordPolicy","enforcedPasswordPolicyOptions","strengthResult","getPasswordStrengthUserInput","masterPasswordScore","score","policiesData","clearValidators","updateValueAndValidity","valid","userInput","atPosition","DeleteRecoverRequest","RecoverDeleteComponent","TwoFactorRecoveryRequest","RecoverTwoFactorComponent","continuing","leaving","convert","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","strongPassword","setupSubmitActions","performSubmitActions","masterPasswordRetype","passwordStrengthResult","getStrengthResult","getPasswordScoreText","syncLoading","hint","resetPasswordAutoEnroll","onSetPasswordSuccess","userEncKey","resetRequest","onSuccessfulChangePassword","confirmField","setKdfType","setKdfConfig","SetPasswordComponent","loggingIn","changePasswordRoute","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","authorizeUrl","buildAuthorizeUrl","userIdentifier","orgIdFromState","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","storedIdentifier","getSsoOrgIdentifier","setSsoOrganizationIdentifier","cookie","ReferenceEventRequest","VerticalStep","subLabel","applyBorder","VerticalStepContentComponent","onSelectStep","selectStep","selectStepByIndex","VerticalStepperComponent","activeClass","isNextButtonHidden","steps","selectedIndex","isStepDisabled","_","completed","RegisterRequest","referenceData","InputsFieldMatch","matchTo","inputsMatchError","inputsDoesntMatchError","fieldMatchTo","fieldCtrl","fieldMatchToCtrl","setErrors","RegisterComponent","isInTrialFlow","createdAccount","showTerms","showErrorSummary","minimumLength","confirmMasterPassword","validateInputsDoesntMatch","checkForBreaches","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","accountCreated","characterMinimumMessage","registerResponse","registerAccount","buildRegisterRequest","successful","captchaRequired","validateRegistration","passwordWeak","passwordLeak","orgInvite","RegisterFormComponent","referenceDataValue","queryParamEmail","LogoForbesComponent","LogoUSNewsComponent","EnterpriseContentComponent","TeamsContentComponent","ConfirmationDetailsComponent","BillingComponent","previousStep","additionalSeats","orgInfoForm","stepBack","changedCountry","DefaultContentComponent","Enterprise1ContentComponent","Enterprise2ContentComponent","Teams1ContentComponent","Teams2ContentComponent","LogoCnetComponent","CnetEnterpriseContentComponent","CnetIndividualContentComponent","CnetTeamsContentComponent","AbmEnterpriseContentComponent","AbmTeamsContentComponent","billingSuccess","stepSelectionChange","navigateToOrgVault","navigateToOrgInvite","ValidOrgParams","ValidLayoutParams","TrialInitiationComponent","titleCasePipe","orgInfoSubLabel","orgLabel","billingSubLabel","layout","accountCreateOnly","useTrialStepper","trialFlowOrgs","teams","enterprise","families","routeFlowOrgs","free","individual","layouts","orgInfoFormGroup","validators","updateOn","referenceDataId","referenceId","reference","flow","setupFamilySponsorship","previouslySelectedIndex","verticalStepper","subLabelText","previous","WebAuthnIFrame","webAuthnNewTab","btnText","allow","webAuthnReady","providerType","selectedProviderType","webAuthnSupported","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","getDefaultProvider","cleanupWebAuthn","providerData","authWebAuthn","Host","sig_request","Signature","submit_callback","sig","Email","sendEmail","doSubmit","doToast","emailPromise","authRequestAccessCode","Window","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","TwoFactorOptionsComponent","TwoFactorComponent","anotherMethod","twoFactorOptionsModal","PasswordRequest","currentMasterPassword","newMasterPasswordHash","UpdatePasswordComponent","UpdateTempPasswordRequest","newPasswordHash","newEncKey","UpdateTempPasswordComponent","VerifyEmailRequest","VerifyEmailTokenComponent","VerifyDeleteRecoverRequest","VerifyRecoverDeleteComponent","HomeGuard","UserLayoutComponent","check","selectedChanged","filterSelected","EntityUsersComponent","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","loadUsers","searchedUsers","scrollViewportStyle","selections","CollectionsComponent","canCreate","pagedCollectionsCount","canCreateNewCollections","decryptCollections","canViewAssignedCollections","assignedCollections","canViewAllCollections","pagedCollections","canEdit","canDelete","orgUpgradeSimpleDialogOpts","acceptButtonText","simpleDialog","openSimpleDialog","dialog","lastValueFrom","removeCollection","usersModalRef","entityName","canEditAssignedCollections","canDeleteAnyCollection","canDeleteAssignedCollections","GroupAddEditTabType","GroupAddEditDialogResultType","GroupAddEditComponent","changeDetectorRef","ResultType","groupForm","groupView","formValue","orgCollections$","orgMembers$","groupDetails$","catchError","gc","toggleAllVisible","deleteAllSelected","GroupsComponent","ModalTabType","pagedGroupsCount","refreshGroups$","_searchText","updateSearchedGroups","visibleGroups","pagedGroups","searchedGroups","tap","toCollectionMap","collectionMap","collectionNames","startingTabIndex","removeGroup","groupRow","groupsToDelete","deleteMessage","ManageComponent","PipesModule","CollectionBadgeModule","GroupBadgeModule","VaultFilterService","collectionAdminService","_collections","filteredCollections$","collectionTree$","buildCollectionTree","loadSubscriptions","_organizationFilter","reloadCollections","noneCollection","VaultFilterModule","VaultFilter","isFavorites","selectedCipherTypeNode","node","selectedOrganizationNode","cipherStatus","cipherTypeId","selectedFolderNode","selectedCollectionNode","resetFilter","resetOrganization","buildFilter","cipherPassesFilter","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","hasUpdatedKey","fileEl","files","saveCipherAttachment","cipherDomain","downloading","canAccessAttachments","canAccessPremium","reuploadCipherAttachment","foundAttachment","a2","reupload","viewOnly","showFixOldAttachments","AttachmentsComponent","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","EnrollMasterPasswordReset","toastStringRef","keyString","onFilterSelect","onAdd","toggleCollapse","onEdit","VaultFilterSectionComponent","vaultFilterService","collapsedFilterNodes","injectors","collapsedFilterNodes$","section","data$","headerNode","headerInfo","header","filters","isOrganizationFilter","isAllVaultsSelected","activeFilter","isNodeSelected","filterNode","editInfo","addInfo","showAddButton","showAddLink","optionsInfo","divider","isCollapsed","setCollapsedFilterNodes","createInjector","inject","OptionsInput","LinkSsoComponent","ngAfterContentInit","toggleResetPasswordEnrollment","unlinkSso","OrganizationOptionsComponent","allowEnrollmentChanges","showEnrolledStatus","searchTextChanged","activeFilterChanged","onSearchTextChanged","onAddFolder","onEditFolder","isLoaded","applyOrganizationFilter","orgNode","setOrganizationFilter","expandOrgFilter","applyVaultFilter","applyTypeFilter","applyFolderFilter","folderNode","applyCollectionFilter","collectionNode","addFolder","editFolder","filtersList","searchPlaceholder","buildAllFilters","getDefaultFilter","filteredFolders$","removeInvalidFolderSelection","removeInvalidCollectionSelection","typeFilter","builderFilter","organizationFilter","addOrganizationFilter","addTypeFilter","folderFilter","addFolderFilter","collectionFilter","addCollectionFilter","trashFilter","addTrashFilter","singleOrgPolicy","personalVaultPolicy","addAction","organizationTree$","showHeader","isSelectable","excludeTypes","allTypeFilters","buildTypeTree","folderTree$","VaultFilterComponent","_organization","CollectionBulkDeleteRequest","BulkDeleteDialogResult","openBulkDeleteDialog","BulkDeleteDialogComponent","permanent","cipherIds","deleteCiphersAdmin","deleteCiphers","deleteCollections","deleteRequest","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","accessEvents","searchPending","searchTimeout","deletedFilter","applyFilter","reload","refresh","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","BulkMoveDialogResult","BulkMoveDialogComponent","Moved","BulkRestoreDialogResult","BulkRestoreDialogComponent","Restored","isChecked","BulkShareDialogResult","BulkShareDialogComponent","nonShareableCount","shareableCiphers","writeableCollections","checkedCollectionIds","Shared","hasOldAttachments","allCollections","filterCollections","canSave","EllipsisPipe","completeWords","ellipsis","OrganizationNameBadgeComponent","avatarService","onOrganizationClicked","isMe","textColor","emitOnOrganizationClicked","GroupNameBadgeComponent","groupNames","ngOnChanges","selectedGroups","allGroups","GetCollectionNameFromIdPipe","CollectionNameBadgeComponent","shownCollections","showXMore","xMoreCount","GetOrgNameFromIdPipe","bulkMove","bulkShare","bulkRestore","editCollection","navigateCollection","checkRow","profileName","clone","share","editCipherCollections","checkAll","bulkDelete","showAddNew","onAttachmentsClicked","onShareClicked","onEditCipherCollectionsClicked","onCloneClicked","onOrganzationBadgeClicked","userHasPremiumAccess","noItemIcon","pageSizeLimit","isAllChecked","currentPagedCiphersCount","currentPagedCollectionsCount","refreshing","pagedCiphers","searchedCollections","filteredCollections","filteredCiphers","updateSearchedCollections","pageSpaceLeft","collectionsToAdd","totalRows","repromptCipher","deleteCipherWithServer","selectedIds","selectedCipherIds","selectedCiphers","typeI18nKey","aType","displayTotpCopyButton","viewPassword","organizationUseTotp","canDeleteCollection","canEditCollection","tab","showMissingCollectionPermissionMessage","VaultItemsComponent","onEventsClicked","allCiphers","initOrganization","changeOrganization","loadCiphers","refreshCollections","getCollectionNodeFromTree","selectedCollections","tabType","isAdmin","addCollection","BroadcasterSubscriptionId","VaultComponent","trashCleanupWarning","vaultItemsComponent","vaultFilterComponent","getCipherIdFromParams","canUseAdminCollections","editCipherId","queryParamsHandling","run","go","filterSearchText","showFreeOrgUpgradeDialog","editCipherAttachments","madeAttachmentChanges","attachmentsModalRef","onClosed","currCollections","collectionsModalRef","editCipher","navigateToCipher","childComponent","cipherAddEditModalRef","onSavedCipher","onDeletedCipher","onRestoredCipher","cloneCipher","viewEvents","eventsModalRef","breadcrumbs","reverse","relativeTo","replaceUrl","VaultRoutingModule","VaultModule","MembersModule","OrganizationReportingModule","OrganizationBillingModule","OrganizationsRoutingModule","OrganizationModule","PlanSponsorshipType","AcceptFamilySponsorshipComponent","register","OrganizationSponsorshipRedeemRequest","FamiliesForEnterpriseSetupComponent","badToken","showNewOrganization","_selectedFamilyOrganizationId","organizationPlansComponent","onOrganizationCreateSuccess","existingFamilyOrganizations$","selectedFamilyOrganizationId","planSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","SendAccessView","SendAccess","SendAccessRequest","toggleText","copyText","AccessComponent","sendType","passwordRequired","showText","unavailable","sendText","maskedText","downloadData","accessRequest","keyArray","sendAccess","disableSend","filteredSends","hasSearched","policyAppliesToActiveUser","onSuccessfulLoad","applyTextSearch","removePassword","onSuccessfulRemovePassword","onSuccessfulDelete","link","urlB64Key","clearSelections","selectedAll","selectType","selectedType","BrowserPath","DateField","DatePreset","datePipe","onSavedSend","onDeletedSend","onCancelled","copyLink","alertShown","showOptions","typeOptions","sendLinkBaseUrl","isDateTimeLocalSupported","setDates","loadSend","hasPassword","encryptSend","encSend","uploadPromise","handleCopyLinkToClipboard","copyLinkToClipboard","deletePromise","typeChanged","toggleOptions","togglePasswordVisible","copySuccess","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","Never","browserPath","Firefox","Safari","Default","formattedDeletionDate","miliseconds","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","h","hour","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","EffluxDatesComponent","editSend","addSend","SendComponent","sendAddEditModalRef","DeauthorizeSessionsComponent","DeleteAccountComponent","accountApiService","deleteForm","EmailTokenRequest","EmailRequest","ChangeEmailComponent","tokenSent","showTwoFactorEmailWarning","newEmail","UpdateProfileRequest","SelectableAvatarComponent","onFire","setSelection","ChangeAvatarComponent","changeColor","onSaved","defaultColorPalette","customColorSelected","customColor$","customTextColor$","debounceTime","currentSelection","showCustomPicker","colorPickerElement","generateAvatarColor","selectedColorIndex","openChangeAvatar","ProfileComponent","modalOpened","avatarModalRef","showChangeEmail","deauthorizeSessions","deauthModalRef","CreateOrganizationComponent","orgPlansComponent","UpdateDomainsRequest","toggleExcluded","customize","DomainRulesComponent","custom","globalDomain","excludedGlobalEquivalentDomains","d2","indexTrackBy","EmergencyAccessAttachmentsComponent","EmergencyAddEditComponent","viewAttachments","EmergencyAccessViewComponent","getAllCiphers","oldKeyBuffer","keyEncrypted","oldEncKey","cipherData","EmergencyAccessStatusType","EmergencyAccessType","EmergencyAccessConfirmRequest","EmergencyAccessInviteRequest","EmergencyAccessUpdateRequest","EmergencyAccessAddEditComponent","onDeleted","emergencyAccessType","waitTimes","emergencyAccess","waitTime","waitTimeDays","EmergencyAccessConfirmComponent","onConfirmed","EmergencyAccessPasswordRequest","EmergencyAccessTakeoverComponent","onDone","takeoverResponse","approve","requestAccess","takeover","EmergencyAccessComponent","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","grantedContacts","addEditModalRef","contact","doConfirmation","granteeId","removeGrantee","removeGrantor","RecoveryInitiated","RecoveryApproved","takeoverModalRef","form","hours","showCustom","CUSTOM_VALUE","exceedsMinimumTimout","customTimeInMinutes","MIN_CUSTOM_MINUTES","combineLatestWith","vaultTimeoutPolicy","applyVaultTimeoutPolicy","current","vaultTimeouts","onTouched","validate","policyError","minTimeoutError","registerOnValidatorChange","validatorChange","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","VaultTimeoutInputComponent","PreferencesComponent","localeOptions","themeOptions","enableFavicons","getEnableFullWidth","startingLocale","startingTheme","setEnableFullWidth","setLocale","vaultTimeoutActionChanged","newValue","FolderWithIdRequest","SendWithIdRequest","UpdateKeyRequest","ChangePasswordComponent","rotateEncKey","rotateEncKeyClicked","updateKey","updateEmergencyAccesses","updateAllResetPasswordKeys","allowedStatuses","filteredAccesses","updateRequest","KdfRequest","ChangeKdfComponent","kdfOptions","recommendedPbkdf2Iterations","makeKeyAndSaveAsync","onChangeKdf","SecurityKeysComponent","showChangeKdf","viewUserApiKey","viewUserApiKeyModalRef","rotateUserApiKey","rotateUserApiKeyModalRef","SecurityComponent","showChangePassword","redirectTo","SecurityRoutingModule","getHasPremiumPersonally","hasFamilySponsorshipAvailable","hasPremiumFromOrg","getHasPremiumFromOrganization","billing","hideSubscription","notAllowedValueAsync","valueGetter","caseInsensitive","notAllowedValue","controlValue","resendEmail","SponsoringOrgRowComponent","sponsoringOrg","isSelfHosted","sponsorshipRemoved","statusMessage","statusClass","setStatus","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmailPromise","isSentAwaitingSync","toDelete","validUntil","forceReload","SponsoredFamiliesComponent","sponsorshipForm","selectedSponsorshipOrgId","sponsorshipEmail","asyncValidators","availableSponsorshipOrgs$","anyOrgsAvailable$","activeSponsorshipOrgs$","anyActiveSponsorships$","sponsoredEmail","friendlyName","resetForm","sponsorshipEmailControl","BillingHistoryViewComponent","firstLoaded","PremiumComponent","premiumPrice","familyPlanMaxUserCount","storageGbPrice","additionalStorage","finalizePremium","paymentComponent","createPaymentToken","taxInfoComponent","taxInfo","paymentResponse","handleStripeCardPayment","additionalStorageTotal","subtotal","taxCharges","taxRate","total","SubscriptionComponent","hasPremium","subscriptionRoute","closeUpdateLicense","downloadLicense","adjustStorage","closeStorage","UserSubscriptionComponent","adjustStorageAdd","showAdjustStorage","showUpdateLicense","reinstatePromise","cancelPromise","licenseString","subscriptionMarkedForCancel","nextInvoice","storagePercentage","toFixed","storageProgressWidth","SubscriptionRoutingModule","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","avoidAmbiguous","usernameWebsite","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","initForwardOptions","passwordOptionsResponse","websiteOption","generatorOptions","getGeneratorOptions","regenerateWithoutButtonPress","regenerate","setGeneratorOptions","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","sliderInput","normalizePasswordOptions","saveUsernameOptions","usernameGeneratingPromise","copyOptions","forwardOptions","SelectCopyDirective","onCopy","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","PasswordGeneratorHistoryComponent","lengthChanged","minNumberChanged","minSpecialChanged","GeneratorComponent","historyModalRef","ToolsComponent","BulkDialogsModule","UpdateKeyComponent","makeRequest","onSavedFolder","onDeletedFolder","FolderAddEditComponent","onSharedCipher","cipherView","ShareComponent","VerifyEmailComponent","onVerified","verifyEmail","LowKdfComponent","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","showLowKdf","folderAddEditModalRef","isLowKdfIteration","isShowingCards","verified","filterComponent","shareCipher","shareModalRef","selectedColId","updateKeyModalRef","favorites","ImportExportModule","OssRoutingModule","buildFlaggedRoute","flagName","useHash","paramsInheritanceStrategy","HasPremiumGuard","routerState","userHasPremium","BreachReportComponent","checkedUsername","ReportBreach","ReportExposedPasswords","ReportInactiveTwoFactor","ReportReusedPasswords","ReportUnsecuredWebsites","ReportWeakPasswords","ReportType","reports","ExposedPasswords","ReusedPasswords","WeakPasswords","UnsecuredWebsites","Inactive2fa","DataBreach","ReportsSharedModule","ReportsHomeComponent","reportRequiresPremium","variant","ReportsLayoutComponent","homepage","ReportsRoutingModule","ReportsModule","CipherReportComponent","requiresPaid","hasLoaded","setCiphers","checkAccess","ExposedPasswordsReportComponent","exposedPasswordMap","exposedPasswordCiphers","exposedCount","canManageCipher","InactiveTwoFactorReportComponent","services","cipherDocs","load2fa","inactive2faCiphers","docs","service","serviceData","documentation","additionalDomain","ReusedPasswordsReportComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","UnsecuredWebsitesReportComponent","unsecuredCiphers","WeakPasswordsReportComponent","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","scoreKey","ReportVariant","ReportCardComponent","requiresPremium","ReportListComponent","StorageRequest","AdjustStorageComponent","onAdjusted","onCanceled","storageAdjustment","storageGbAdjustment","paymentFailed","adjustedStorageTotal","ApiKeyComponent","TransactionType","BillingHistoryComponent","transactionType","paymentMethodClasses","OrganizationCreateRequest","OrganizationUpgradeRequest","ProviderOrganizationCreateRequest","clientOwnerEmail","organizationCreateRequest","changedProduct","changedOwnedBusiness","OrganizationPlansComponent","showFree","showCancel","_product","_plan","onTrialBillingSuccess","productTypes","singleOrgPolicyBlock","discount","businessOwned","premiumAccessAddon","plans","addValidators","selectedPlan","selectedPlanInterval","selectableProducts","validPlans","Free","familyPlan","selectablePlans","additionalStoragePriceMonthly","seatPriceMonthly","seatTotal","subTotal","freeTrial","taxComponent","paymentDesc","hideBank","changeMethod","collectionCt","createSelfHosted","createCloudHosted","updateOrganization","billingSubLabelText","additionalStorageGb","billingAddressCountry","billingAddressPostalCode","collectionName","tokenResult","paymentToken","includeTaxId","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","price","VerifyBankRequest","BitPayInvoiceRequest","AddCreditComponent","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","credit","creditAmountNumber","bitPayUrl","formatAmount","floatAmount","parseFloat","PaymentRequest","AdjustPaymentComponent","changeCountry","addCredit","closeAddCredit","changePayment","closePayment","submitTaxInfo","PaymentMethodComponent","showAdjustPayment","showAddCredit","verifyBankForm","amount1","amount2","forOrganization","billingPromise","orgPromise","paymentSourceInApp","verifyBankPromise","taxFormPromise","isCreditBalance","creditOrBalance","headerClass","paymentSourceClasses","bank","PaymentComponent","showMethods","hidePaypal","hideCredit","trialFlow","routing_number","account_number","account_holder_name","account_holder_type","currency","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","async","Stripe","elements","setStripeElement","btScript","StripeElementStyle","fontFamily","fontSize","fontSmoothing","StripeElementClasses","empty","subscribeToTheme","head","btStylesheet","braintree","dropin","authorization","container","paymentOptionPriority","paypal","buttonStyle","label","shape","tagline","createErr","requestPaymentMethod","nonce","handleCardSetup","setupIntent","payment_method","createToken","handleCardPayment","paymentIntent","classes","mount","getComputedStyle","getPropertyValue","borderColor","PurgeVaultComponent","TaxInfoComponent","onCountryChanged","pristine","taxRates","localTaxRate","getTaxInfoRequest","hasChanged","TwoFactorProviderRequest","TwoFactorBaseComponent","twoFactorProviderType","auth","authResponse","hashedSecret","verificationType","enableFunction","buildRequestModel","UpdateTwoFactorDuoRequest","TwoFactorDuoComponent","processResponse","ikey","skey","UpdateTwoFactorAuthenticatorRequest","TwoFactorAuthenticatorComponent","qrScript","QRious","element","UpdateTwoFactorEmailRequest","TwoFactorEmailComponent","sentEmail","print","TwoFactorRecoveryComponent","w","write","onafterprint","formatString","UpdateTwoFactorWebAuthnDeleteRequest","UpdateTwoFactorWebAuthnRequest","readKey","TwoFactorWebAuthnComponent","keyIdAvailable","keysConfiguredCount","webAuthnResponse","removePromise","challengePromise","readDevice","webAuthnChallenge","resetWebAuthn","webAuthnListening","webAuthnError","listening","configured","UpdateTwoFactorYubioOtpRequest","TwoFactorYubiKeyComponent","disablePromise","existingKey","padRight","character","showPolicyWarning","twoFactorAuthPolicyAppliesToActiveUser","evaluatePolicies","authenticatorModalRef","yubikeyModalRef","emailModalRef","webAuthnModalRef","recoveryModalRef","TwoFactorVerifyComponent","onAuthed","UpdateLicenseComponent","updatePromise","LooseComponentsModule","AsyncActionsModule","AvatarModule","BadgeListModule","ButtonModule","CalloutModule","ColorPasswordModule","DialogModule","IconModule","TableModule","TabsModule","ToggleGroupModule","SharedModule","addFieldType","linkedFieldOptions","fieldType","addFieldTypeOptions","addFieldLinkedTypeOption","changes","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","newField","removeField","toggleFieldValue","showValue","trackByFunction","drop","previousIndex","currentIndex","linkedFieldOption","i18nKey","TrueFalseValueDirective","elementRef","renderer","trueValue","falseValue","propagateChange","onHostChange","setProperty","AddEditCustomFieldsComponent","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","showCardNumber","showCardCode","currentDate","canUseReprompt","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","autofillOnPageLoadOptions","personalOwnershipPolicyAppliesToActiveUser","myEmail","getAddEditCipherInfo","setAddEditCipherInfo","previousCipherId","getCardExpMonthDisplay","editCollections","restorePromise","restoreCipher","toggleUriOptions","checkPasswordPromise","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","showPasswordCount","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","totpTick","totpInterval","canLaunch","showGetPremium","clearInterval","totpCode","half","totpCodeFormatted","intervalSeconds","totpSec","totpDash","totpLow","OrganizationBadgeModule","NestingDelimiter","_collapsedFilterNodes","getCollapsedFilterNodes","buildOrganizationTree","filterFolders","buildFolderTree","collectionViews$","setCollapsedGroupings","getCollapsedGroupings","headNode","getOrganizationFilterHead","myVaultNode","getOrganizationFilterMyVault","orgCopy","myVault","hideOptions","storedCollections","getCollectionFilterHead","storedFolders","orgCiphers","oc","getFolderFilterHead","folderCopy","VaultFilterSharedModule","flagEnabled","flag","LoginModule","VerticalStepperModule","TrialInitiationModule","OrganizationManageModule","OrganizationUserModule","OssModule","WildcardRoutingModule","ProviderAddOrganizationRequest","WebProviderService","addOrganizationToProvider","encryptedOrgKey","detachOrganizastion","AddOrganizationComponent","webProviderService","onAddedOrganization","ProviderPermissionsGuard","providerPermissions","ProvidersComponent","addExistingOrganization","DisallowedPlanTypes","ClientsComponent","manageOrganizations","showAddExisting","pagedClientsCount","clients","candidateOrgs","allowedOrgsIds","addableOrganizations","pagedClients","addModalRef","ProviderUserAcceptRequest","AcceptProviderComponent","EventsComponent","providerUsersUserIdMap","providerUsersIdMap","ProviderUserBulkRequest","ProviderUserConfirmRequest","ProviderUserBulkConfirmRequest","ProviderUserInviteRequest","ProviderUserUpdateRequest","UserAddEditComponent","onSavedUser","onDeletedUser","userType","bulkConfirm","PeopleComponent","bulkRemove","bulkRemoveModalRef","bulkReinvite","showBulkStatus","bulkConfirmModalRef","successfullMessage","bulkStatusModalRef","onShown","keyedErrors","keyedFilteredUsers","ProvidersLayoutComponent","showMenuBar","showManageTab","showSettingsTab","manageRoute","ProviderUpdateRequest","SetupProviderComponent","ProviderSetupRequest","SetupComponent","ProvidersRoutingModule","ProvidersModule","registerComponentFactoryResolver","SecretsManagerModule","AppRoutingModule","toastrService","sanitizer","lastActivity","idleTimer","isIdle","lang","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","setFullWidth","clean","setLastActive","idleStateChanged","sanitize","enableHtml","trustedHtml","timeOut","DisablePersonalVaultExportPolicy","DisablePersonalVaultExportPolicyComponent","MaximumVaultTimeoutPolicy","MaximumVaultTimeoutPolicyComponent","AppComponent","ScimConfigApi","scimProvider","ScimConfigRequest","copyScimUrl","toggleScimKey","rotateScimKey","copyScimKey","ScimComponent","showScimSettings","showScimKey","formData","endpointUrl","connection","setConnectionFormValues","loadApiKey","apiKeyRequest","apiKeyResponse","getScimEndpointUrl","rotatePromise","existingConnectionId","OrganizationSsoRequest","SsoConfigView","openId","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","saml","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpWantAuthnRequestsSigned","idpAllowOutboundLogoutRequests","idpDisableOutboundLogoutRequests","InputStripSpacesDirective","onInput","CopyClickDirective","valueToCopy","onClick","LaunchClickDirective","uriToLaunch","BaseCvaComponent","controlDir","internalControl","onValueChangesInternal","describedById","showDescribedBy","controlId","helperText","isRequired","onBlurInternal","InputCheckboxComponent","validateKeyConnectorUrl","toggleOpenIdCustomizations","defaultSigningAlgorithm","ssoType","ssoTypeOptions","samlSigningAlgorithms","saml2SigningBehaviourOptions","saml2BindingTypeOptions","saml2NameIdFormatOptions","connectRedirectOptions","destory$","showOpenIdCustomizations","haveTestedKeyConnector","openIdForm","samlForm","ssoConfigForm","newType","ssoSettings","populateForm","validateForm","readOutErrors","markAsPending","invalidUrl","getErrorCount","acc","enableTestKeyConnector","samlSigningAlgorithmOptions","markAsDirty","ssoConfigView","errorCount","errorCountText","div","innerText","existing","OrganizationsModule","AppModule","bootstrapModule","preserveWhitespaces","CalloutComponent","useAlertRole","calloutStyle","enforcedPolicyMessage","getPasswordScoreAlertDisplay","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","RuPay","Mir","IconComponent","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","isWebsite","ModalRef","_onCreated","_onClose","_onClosed","_onShow","_onShown","onShow","lastResult","toPromise","A11yTitleDirective","appA11yTitle","hasAttribute","ApiActionDirective","appApiAction","AutofocusDirective","appAutofocus","condition","autofocus","InputVerbatimDirective","appInputVerbatim","disableComplete","StopClickDirective","$event","preventDefault","StopPropDirective","stopPropagation","AuthGuard","promptBiometric","LockGuard","loginpage","UnauthGuard","BitwardenToast","toastPackage","BitwardenToastGlobalConfig","toastComponent","BitwardenToastModule","ngModule","default","numberFormats","cardLength","blocks","Other","CreditCardNumberPipe","creditCardNumber","rules","matchingRule","chunks","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","I18nPipe","SearchPipe","prop1","prop2","prop3","propValue","UserNamePipe","WINDOW","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","DynamicModalComponent","cd","focusTrapFactory","loadChildComponent","childComponentType","setComponentParameters","componentRef","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","modalContentRef","destroy","getFocus","autoFocusEl","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","flags","ModalConfig","modalList","factoryResolvers","modalCount","topModal","viewContainerRef","modalComponentRef","openInternal","hostView","replaceTopModal","closeAll","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","backdrop","modalEl","dialogEl","zIndex","prepend","closeElement","WeakMap","AbstractThemingService","PasswordStrengthComponent","passwordScoreColor","scoreWidth","updatePasswordStrength","masterPasswordScoreColor","masterPasswordScoreText","masterPasswordStrengthTimeout","setPasswordScoreText","AccountApiService","AvatarUpdateService","ApiService","AppIdService","AuthService","CollectionService","CryptoFunctionService","EncryptService","EnvironmentService","EventCollectionService","EventUploadService","ExportService","FileDownloadService","FolderApiServiceAbstraction","FolderService","InternalFolderService","FormValidationErrorsService","I18nService","KeyConnectorService","LogService","MessagingService","NotificationsService","OrganizationUserService","OrganizationUserResetPasswordRequest","OrganizationApiServiceAbstraction","canAccessVaultTab","canManageGroups","canAccessSettingsTab","canAccessMembersTab","canManageUsersPassword","canAccessGroupsTab","canAccessReportingTab","canAccessReports","canAccessBillingTab","canAccessOrgAdmin","getOrganizationById","canAccessAdmin","isNotProviderUser","OrganizationService","InternalOrganizationService","PasswordGenerationService","PlatformUtilsService","PolicyApiServiceAbstraction","PolicyService","InternalPolicyService","ProviderService","SendService","SettingsService","StateMigrationService","AbstractStorageService","AbstractMemoryStorageService","TYPE","TotpService","TwoFactorService","UserVerificationService","UsernameGenerationService","ValidationService","VaultTimeoutService","VaultTimeoutSettingsService","AuthenticationStatus","AuthenticationType","CipherRepromptType","CipherType","DeviceType","EncryptionType","EventType","FieldType","HashPurpose","HtmlStorageLocation","KdfType","DEFAULT_ARGON2_MEMORY","DEFAULT_ARGON2_PARALLELISM","DEFAULT_ARGON2_ITERATIONS","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_PBKDF2_ITERATIONS","DEFAULT_KDF_CONFIG","SEND_KDF_ITERATIONS","KeySuffixOptions","LoginLinkedId","CardLinkedId","IdentityLinkedId","LogLevelType","OrganizationApiKeyType","OrganizationConnectionType","OrganizationUserStatusType","OrganizationUserType","PaymentMethodType","PlanType","PolicyType","ProductType","ProviderUserStatusType","ProviderUserType","SecureNoteType","SendType","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","ThemeType","TwoFactorProviderType","UriMatchType","VerificationType","getFlags","envFlags","LinkedMetadata","_i18nKey","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","getTreeNodeObjectFromList","nodeURL","Utils","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","binaryString","atob","charCodeAt","fromB64ToArray","fromUrlB64ToB64","strUtf8","unescape","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","decodeURIComponent","escape","urlB64Str","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","uriString","isNullOrWhitespace","validHosts","getUrl","parseResult","isIp","pair","source","getUrlObject","bgColor","threshold","svgTextFill","bgColorHexNums","fromEntries","record","destination","mobile","vendor","opera","ms","hasProtocol","anchor","regexpEmojiPresentation","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","PermissionsApi","accessEventLogs","accessImportExport","accessReports","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","manageScim","SecureNoteApi","SendFileApi","SendTextApi","SsoConfigApi","AttachmentData","CardData","CipherData","CollectionData","EventData","FieldData","FolderData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","PolicyData","ProviderData","SecureNoteData","SendFileData","SendTextData","SendData","ServerConfigData","serverConfigResponse","ThirdPartyServerConfigData","EnvironmentServerConfigData","fromJSON","EncryptionPair","decryptedFromJson","encryptedFromJson","DataEncryptionPair","TemporaryDataEncryption","AccountData","AccountKeys","initRecordEncryptionPairsFromJSON","decObj","AccountProfile","AccountTokens","Attachment","decryptAttachmentKey","getKeyForDecryption","toAttachmentData","buildDataModel","Card","toCardData","Cipher","decAttachment","decField","decPh","toLoginData","toSecureNoteData","toIdentityData","toFieldData","toPasswordHistoryData","Collection","Domain","dataObj","notEncList","objProp","notEncStringList","viewModel","mapProp","EncArrayBuffer","ENC_TYPE_LENGTH","throwDecryptionError","arrayBuffer","b64","EncString","encryptedStringOrType","initFromData","initFromEncryptedString","parseEncryptedString","decryptedValue","EnvironmentUrls","Field","Folder","GeneratedPasswordHistory","Identity","KdfConfig","LoginUri","toLoginUriData","Login","MasterPasswordPolicyOptions","Organization","isManager","hasProvider","Password","Policy","SecureNote","SendFile","SendText","SymmetricCryptoKey","TreeNode","WindowState","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","CipherWithIdExport","CollectionExport","CollectionWithIdExport","FolderExport","FolderWithIdExport","CipherBulkDeleteRequest","CipherCollectionsRequest","CipherCreateRequest","CipherWithIdRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CollectionRequest","FolderRequest","TokenTwoFactorRequest","KeysRequest","OrganizationApiKeyRequest","OrganizationConnectionRequest","OrganizationKeysRequest","OrganizationTaxInfoUpdateRequest","SecretVerificationRequest","SelectionReadOnlyRequest","SendRequest","fileLength","TaxInfoUpdateRequest","TwoFactorEmailRequest","AttachmentResponse","BaseResponse","propertyName","exactName","otherCasePropertyName","PasswordHistoryResponse","CipherResponse","EmergencyAccessGranteeDetailsResponse","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","EmergencyAccessViewResponse","ErrorResponse","identityResponse","errorModel","responseErrorModel","messages","lastSep","ListResponse","PolicyResponse","SelectionReadOnlyResponse","AttachmentView","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","formatYear","CipherView","linkedFieldValue","linkedFieldI18nKey","CollectionView","FieldView","showCount","maskedValue","FolderView","IdentityView","_firstName","_lastName","fullName","fullAddress","fullAddressPart2","addressPart2","ItemView","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","hostnameOrUri","hostOrUri","LoginView","maskedPassword","PasswordHistoryView","SecureNoteView","SendFileView","SendTextView","SendView","maxAccessCountReached","pendingDelete","ConsoleLogService","timersMap","level","InitializerKey","StorageLocation","State","accountDeserializer","buildAccountMapFromJSON","jsonAccounts","DDG_SHARED_KEY","accountsSubject","activeAccountSubject","activeAccountUnlockedSubject","hasBeenInited","isRecoveredSession","accountDiskCache","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setActiveUser","clearDecryptedDataForActiveUser","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getTimeoutBasedStorageOptions","getAccount","saveAccount","getAlwaysShowDock","defaultOnDiskOptions","setAlwaysShowDock","saveGlobals","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","setBiometricAwaitingAcceptance","getBiometricFingerprintValidated","setBiometricFingerprintValidated","setBiometricText","setBiometricUnlock","hasPremiumFromOrganization","getClearClipboard","defaultOnDiskLocalOptions","setClearClipboard","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","setDefaultUriMatch","getDisableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","getDisableAutoTotpCopy","setDisableAutoTotpCopy","getDisableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","setDisableContextMenuItem","getDisableGa","setDisableGa","getDontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","getDuckDuckGoSharedKey","setDuckDuckGoSharedKey","getEnableAlwaysOnTop","accountPreference","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","setEnableCloseToTray","getEnableDuckDuckGoBrowserIntegration","enableDuckDuckGoBrowserIntegration","setEnableDuckDuckGoBrowserIntegration","getEnableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","setEnableStartToTray","getEnableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","setEntityId","getEntityType","setEntityType","getGlobalEnvironmentUrls","getEquivalentDomains","getForcePasswordReset","getInstalledVersion","setInstalledVersion","getMainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","getNoAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","setOpenAtLogin","organizationInvitation","usernameGenerationOptions","accountVaultTimeoutAction","globalVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","setDiskCache","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deleteDiskCache","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","deserializer","stateUpdater","updatedState","withPrototypeForArrayMembers","memberConstructor","memberConverter","originalResult","getOwnPropertyDescriptors","withPrototypeForObjectValues","valuesConstructor","valuesConverter","TwoFactorProviders","priority","selectedTwoFactorProviderType","twoFactorProvidersData","providerPriority","_value","setSelectedProvider","clearProviders","BitActionDirective","buttonComponent","_loading$","loading$","handler","BitSubmitDirective","formGroupDirective","_disabled$","disabled$","ngSubmit","awaitable","statusChanges","BitFormButtonDirective","submitDirective","actionDirective","SizeClasses","xlarge","large","small","xsmall","AvatarComponent","svgCharCount","svgFontSize","svgFontWeight","svgSize","chars","upperCaseText","svg","getFirstLetters","unicodeSafeSubstring","hexColor","createSvgElement","charObj","createTextElement","svgHtml","bypassSecurityTrustResourceUrl","svgTag","backgroundColor","textTag","fontWeight","BadgeListComponent","filteredItems","isFiltered","badgeType","maxItems","_maxItems","styles","primary","secondary","danger","hoverStyles","BadgeDirective","hasHoverEffects","nodeName","BadgeModule","BreadcrumbComponent","BreadcrumbsComponent","breadcrumbList","toArray","beforeOverflow","hasOverflow","overflow","afterOverflow","BreadcrumbsModule","focusRing","buttonStyles","unstyled","ButtonComponent","_block","block","disabledAttr","setButtonType","defaultIcon","defaultI18n","calloutClass","CheckboxComponent","inputClasses","maskImage","_disabled","CheckboxModule","CharacterType","ColorPasswordComponent","characterStyles","Emoji","Letter","Special","passwordArray","getCharacterClass","charType","getCharacterType","charClass","fadeIn","DEFAULT_ICON","DEFAULT_COLOR","SimpleConfigurableDialogComponent","simpleDialogOpts","SimpleDialogType","SimpleDialogCloseType","localizeText","translation","defaultKey","DialogService","_overlay","_injector","_defaultOptions","_parentDialog","_overlayContainer","scrollStrategy","_destroy$","backDropClasses","componentOrTemplateRef","backdropClass","simpleDialogOptions","disableClose","DialogComponent","dialogSize","_disablePadding","disablePadding","DialogCloseDirective","dialogResult","DialogTitleContainerDirective","simple","containerInstance","_ariaLabelledBy","IconDirective","SimpleDialogComponent","hasIcon","BitFormControlAbstraction","FormControlComponent","_inline","inline","labelClasses","formControl","labelContentClasses","displayError","FormControlModule","BitHintComponent","BitLabel","BitErrorSummary","errorString","dirty","untouched","BitFormFieldControl","BitErrorComponent","requiredLength","BitFormFieldComponent","ngAfterContentChecked","InputModule","FormFieldModule","BitPasswordInputToggleDirective","button","formField","toggled","toggledChange","spellcheck","PrefixClasses","PrefixButtonClasses","PrefixStaticContentClasses","BitPrefixDirective","BitSuffixDirective","contrast","main","muted","light","sizes","BitIconButtonComponent","iconClass","IconButtonModule","BitIconComponent","domSanitizer","innerHtml","bypassSecurityTrustHtml","Icon","isIcon","DynamicContentNotAllowedError","svgIcon","strings","Search","BitInputDirective","hasPrefix","hasSuffix","ariaInvalid","setSelectionRange","linkStyles","commonStyles","LinkDirective","linkType","AnchorLinkDirective","ButtonLinkDirective","LinkModule","MenuDividerComponent","MenuItemDirective","MenuTriggerForDirective","overlay","isOpen","defaultMenuConfig","panelClass","hasBackdrop","scrollStrategies","reposition","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","withLockedPosition","withFlexibleDimensions","withPush","hasPopup","menu","ariaRole","toggleMenu","destroyMenu","openMenu","disposeAll","overlayRef","templatePortal","attach","closedEventsSub","getClosedEvents","keyDownEventsSub","keyManager","keydownEvents","onKeydown","detachments","escKey","backdropClick","menuClosed","dispose","MenuComponent","menuItems","withWrap","MenuModule","MultiSelectModule","RadioButtonModule","ButtonLikeAbstraction","CellDirective","RowDirective","alignContent","alignmentClass","TableBodyDirective","template","TableComponent","_initialized","dataSource","dataStream","connect","rows","disconnect","TabHeaderComponent","TabListContainerDirective","TabListItemDirective","baseClassList","active","activeClassList","disabledClassList","textColorClassList","TabBodyComponent","preserveContent","_active","_firstRender","tabContent","selectTab","TabGroupComponent","_indexToSelect","_selectedIndex","selectedIndexChange","selectedTabChange","_groupId","getTabContentId","getTabLabelId","indexToSelect","_clampTabIndex","isFirstRun","tabs","setActiveItem","tabLabels","withHorizontalOrientation","withHomeAndEnd","selectedTab","TabLabelDirective","TabComponent","_viewContainerRef","textLabel","_contentPortal","implicitContent","TabLinkComponent","_tabNavBar","routerLinkMatchOptions","matrixParams","paths","fragment","onKeyDown","tabItem","routerLinkActive","isActiveChange","updateActiveLink","TabNavBarComponent","updateActiveItem","functionToObservable","func","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","getPrototypeOf","mode","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","miniCssF","globalThis","Function","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","prev","doneFns","parentNode","Symbol","toStringTag","nmd","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}