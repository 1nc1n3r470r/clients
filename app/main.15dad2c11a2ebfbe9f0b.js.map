{"version":3,"file":"app/main.15dad2c11a2ebfbe9f0b.js","mappings":"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ACA,UACA,YACA,OACA,SACA,WACA,YACA,YACA,YACA,YACA,SACA,QACA,YACA,WACA,SACA,UACA,SACA,SACA,WACA,QACA,SACA,YACA,YACA,YACA,YACA,YACA,OACA,UACA,SACA,SACA,QACA,YACA,SACA,QACA,UACA,QACA,WACA,UACA,YACA,QACA,YACA,YACA,SACA,WACA,YACA,UACA,QACA,OACA,OACA,OACA,MACA,OACA,YACA,QACA,YACA,QACA,UACA,UACA,YACA,QACA,QACA,YACA,WACA,SACA,QACA,QACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,QACA,QACA,YACA,QACA,WACA,UACA,WACA,WACA,OACA,WACA,SACA,SACA,WACA,QACA,YACA,QACA,WACA,YACA,YACA,WACA,YACA,YACA,SACA,YACA,YACA,SACA,UACA,UACA,WACA,OACA,QACA,QACA,QACA,UACA,WACA,UACA,WACA,QACA,SACA,WACA,QACA,YACA,UACA,QACA,QACA,SACA,WACA,SACA,YACA,SACA,UACA,WACA,YACA,UACA,YACA,UACA,SACA,UACA,UACA,UACA,SACA,SACA,WACA,OACA,YACA,UACA,QACA,SACA,SACA,SACA,UACA,UACA,YACA,YACA,UACA,SACA,UACA,YACA,YACA,WACA,QACA,YACA,QACA,QACA,WACA,YACA,WACA,WACA,UACA,WACA,UACA,YACA,UACA,YACA,WACA,WACA,WACA,SACA,UACA,YACA,WACA,SACA,WACA,WACA,YACA,WACA,YACA,WACA,YACA,YACA,YACA,YACA,SACA,UACA,QACA,QACA,UACA,SACA,UACA,SACA,WACA,WACA,UACA,SACA,WACA,QACA,SACA,UACA,YACA,SACA,UACA,YACA,YACA,WACA,WACA,YACA,UACA,WACA,QACA,YACA,YACA,UACA,QACA,YACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,QACA,QACA,WACA,QACA,OACA,WACA,YACA,YACA,WACA,OACA,QACA,WACA,WACA,QACA,QACA,YACA,UACA,WACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,OACA,QACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,SACA,YACA,WACA,QACA,MACA,SACA,YACA,SACA,YACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,YACA,SACA,WACA,SACA,UACA,WACA,UACA,UACA,YACA,YACA,YACA,SACA,WACA,QACA,OACA,WACA,OACA,SACA,YACA,UACA,SACA,SACA,UACA,YACA,WACA,YACA,YACA,SACA,QACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,WACA,UACA,UACA,WACA,QACA,WACA,YACA,SACA,YACA,SACA,SACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,SACA,SACA,WACA,SACA,UACA,WACA,QACA,WACA,UACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,SACA,QACA,OACA,OACA,SACA,WACA,SACA,SACA,WACA,YACA,YACA,WACA,SACA,SACA,YACA,WACA,WACA,UACA,YACA,WACA,WACA,YACA,UACA,UACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,YACA,SACA,WACA,WACA,YACA,WACA,QACA,WACA,YACA,SACA,QACA,UACA,QACA,UACA,SACA,WACA,QACA,SACA,UACA,SACA,SACA,YACA,UACA,QACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,YACA,UACA,QACA,WACA,SACA,SACA,SACA,WACA,QACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,SACA,YACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,QACA,WACA,UACA,WACA,SACA,UACA,SACA,OACA,YACA,UACA,YACA,SACA,WACA,YACA,UACA,WACA,YACA,WACA,OACA,YACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,QACA,OACA,YACA,WACA,YACA,UACA,UACA,SACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,UACA,YACA,YACA,QACA,YACA,YACA,QACA,WACA,YACA,SACA,UACA,SACA,QACA,QACA,UACA,QACA,QACA,WACA,QACA,QACA,UACA,UACA,WACA,SACA,OACA,WACA,QACA,WACA,UACA,WACA,OACA,OACA,WACA,WACA,UACA,OACA,SACA,UACA,QACA,SACA,YACA,QACA,QACA,UACA,SACA,QACA,QACA,WACA,UACA,WACA,WACA,OACA,SACA,UACA,SACA,SACA,UACA,UACA,YACA,OACA,SACA,SACA,QACA,OACA,MACA,UACA,OACA,UACA,SACA,UACA,WACA,QACA,WACA,WACA,WACA,QACA,UACA,SACA,SACA,QACA,OACA,YACA,YACA,OACA,YACA,SACA,QACA,SACA,UACA,WACA,UACA,QACA,QACA,QACA,SACA,UACA,WACA,YACA,OACA,YACA,WACA,SACA,QACA,OACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,YACA,YACA,SACA,SACA,QACA,SACA,UACA,OACA,SACA,SACA,WACA,YACA,UACA,WACA,SACA,SACA,WACA,UACA,UACA,QACA,QACA,QACA,QACA,UACA,UACA,SACA,YACA,OACA,QACA,QACA,UACA,UACA,YACA,UACA,UACA,YACA,YACA,UACA,UACA,YACA,YACA,YACA,UACA,WACA,SACA,SACA,YACA,SACA,SACA,WACA,QACA,QACA,UACA,WACA,YACA,SACA,WACA,WACA,SACA,WACA,QACA,QACA,WACA,QACA,YACA,SACA,WACA,SACA,YACA,SACA,SACA,SACA,WACA,WACA,YACA,YACA,WACA,WACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,UACA,QACA,OACA,QACA,YACA,SACA,OACA,UACA,YACA,YACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,QACA,QACA,SACA,SACA,SACA,UACA,YACA,WACA,QACA,OACA,SACA,OACA,SACA,UACA,OACA,WACA,OACA,SACA,UACA,SACA,YACA,QACA,UACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,WACA,UACA,OACA,UACA,OACA,WACA,WACA,UACA,YACA,WACA,UACA,YACA,OACA,UACA,UACA,UACA,YACA,QACA,SACA,WACA,SACA,WACA,UACA,WACA,SACA,QACA,SACA,SACA,UACA,SACA,QACA,OACA,SACA,WACA,WACA,SACA,UACA,SACA,SACA,SACA,QACA,YACA,SACA,UACA,SACA,UACA,UACA,WACA,OACA,YACA,UACA,UACA,SACA,YACA,UACA,UACA,UACA,YACA,UACA,YACA,UACA,UACA,QACA,UACA,SACA,YACA,SACA,UACA,WACA,WACA,YACA,YACA,YACA,WACA,SACA,YACA,QACA,SACA,UACA,UACA,WACA,UACA,YACA,WACA,YACA,QACA,YACA,YACA,UACA,UACA,UACA,SACA,YACA,QACA,SACA,WACA,SACA,UACA,YACA,YACA,QACA,UACA,UACA,UACA,OACA,OACA,SACA,SACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,WACA,SACA,UACA,WACA,WACA,UACA,YACA,WACA,UACA,SACA,SACA,SACA,UACA,YACA,SACA,QACA,UACA,YACA,SACA,SACA,YACA,QACA,UACA,YACA,UACA,WACA,WACA,UACA,SACA,SACA,QACA,SACA,YACA,WACA,WACA,SACA,SACA,SACA,WACA,WACA,YACA,YACA,YACA,UACA,WACA,WACA,QACA,WACA,QACA,QACA,UACA,YACA,UACA,YACA,WACA,SACA,SACA,UACA,QACA,QACA,YACA,WACA,UACA,QACA,UACA,YACA,YACA,WACA,UACA,WACA,UACA,UACA,QACA,UACA,UACA,WACA,QACA,UACA,SACA,WACA,WACA,WACA,UACA,WACA,SACA,WACA,UACA,QACA,QACA,SACA,SACA,OACA,YACA,UACA,QACA,YACA,SACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,QACA,YACA,YACA,YACA,WACA,YACA,YACA,QACA,QACA,QACA,OACA,WACA,SACA,WACA,WACA,QACA,WACA,WACA,SACA,YACA,UACA,QACA,UACA,WACA,SACA,OACA,SACA,UACA,WACA,SACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,WACA,QACA,SACA,WACA,SACA,WACA,WACA,YACA,SACA,UACA,UACA,WACA,UACA,SACA,SACA,OACA,QACA,QACA,OACA,QACA,WACA,SACA,SACA,QACA,YACA,QACA,WACA,UACA,UACA,WACA,UACA,WACA,UACA,QACA,QACA,QACA,UACA,SACA,WACA,OACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,YACA,WACA,QACA,SACA,UACA,SACA,UACA,WACA,QACA,SACA,WACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,WACA,UACA,UACA,WACA,QACA,SACA,UACA,WACA,YACA,QACA,WACA,SACA,SACA,YACA,SACA,UACA,QACA,YACA,UACA,UACA,WACA,YACA,YACA,OACA,WACA,SACA,UACA,SACA,QACA,UACA,MACA,WACA,SACA,UACA,SACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,OACA,OACA,OACA,OACA,WACA,WACA,UACA,WACA,SACA,YACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,SACA,WACA,OACA,OACA,OACA,UACA,QACA,QACA,SACA,QACA,WACA,UACA,UACA,WACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,SACA,UACA,SACA,YACA,WACA,WACA,YACA,UACA,YACA,WACA,WACA,YACA,WACA,YACA,UACA,UACA,UACA,WACA,UACA,YACA,UACA,QACA,YACA,UACA,WACA,WACA,SACA,WACA,YACA,YACA,UACA,YACA,YACA,UACA,OACA,UACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,UACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,WACA,WACA,UACA,YACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,UACA,YACA,YACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,YACA,UACA,UACA,YACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,OACA,QACA,OACA,WACA,YACA,UACA,SACA,SACA,SACA,YACA,YACA,WACA,WACA,YACA,QACA,WACA,UACA,WACA,YACA,SACA,UACA,WACA,UACA,YACA,YACA,UACA,SACA,SACA,WACA,YACA,SACA,SACA,YACA,OACA,UACA,SACA,QACA,QACA,QACA,YACA,YACA,WACA,YACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,UACA,SACA,WACA,OACA,WACA,YACA,WACA,WACA,SACA,WACA,UACA,WACA,YACA,YACA,SACA,QACA,YACA,QACA,UACA,UACA,QACA,QACA,QACA,UACA,WACA,WACA,WACA,WACA,SACA,SACA,UACA,YACA,QACA,UACA,UACA,YACA,SACA,WACA,YACA,SACA,WACA,WACA,WACA,WACA,WACA,SACA,QACA,QACA,SACA,QACA,QACA,WACA,UACA,WACA,YACA,UACA,WACA,UACA,WACA,OACA,UACA,QACA,QACA,QACA,UACA,SACA,WACA,UACA,UACA,UACA,WACA,UACA,YACA,SACA,WACA,UACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,UACA,UACA,QACA,QACA,UACA,UACA,YACA,UACA,YACA,UACA,QACA,YACA,SACA,UACA,WACA,WACA,YACA,UACA,WACA,YACA,UACA,UACA,WACA,QACA,OACA,SACA,UACA,UACA,YACA,OACA,UACA,UACA,WACA,SACA,SACA,WACA,WACA,YACA,WACA,UACA,YACA,WACA,UACA,YACA,UACA,QACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,SACA,SACA,SACA,YACA,UACA,QACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,YACA,QACA,QACA,QACA,OACA,SACA,UACA,YACA,UACA,YACA,WACA,YACA,UACA,MACA,QACA,SACA,UACA,UACA,WACA,SACA,YACA,YACA,MACA,MACA,WACA,SACA,QACA,WACA,SACA,QACA,QACA,WACA,QACA,UACA,YACA,SACA,WACA,QACA,SACA,SACA,WACA,YACA,QACA,WACA,WACA,YACA,UACA,WACA,WACA,UACA,OACA,OACA,YACA,OACA,YACA,OACA,WACA,SACA,WACA,WACA,UACA,OACA,SACA,WACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,SACA,YACA,WACA,SACA,UACA,YACA,QACA,OACA,YACA,SACA,WACA,QACA,UACA,WACA,SACA,QACA,SACA,SACA,QACA,QACA,YACA,QACA,WACA,SACA,WACA,YACA,WACA,UACA,SACA,YACA,YACA,UACA,YACA,UACA,YACA,WACA,OACA,WACA,UACA,SACA,YACA,YACA,YACA,QACA,WACA,SACA,WACA,YACA,SACA,SACA,OACA,OACA,SACA,SACA,WACA,SACA,WACA,SACA,UACA,SACA,YACA,YACA,YACA,WACA,UACA,YACA,WACA,WACA,WACA,UACA,SACA,WACA,SACA,WACA,UACA,YACA,WACA,YACA,YACA,QACA,WACA,UACA,UACA,SACA,SACA,OACA,WACA,YACA,WACA,SACA,YACA,QACA,WACA,QACA,WACA,YACA,SACA,WACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,UACA,QACA,SACA,WACA,SACA,YACA,YACA,WACA,SACA,YACA,WACA,SACA,WACA,YACA,YACA,WACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,UACA,OACA,YACA,YACA,WACA,YACA,SACA,UACA,YACA,WACA,SACA,SACA,SACA,WACA,YACA,YACA,UACA,UACA,QACA,WACA,SACA,SACA,WACA,QACA,UACA,YACA,UACA,YACA,YACA,WACA,WACA,YACA,YACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,YACA,WACA,WACA,SACA,YACA,YACA,WACA,YACA,YACA,SACA,WACA,YACA,WACA,UACA,QACA,UACA,WACA,UACA,UACA,YACA,WACA,SACA,UACA,YACA,UACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,YACA,YACA,UACA,OACA,WACA,SACA,YACA,QACA,OACA,SACA,UACA,YACA,WACA,YACA,WACA,WACA,YACA,YACA,MACA,WACA,YACA,WACA,OACA,SACA,OACA,WACA,QACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,YACA,QACA,QACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,UACA,WACA,YACA,YACA,WACA,YACA,WACA,YACA,WACA,WACA,WACA,SACA,WACA,WACA,UACA,YACA,WACA,UACA,UACA,YACA,WACA,WACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,WACA,OACA,YACA,UACA,OACA,UACA,YACA,YACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,WACA,SACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,YACA,WACA,UACA,WACA,UACA,YACA,UACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,WACA,QACA,QACA,QACA,YACA,UACA,WACA,WACA,WACA,WACA,SACA,WACA,YACA,YACA,WACA,WACA,WACA,YACA,QACA,SACA,SACA,OACA,WACA,WACA,QACA,QACA,QACA,QACA,OACA,SACA,YACA,SACA,QACA,UACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,QACA,QACA,SACA,WACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,UACA,QACA,OACA,YACA,SACA,SACA,OACA,SACA,WACA,SACA,OACA,OACA,QACA,OACA,OACA,WACA,YACA,YACA,WACA,YACA,WACA,UACA,UACA,YACA,WACA,YACA,QACA,UACA,UACA,OACA,UACA,WACA,YACA,YACA,WACA,YACA,YACA,YACA,SACA,SACA,WACA,SACA,SACA,QACA,OACA,UACA,QACA,QACA,QACA,UACA,WACA,YACA,WACA,WACA,SACA,WACA,SACA,SACA,WACA,UACA,UACA,UACA,QACA,QACA,QACA,YACA,UACA,WACA,UACA,UACA,UACA,QACA,QACA,WACA,SACA,OACA,MACA,SACA,YACA,UACA,WACA,UACA,WACA,WACA,QACA,OACA,OACA,SACA,SACA,MACA,OACA,SACA,WACA,OACA,UACA,WACA,WACA,MACA,OACA,SACA,YACA,YACA,UACA,UACA,WACA,SACA,SACA,OACA,OACA,UACA,OACA,QACA,QACA,QACA,UACA,UACA,WACA,UACA,YACA,UACA,WACA,UACA,WACA,WACA,OACA,QACA,UACA,UACA,UACA,SACA,UACA,QACA,UACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,SACA,UACA,QACA,UACA,SACA,WACA,SACA,YACA,YACA,SACA,WACA,UACA,QACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,YACA,OACA,SACA,UACA,YACA,UACA,WACA,YACA,UACA,YACA,YACA,OACA,WACA,SACA,OACA,UACA,SACA,WACA,YACA,WACA,MACA,YACA,UACA,YACA,SACA,YACA,SACA,SACA,WACA,WACA,YACA,UACA,YACA,SACA,QACA,YACA,UACA,SACA,QACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,SACA,MACA,WACA,WACA,YACA,QACA,UACA,SACA,MACA,UACA,WACA,MACA,YACA,QACA,YACA,WACA,YACA,QACA,UACA,QACA,QACA,UACA,SACA,UACA,YACA,YACA,QACA,WACA,UACA,SACA,SACA,WACA,SACA,YACA,QACA,UACA,YACA,WACA,OACA,QACA,WACA,UACA,WACA,UACA,UACA,WACA,WACA,YACA,WACA,YACA,WACA,WACA,WACA,WACA,UACA,UACA,YACA,QACA,MACA,SACA,YACA,SACA,YACA,YACA,WACA,UACA,YACA,SACA,SACA,YACA,YACA,WACA,UACA,UACA,WACA,WACA,YACA,QACA,SACA,UACA,UACA,YACA,YACA,UACA,YACA,WACA,YACA,YACA,WACA,YACA,WACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,WACA,WACA,YACA,UACA,SACA,UACA,YACA,YACA,YACA,UACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,YACA,WACA,YACA,WACA,SACA,UACA,SACA,SACA,YACA,SACA,SACA,WACA,UACA,WACA,UACA,YACA,WACA,WACA,WACA,UACA,WACA,QACA,OACA,SACA,OACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,WACA,UACA,QACA,SACA,WACA,UACA,UACA,YACA,SACA,YACA,YACA,WACA,SACA,SACA,UACA,YACA,SACA,SACA,UACA,QACA,QACA,WACA,YACA,YACA,WACA,WACA,WACA,SACA,YACA,YACA,WACA,UACA,QACA,UACA,YACA,YACA,SACA,WACA,WACA,YACA,YACA,WACA,UACA,UACA,WACA,UACA,QACA,YACA,SACA,YACA,WACA,UACA,QACA,WACA,YACA,YACA,UACA,UACA,OACA,YACA,YACA,YACA,WACA,WACA,QACA,WACA,UACA,OACA,QACA,YACA,SACA,QACA,UACA,UACA,WACA,YACA,YACA,YACA,SACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,SACA,YACA,YACA,YACA,YACA,QACA,OACA,YACA,SACA,UACA,SACA,QACA,WACA,OACA,SACA,YACA,WACA,WACA,SACA,UACA,YACA,YACA,YACA,YACA,YACA,QACA,SACA,WACA,YACA,SACA,SACA,WACA,UACA,YACA,WACA,UACA,UACA,UACA,YACA,WACA,WACA,YACA,SACA,WACA,UACA,YACA,YACA,WACA,YACA,SACA,YACA,WACA,WACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,UACA,SACA,WACA,SACA,YACA,UACA,UACA,SACA,YACA,UACA,UACA,OACA,SACA,UACA,SACA,OACA,QACA,UACA,OACA,WACA,SACA,SACA,WACA,UACA,UACA,YACA,QACA,UACA,OACA,UACA,YACA,YACA,UACA,UACA,WACA,SACA,UACA,WACA,SACA,YACA,YACA,UACA,WACA,WACA,MACA,QACA,UACA,SACA,SACA,OACA,OACA,SACA,SACA,WACA,WACA,WACA,WACA,WACA,QACA,QACA,UACA,SACA,UACA,WACA,YACA,WACA,SACA,SACA,QACA,SACA,SACA,WACA,UACA,YACA,QACA,QACA,QACA,QACA,UACA,SACA,WACA,WACA,YACA,UACA,UACA,QACA,WACA,QACA,UACA,SACA,WACA,SACA,SACA,SACA,UACA,OACA,SACA,QACA,WACA,SACA,WACA,WACA,UACA,UACA,YACA,QACA,WACA,QACA,UACA,WACA,WACA,YACA,SACA,UACA,UACA,WACA,MACA,OACA,UACA,UACA,WACA,WACA,YACA,YACA,QACA,UACA,QACA,QACA,YACA,UACA,WACA,WACA,OACA,UACA,YACA,YACA,YACA,WACA,WACA,SACA,QACA,UACA,WACA,SACA,WACA,UACA,YACA,YACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,OACA,UACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,WACA,OACA,SACA,UACA,QACA,WACA,UACA,UACA,QACA,SACA,UACA,WACA,OACA,MACA,MACA,OACA,QACA,OACA,WACA,SACA,WACA,SACA,WACA,SACA,OACA,OACA,OACA,UACA,WACA,WACA,YACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,MACA,QACA,WACA,WACA,UACA,YACA,WACA,YACA,WACA,QACA,QACA,UACA,UACA,YACA,SACA,UACA,QACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,SACA,YACA,WACA,YACA,WACA,UACA,WACA,YACA,WACA,UACA,SACA,WACA,SACA,YACA,WACA,QACA,UACA,UACA,WACA,SACA,SACA,QACA,SACA,WACA,YACA,YACA,WACA,QACA,SACA,UACA,QACA,UACA,YACA,SACA,OACA,QACA,YACA,UACA,WACA,WACA,YACA,SACA,QACA,QACA,SACA,WACA,YACA,WACA,QACA,YACA,SACA,MACA,QACA,MACA,YACA,UACA,QACA,OACA,YACA,WACA,UACA,SACA,SACA,UACA,YACA,SACA,YACA,WACA,OACA,SACA,QACA,SACA,SACA,WACA,UACA,MACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,MACA,WACA,YACA,SACA,UACA,WACA,QACA,OACA,OACA,SACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,WACA,WACA,QACA,UACA,YACA,SACA,QACA,YACA,WACA,YACA,UACA,YACA,WACA,WACA,SACA,YACA,YACA,YACA,WACA,YACA,UACA,YACA,UACA,UACA,UACA,QACA,QACA,YACA,SACA,UACA,YACA,QACA,OACA,WACA,YACA,WACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,SACA,WACA,QACA,QACA,SACA,QACA,UACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,SACA,WACA,YACA,QACA,UACA,QACA,WACA,UACA,WACA,UACA,SACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,WACA,WACA,SACA,YACA,YACA,UACA,WACA,QACA,QACA,QACA,UACA,WACA,UACA,OACA,SACA,YACA,UACA,SACA,OACA,OACA,WACA,OACA,UACA,QACA,WACA,WACA,YACA,OACA,UACA,QACA,UACA,OACA,OACA,OACA,QACA,WACA,YACA,QACA,SACA,OACA,SACA,OACA,SACA,WACA,OACA,UACA,SACA,SACA,SACA,OACA,OACA,OACA,WACA,YACA,WACA,YACA,SACA,SACA,WACA,UACA,YACA,WACA,WACA,UACA,WACA,QACA,WACA,WACA,UACA,UACA,UACA,WACA,UACA,SACA,UACA,QACA,WACA,QACA,QACA,UACA,YACA,QACA,QACA,YACA,UACA,UACA,YACA,WACA,SACA,YACA,SACA,YACA,YACA,UACA,QACA,OACA,UACA,WACA,WACA,YACA,SACA,QACA,UACA,WACA,OACA,YACA,OACA,QACA,YACA,WACA,WACA,QACA,UACA,YACA,QACA,YACA,QACA,SACA,WACA,OACA,UACA,OACA,WACA,SACA,QACA,QACA,SACA,WACA,SACA,QACA,SACA,UACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,WACA,WACA,UACA,UACA,YACA,UACA,WACA,SACA,QACA,YACA,WACA,WACA,QACA,UACA,YACA,QACA,OACA,WACA,QACA,OACA,UACA,UACA,YACA,UACA,QACA,SACA,WACA,OACA,OACA,QACA,QACA,UACA,OACA,SACA,MACA,UACA,WACA,YACA,WACA,UACA,WACA,SACA,SACA,UACA,UACA,MACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,YACA,SACA,UACA,SACA,UACA,YACA,UACA,WACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,SACA,UACA,WACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,SACA,YACA,SACA,QACA,YACA,YACA,UACA,WACA,UACA,YACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,UACA,WACA,YACA,SACA,WACA,WACA,WACA,YACA,WACA,QACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,UACA,QACA,UACA,OACA,SACA,QACA,UACA,YACA,QACA,SACA,YACA,WACA,UACA,WACA,YACA,OACA,UACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,SACA,OACA,WACA,WACA,YACA,YACA,YACA,SACA,SACA,YACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,UACA,WACA,YACA,YACA,UACA,WACA,OACA,OACA,QACA,UACA,YACA,UACA,QACA,UACA,YACA,QACA,SACA,SACA,SACA,UACA,UACA,WACA,WACA,UACA,YACA,QACA,WACA,QACA,SACA,SACA,YACA,QACA,WACA,SACA,UACA,UACA,UACA,UACA,QACA,YACA,WACA,WACA,UACA,WACA,SACA,SACA,WACA,OACA,MACA,OACA,OACA,OACA,QACA,SACA,WACA,SACA,QACA,YACA,WACA,UACA,SACA,YACA,WACA,YACA,WACA,WACA,SACA,SACA,YACA,YACA,SACA,WACA,SACA,OACA,SACA,UACA,WACA,WACA,SACA,SACA,SACA,UACA,SACA,YACA,UACA,QACA,OACA,UACA,OACA,SACA,YACA,MACA,SACA,UACA,WACA,YACA,WACA,YACA,YACA,YACA,SACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,MACA,UACA,QACA,OACA,OACA,MACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,WACA,SACA,QACA,OACA,QACA,WACA,SACA,SACA,YACA,WACA,WACA,QACA,YACA,WACA,UACA,WACA,UACA,YACA,WACA,UACA,YACA,WACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,SACA,SACA,YACA,UACA,WACA,YACA,YACA,WACA,SACA,UACA,YACA,YACA,WACA,UACA,YACA,YACA,QACA,WACA,YACA,WACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,UACA,WACA,YACA,WACA,UACA,YACA,YACA,YACA,UACA,YACA,SACA,WACA,SACA,SACA,MACA,OACA,SACA,OACA,QACA,MACA,OACA,YACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,WACA,YACA,YACA,UACA,QACA,UACA,YACA,UACA,OACA,YACA,SACA,QACA,MACA,MACA,SACA,SACA,YACA,UACA,WACA,YACA,SACA,YACA,WACA,MACA,UACA,UACA,SACA,UACA,UACA,WACA,QACA,OACA,QACA,UACA,UACA,OACA,UACA,YACA,OACA,OACA,YACA,UACA,QACA,SACA,SACA,MACA,QACA,SACA,QACA,SACA,WACA,OACA,UACA,UACA,MACA,SACA,YACA,SACA,UACA,OACA,UACA,WACA,WACA,YACA,QACA,OACA,MACA,SACA,WACA,YACA,SACA,UACA,WACA,YACA,WACA,QACA,YACA,WACA,YACA,OACA,SACA,WACA,UACA,QACA,YACA,QACA,UACA,UACA,OACA,SACA,QACA,OACA,WACA,WACA,OACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,OACA,UACA,YACA,UACA,SACA,WACA,WACA,QACA,WACA,UACA,SACA,QACA,QACA,SACA,WACA,OACA,MACA,OACA,SACA,OACA,WACA,WACA,SACA,OACA,OACA,WACA,WACA,YACA,WACA,OACA,SACA,SACA,WACA,SACA,WACA,UACA,UACA,UACA,OACA,UACA,UACA,YACA,WACA,SACA,UACA,UACA,OACA,SACA,QACA,OACA,UACA,WACA,OACA,QACA,WACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,UACA,UACA,WACA,YACA,WACA,SACA,SACA,QACA,UACA,WACA,SACA,UACA,SACA,OACA,OACA,QACA,SACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,YACA,WACA,YACA,WACA,YACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,OACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,WACA,UACA,SACA,WACA,SACA,UACA,UACA,SACA,WACA,SACA,WACA,SACA,WACA,OACA,WACA,OACA,SACA,QACA,SACA,SACA,WACA,UACA,UACA,YACA,OACA,UACA,SACA,YACA,UACA,QACA,OACA,SACA,OACA,OACA,UACA,SACA,UACA,YACA,WACA,SACA,UACA,QACA,WACA,SACA,WACA,YACA,YACA,SACA,UACA,YACA,UACA,UACA,WACA,MACA,OACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,SACA,QACA,QACA,OACA,OACA,UACA,YACA,QACA,QACA,UACA,WACA,OACA,QACA,WACA,WACA,SACA,SACA,WACA,UACA,OACA,OACA,MACA,UACA,UACA,SACA,OACA,OACA,WACA,YACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,YACA,UACA,SACA,SACA,YACA,YACA,QACA,UACA,YACA,WACA,YACA,YACA,SACA,WACA,UACA,SACA,YACA,WACA,YACA,UACA,UACA,SACA,QACA,WACA,WACA,YACA,YACA,OACA,QACA,OACA,YACA,OACA,SACA,WACA,SACA,YACA,UACA,YACA,WACA,QACA,YACA,SACA,QACA,YACA,WACA,WACA,SACA,WACA,WACA,QACA,OACA,UACA,YACA,WACA,UACA,SACA,UACA,WACA,QACA,YACA,WACA,YACA,YACA,YACA,UACA,YACA,WACA,WACA,SACA,WACA,UACA,YACA,WACA,WACA,QACA,YACA,SACA,YACA,OACA,OACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,WACA,SACA,SACA,QACA,QACA,YACA,UACA,UACA,UACA,YACA,WACA,YACA,SACA,UACA,UACA,YACA,QACA,UACA,SACA,UACA,QACA,WACA,SACA,SACA,SACA,OACA,MACA,WACA,YACA,UACA,UACA,WACA,QACA,QACA,YACA,YACA,SACA,WACA,SACA,SACA,UACA,WACA,SACA,YACA,SACA,UACA,SACA,QACA,YACA,SACA,YACA,YACA,UACA,SACA,YACA,SACA,UACA,WACA,SACA,UACA,UACA,UACA,YACA,WACA,UACA,WACA,YACA,WACA,WACA,YACA,OACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,WACA,WACA,WACA,QACA,WACA,WACA,UACA,QACA,SACA,YACA,SACA,UACA,SACA,WACA,WACA,UACA,QACA,SACA,SACA,WACA,SACA,UACA,YACA,SACA,UACA,YACA,WACA,QACA,WACA,OACA,YACA,WACA,WACA,UACA,MACA,YACA,SACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,YACA,UACA,WACA,UACA,YACA,QACA,SACA,WACA,SACA,YACA,WACA,UACA,WACA,YACA,YACA,YACA,WACA,MACA,SACA,WACA,UACA,YACA,WACA,WACA,WACA,QACA,YACA,WACA,YACA,YACA,UACA,WACA,SACA,QACA,OACA,WACA,YACA,SACA,WACA,YACA,SACA,YACA,QACA,QACA,YACA,WACA,UACA,WACA,UACA,WACA,QACA,YACA,YACA,QACA,QACA,UACA,OACA,QACA,SACA,QACA,SACA,OACA,OACA,MACA,MACA,WACA,QACA,OACA,SACA,UACA,WACA,WACA,YACA,YACA,SACA,WACA,QACA,YACA,UACA,QACA,QACA,WACA,UACA,YACA,SACA,QACA,YACA,QACA,YACA,WACA,SACA,UACA,YACA,WACA,QACA,QACA,SACA,YACA,QACA,UACA,UACA,SACA,YACA,QACA,UACA,SACA,WACA,OACA,YACA,YACA,SACA,OACA,SACA,SACA,SACA,UACA,YACA,UACA,OACA,QACA,MACA,OACA,OACA,SACA,QACA,YACA,OACA,SACA,SACA,UACA,QACA,SACA,UACA,YACA,WACA,SACA,WACA,UACA,SACA,WACA,WACA,WACA,YACA,OACA,SACA,UACA,SACA,WACA,SACA,WACA,SACA,YACA,SACA,SACA,WACA,WACA,YACA,WACA,YACA,YACA,UACA,UACA,OACA,SACA,OACA,UACA,QACA,OACA,MACA,YACA,SACA,WACA,WACA,SACA,UACA,QACA,OACA,SACA,WACA,WACA,QACA,QACA,SACA,SACA,WACA,YACA,QACA,WACA,QACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,WACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,WACA,YACA,QACA,SACA,QACA,MACA,MACA,QACA,MACA,YACA,WACA,WACA,SACA,WACA,UACA,WACA,YACA,SACA,YACA,OACA,UACA,YACA,YACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,SACA,YACA,SACA,UACA,YACA,YACA,WACA,WACA,SACA,QACA,SACA,UACA,SACA,UACA,UACA,OACA,MACA,OACA,WACA,OACA,MACA,QACA,WACA,QACA,OACA,UACA,WACA,OACA,WACA,UACA,WACA,UACA,QACA,SACA,WACA,OACA,WACA,QACA,UACA,YACA,UACA,OACA,SACA,OACA,OACA,OACA,OACA,UACA,OACA,OACA,WACA,UACA,YACA,YACA,YACA,WACA,QACA,UACA,WACA,SACA,WACA,WACA,YACA,YACA,MACA,YACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,UACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,WACA,QACA,WACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,UACA,YACA,YACA,UACA,UACA,SACA,UACA,UACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,OACA,UACA,UACA,WACA,UACA,WACA,WACA,YACA,YACA,WACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,UACA,YACA,YACA,YACA,UACA,WACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,WACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,UACA,YACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,UACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,UACA,YACA,WACA,YACA,MACA,SACA,UACA,YACA,UACA,YACA,SACA,WACA,SACA,QACA,QACA,YACA,UACA,WACA,WACA,WACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,QACA,SACA,UACA,SACA,YACA,OACA,WACA,YACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,WACA,QACA,WACA,OACA,YACA,QACA,UACA,WACA,YACA,UACA,YACA,SACA,QACA,YACA,YACA,SACA,QACA,UACA,UACA,WACA,YACA,SACA,UACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,WACA,WACA,YACA,SACA,UACA,YACA,SACA,SACA,QACA,UACA,UACA,SACA,WACA,SACA,SACA,UACA,UACA,UACA,SACA,UACA,YACA,SACA,UACA,YACA,QACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,UACA,UACA,YACA,WACA,WACA,WACA,QACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,YACA,SACA,WACA,YACA,OACA,WACA,UACA,QACA,YACA,UACA,SACA,YACA,YACA,SACA,WACA,QACA,YACA,WACA,SACA,SACA,UACA,UACA,WACA,SACA,QACA,QACA,SACA,UACA,WACA,UACA,SACA,SACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,UACA,SACA,OACA,SACA,WACA,UACA,SACA,UACA,UACA,YACA,WACA,UACA,YACA,QACA,SACA,UACA,WACA,YACA,MACA,WACA,UACA,QACA,YACA,YACA,YACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,QACA,OACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,QACA,OACA,YACA,YACA,SACA,YACA,QACA,SACA,WACA,QACA,YACA,SACA,YACA,YACA,QACA,UACA,UACA,SACA,UACA,YACA,SACA,UACA,YACA,QACA,YACA,QACA,SACA,WACA,UACA,UACA,WACA,QACA,UACA,QACA,SACA,UACA,UACA,SACA,WACA,UACA,WACA,WACA,UACA,WACA,YACA,YACA,WACA,WACA,SACA,UACA,YACA,YACA,UACA,WACA,YACA,WACA,UACA,UACA,WACA,UACA,YACA,WACA,QACA,WACA,QACA,SACA,YACA,SACA,WACA,YACA,UACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,UACA,WACA,SACA,OACA,YACA,UACA,QACA,MACA,OACA,OACA,OACA,UACA,UACA,WACA,YACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,WACA,QACA,OACA,YACA,UACA,YACA,UACA,SACA,OACA,OACA,UACA,OACA,SACA,SACA,QACA,WACA,WACA,UACA,WACA,YACA,OACA,SACA,WACA,WACA,SACA,YACA,WACA,UACA,SACA,WACA,QACA,OACA,SACA,WACA,WACA,SACA,UACA,SACA,UACA,WACA,SACA,SACA,UACA,YACA,UACA,UACA,QACA,SACA,WACA,QACA,UACA,OACA,WACA,YACA,UACA,QACA,SACA,MACA,WACA,SACA,WACA,UACA,WACA,YACA,SACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,YACA,UACA,SACA,WACA,YACA,UACA,UACA,SACA,YACA,YACA,UACA,YACA,WACA,YACA,YACA,SACA,UACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,SACA,UACA,SACA,YACA,YACA,YACA,SACA,UACA,YACA,UACA,QACA,UACA,YACA,UACA,YACA,YACA,WACA,UACA,SACA,UACA,UACA,YACA,UACA,UACA,WACA,SACA,YACA,WACA,QACA,SACA,YACA,UACA,UACA,SACA,QACA,WACA,QACA,QACA,QACA,SACA,SACA,WACA,UACA,UACA,YACA,QACA,YACA,WACA,WACA,YACA,QACA,UACA,YACA,UACA,YACA,UACA,WACA,YACA,WACA,WACA,UACA,UACA,UACA,UACA,YACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,UACA,WACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,QACA,QACA,YACA,SACA,WACA,YACA,SACA,YACA,WACA,WACA,YACA,WACA,UACA,QACA,UACA,YACA,WACA,SACA,YACA,YACA,WACA,WACA,QACA,WACA,SACA,SACA,WACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,UACA,UACA,WACA,YACA,QACA,SACA,QACA,YACA,QACA,UACA,MACA,UACA,SACA,YACA,SACA,SACA,MACA,OACA,YACA,OACA,UACA,QACA,YACA,OACA,SACA,SACA,QACA,WACA,YACA,YACA,UACA,WACA,OACA,QACA,SACA,QACA,WACA,YACA,WACA,SACA,WACA,YACA,QACA,UACA,WACA,SACA,SACA,UACA,SACA,SACA,WACA,YACA,OACA,QACA,YACA,WACA,UACA,WACA,WACA,YACA,SACA,YACA,UACA,WACA,UACA,SACA,QACA,UACA,OACA,SACA,WACA,UACA,YACA,SACA,QACA,WACA,QACA,WACA,QACA,UACA,YACA,YACA,UACA,UACA,QACA,UACA,UACA,SACA,YACA,YACA,WACA,UACA,SACA,QACA,UACA,UACA,YACA,YACA,YACA,QACA,QACA,QACA,UACA,YACA,QACA,OACA,SACA,YACA,WACA,YACA,QACA,QACA,OACA,SACA,SACA,OACA,SACA,QACA,SACA,WACA,YACA,WACA,YACA,WACA,QACA,SACA,SACA,OACA,OACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,UACA,SACA,OACA,SACA,QACA,SACA,WACA,OACA,SACA,QACA,YACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,SACA,SACA,OACA,UACA,SACA,QACA,SACA,SACA,UACA,YACA,WACA,QACA,YACA,WACA,WACA,UACA,WACA,OACA,YACA,WACA,UACA,YACA,YACA,YACA,WACA,SACA,WACA,WACA,WACA,UACA,YACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,SACA,SACA,YACA,SACA,SACA,SACA,SACA,YACA,YACA,UACA,SACA,WACA,UACA,WACA,YACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,YACA,SACA,SACA,UACA,SACA,WACA,WACA,SACA,YACA,YACA,UACA,WACA,WACA,YACA,WACA,UACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,YACA,UACA,WACA,WACA,WACA,YACA,YACA,SACA,SACA,UACA,SACA,WACA,WACA,WACA,WACA,YACA,UACA,UACA,WACA,UACA,UACA,YACA,SACA,YACA,YACA,UACA,SACA,WACA,YACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,WACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,YACA,QACA,SACA,SACA,YACA,YACA,UACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,YACA,UACA,WACA,WACA,QACA,QACA,UACA,UACA,YACA,WACA,WACA,WACA,UACA,QACA,UACA,YACA,UACA,SACA,SACA,SACA,WACA,SACA,YACA,OACA,SACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,YACA,YACA,QACA,UACA,YACA,SACA,UACA,SACA,YACA,UACA,UACA,UACA,WACA,SACA,WACA,YACA,YACA,WACA,YACA,YACA,UACA,UACA,WACA,WACA,YACA,WACA,SACA,SACA,SACA,WACA,UACA,SACA,UACA,YACA,YACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,WACA,SACA,WACA,UACA,SACA,UACA,QACA,WACA,SACA,YACA,SACA,YACA,YACA,UACA,UACA,WACA,YACA,YACA,YACA,OACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,YACA,UACA,QACA,SACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,SACA,SACA,QACA,UACA,UACA,YACA,YACA,YACA,WACA,WACA,UACA,WACA,YACA,YACA,YACA,SACA,WACA,WACA,WACA,WACA,SACA,WACA,UACA,WACA,SACA,SACA,WACA,YACA,YACA,SACA,WACA,YACA,SACA,YACA,YACA,UACA,UACA,UACA,UACA,WACA,SACA,SACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YACA,YACA,QACA,SACA,UACA,SACA,UACA,UACA,WACA,QACA,SACA,UACA,UACA,UACA,SACA,UACA,YACA,WACA,WACA,UACA,YACA,YACA,SACA,YACA,SACA,WACA,UACA,YACA,UACA,UACA,WACA,YACA,SACA,SACA,WACA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,WACA,SACA,OACA,SACA,UACA,OACA,UACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,UACA,OACA,UACA,WACA,WACA,UACA,SACA,WACA,UACA,OACA,SACA,OACA,UACA,UACA,QACA,QACA,YACA,WACA,YACA,YACA,UACA,WACA,SACA,UACA,QACA,UACA,OACA,QACA,WACA,SACA,WACA,SACA,SACA,WACA,YACA,UACA,WACA,YACA,WACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,OACA,SACA,UACA,UACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,UACA,QACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,OACA,SACA,SACA,MACA,SACA,OACA,SACA,WACA,UACA,QACA,YACA,UACA,SACA,UACA,QACA,OACA,SACA,UACA,QACA,OACA,OACA,OACA,MACA,UACA,WACA,YACA,SACA,YACA,SACA,YACA,UACA,WACA,QACA,UACA,SACA,YACA,YACA,SACA,WACA,UACA,OACA,OACA,UACA,QACA,OACA,QACA,OACA,QACA,SACA,WACA,SACA,SACA,QACA,SACA,QACA,OACA,WACA,SACA,UACA,YACA,YACA,OACA,SACA,WACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,YACA,UACA,SACA,WACA,UACA,UACA,YACA,UACA,YACA,YACA,WACA,QACA,WACA,YACA,OACA,QACA,UACA,YACA,QACA,UACA,YACA,UACA,OACA,YACA,QACA,UACA,WACA,QACA,YACA,YACA,UACA,WACA,WACA,YACA,QACA,QACA,SACA,UACA,QACA,UACA,SACA,QACA,YACA,MACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,UACA,WACA,OACA,UACA,UACA,WACA,QACA,YACA,SACA,WACA,YACA,SACA,QACA,UACA,YACA,WACA,QACA,YACA,SACA,WACA,YACA,SACA,WACA,YACA,WACA,UACA,UACA,YACA,QACA,QACA,WACA,QACA,QACA,UACA,QACA,SACA,YACA,YACA,SACA,YACA,SACA,UACA,QACA,WACA,SACA,YACA,UACA,WACA,WACA,SACA,WACA,WACA,WACA,YACA,YACA,QACA,UACA,UACA,SACA,WACA,SACA,WACA,YACA,SACA,SACA,UACA,YACA,WACA,WACA,UACA,UACA,WACA,QACA,QACA,WACA,YACA,SACA,UACA,WACA,YACA,YACA,SACA,UACA,SACA,YACA,SACA,UACA,WACA,WACA,QACA,SACA,WACA,WACA,WACA,SACA,WACA,UACA,UACA,UACA,SACA,WACA,YACA,YACA,WACA,OACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,SACA,UACA,OACA,SACA,WACA,YACA,YACA,YACA,YACA,WACA,QACA,YACA,SACA,SACA,SACA,WACA,YACA,SACA,SACA,YACA,UACA,WACA,QACA,UACA,UACA,SACA,WACA,UACA,UACA,SACA,WACA,QACA,YACA,YACA,UACA,UACA,WACA,SACA,QACA,SACA,UACA,YACA,UACA,SACA,QACA,QACA,WACA,UACA,YACA,UACA,QACA,QACA,UACA,UACA,QACA,UACA,WACA,QACA,SACA,QACA,UACA,QACA,YACA,UACA,UACA,UACA,YACA,QACA,SACA,OACA,QACA,QACA,QACA,QACA,UACA,SACA,WACA,SACA,SACA,UACA,WACA,YACA,SACA,UACA,SACA,UACA,QACA,UACA,YACA,UACA,QACA,OACA,QACA,YACA,QACA,QACA,WACA,UACA,WACA,WACA,QACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,YACA,SACA,QACA,QACA,UACA,WACA,WACA,SACA,WACA,UACA,UACA,QACA,UACA,YACA,YACA,WACA,QACA,SACA,WACA,WACA,YACA,WACA,SACA,SACA,SACA,SACA,SACA,UACA,WACA,YACA,SACA,QACA,SACA,WACA,UACA,UACA,YACA,OACA,QACA,OACA,MACA,UACA,WACA,UACA,SACA,SACA,SACA,OACA,UACA,WACA,WACA,SACA,SACA,UACA,OACA,YACA,QACA,OACA,OACA,SACA,YACA,SACA,YACA,SACA,WACA,SACA,UACA,YACA,SACA,UACA,SACA,WACA,WACA,UACA,SACA,UACA,MACA,QACA,SACA,SACA,SACA,UACA,WACA,YACA,UACA,UACA,QACA,UACA,WACA,YACA,UACA,UACA,OACA,SACA,SACA,WACA,SACA,UACA,YACA,WACA,WACA,UACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,UACA,UACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,SACA,YACA,UACA,WACA,WACA,QACA,UACA,WACA,WACA,UACA,QACA,YACA,UACA,OACA,UACA,UACA,WACA,YACA,SACA,QACA,OACA,UACA,QACA,WACA,YACA,UACA,WACA,QACA,UACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,YACA,SACA,SACA,UACA,QACA,SACA,YACA,UACA,WACA,YACA,WACA,WACA,QACA,WACA,YACA,SACA,OACA,OACA,SACA,WACA,SACA,SACA,UACA,WACA,SACA,OACA,YACA,UACA,SACA,OACA,OACA,QACA,QACA,MACA,QACA,UACA,YACA,UACA,WACA,UACA,QACA,WACA,QACA,YACA,QACA,QACA,QACA,UACA,QACA,OACA,SACA,YACA,YACA,UACA,QACA,UACA,SACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,QACA,UACA,UACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,WACA,QACA,QACA,UACA,WACA,SACA,UACA,SACA,QACA,UACA,UACA,QACA,QACA,WACA,YACA,YACA,UACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,WACA,WACA,YACA,WACA,QACA,OACA,QACA,UACA,SACA,WACA,QACA,YACA,YACA,WACA,YACA,UACA,WACA,UACA,WACA,SACA,YACA,YACA,WACA,YACA,SACA,QACA,YACA,UACA,WACA,YACA,UACA,WACA,QACA,OACA,SACA,YACA,SACA,SACA,QACA,SACA,QACA,QACA,UACA,SACA,UACA,UACA,WACA,UACA,WACA,QACA,SACA,WACA,YACA,UACA,YACA,WACA,YACA,UACA,WACA,SACA,WACA,WACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,UACA,WACA,SACA,SACA,YACA,SACA,SACA,UACA,QACA,WACA,SACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,YACA,UACA,UACA,WACA,SACA,UACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,OACA,UACA,WACA,WACA,QACA,SACA,WACA,SACA,WACA,WACA,YACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,QACA,WACA,WACA,SACA,SACA,SACA,YACA,UACA,YACA,YACA,SACA,QACA,UACA,QACA,QACA,UACA,WACA,WACA,YACA,UACA,WACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,QACA,QACA,QACA,SACA,WACA,YACA,SACA,UACA,WACA,WACA,YACA,UACA,QACA,WACA,UACA,YACA,UACA,WACA,SACA,WACA,UACA,WACA,UACA,YACA,UACA,UACA,WACA,QACA,QACA,SACA,YACA,SACA,UACA,SACA,UACA,YACA,UACA,QACA,YACA,WACA,WACA,YACA,QACA,QACA,QACA,YACA,WACA,YACA,YACA,UACA,OACA,SACA,UACA,OACA,SACA,UACA,YACA,YACA,WACA,YACA,UACA,OACA,QACA,UACA,UACA,YACA,SACA,WACA,YACA,QACA,YACA,YACA,UACA,WACA,UACA,WACA,WACA,WACA,SACA,WACA,SACA,UACA,YACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,YACA,YACA,YACA,UACA,QACA,QACA,SACA,QACA,QACA,YACA,YACA,WACA,UACA,UACA,WACA,YACA,WACA,UACA,YACA,YACA,QACA,QACA,QACA,WACA,UACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,UACA,QACA,QACA,SACA,SACA,SACA,WACA,YACA,QACA,SACA,UACA,SACA,WACA,SACA,SACA,SACA,SACA,WACA,SACA,WACA,SACA,SACA,WACA,YACA,WACA,YACA,SACA,YACA,UACA,WACA,QACA,SACA,QACA,UACA,UACA,UACA,WACA,SACA,QACA,UACA,UACA,SACA,QACA,UACA,WACA,SACA,UACA,YACA,QACA,QACA,UACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,YACA,UACA,WACA,SACA,QACA,YACA,YACA,YACA,UACA,WACA,WACA,WACA,YACA,UACA,WACA,SACA,WACA,UACA,YACA,WACA,YACA,YACA,WACA,SACA,UACA,WACA,YACA,YACA,YACA,UACA,YACA,YACA,UACA,UACA,WACA,YACA,YACA,UACA,WACA,SACA,WACA,WACA,UACA,SACA,SACA,YACA,UACA,YACA,OACA,UACA,SACA,SACA,OACA,WACA,YACA,UACA,SACA,YACA,WACA,QACA,UACA,QACA,WACA,WACA,WACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,WACA,YACA,SACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,SACA,WACA,SACA,UACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,YACA,SACA,UACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,YACA,YACA,WACA,SACA,WACA,UACA,YACA,WACA,QACA,UACA,UACA,WACA,YACA,YACA,OACA,YACA,UACA,YACA,OACA,WACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,UACA,UACA,YACA,YACA,UACA,WACA,WACA,WACA,UACA,WACA,QACA,QACA,SACA,SACA,UACA,UACA,QACA,SACA,QACA,QACA,QACA,WACA,WACA,YACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,YACA,YACA,QACA,SACA,UACA,UACA,QACA,WACA,SACA,SACA,YACA,UACA,YACA,UACA,SACA,WACA,QACA,OACA,UACA,WACA,UACA,UACA,WACA,UACA,YACA,MACA,UACA,OACA,SACA,SACA,WACA,OACA,QACA,SACA,WACA,QACA,SACA,OACA,SACA,UACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,UACA,OACA,YACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,OACA,SACA,QACA,YACA,UACA,QACA,WACA,SACA,WACA,SACA,QACA,SACA,QACA,OACA,OACA,UACA,YACA,OACA,QACA,QACA,WACA,WACA,UACA,UACA,YACA,QACA,SACA,WACA,UACA,UACA,YACA,WACA,WACA,QACA,UACA,QACA,QACA,SACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,SACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,YACA,SACA,SACA,SACA,WACA,SACA,YACA,SACA,WACA,YACA,YACA,UACA,WACA,OACA,QACA,WACA,WACA,OACA,YACA,UACA,QACA,QACA,QACA,SACA,WACA,UACA,OACA,QACA,UACA,UACA,YACA,YACA,WACA,UACA,OACA,SACA,OACA,OACA,QACA,SACA,UACA,YACA,UACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,OACA,UACA,OACA,SACA,SACA,SACA,UACA,YACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,UACA,QACA,UACA,YACA,UACA,UACA,WACA,YACA,QACA,UACA,SACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,QACA,QACA,SACA,WACA,WACA,OACA,YACA,WACA,YACA,UACA,QACA,SACA,OACA,UACA,UACA,YACA,SACA,SACA,QACA,WACA,SACA,QACA,WACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,WACA,WACA,UACA,YACA,SACA,WACA,WACA,UACA,QACA,SACA,YACA,WACA,UACA,YACA,UACA,WACA,WACA,UACA,OACA,SACA,WACA,UACA,UACA,UACA,WACA,WACA,SACA,WACA,UACA,UACA,YACA,SACA,WACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,YACA,UACA,WACA,WACA,YACA,QACA,MACA,QACA,WACA,UACA,UACA,UACA,MACA,UACA,QACA,SACA,WACA,QACA,SACA,UACA,WACA,WACA,YACA,OACA,SACA,UACA,SACA,SACA,OACA,QACA,OACA,MACA,QACA,QACA,QACA,WACA,SACA,YACA,SACA,QACA,QACA,UACA,YACA,OACA,WACA,QACA,QACA,QACA,YACA,UACA,UACA,WACA,SACA,SACA,UACA,SACA,QACA,OACA,QACA,WACA,YACA,QACA,YACA,WACA,SACA,YACA,SACA,YACA,YACA,WACA,UACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,UACA,YACA,WACA,SACA,SACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,UACA,WACA,WACA,YACA,UACA,YACA,YACA,UACA,UACA,SACA,YACA,YACA,UACA,QACA,SACA,UACA,SACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,SACA,YACA,YACA,WACA,UACA,UACA,UACA,UACA,YACA,UACA,YACA,WACA,QACA,YACA,UACA,YACA,SACA,YACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,YACA,YACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,UACA,SACA,YACA,UACA,YACA,WACA,UACA,WACA,UACA,SACA,WACA,SACA,YACA,UACA,WACA,YACA,WACA,YACA,WACA,UACA,YACA,SACA,YACA,YACA,YACA,SACA,WACA,UACA,YACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,SACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,SACA,UACA,WACA,YACA,YACA,WACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,YACA,WACA,UACA,YACA,SACA,SACA,UACA,WACA,UACA,UACA,YACA,YACA,QACA,YACA,YACA,YACA,YACA,YACA,QACA,WACA,YACA,SACA,WACA,OACA,YACA,WACA,WACA,UACA,SACA,YACA,YACA,UACA,UACA,UACA,WACA,WACA,YACA,UACA,SACA,YACA,YACA,YACA,YACA,UACA,WACA,WACA,QACA,YACA,WACA,WACA,WACA,YACA,YACA,UACA,WACA,WACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,UACA,WACA,UACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,UACA,YACA,YACA,WACA,YACA,SACA,WACA,SACA,YACA,WACA,UACA,WACA,WACA,YACA,WACA,YACA,YACA,YACA,YACA,WACA,SACA,YACA,WACA,UACA,WACA,UACA,YACA,YACA,SACA,SACA,YACA,YACA,YACA,WACA,SACA,YACA,YACA,WACA,SACA,YACA,YACA,UACA,SACA,YACA,SACA,WACA,WACA,SACA,SACA,WACA,UACA,WACA,YACA,YACA,UACA,WACA,WACA,YACA,WACA,WACA,SACA,WACA,YACA,SACA,YACA,YACA,WACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,SACA,WACA,WACA,SACA,WACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,UACA,YACA,YACA,WACA,WACA,WACA,SACA,UACA,WACA,YACA,UACA,UACA,YACA,WACA,UACA,WACA,WACA,SACA,QACA,QACA,UACA,WACA,WACA,YACA,SACA,YACA,YACA,YACA,YACA,UACA,YACA,SACA,UACA,WACA,UACA,UACA,WACA,SACA,UACA,WACA,WACA,YACA,WACA,YACA,WACA,WACA,YACA,UACA,WACA,YACA,SACA,WACA,YACA,UACA,QACA,YACA,SACA,WACA,YACA,SACA,UACA,YACA,YACA,YACA,SACA,YACA,WACA,UACA,UACA,YACA,YACA,QACA,SACA,UACA,WACA,YACA,SACA,UACA,UACA,WACA,SACA,SACA,SACA,WACA,YACA,SACA,OACA,QACA,UACA,WACA,UACA,SACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,WACA,WACA,UACA,SACA,UACA,SACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,UACA,SACA,SACA,YACA,UACA,SACA,QACA,UACA,OACA,YACA,OACA,QACA,QACA,UACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,SACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,QACA,SACA,SACA,YACA,QACA,UACA,SACA,SACA,WACA,UACA,YACA,WACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,SACA,WACA,OACA,QACA,SACA,YACA,SACA,WACA,SACA,WACA,UACA,SACA,YACA,WACA,WACA,YACA,UACA,QACA,QACA,YACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,YACA,WACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,YACA,SACA,QACA,OACA,WACA,UACA,QACA,WACA,SACA,UACA,WACA,YACA,WACA,UACA,UACA,YACA,WACA,UACA,UACA,YACA,WACA,SACA,SACA,QACA,QACA,UACA,WACA,QACA,OACA,YACA,UACA,WACA,UACA,UACA,SACA,WACA,UACA,QACA,QACA,WACA,WACA,UACA,WACA,YACA,UACA,YACA,QACA,WACA,WACA,UACA,WACA,QACA,UACA,OACA,WACA,SACA,UACA,UACA,QACA,SACA,UACA,QACA,QACA,SACA,YACA,MACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,SACA,UACA,SACA,WACA,YACA,YACA,WACA,YACA,UACA,SACA,SACA,YACA,UACA,UACA,WACA,YACA,UACA,OACA,UACA,QACA,QACA,WACA,SACA,OACA,WACA,SACA,OACA,QACA,QACA,WACA,QACA,YACA,SACA,QACA,WACA,UACA,QACA,WACA,UACA,WACA,SACA,MACA,OACA,SACA,QACA,SACA,QACA,QACA,YACA,UACA,OACA,OACA,YACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,SACA,WACA,SACA,YACA,UACA,SACA,YACA,OACA,OACA,QACA,UACA,OACA,OACA,UACA,SACA,WACA,SACA,OACA,QACA,WACA,SACA,OACA,SACA,OACA,OACA,WACA,QACA,UACA,SACA,SACA,WACA,SACA,MACA,OACA,YACA,YACA,YACA,YACA,YACA,UACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,UACA,YACA,QACA,YACA,YACA,QACA,QACA,QACA,MACA,UACA,QACA,SACA,WACA,UACA,WACA,SACA,UACA,UACA,UACA,UACA,QACA,UACA,UACA,YACA,UACA,WACA,UACA,YACA,UACA,OACA,QACA,QACA,MACA,UACA,UACA,OACA,OACA,OACA,WACA,W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EAAsBC,EACtE,CAEA9hL,W,MACsB,QAApB,EAAAC,KAAKs7K,uBAAe,SAAE+C,cAAc,WACtC,E,iCAfWyD,GAAkB,e,mBAAlBA,EAAkB,2E,uICzBxB,MAAMC,EACX3iL,YAAgCk8K,GAAA,KAAAA,gBAAAA,CAAyC,CAEtC9sH,gBACjC,OAAO,YAAqB,CAC1B,gBACA,oBAEA,4BACA,+BACC7qD,OAA+BokF,MAAxB/nF,KAAKs7K,gBAA+B,KAAsB,KACtE,CAEAv7K,W,MACsB,QAApB,EAAAC,KAAKs7K,uBAAe,SAAE+C,cAAc,WACtC,E,iCAfW0D,GAAkB,e,mBAAlBA,EAAkB,2E,yNCHzBjE,EAAY,CAMhB,cACA,yBACA,kBACA,qBACA,yBACA,uBACA,uBACA,iBACA,6BACA,yBAGIV,EAA2C,CAC/C4E,SAAU,CACR,oBACA,oBACA,wBACA,gCACA,gCACA,6CACA,yBACA,uCACA,sCACGlE,GAELmE,KAAM,CACJ,oBACA,gBACA,wBACA,gCACA,4BACA,yCACA,yBACA,uCACA,sCACGnE,GAELoE,MAAO,CACL,oBACA,iBACA,wBACA,gCACA,8BACA,2CACA,yBACA,uCACA,sCACGpE,GAELT,QAAS,CACP,oBACA,oBACA,wBACA,0BACA,8BACA,2CACA,yBACA,uCACA,sCACGS,GAELR,UAAW,CACT,oBACA,iBACA,uBACA,0BACA,yBACA,2CACA,yBACA,sCACA,mCACA,gCACA,yCACGQ,GAELP,OAAQ,CACN,oBACA,kBACA,uBACA,0BACA,yBACA,2CACA,yBACA,sCACA,mCACA,iCACA,yCACGO,GAELqE,MAAO,CACL,oBACA,gBACA,wBACA,gCACA,4BACA,yCACA,uCACA,sCACGrE,GAELE,SAAU,IAKNoE,EAA0C,CAC9C5uB,QAAS,CAAC,YAAa,aACvBqoB,MAAO,CAAC,kBAAmB,eAAgB,WAQtC,MAAMwG,EALb,cAUW,KAAAp2K,KAAuB,UA0BvB,KAAAvM,SAAU,EACV,KAAA0iB,UAAW,C,CAzBMosC,gB,MACxB,MAAO,CACL,mBACA,YACA,kBACA,aACA,gBACA,wBACA,yBAEC7qD,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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/webpack/runtime/load script","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.module.ts","webpack://@bitwarden/web-vault/./src/app/common/base.accept.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/event.view.ts","webpack://@bitwarden/web-vault/./src/app/common/base.events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.people.component.ts","webpack://@bitwarden/web-vault/./src/app/components/dynamic-avatar.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/not-premium.directive.ts","webpack://@bitwarden/web-vault/./src/app/components/premium-badge.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.ts","webpack://@bitwarden/web-vault/./src/app/components/user-verification.component.html","webpack://@bitwarden/web-vault/./src/app/components/user-verification.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync/syncNotifier.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/accountFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/stateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/stateVersion.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/global-state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-avatar.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/notificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/notification.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/deviceType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/anonymousHub.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/device.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/user-api-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/api-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachment-upload-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/auth-request.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/authentication/register.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing-history.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing-payment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/breach-account.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/selection-read-only.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/collection.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/device-verification.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/global-domain.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/domains.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/event.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/group.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identity-captcha.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identity-token.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identity-two-factor.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/key-connector-user-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-connection.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-export.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-sponsorship-sync-status.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-provider-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/payment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/plan.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/prelogin.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/responses/organization-user-bulk-public-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user-bulk-public-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user-bulk.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-access.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-file-download-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-file-upload-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sso-pre-validate.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/subscription.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/folder.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sync.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/tax-info.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/tax-rate.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-authenticator.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-duo.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-email.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-recover.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-web-authn.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-yubi-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/user-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/throttle.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/password-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/auth-result.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordlessLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/sso-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/user-api-login.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/prelogin.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/sequentialize.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sorted-ciphers-cache.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-move.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-restore.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-share.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-partial.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-share.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/server-config.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/server-config.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/wordlist.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encrypted-organization-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encrypted-object.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/encrypt.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/get-class-initializer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/multithread-encrypt.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/event.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/event.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fileUploadType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/set-key-connector-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/key-connector-user-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/login.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/responses/organization-user.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/responses/organization-user-bulk.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization-user/requests/organization-user-bulk.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-api-key-information.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-auto-enroll-status.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keys.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-keys.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-subscription.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization/organization-sso.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password-generator-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/reset-password-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/provider.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/organization.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync/sync.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/verify-otp.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/anon-addy-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/duck-duck-go-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/fastmail-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/firefox-relay-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/forwarder-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/simple-login-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/decrypt-parameters.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/themeBuilder.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/jslib-services.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/avatar-update.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event/event-upload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event/event-collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization-user/organization-user.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync/syncNotifier.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/memoryStorage.service.ts","webpack://@bitwarden/web-vault/./src/app/core/broadcaster-messaging.service.ts","webpack://@bitwarden/web-vault/./src/app/core/event.service.ts","webpack://@bitwarden/web-vault/./src/app/core/html-storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/./src/app/core/init.service.ts","webpack://@bitwarden/web-vault/./src/app/core/modal.service.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.html","webpack://@bitwarden/web-vault/./src/app/core/password-reprompt.service.ts","webpack://@bitwarden/web-vault/./src/app/core/policy-list.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack://@bitwarden/web-vault/./src/app/core/web-file-download.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/clientType.ts","webpack://@bitwarden/web-vault/./src/app/core/web-platform-utils.service.ts","webpack://@bitwarden/web-vault/./src/app/core/core.module.ts","webpack://@bitwarden/web-vault/./src/app/core/state/global-state.ts","webpack://@bitwarden/web-vault/./src/app/core/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state-migration.service.ts","webpack://@bitwarden/web-vault/./src/app/core/router.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state/account.ts","webpack://@bitwarden/web-vault/./src/app/core/state/state.service.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher-content.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher-content.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-create.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/org-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/org-redirect.guard.ts","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-bulk-confirm.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/policy.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/base-policy.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policy-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policy-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-update.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-settings-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-settings.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-accept.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-accept.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/password-hint.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/misc/captcha_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/iframe_component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authRequestType.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/captchaProtected.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/log-in-credentials.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordless-create-auth.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login-with-device.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login/login-with-device.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/login.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/form-control.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/form-control.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/form-control.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/checkbox/checkbox.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/delete-recover.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/two-factor-recovery.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/remove-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-reset-password-enrollment.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/set-password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/set-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/sso.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/reference-event.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/register.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/register.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/webauthn_iframe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-reset-password.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-temp-password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-email.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-delete-recover.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/guards/home.guard.ts","webpack://@bitwarden/web-vault/./src/app/organizations/components/access-selector/access-selector.models.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/utils/form-selection-list.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/components/access-selector/user-type.pipe.ts","webpack://@bitwarden/web-vault/./src/app/organizations/components/access-selector/access-selector.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/components/access-selector/access-selector.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/components/access-selector/access-selector.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/selection-read-only.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/org-upgrade-dialog/org-upgrade-dialog.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/org-upgrade-dialog/org-upgrade-dialog.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/group.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-confirm.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-invite.request.ts","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.html","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-update-groups.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/pipes.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/vault-filter.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.html","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/attachments.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.html","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/vault-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/collection-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/folder-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/status-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/type-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/vault-items.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/get-organization-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-items.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-items.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-items.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/types/checkable.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/shared-organization.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planSponsorshipType.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organization-sponsorship-redeem.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-access.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-access.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send-access.request.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.html","webpack://@bitwarden/web-vault/./src/app/send/access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/send.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.html","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/send.component.html","webpack://@bitwarden/web-vault/./src/app/send/send.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.html","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/email-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/email.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-profile.request.ts","webpack://@bitwarden/web-vault/./src/app/components/selectable-avatar.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-avatar.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-avatar.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.html","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-domains.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.html","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-confirm.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-invite.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-update.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-password.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.html","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.html","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folder-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-key.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/kdf.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/notAllowedValueAsync.validator.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-history-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/billing-history-view.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.html","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/generator.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-generator-history.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/select-copy.directive.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.html","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.html","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/share.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/oss-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/guards/has-premium.guard.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-breach.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-exposed-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-inactive-two-factor.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-reused-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-unsecured-websites.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-weak-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/reports-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/cipher-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/models/report-variant.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-card/report-card.component.html","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-card/report-card.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-list/report-list.component.html","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-list/report-list.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/storage.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/transactionType.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-history.component.html","webpack://@bitwarden/web-vault/./src/app/settings/billing-history.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-create.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-upgrade.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-organization-create.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-bank.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/bit-pay-invoice.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/payment.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/two-factor-provider.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-base.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-duo.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-authenticator.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-email.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-web-authn-delete.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-web-authn.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-yubio-otp.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/shared/loose-components.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/async-actions.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/avatar/avatar.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon-button/icon-button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/link/link.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/navigation/navigation.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/table.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tabs.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/color-password/color-password.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/locales.ts","webpack://@bitwarden/web-vault/./src/app/shared/shared.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/true-false-value.directive.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/./src/utils/flags.ts","webpack://@bitwarden/web-vault/../../libs/components/src/checkbox/checkbox.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/organization-manage.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/organization-user.module.ts","webpack://@bitwarden/web-vault/./src/app/oss.module.ts","webpack://@bitwarden/web-vault/./src/app/wildcard-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-add-organization.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/services/webProvider.service.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/guards/provider-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.html","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-accept.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-bulk.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-confirm.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-bulk-confirm.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-invite.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-update.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-update.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-setup.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/app.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/scim-config.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/scim-config.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organization-sso.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sso-config.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/view.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-strip-spaces.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/copy-click.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/launch-click.directive.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/base-cva.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/main.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/fallback-src.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal.ref.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-title.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/api-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/autofocus.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-verbatim.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-click.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-prop.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/auth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/lock.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/unauth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/toastr.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/jslib.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/search.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/user-name.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/injection-tokens.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal-injector.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/modal.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/dynamic-tree-node.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/services/vault-filter.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/avatar-update.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/anonymousHub.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/encrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event/event-collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event/event-upload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/log.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/login.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/messaging.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/organization-user.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/platformUtils.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync/sync.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationStatus.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherRepromptType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/eventType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fieldType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/hashPurpose.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/kdfType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationApiKeyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationConnectionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/paymentMethodType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/policyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/productType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/secureNoteType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/sendType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/ssoEnums.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/themeType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/twoFactorProviderType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/verificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/flags.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/tree-node.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/serviceUtils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/card.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/field.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/identity.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/login-uri.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/login.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/permissions.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/secure-note.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/send-file.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/send-text.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sso-config.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/attachment.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/card.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cipher.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/collection.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/event.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/field.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/folder.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/identity.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/login-uri.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/login.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/password-history.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/policy.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/provider.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/secure-note.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send-file.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send-text.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/server-config.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/account.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/attachment.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/card.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/cipher.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/collection.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/domain-base.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/enc-array-buffer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/enc-string.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/environment-urls.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/field.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/folder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/generated-password-history.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/identity.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login-uri.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/master-password-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/organization.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/policy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/secure-note.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-file.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-text.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/symmetric-crypto-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/window-state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/card.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/field.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/identity.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/login-uri.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/login.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/secure-note.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipher.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipher-with-ids.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collection.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collection-with-id.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folder.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folder-with-id.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-delete.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-collections.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-create.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/attachment.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/collection.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folder.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/token-two-factor.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keys.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-api-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-connection.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-keys.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-tax-info-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/secret-verification.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/tax-info-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/two-factor-email.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/base.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/password-history.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/cipher.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/emergency-access.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/error.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/list.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/policy.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/attachment.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/card.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cipher.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/collection.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/field.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/folder.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/identity.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/item.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/login-uri.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/login.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/password-history.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/secure-note.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-file.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-text.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/initializer-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/storageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/bit-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/avatar/avatar.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/color-password/color-password.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/animations.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/directives/dialog-title-container.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-dialog/simple-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-dialog/simple-dialog.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/form-control.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/label.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error-summary.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field-control.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/password-input-toggle.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/prefix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/suffix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon-button/icon-button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon-button/icon-button.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icons/search.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/link/link.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-trigger-for.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/button-like.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/shared.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/cell.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/row.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/table.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/table/table.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/shared/tab-header.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/shared/tab-list-container.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/shared/tab-list-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-link.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-link.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-nav-bar.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-nav-bar.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/utils/function-to-observable.ts","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/compat get default export","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/ensure chunk","webpack://@bitwarden/web-vault/webpack/runtime/get javascript chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/get mini-css chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/publicPath","webpack://@bitwarden/web-vault/webpack/runtime/jsonp chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"@bitwarden/web-vault:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { RegisterFormComponent } from \"./register-form.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [RegisterFormComponent],\n  exports: [RegisterFormComponent],\n})\nexport class RegisterFormModule {}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  actionPromise: Promise<any>;\n\n  protected requiredParameters: string[] = [];\n  protected failedShortMessage = \"inviteAcceptFailedShort\";\n  protected failedMessage = \"inviteAcceptFailed\";\n\n  constructor(\n    protected router: Router,\n    protected platformUtilService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService\n  ) {}\n\n  abstract authedHandler(qParams: Params): Promise<void>;\n  abstract unauthedHandler(qParams: Params): Promise<void>;\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      let error = this.requiredParameters.some((e) => qParams?.[e] == null || qParams[e] === \"\");\n      let errorMessage: string = null;\n      if (!error) {\n        this.authed = await this.stateService.getIsAuthenticated();\n        this.email = qParams.email;\n\n        if (this.authed) {\n          try {\n            await this.authedHandler(qParams);\n          } catch (e) {\n            error = true;\n            errorMessage = e.message;\n          }\n        } else {\n          await this.unauthedHandler(qParams);\n        }\n      }\n\n      if (error) {\n        const message =\n          errorMessage != null\n            ? this.i18nService.t(this.failedShortMessage, errorMessage)\n            : this.i18nService.t(this.failedMessage);\n        this.platformUtilService.showToast(\"error\", null, message, { timeout: 10000 });\n        this.router.navigate([\"/\"]);\n      }\n\n      this.loading = false;\n    });\n  }\n}\n","import { EventSystemUser } from \"../../enums/event-system-user\";\nimport { EventType } from \"../../enums/eventType\";\n\nexport class EventView {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: EventType;\n  installationId: string;\n  systemUser: EventSystemUser;\n\n  constructor(data: Required<EventView>) {\n    this.message = data.message;\n    this.humanReadableMessage = data.humanReadableMessage;\n    this.appIcon = data.appIcon;\n    this.appName = data.appName;\n    this.userId = data.userId;\n    this.userName = data.userName;\n    this.userEmail = data.userEmail;\n    this.date = data.date;\n    this.ip = data.ip;\n    this.type = data.type;\n    this.installationId = data.installationId;\n    this.systemUser = data.systemUser;\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { EventView } from \"@bitwarden/common/models/view/event.view\";\n\nimport { EventService } from \"../core\";\n\n@Directive()\nexport abstract class BaseEventsComponent {\n  loading = true;\n  loaded = false;\n  events: EventView[];\n  start: string;\n  end: string;\n  dirtyDates = true;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  exportPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  abstract readonly exportFileName: string;\n\n  constructor(\n    protected eventService: EventService,\n    protected i18nService: I18nService,\n    protected exportService: ExportService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected fileDownloadService: FileDownloadService\n  ) {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n  }\n\n  async exportEvents() {\n    if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n      return;\n    }\n\n    this.loading = true;\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    try {\n      this.exportPromise = this.export(dates[0], dates[1]);\n\n      await this.exportPromise;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    this.exportPromise = null;\n    this.loading = false;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.appApiPromiseUnfulfilled()) {\n      return;\n    }\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    this.loading = true;\n    let events: EventView[] = [];\n    try {\n      const promise = this.loadAndParseEvents(\n        dates[0],\n        dates[1],\n        clearExisting ? null : this.continuationToken\n      );\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      const result = await promise;\n      this.continuationToken = result.continuationToken;\n      events = result.events;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.dirtyDates = false;\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n\n  protected abstract requestEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ): Promise<ListResponse<EventResponse>>;\n  protected abstract getUserName(r: EventResponse, userId: string): { name: string; email: string };\n\n  protected async loadAndParseEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ) {\n    const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user = this.getUserName(r, userId);\n        const userName = user != null ? user.name : this.i18nService.t(\"unknown\");\n\n        return new EventView({\n          message: eventInfo.message,\n          humanReadableMessage: eventInfo.humanReadableMessage,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: userName,\n          userEmail: user != null ? user.email : \"\",\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n          installationId: r.installationId,\n          systemUser: r.systemUser,\n        });\n      })\n    );\n    return { continuationToken: response.continuationToken, events: events };\n  }\n\n  protected parseDates() {\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return null;\n    }\n    return dates;\n  }\n\n  protected appApiPromiseUnfulfilled() {\n    return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n  }\n\n  private async export(start: string, end: string) {\n    let continuationToken = this.continuationToken;\n    let events = [].concat(this.events);\n\n    while (continuationToken != null) {\n      const result = await this.loadAndParseEvents(start, end, continuationToken);\n      continuationToken = result.continuationToken;\n      events = events.concat(result.events);\n    }\n\n    const data = await this.exportService.getEventExport(events);\n    const fileName = this.exportService.getFileName(this.exportFileName, \"csv\");\n    this.fileDownloadService.download({\n      fileName,\n      blobData: data,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-user-confirm\",\n  templateUrl: \"user-confirm.component.html\",\n})\nexport class UserConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() publicKey: Uint8Array;\n  @Output() onConfirmedUser = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      if (this.publicKey != null) {\n        const fingerprint = await this.cryptoService.getFingerprint(\n          this.userId,\n          this.publicKey.buffer\n        );\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    this.onConfirmedUser.emit();\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/abstractions/organization-user/responses\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/provider-user.response\";\n\nimport { UserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<\n  UserType extends ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse\n> {\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  get allCount() {\n    return this.activeUsers != null ? this.activeUsers.length : 0;\n  }\n\n  get invitedCount() {\n    return this.statusMap.has(this.userStatusType.Invited)\n      ? this.statusMap.get(this.userStatusType.Invited).length\n      : 0;\n  }\n\n  get acceptedCount() {\n    return this.statusMap.has(this.userStatusType.Accepted)\n      ? this.statusMap.get(this.userStatusType.Accepted).length\n      : 0;\n  }\n\n  get confirmedCount() {\n    return this.statusMap.has(this.userStatusType.Confirmed)\n      ? this.statusMap.get(this.userStatusType.Confirmed).length\n      : 0;\n  }\n\n  get revokedCount() {\n    return this.statusMap.has(this.userStatusType.Revoked)\n      ? this.statusMap.get(this.userStatusType.Revoked).length\n      : 0;\n  }\n\n  get showConfirmUsers(): boolean {\n    return (\n      this.activeUsers != null &&\n      this.statusMap != null &&\n      this.activeUsers.length > 1 &&\n      this.confirmedCount > 0 &&\n      this.confirmedCount < 3 &&\n      this.acceptedCount > 0\n    );\n  }\n\n  get showBulkConfirmUsers(): boolean {\n    return this.acceptedCount > 0;\n  }\n\n  abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n  abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n  loading = true;\n  statusMap = new Map<StatusType, UserType[]>();\n  status: StatusType;\n  users: UserType[] = [];\n  pagedUsers: UserType[] = [];\n  searchText: string;\n  actionPromise: Promise<void>;\n\n  protected allUsers: UserType[] = [];\n  protected activeUsers: UserType[] = [];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedUsersCount = 0;\n\n  constructor(\n    protected apiService: ApiService,\n    private searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cryptoService: CryptoService,\n    protected validationService: ValidationService,\n    protected modalService: ModalService,\n    private logService: LogService,\n    private searchPipe: SearchPipe,\n    protected userNamePipe: UserNamePipe,\n    protected stateService: StateService\n  ) {}\n\n  abstract edit(user: UserType): void;\n  abstract getUsers(): Promise<ListResponse<UserType>>;\n  abstract deleteUser(id: string): Promise<void>;\n  abstract revokeUser(id: string): Promise<void>;\n  abstract restoreUser(id: string): Promise<void>;\n  abstract reinviteUser(id: string): Promise<void>;\n  abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<void>;\n\n  async load() {\n    const response = await this.getUsers();\n    this.statusMap.clear();\n    this.activeUsers = [];\n    for (const status of Utils.iterateEnum(this.userStatusType)) {\n      this.statusMap.set(status, []);\n    }\n\n    this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n    this.allUsers.sort(\n      Utils.getSortFunction<ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse>(\n        this.i18nService,\n        \"email\"\n      )\n    );\n    this.allUsers.forEach((u) => {\n      if (!this.statusMap.has(u.status)) {\n        this.statusMap.set(u.status, [u]);\n      } else {\n        this.statusMap.get(u.status).push(u);\n      }\n      if (u.status !== this.userStatusType.Revoked) {\n        this.activeUsers.push(u);\n      }\n    });\n    this.filter(this.status);\n    this.loading = false;\n  }\n\n  filter(status: StatusType) {\n    this.status = status;\n    if (this.status != null) {\n      this.users = this.statusMap.get(this.status);\n    } else {\n      this.users = this.activeUsers;\n    }\n    // Reset checkbox selecton\n    this.selectAll(false);\n    this.resetPaging();\n  }\n\n  loadMore() {\n    if (!this.users || this.users.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedUsers.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n      pagedSize = this.pagedUsersCount;\n    }\n    if (this.users.length > pagedLength) {\n      this.pagedUsers = this.pagedUsers.concat(\n        this.users.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedUsersCount = this.pagedUsers.length;\n    this.didScroll = this.pagedUsers.length > this.pageSize;\n  }\n\n  checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n    (user as any).checked = select == null ? !(user as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n\n    const filteredUsers = this.searchPipe.transform(\n      this.users,\n      this.searchText,\n      \"name\",\n      \"email\",\n      \"id\"\n    );\n\n    const selectCount =\n      select && filteredUsers.length > MaxCheckedCount ? MaxCheckedCount : filteredUsers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkUser(filteredUsers[i], select);\n    }\n  }\n\n  async resetPaging() {\n    this.pagedUsers = [];\n    this.loadMore();\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  protected async removeUserConfirmationDialog(user: UserType) {\n    return this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(user),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  async remove(user: UserType) {\n    const confirmed = await this.removeUserConfirmationDialog(user);\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.deleteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(user))\n      );\n      this.removeUser(user);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async revoke(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.revokeWarningMessage(),\n      this.i18nService.t(\"revokeUserId\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.revokeUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(user: UserType) {\n    this.actionPromise = this.restoreUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async reinvite(user: UserType) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    this.actionPromise = this.reinviteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"hasBeenReinvited\", this.userNamePipe.transform(user))\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async confirm(user: UserType) {\n    function updateUser(self: BasePeopleComponent<UserType>) {\n      user.status = self.userStatusType.Confirmed;\n      const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n      if (mapIndex > -1) {\n        self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n        self.statusMap.get(self.userStatusType.Confirmed).push(user);\n      }\n    }\n\n    const confirmUser = async (publicKey: Uint8Array) => {\n      try {\n        this.actionPromise = this.confirmUser(user, publicKey);\n        await this.actionPromise;\n        updateUser(this);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(user))\n        );\n      } catch (e) {\n        this.validationService.showError(e);\n        throw e;\n      } finally {\n        this.actionPromise = null;\n      }\n    };\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n      if (autoConfirm == null || !autoConfirm) {\n        const [modal] = await this.modalService.openViewRef(\n          UserConfirmComponent,\n          this.confirmModalRef,\n          (comp) => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.userId = user != null ? user.userId : null;\n            comp.publicKey = publicKey;\n            // eslint-disable-next-line rxjs/no-async-subscribe\n            comp.onConfirmedUser.subscribe(async () => {\n              try {\n                comp.formPromise = confirmUser(publicKey);\n                await comp.formPromise;\n                modal.close();\n              } catch (e) {\n                this.logService.error(e);\n              }\n            });\n          }\n        );\n        return;\n      }\n\n      try {\n        const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n        this.logService.info(`User's fingerprint: ${fingerprint.join(\"-\")}`);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      await confirmUser(publicKey);\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.users && this.users.length > this.pageSize;\n  }\n\n  protected revokeWarningMessage(): string {\n    return this.i18nService.t(\"revokeUserConfirmation\");\n  }\n\n  protected getCheckedUsers() {\n    return this.users.filter((u) => (u as any).checked);\n  }\n\n  protected removeUser(user: UserType) {\n    let index = this.users.indexOf(user);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      this.resetPaging();\n    }\n\n    index = this.allUsers.indexOf(user);\n    if (index > -1) {\n      this.allUsers.splice(index, 1);\n    }\n\n    if (this.statusMap.has(user.status)) {\n      index = this.statusMap.get(user.status).indexOf(user);\n      if (index > -1) {\n        this.statusMap.get(user.status).splice(index, 1);\n      }\n    }\n  }\n}\n","import { Component, Input, OnDestroy } from \"@angular/core\";\nimport { Observable, Subject } from \"rxjs\";\n\nimport { AvatarUpdateService } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\ntype SizeTypes = \"xlarge\" | \"large\" | \"default\" | \"small\" | \"xsmall\";\n@Component({\n  selector: \"dynamic-avatar\",\n  template: `<span [title]=\"title\">\n    <bit-avatar\n      appStopClick\n      [text]=\"text\"\n      [size]=\"size\"\n      [color]=\"color$ | async\"\n      [border]=\"border\"\n      [id]=\"id\"\n      [title]=\"title\"\n    >\n    </bit-avatar>\n  </span>`,\n})\nexport class DynamicAvatarComponent implements OnDestroy {\n  @Input() border = false;\n  @Input() id: string;\n  @Input() text: string;\n  @Input() title: string;\n  @Input() size: SizeTypes = \"default\";\n  color$: Observable<string | null>;\n  private destroy$ = new Subject<void>();\n\n  constructor(private accountUpdateService: AvatarUpdateService) {\n    if (this.text) {\n      this.text = this.text.toUpperCase();\n    }\n    this.color$ = this.accountUpdateService.avatarUpdate$;\n  }\n\n  async ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n/**\n * Hides the element if the user has premium.\n */\n@Directive({\n  selector: \"[appNotPremium]\",\n})\nexport class NotPremiumDirective implements OnInit {\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const premium = await this.stateService.getCanAccessPremium();\n\n    if (premium) {\n      this.viewContainer.clear();\n    } else {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Component({\n  selector: \"app-premium-badge\",\n  template: `\n    <button type=\"button\" *appNotPremium bitBadge badgeType=\"success\" (click)=\"premiumRequired()\">\n      {{ \"premium\" | i18n }}\n    </button>\n  `,\n})\nexport class PremiumBadgeComponent {\n  constructor(private messagingService: MessagingService) {}\n\n  premiumRequired() {\n    this.messagingService.send(\"premiumRequired\");\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Directive({\n  selector: \"app-user-verification\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: Utils.isNullOrWhitespace(secret) ? null : secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { UserVerificationComponent as BaseComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent extends BaseComponent {}\n","export abstract class AccountService {}\n\nexport abstract class InternalAccountService extends AccountService {\n  abstract delete(): void;\n}\n","import { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport abstract class ConfigApiServiceAbstraction {\n  get: () => Promise<ServerConfigResponse>;\n}\n","import { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\nexport abstract class SyncNotifierService {\n  sync$: Observable<SyncEventArgs>;\n  next: (event: SyncEventArgs) => void;\n}\n","import { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\n\nexport abstract class UserVerificationApiServiceAbstraction {\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postAccountRequestOTP: () => Promise<void>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/global-state\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/global-state\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Six = 6, // Delete account.keys.legacyEtmKey property\n  Latest = Six,\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environment-urls\";\nimport { WindowState } from \"./window-state\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n  enableDuckDuckGoBrowserIntegration?: boolean;\n}\n","export class UpdateAvatarRequest {\n  avatarColor: string;\n\n  constructor(avatarColor: string) {\n    this.avatarColor = avatarColor;\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n\n  AuthRequest = 15,\n  AuthRequestResponse = 16,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      case NotificationType.AuthRequest:\n      case NotificationType.AuthRequestResponse:\n        this.payload = new AuthRequestPushNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class AuthRequestPushNotification extends BaseResponse {\n  id: string;\n  userId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n  }\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpTransportType,\n  HubConnection,\n  HubConnectionBuilder,\n  IHubProtocol,\n} from \"@microsoft/signalr\";\nimport { MessagePackHubProtocol } from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"../abstractions/anonymousHub.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\n\nimport {\n  AuthRequestPushNotification,\n  NotificationResponse,\n} from \"./../models/response/notification.response\";\n\n@Injectable()\nexport class AnonymousHubService implements AnonymousHubServiceAbstraction {\n  private anonHubConnection: HubConnection;\n  private url: string;\n\n  constructor(\n    private environmentService: EnvironmentService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async createHubConnection(token: string) {\n    this.url = this.environmentService.getNotificationsUrl();\n\n    this.anonHubConnection = new HubConnectionBuilder()\n      .withUrl(this.url + \"/anonymous-hub?Token=\" + token, {\n        skipNegotiation: true,\n        transport: HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new MessagePackHubProtocol() as IHubProtocol)\n      .build();\n\n    this.anonHubConnection.start().catch((error) => this.logService.error(error));\n\n    this.anonHubConnection.on(\"AuthRequestResponseRecieved\", (data: any) => {\n      this.ProcessNotification(new NotificationResponse(data));\n    });\n  }\n\n  stopHubConnection() {\n    if (this.anonHubConnection) {\n      this.anonHubConnection.stop();\n    }\n  }\n\n  private async ProcessNotification(notification: NotificationResponse) {\n    await this.authService.authResponsePushNotifiction(\n      notification.payload as AuthRequestPushNotification\n    );\n  }\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n  protected passwordlessAuthRequest: string;\n\n  constructor(protected twoFactor: TokenTwoFactorRequest, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenTwoFactorRequest) {\n    this.twoFactor = twoFactor;\n  }\n\n  setPasswordlessAccessCode(accessCode: string) {\n    this.passwordlessAuthRequest = accessCode;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    //passswordless login\n    if (this.passwordlessAuthRequest) {\n      obj.authRequest = this.passwordlessAuthRequest;\n    }\n\n    if (this.twoFactor) {\n      if (this.twoFactor.token && this.twoFactor.provider != null) {\n        obj.twoFactorToken = this.twoFactor.token;\n        obj.twoFactorProvider = this.twoFactor.provider;\n        obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n      }\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class UserApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class AuthRequestResponse extends BaseResponse {\n  id: string;\n  publicKey: string;\n  requestDeviceType: DeviceType;\n  requestIpAddress: string;\n  key: string;\n  masterPasswordHash: string;\n  creationDate: string;\n  requestApproved: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n    this.requestDeviceType = this.getResponseProperty(\"RequestDeviceType\");\n    this.requestIpAddress = this.getResponseProperty(\"RequestIpAddress\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.masterPasswordHash = this.getResponseProperty(\"MasterPasswordHash\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.requestApproved = this.getResponseProperty(\"RequestApproved\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nimport { ICaptchaProtectedResponse } from \"./captcha-protected.response\";\n\nexport class RegisterResponse extends BaseResponse implements ICaptchaProtectedResponse {\n  captchaBypassToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaBypassToken = this.getResponseProperty(\"CaptchaBypassToken\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billing.response\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingSourceResponse } from \"./billing.response\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { SelectionReadOnlyResponse } from \"./selection-read-only.response\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { GlobalDomainResponse } from \"./global-domain.response\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventSystemUser } from \"../../enums/event-system-user\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n  systemUser: EventSystemUser;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n    this.systemUser = this.getResponseProperty(\"SystemUser\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { SelectionReadOnlyResponse } from \"./selection-read-only.response\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billing-sync-config.api\";\nimport { ScimConfigApi } from \"../api/scim-config.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\nimport { CollectionResponse } from \"./collection.response\";\n\nexport class OrganizationExportResponse extends BaseResponse {\n  collections: CollectionResponse[];\n  ciphers: CipherResponse[];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionResponse(c));\n    }\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useCustomPermissions = this.getResponseProperty(\"UseCustomPermissions\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.useSecretsManager = this.getResponseProperty(\"UseSecretsManager\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profile-organization.response\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileOrganizationResponse } from \"./profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"./profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"./profile-provider.response\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  avatarColor: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.avatarColor = this.getResponseProperty(\"AvatarColor\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileResponse } from \"./profile.response\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n  userCount: number;\n  seats?: number;\n  plan?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.userCount = this.getResponseProperty(\"UserCount\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.plan = this.getResponseProperty(\"Plan\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../../../abstractions/organization-user/responses\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissions.api\";\nimport { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { SendResponse } from \"./send.response\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\nimport { CollectionDetailsResponse } from \"./collection.response\";\nimport { DomainsResponse } from \"./domains.response\";\nimport { FolderResponse } from \"./folder.response\";\nimport { PolicyResponse } from \"./policy.response\";\nimport { ProfileResponse } from \"./profile.response\";\nimport { SendResponse } from \"./send.response\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captcha-protected.request\";\nimport { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../../models/domain/log-in-credentials\";\nimport { DeviceRequest } from \"../../models/request/device.request\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../../models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\nimport { UserApiTokenRequest } from \"../../models/request/identity-token/user-api-token.request\";\nimport { KeysRequest } from \"../../models/request/keys.request\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identity-two-factor.response\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: UserApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult>;\n\n  // The user key comes from different sources depending on the login strategy\n  protected abstract setUserKey(response: IdentityTokenResponse): Promise<void>;\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenTwoFactorRequest) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenTwoFactorRequest(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenTwoFactorRequest();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            name: accountInformation.name,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    await this.setUserKey(response);\n\n    // Must come after the user Key is set, otherwise createKeyPairForOldAccount will fail\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport { PasswordlessLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordlessLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get accessCode() {\n    return this.passwordlessCredentials.accessCode;\n  }\n\n  get authRequestId() {\n    return this.passwordlessCredentials.authRequestId;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n  private passwordlessCredentials: PasswordlessLogInCredentials;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey() {\n    await this.cryptoService.setKey(this.passwordlessCredentials.decKey);\n    await this.cryptoService.setKeyHash(this.passwordlessCredentials.localPasswordHash);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordlessLogInCredentials) {\n    this.passwordlessCredentials = credentials;\n\n    this.tokenRequest = new PasswordTokenRequest(\n      credentials.email,\n      credentials.accessCode,\n      null,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    this.tokenRequest.setPasswordlessAccessCode(credentials.authRequestId);\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { SsoTokenRequest } from \"../../models/request/identity-token/sso-token.request\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { UserApiLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { UserApiTokenRequest } from \"../../models/request/identity-token/user-api-token.request\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class UserApiLogInStrategy extends LogInStrategy {\n  tokenRequest: UserApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: UserApiLogInCredentials) {\n    this.tokenRequest = new UserApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { CipherView } from \"../view/cipher.view\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipher-with-id.request\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nexport class CipherPartialRequest {\n  folderId: string;\n  favorite: boolean;\n\n  constructor(cipher: Cipher) {\n    this.folderId = cipher.folderId;\n    this.favorite = cipher.favorite;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domain-base\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/login-uri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secure-note\";\nimport { SortedCiphersCache } from \"../models/domain/sorted-ciphers-cache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { AttachmentView } from \"../models/view/attachment.view\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\nimport { PasswordHistoryView } from \"../models/view/password-history.view\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService,\n    private encryptService: EncryptService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n    cipher.edit = model.edit;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    if ((await this.getDecryptedCipherCache()) != null) {\n      await this.reindexCiphers();\n      return await this.getDecryptedCipherCache();\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const ciphers = await this.getAll();\n    const orgKeys = await this.cryptoService.getOrgKeys();\n    const userKey = await this.cryptoService.getKeyForUserEncryption();\n\n    // Group ciphers by orgId or under 'null' for the user's ciphers\n    const grouped = ciphers.reduce((agg, c) => {\n      agg[c.organizationId] ??= [];\n      agg[c.organizationId].push(c);\n      return agg;\n    }, {} as Record<string, Cipher[]>);\n\n    const decCiphers = (\n      await Promise.all(\n        Object.entries(grouped).map(([orgId, groupedCiphers]) =>\n          this.encryptService.decryptItems(groupedCiphers, orgKeys.get(orgId) ?? userKey)\n        )\n      )\n    )\n      .flat()\n      .sort(this.getLocaleSortingFunction());\n\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  private async reindexCiphers() {\n    const userId = await this.stateService.getUserId();\n    const reindexRequired =\n      this.searchService != null && (this.searchService().indexedEntityId ?? userId) !== userId;\n    if (reindexRequired) {\n      await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n    }\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : firstValueFrom(this.settingsService.settings$).then(\n            (settings: AccountSettingsSettings) => {\n              let matches: any[] = [];\n              settings?.equivalentDomains?.forEach((eqDomain: any) => {\n                if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                  matches = matches.concat(eqDomain);\n                }\n              });\n\n              if (!matches.length) {\n                matches.push(domain);\n              }\n\n              return matches;\n            }\n          );\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const response = await this.apiService.getCiphersOrganization(organizationId);\n    if (response?.data == null || response.data.length < 1) {\n      return [];\n    }\n\n    const ciphers = response.data.map((cr) => new Cipher(new CipherData(cr)));\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const decCiphers = await this.encryptService.decryptItems(ciphers, key);\n\n    decCiphers.sort(this.getLocaleSortingFunction());\n    return decCiphers;\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async createWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.collectionIds != null) {\n      const request = new CipherCreateRequest(cipher);\n      response = await this.apiService.postCipherCreate(request);\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.postCipher(request);\n    }\n    cipher.id = response.id;\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async updateWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.edit) {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    } else {\n      const request = new CipherPartialRequest(cipher);\n      response = await this.apiService.putPartialCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const encBuf = await EncArrayBuffer.fromResponse(attachmentResponse);\n    const decBuf = await this.cryptoService.decryptFromBytes(encBuf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ServerConfigResponse extends BaseResponse {\n  version: string;\n  gitHash: string;\n  server: ThirdPartyServerConfigResponse;\n  environment: EnvironmentServerConfigResponse;\n\n  constructor(response: any) {\n    super(response);\n\n    if (response == null) {\n      return;\n    }\n\n    this.version = this.getResponseProperty(\"Version\");\n    this.gitHash = this.getResponseProperty(\"GitHash\");\n    this.server = new ThirdPartyServerConfigResponse(this.getResponseProperty(\"Server\"));\n    this.environment = new EnvironmentServerConfigResponse(this.getResponseProperty(\"Environment\"));\n  }\n}\n\nexport class EnvironmentServerConfigResponse extends BaseResponse {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.vault = this.getResponseProperty(\"Vault\");\n    this.api = this.getResponseProperty(\"Api\");\n    this.identity = this.getResponseProperty(\"Identity\");\n    this.notifications = this.getResponseProperty(\"Notifications\");\n    this.sso = this.getResponseProperty(\"Sso\");\n  }\n}\n\nexport class ThirdPartyServerConfigResponse extends BaseResponse {\n  name: string;\n  url: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.name = this.getResponseProperty(\"Name\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import {\n  ServerConfigData,\n  ThirdPartyServerConfigData,\n  EnvironmentServerConfigData,\n} from \"../../models/data/server-config.data\";\n\nconst dayInMilliseconds = 24 * 3600 * 1000;\nconst eighteenHoursInMilliseconds = 18 * 3600 * 1000;\n\nexport class ServerConfig {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: Date;\n\n  constructor(serverConfigData: ServerConfigData) {\n    this.version = serverConfigData.version;\n    this.gitHash = serverConfigData.gitHash;\n    this.server = serverConfigData.server;\n    this.utcDate = new Date(serverConfigData.utcDate);\n    this.environment = serverConfigData.environment;\n\n    if (this.server?.name == null && this.server?.url == null) {\n      this.server = null;\n    }\n  }\n\n  private getAgeInMilliseconds(): number {\n    return new Date().getTime() - this.utcDate?.getTime();\n  }\n\n  isValid(): boolean {\n    return this.getAgeInMilliseconds() <= dayInMilliseconds;\n  }\n\n  expiresSoon(): boolean {\n    return this.getAgeInMilliseconds() >= eighteenHoursInMilliseconds;\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EFFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encrypted-organization-key\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: EncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForUserEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encrypt\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encryptToBytes\n   */\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    key = await this.getKeyForUserEncryption(key);\n    return this.encryptService.encryptToBytes(plainValue, key);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForUserEncryption(key);\n    return this.encryptService.decryptToBytes(encString, keyForEnc);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToUtf8\n   */\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptFromBytes(encBuffer: EncArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuffer == null) {\n      throw new Error(\"No buffer provided for decryption.\");\n    }\n\n    key = await this.getKeyForUserEncryption(key);\n\n    return this.encryptService.decryptToBytes(encBuffer, key);\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // ---HELPERS---\n\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  async getKeyForUserEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    // Legacy support: encryption used to be done with the user key (derived from master password).\n    // Users who have not migrated will have a null encKey and must use the user key instead.\n    return await this.getKey();\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EFFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EFFLongWordList.length);\n      hashNumber = hashNumber.divide(EFFLongWordList.length);\n      phrase.push(EFFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { CryptoFunctionService } from \"../../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../../abstractions/encrypt.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { EncArrayBuffer } from \"../../models/domain/enc-array-buffer\";\nimport { EncString } from \"../../models/domain/enc-string\";\nimport { EncryptedObject } from \"../../models/domain/encrypted-object\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nexport class EncryptServiceImplementation implements EncryptService {\n  constructor(\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    return await Promise.all(items.map((item) => item.decrypt(key)));\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Cipher } from \"../../models/domain/cipher\";\nimport { CipherView } from \"../../models/view/cipher.view\";\n\nimport { InitializerKey } from \"./initializer-key\";\n\n/**\n * Internal reference of classes so we can reconstruct objects properly.\n * Each entry should be keyed using the Decryptable.initializerKey property\n */\nconst classInitializers: Record<InitializerKey, (obj: any) => any> = {\n  [InitializerKey.Cipher]: Cipher.fromJSON,\n  [InitializerKey.CipherView]: CipherView.fromJSON,\n};\n\nexport function getClassInitializer<T extends InitializerMetadata>(\n  className: InitializerKey\n): (obj: Jsonify<T>) => T {\n  return classInitializers[className];\n}\n","import { defaultIfEmpty, filter, firstValueFrom, fromEvent, map, Subject, takeUntil } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nimport { EncryptServiceImplementation } from \"./encrypt.service.implementation\";\nimport { getClassInitializer } from \"./get-class-initializer\";\n\n// TTL (time to live) is not strictly required but avoids tying up memory resources if inactive\nconst workerTTL = 3 * 60000; // 3 minutes\n\nexport class MultithreadEncryptServiceImplementation extends EncryptServiceImplementation {\n  private worker: Worker;\n  private timeout: any;\n\n  private clear$ = new Subject<void>();\n\n  /**\n   * Sends items to a web worker to decrypt them.\n   * This utilises multithreading to decrypt items faster without interrupting other operations (e.g. updating UI).\n   */\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    this.logService.info(\"Starting decryption using multithreading\");\n\n    this.worker ??= new Worker(\n      new URL(\n        /* webpackChunkName: 'encrypt-worker' */\n        \"@bitwarden/common/services/cryptography/encrypt.worker.ts\",\n        import.meta.url\n      )\n    );\n\n    this.restartTimeout();\n\n    const request = {\n      id: Utils.newGuid(),\n      items: items,\n      key: key,\n    };\n\n    this.worker.postMessage(JSON.stringify(request));\n\n    return await firstValueFrom(\n      fromEvent(this.worker, \"message\").pipe(\n        filter((response: MessageEvent) => response.data?.id === request.id),\n        map((response) => JSON.parse(response.data.items)),\n        map((items) =>\n          items.map((jsonItem: Jsonify<T>) => {\n            const initializer = getClassInitializer<T>(jsonItem.initializerKey);\n            return initializer(jsonItem);\n          })\n        ),\n        takeUntil(this.clear$),\n        defaultIfEmpty([])\n      )\n    );\n  }\n\n  private clear() {\n    this.clear$.next();\n    this.worker?.terminate();\n    this.worker = null;\n    this.clearTimeout();\n  }\n\n  private restartTimeout() {\n    this.clearTimeout();\n    this.timeout = setTimeout(() => this.clear(), workerTTL);\n  }\n\n  private clearTimeout() {\n    if (this.timeout != null) {\n      clearTimeout(this.timeout);\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/event.view\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nexport class BitwardenFileUploadService {\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keys.request\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { LoginService as LoginServiceAbstraction } from \"../abstractions/login.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nexport class LoginService implements LoginServiceAbstraction {\n  private _email: string;\n  private _rememberEmail: boolean;\n\n  constructor(private stateService: StateService) {}\n\n  getEmail() {\n    return this._email;\n  }\n\n  getRememberEmail() {\n    return this._rememberEmail;\n  }\n\n  setEmail(value: string) {\n    this._email = value;\n  }\n\n  setRememberEmail(value: boolean) {\n    this._rememberEmail = value;\n  }\n\n  clearValues() {\n    this._email = null;\n    this._rememberEmail = null;\n  }\n\n  async saveEmailSettings() {\n    await this.stateService.setRememberedEmail(this._rememberEmail ? this._email : null);\n    this.clearValues();\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { BaseResponse } from \"../../../models/response/base.response\";\nimport { SelectionReadOnlyResponse } from \"../../../models/response/selection-read-only.response\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keys.response\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { PlanResponse } from \"./plan.response\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organization.response\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscription.response\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/sso-config.api\";\nimport { BaseResponse } from \"../base.response\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  identifier: string;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { PasswordGeneratorOptions } from \"../models/domain/password-generator-options\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/password-generator-policy-options\";\n\nconst DefaultOptions: PasswordGeneratorOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: PasswordGeneratorOptions): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: PasswordGeneratorOptions): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EFFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EFFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EFFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: PasswordGeneratorOptions\n  ): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies = await this.policyService?.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: PasswordGeneratorOptions) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<void> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/provider.data\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  private static registeredPipeline = false;\n\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    // Currently have to ensure this is only done a single time. Lunr allows you to register a function\n    // multiple times but they will add a warning message to the console. The way they do that breaks when ran on a service worker.\n    if (!SearchService.registeredPipeline) {\n      SearchService.registeredPipeline = true;\n      //register lunr pipeline function\n      lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.info(\"Finished search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri?.uri?.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/send.data\";\nimport { SendView } from \"../view/send.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SendFile } from \"./send-file\";\nimport { SendText } from \"./send-text\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    const cryptoService = Utils.getContainerService().getCryptoService();\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport {\n  Account,\n  AccountSettings,\n  AccountSettingsSettings,\n  EncryptionPair,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n        case StateVersion.Five: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom5To6(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Six);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: Object.assign(new EncryptionPair<string, EncString>(), {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      }),\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings:\n        userId == null\n          ? null\n          : await this.get<AccountSettingsSettings>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected async migrateAccountFrom5To6(account: TAccount): Promise<TAccount> {\n    delete (account as any).keys?.legacyEtmKey;\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { ProfileOrganizationResponse } from \"../response/profile-organization.response\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useCustomPermissions = response.useCustomPermissions;\n    this.useResetPassword = response.useResetPassword;\n    this.useSecretsManager = response.useSecretsManager;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { InternalOrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"../../abstractions/provider.service\";\nimport { SendService } from \"../../abstractions/send.service\";\nimport { SettingsService } from \"../../abstractions/settings.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { sequentialize } from \"../../misc/sequentialize\";\nimport { CipherData } from \"../../models/data/cipher.data\";\nimport { CollectionData } from \"../../models/data/collection.data\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { ProviderData } from \"../../models/data/provider.data\";\nimport { SendData } from \"../../models/data/send.data\";\nimport { CipherResponse } from \"../../models/response/cipher.response\";\nimport { CollectionDetailsResponse } from \"../../models/response/collection.response\";\nimport { DomainsResponse } from \"../../models/response/domains.response\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notification.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\nimport { ProfileResponse } from \"../../models/response/profile.response\";\nimport { SendResponse } from \"../../models/response/send.response\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: InternalPolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private organizationService: InternalOrganizationService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setAvatarColor(response.avatarColor);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.replace(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class AnonAddyForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    if (options.anonaddy?.domain == null || options.anonaddy.domain === \"\") {\n      throw \"Invalid AnonAddy domain.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: options.anonaddy.domain,\n      description:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class DuckDuckGoForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://quack.duckduckgo.com/api/email/addresses\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      if (json.address) {\n        return `${json.address}@duck.com`;\n      }\n    } else if (response.status === 401) {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    throw \"Unknown DuckDuckGo error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class FastmailForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Fastmail API token.\";\n    }\n\n    const accountId = await this.getAccountId(apiService, options);\n    if (accountId == null || accountId === \"\") {\n      throw \"Unable to obtain Fastmail masked email account ID.\";\n    }\n\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://api.fastmail.com/jmap/api/\";\n    requestInit.body = JSON.stringify({\n      using: [\"https://www.fastmail.com/dev/maskedemail\", \"urn:ietf:params:jmap:core\"],\n      methodCalls: [\n        [\n          \"MaskedEmail/set\",\n          {\n            accountId: accountId,\n            create: {\n              \"new-masked-email\": {\n                state: \"enabled\",\n                description: \"\",\n                url: options.website,\n                emailPrefix: options.fastmail.prefix,\n              },\n            },\n          },\n          \"0\",\n        ],\n      ],\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (\n        json.methodResponses != null &&\n        json.methodResponses.length > 0 &&\n        json.methodResponses[0].length > 0\n      ) {\n        if (json.methodResponses[0][0] === \"MaskedEmail/set\") {\n          if (json.methodResponses[0][1]?.created?.[\"new-masked-email\"] != null) {\n            return json.methodResponses[0][1]?.created?.[\"new-masked-email\"]?.email;\n          }\n          if (json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"] != null) {\n            throw (\n              \"Fastmail error: \" +\n              json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"]?.description\n            );\n          }\n        } else if (json.methodResponses[0][0] === \"error\") {\n          throw \"Fastmail error: \" + json.methodResponses[0][1]?.description;\n        }\n      }\n    }\n    if (response.status === 401 || response.status === 403) {\n      throw \"Invalid Fastmail API token.\";\n    }\n    throw \"Unknown Fastmail error occurred.\";\n  }\n\n  private async getAccountId(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n      }),\n    };\n    const url = \"https://api.fastmail.com/.well-known/jmap\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (json.primaryAccounts != null) {\n        return json.primaryAccounts[\"https://www.fastmail.com/dev/maskedemail\"];\n      }\n    }\n    return null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class FirefoxRelayForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: options.website,\n      description:\n        (options.website != null ? options.website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class ForwarderOptions {\n  apiKey: string;\n  website: string;\n  fastmail = new FastmailForwarderOptions();\n  anonaddy = new AnonAddyForwarderOptions();\n}\n\nexport class FastmailForwarderOptions {\n  prefix: string;\n}\n\nexport class AnonAddyForwarderOptions {\n  domain: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class SimpleLoginForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (options.website != null) {\n      url += \"?hostname=\" + options.website;\n    }\n    requestInit.body = JSON.stringify({\n      note:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { AnonAddyForwarder } from \"../email-forwarders/anon-addy-forwarder\";\nimport { DuckDuckGoForwarder } from \"../email-forwarders/duck-duck-go-forwarder\";\nimport { FastmailForwarder } from \"../email-forwarders/fastmail-forwarder\";\nimport { FirefoxRelayForwarder } from \"../email-forwarders/firefox-relay-forwarder\";\nimport { Forwarder } from \"../email-forwarders/forwarder\";\nimport { ForwarderOptions } from \"../email-forwarders/forwarder-options\";\nimport { SimpleLoginForwarder } from \"../email-forwarders/simple-login-forwarder\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EFFLongWordList.length - 1);\n    let word = EFFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    let forwarder: Forwarder = null;\n    const forwarderOptions = new ForwarderOptions();\n    forwarderOptions.website = o.website;\n    if (o.forwardedService === \"simplelogin\") {\n      forwarder = new SimpleLoginForwarder();\n      forwarderOptions.apiKey = o.forwardedSimpleLoginApiKey;\n    } else if (o.forwardedService === \"anonaddy\") {\n      forwarder = new AnonAddyForwarder();\n      forwarderOptions.apiKey = o.forwardedAnonAddyApiToken;\n      forwarderOptions.anonaddy.domain = o.forwardedAnonAddyDomain;\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      forwarder = new FirefoxRelayForwarder();\n      forwarderOptions.apiKey = o.forwardedFirefoxApiToken;\n    } else if (o.forwardedService === \"fastmail\") {\n      forwarder = new FastmailForwarder();\n      forwarderOptions.apiKey = o.forwardedFastmailApiToken;\n    } else if (o.forwardedService === \"duckduckgo\") {\n      forwarder = new DuckDuckGoForwarder();\n      forwarderOptions.apiKey = o.forwardedDuckDuckGoToken;\n    }\n\n    if (forwarder == null) {\n      return null;\n    }\n\n    return forwarder.generate(this.apiService, forwarderOptions);\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import {\n  BroadcasterService as BroadcasterServiceAbstraction,\n  MessageBase,\n} from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: MessageBase) => void> = new Map<\n    string,\n    (message: MessageBase) => void\n  >();\n\n  send(message: MessageBase, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: MessageBase) => void) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../injection-tokens\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service\";\nimport {\n  AccountService as AccountServiceAbstraction,\n  InternalAccountService,\n} from \"@bitwarden/common/abstractions/account/account.service\";\nimport { AvatarUpdateService as AccountUpdateServiceAbstraction } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { ConfigApiServiceAbstraction } from \"@bitwarden/common/abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/abstractions/config/config.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventCollectionService as EventCollectionServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService as LoginServiceAbstraction } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport {\n  InternalOrganizationService,\n  OrganizationService as OrganizationServiceAbstraction,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport {\n  InternalPolicyService,\n  PolicyService as PolicyServiceAbstraction,\n} from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"@bitwarden/common/abstractions/sync/syncNotifier.service.abstraction\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"@bitwarden/common/abstractions/validation.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { flagEnabled } from \"@bitwarden/common/misc/flags\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { AccountApiServiceImplementation } from \"@bitwarden/common/services/account/account-api.service\";\nimport { AccountServiceImplementation } from \"@bitwarden/common/services/account/account.service\";\nimport { AvatarUpdateService } from \"@bitwarden/common/services/account/avatar-update.service\";\nimport { AnonymousHubService } from \"@bitwarden/common/services/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConfigApiService } from \"@bitwarden/common/services/config/config-api.service\";\nimport { ConfigService } from \"@bitwarden/common/services/config/config.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/encrypt.service.implementation\";\nimport { MultithreadEncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/multithread-encrypt.service.implementation\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventCollectionService } from \"@bitwarden/common/services/event/event-collection.service\";\nimport { EventUploadService } from \"@bitwarden/common/services/event/event-upload.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { LoginService } from \"@bitwarden/common/services/login.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationUserServiceImplementation } from \"@bitwarden/common/services/organization-user/organization-user.service.implementation\";\nimport { OrganizationApiService } from \"@bitwarden/common/services/organization/organization-api.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync/sync.service\";\nimport { SyncNotifierService } from \"@bitwarden/common/services/sync/syncNotifier.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { ValidationService } from \"@bitwarden/common/services/validation.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeoutSettings.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport {\n  LOCALES_DIRECTORY,\n  LOCKED_CALLBACK,\n  LOG_MAC_FAILURES,\n  LOGOUT_CALLBACK,\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  SYSTEM_LANGUAGE,\n  WINDOW,\n} from \"./injection-tokens\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ThemingService } from \"./theming/theming.service\";\nimport { AbstractThemingService } from \"./theming/theming.service.abstraction\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction,\n        encryptService: EncryptService\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService,\n          encryptService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n        EncryptService,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AccountApiServiceAbstraction,\n      useClass: AccountApiServiceImplementation,\n      deps: [\n        ApiServiceAbstraction,\n        UserVerificationServiceAbstraction,\n        LogService,\n        InternalAccountService,\n      ],\n    },\n    {\n      provide: AccountServiceAbstraction,\n      useClass: AccountServiceImplementation,\n      deps: [MessagingServiceAbstraction, LogService],\n    },\n    {\n      provide: InternalAccountService,\n      useExisting: AccountServiceAbstraction,\n    },\n    {\n      provide: AccountUpdateServiceAbstraction,\n      useClass: AvatarUpdateService,\n      deps: [ApiServiceAbstraction, StateServiceAbstraction],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        EncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        OrganizationServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutSettingsServiceAbstraction,\n      useClass: VaultTimeoutSettingsService,\n      deps: [\n        CryptoServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        VaultTimeoutSettingsServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: EncryptService,\n      useFactory: encryptServiceFactory,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventUploadServiceAbstraction,\n      useClass: EventUploadService,\n      deps: [ApiServiceAbstraction, StateServiceAbstraction, LogService],\n    },\n    {\n      provide: EventCollectionServiceAbstraction,\n      useClass: EventCollectionService,\n      deps: [\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        EventUploadServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction],\n    },\n    {\n      provide: InternalPolicyService,\n      useExisting: PolicyServiceAbstraction,\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useClass: PolicyApiService,\n      deps: [PolicyServiceAbstraction, ApiServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        SyncNotifierServiceAbstraction,\n        MessagingServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        UserVerificationApiServiceAbstraction,\n      ],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: InternalOrganizationService,\n      useExisting: OrganizationServiceAbstraction,\n    },\n    {\n      provide: OrganizationUserService,\n      useClass: OrganizationUserServiceImplementation,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n    {\n      provide: UserVerificationApiServiceAbstraction,\n      useClass: UserVerificationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: OrganizationApiServiceAbstraction,\n      useClass: OrganizationApiService,\n      // This is a slightly odd dependency tree for a specialized api service\n      // it depends on SyncService so that new data can be retrieved through the sync\n      // rather than updating the OrganizationService directly. Instead OrganizationService\n      // subscribes to sync notifications and will update itself based on that.\n      deps: [ApiServiceAbstraction, SyncServiceAbstraction],\n    },\n    {\n      provide: SyncNotifierServiceAbstraction,\n      useClass: SyncNotifierService,\n    },\n    {\n      provide: ConfigServiceAbstraction,\n      useClass: ConfigService,\n      deps: [StateServiceAbstraction, ConfigApiServiceAbstraction],\n    },\n    {\n      provide: ConfigApiServiceAbstraction,\n      useClass: ConfigApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AnonymousHubServiceAbstraction,\n      useClass: AnonymousHubService,\n      deps: [EnvironmentServiceAbstraction, AuthServiceAbstraction, LogService],\n    },\n    {\n      provide: ValidationServiceAbstraction,\n      useClass: ValidationService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: LoginServiceAbstraction,\n      useClass: LoginService,\n      deps: [StateServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n\nfunction encryptServiceFactory(\n  cryptoFunctionservice: CryptoFunctionServiceAbstraction,\n  logService: LogService,\n  logMacFailures: boolean\n): EncryptService {\n  return flagEnabled(\"multithreadDecryption\")\n    ? new MultithreadEncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures)\n    : new EncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures);\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { PasswordlessLogInStrategy } from \"../misc/logInStrategies/passwordlessLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { UserApiLogInStrategy } from \"../misc/logInStrategies/user-api-login.strategy\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { AuthRequestPushNotification } from \"../models/response/notification.response\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    if (\n      this.logInStrategy instanceof PasswordLogInStrategy ||\n      this.logInStrategy instanceof PasswordlessLogInStrategy\n    ) {\n      return this.logInStrategy.email;\n    }\n\n    return null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  get accessCode(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.accessCode\n      : null;\n  }\n\n  get authRequestId(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.authRequestId\n      : null;\n  }\n\n  private logInStrategy:\n    | UserApiLogInStrategy\n    | PasswordLogInStrategy\n    | SsoLogInStrategy\n    | PasswordlessLogInStrategy;\n  private sessionTimeout: any;\n\n  private pushNotificationSubject = new Subject<string>();\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy:\n      | UserApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy;\n\n    switch (credentials.type) {\n      case AuthenticationType.Password:\n        strategy = new PasswordLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n      case AuthenticationType.Sso:\n        strategy = new SsoLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.UserApi:\n        strategy = new UserApiLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.environmentService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.Passwordless:\n        strategy = new PasswordlessLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithUserApiKey(): boolean {\n    return this.logInStrategy instanceof UserApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  authingWithPasswordless(): boolean {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  async authResponsePushNotifiction(notification: AuthRequestPushNotification): Promise<any> {\n    this.pushNotificationSubject.next(notification.id);\n  }\n\n  getPushNotifcationObs$(): Observable<any> {\n    return this.pushNotificationSubject.asObservable();\n  }\n\n  private saveState(\n    strategy:\n      | UserApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy\n  ) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipher.data\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { FolderView } from \"../../models/view/folder.view\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  protected _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  protected _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._folders.next([]);\n            this._folderViews.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedFolders();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  async getAllFromState(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      // eslint-disable-next-line\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the folder\n   */\n  async getFromState(id: string): Promise<Folder> {\n    const foldersMap = await this.stateService.getEncryptedFolders();\n    const folder = foldersMap[id];\n    if (folder == null) {\n      return null;\n    }\n\n    return new Folder(folder);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { FolderRequest } from \"../../models/request/folder.request\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","import { AccountApiService } from \"../../abstractions/account/account-api.service\";\nimport { InternalAccountService } from \"../../abstractions/account/account.service\";\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { UserVerificationService } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"../../types/verification\";\n\nexport class AccountApiServiceImplementation implements AccountApiService {\n  constructor(\n    private apiService: ApiService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private accountService: InternalAccountService\n  ) {}\n\n  async deleteAccount(verification: Verification): Promise<void> {\n    try {\n      const verificationRequest = await this.userVerificationService.buildRequest(verification);\n      await this.apiService.send(\"DELETE\", \"/accounts\", verificationRequest, true, false);\n      this.accountService.delete();\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { InternalAccountService } from \"../../abstractions/account/account.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\n\nexport class AccountServiceImplementation implements InternalAccountService {\n  constructor(private messagingService: MessagingService, private logService: LogService) {}\n\n  async delete(): Promise<void> {\n    try {\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { AvatarUpdateService as AvatarUpdateServiceAbstraction } from \"../../abstractions/account/avatar-update.service\";\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { UpdateAvatarRequest } from \"../../models/request/update-avatar.request\";\nimport { ProfileResponse } from \"../../models/response/profile.response\";\n\nexport class AvatarUpdateService implements AvatarUpdateServiceAbstraction {\n  private _avatarUpdate$ = new BehaviorSubject<string | null>(null);\n  avatarUpdate$: Observable<string | null> = this._avatarUpdate$.asObservable();\n\n  constructor(private apiService: ApiService, private stateService: StateService) {\n    this.loadColorFromState();\n  }\n\n  loadColorFromState(): Promise<string | null> {\n    return this.stateService.getAvatarColor().then((color) => {\n      this._avatarUpdate$.next(color);\n      return color;\n    });\n  }\n\n  pushUpdate(color: string | null): Promise<ProfileResponse | void> {\n    return this.apiService.putAvatar(new UpdateAvatarRequest(color)).then((response) => {\n      this.stateService.setAvatarColor(response.avatarColor);\n      this._avatarUpdate$.next(response.avatarColor);\n    });\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { concatMap, Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  protected baseUrl: string;\n  protected webVaultUrl: string;\n  protected apiUrl: string;\n  protected identityUrl: string;\n  protected iconsUrl: string;\n  protected notificationsUrl: string;\n  protected eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.setUrlsFromStorage();\n        })\n      )\n      .subscribe();\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n\n  isCloud(): boolean {\n    return [\"https://api.bitwarden.com\", \"https://vault.bitwarden.com/api\"].includes(\n      this.getApiUrl()\n    );\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { DeviceVerificationRequest } from \"../models/request/device-verification.request\";\nimport { DeviceRequest } from \"../models/request/device.request\";\nimport { EmailTokenRequest } from \"../models/request/email-token.request\";\nimport { EmailRequest } from \"../models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergency-access-update.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { GroupRequest } from \"../models/request/group.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { UserApiTokenRequest } from \"../models/request/identity-token/user-api-token.request\";\nimport { ImportCiphersRequest } from \"../models/request/import-ciphers.request\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/import-organization-ciphers.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PasswordHintRequest } from \"../models/request/password-hint.request\";\nimport { PasswordRequest } from \"../models/request/password.request\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordless-create-auth.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SecretVerificationRequest } from \"../models/request/secret-verification.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { SetPasswordRequest } from \"../models/request/set-password.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { TwoFactorEmailRequest } from \"../models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/two-factor-recovery.request\";\nimport { UpdateAvatarRequest } from \"../models/request/update-avatar.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { UpdateProfileRequest } from \"../models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/update-two-factor-yubio-otp.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { ApiKeyResponse } from \"../models/response/api-key.response\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../models/response/attachment.response\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\nimport { RegisterResponse } from \"../models/response/authentication/register.response\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DeviceVerificationResponse } from \"../models/response/device-verification.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergency-access.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/group.response\";\nimport { IdentityCaptchaResponse } from \"../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/key-connector-user-key.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { PreloginResponse } from \"../models/response/prelogin.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SsoPreValidateResponse } from \"../models/response/sso-pre-validate.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { SyncResponse } from \"../models/response/sync.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../models/response/two-factor-recover.response\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/two-factor-yubi-key.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\n\n/**\n * @deprecated The `ApiService` class is deprecated and calls should be extracted into individual\n * api services. The `send` method is still allowed to be used within api services. For background\n * of this decision please read https://contributing.bitwarden.com/architecture/adr/refactor-api-service.\n */\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: UserApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof UserApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  async postAuthRequest(request: PasswordlessCreateAuthRequest): Promise<AuthRequestResponse> {\n    const r = await this.send(\"POST\", \"/auth-requests/\", request, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  async getAuthResponse(id: string, accessCode: string): Promise<AuthRequestResponse> {\n    const path = `/auth-requests/${id}/response?code=${accessCode}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async putAvatar(request: UpdateAvatarRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/avatar\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  async postRegister(request: RegisterRequest): Promise<RegisterResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new RegisterResponse(r);\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<void> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putPartialCipher(id: string, request: CipherPartialRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/partial\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, false, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async getKnownDevice(email: string, deviceIdentifier: string): Promise<boolean> {\n    const path = `/devices/knowndevice/${email}/${deviceIdentifier}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return r as boolean;\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getOrganizationExport(organizationId: string): Promise<OrganizationExportResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/export\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationExportResponse(r);\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersionNumber()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n    const tokenRequest = new UserApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenTwoFactorRequest(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    const responseType = response.headers.get(\"content-type\");\n    const responseIsJson = responseType != null && responseType.indexOf(\"application/json\") !== -1;\n    if (hasResponse && response.status === 200 && responseIsJson) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    if (authed) {\n      if (\n        response.status === 401 ||\n        response.status === 403 ||\n        (tokenError &&\n          response.status === 400 &&\n          responseJson != null &&\n          responseJson.error === \"invalid_grant\")\n      ) {\n        await this.logoutCallback(true);\n        return null;\n      }\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService();\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { Utils } from \"../misc/utils\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  protected _settings: BehaviorSubject<AccountSettingsSettings> = new BehaviorSubject({});\n\n  settings$ = this._settings.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._settings.next({});\n            return;\n          }\n\n          const data = await this.stateService.getSettings();\n\n          this._settings.next(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    const settings = this._settings.getValue() ?? {};\n\n    settings.equivalentDomains = equivalentDomains;\n\n    this._settings.next(settings);\n    await this.stateService.setSettings(settings);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._settings.next({});\n    }\n\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { PolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class VaultTimeoutSettingsService implements VaultTimeoutSettingsServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { SearchService } from \"../../abstractions/search.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    const accounts = await firstValueFrom(this.stateService.accounts$);\n    for (const userId in accounts) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.vaultTimeoutSettingsService.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.vaultTimeoutSettingsService.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(userId);\n  }\n}\n","import * as papa from \"papaparse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipher-with-ids.export\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collection-with-id.export\";\nimport { EventExport } from \"../models/export/event.export\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folder-with-id.export\";\nimport { CollectionDetailsResponse } from \"../models/response/collection.response\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { EventView } from \"../models/view/event.view\";\nimport { FolderView } from \"../models/view/folder.view\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecryptedFromState().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllFromState().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getOrganizationExport(organizationId).then((exportData) => {\n        const exportPromises: any = [];\n        if (exportData != null) {\n          if (exportData.collections != null && exportData.collections.length > 0) {\n            exportData.collections.forEach((c) => {\n              const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n              exportPromises.push(\n                collection.decrypt().then((decCol) => {\n                  decCollections.push(decCol);\n                })\n              );\n            });\n          }\n          if (exportData.ciphers != null && exportData.ciphers.length > 0) {\n            exportData.ciphers\n              .filter((c) => c.deletedDate === null)\n              .forEach((c) => {\n                const cipher = new Cipher(new CipherData(c));\n                exportPromises.push(\n                  cipher.decrypt().then((decCipher) => {\n                    decCiphers.push(decCipher);\n                  })\n                );\n              });\n          }\n        }\n        return Promise.all(exportPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync/sync.service.abstraction\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notification.response\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"../../abstractions/event/event-upload.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { EventRequest } from \"../../models/request/event.request\";\n\nexport class EventUploadService implements EventUploadServiceAbstraction {\n  private inited = false;\n  constructor(\n    private apiService: ApiService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      req.organizationId = e.organizationId;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { CipherService } from \"../../abstractions/cipher.service\";\nimport { EventCollectionService as EventCollectionServiceAbstraction } from \"../../abstractions/event/event-collection.service\";\nimport { EventUploadService } from \"../../abstractions/event/event-upload.service\";\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { EventType } from \"../../enums/eventType\";\nimport { EventData } from \"../../models/data/event.data\";\n\nexport class EventCollectionService implements EventCollectionServiceAbstraction {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private eventUploadService: EventUploadService\n  ) {}\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false,\n    organizationId: string = null\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    if (organizationId != null) {\n      if (!orgIds.has(organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    event.organizationId = organizationId;\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.eventUploadService.uploadEvents();\n    }\n  }\n}\n","import { of, concatMap, BehaviorSubject, Observable, map } from \"rxjs\";\n\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { Utils } from \"../../misc/utils\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyService implements InternalPolicyServiceAbstraction {\n  protected _policies: BehaviorSubject<Policy[]> = new BehaviorSubject([]);\n\n  policies$ = this._policies.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._policies.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedPolicies();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        if (Object.prototype.hasOwnProperty.call(diskPolicies, id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  masterPasswordPolicyOptions$(policies?: Policy[]): Observable<MasterPasswordPolicyOptions> {\n    const observable = policies ? of(policies) : this.policies$;\n    return observable.pipe(\n      map((obsPolicies) => {\n        let enforcedOptions: MasterPasswordPolicyOptions = null;\n        const filteredPolicies = obsPolicies.filter((p) => p.type === PolicyType.MasterPassword);\n\n        if (filteredPolicies == null || filteredPolicies.length === 0) {\n          return enforcedOptions;\n        }\n\n        filteredPolicies.forEach((currentPolicy) => {\n          if (!currentPolicy.enabled || currentPolicy.data == null) {\n            return;\n          }\n\n          if (enforcedOptions == null) {\n            enforcedOptions = new MasterPasswordPolicyOptions();\n          }\n\n          if (\n            currentPolicy.data.minComplexity != null &&\n            currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n          ) {\n            enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n          }\n\n          if (\n            currentPolicy.data.minLength != null &&\n            currentPolicy.data.minLength > enforcedOptions.minLength\n          ) {\n            enforcedOptions.minLength = currentPolicy.data.minLength;\n          }\n\n          if (currentPolicy.data.requireUpper) {\n            enforcedOptions.requireUpper = true;\n          }\n\n          if (currentPolicy.data.requireLower) {\n            enforcedOptions.requireLower = true;\n          }\n\n          if (currentPolicy.data.requireNumbers) {\n            enforcedOptions.requireNumbers = true;\n          }\n\n          if (currentPolicy.data.requireSpecial) {\n            enforcedOptions.requireSpecial = true;\n          }\n        });\n\n        return enforcedOptions;\n      })\n    );\n  }\n\n  policyAppliesToActiveUser$(policyType: PolicyType, policyFilter?: (policy: Policy) => boolean) {\n    return this.policies$.pipe(\n      concatMap(async (policies) => {\n        const userId = await this.stateService.getUserId();\n        return await this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n      })\n    );\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n\n    return this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n  }\n\n  async upsert(policy: PolicyData): Promise<any> {\n    let policies = await this.stateService.getEncryptedPolicies();\n    if (policies == null) {\n      policies = {};\n    }\n\n    policies[policy.id] = policy;\n\n    await this.updateObservables(policies);\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<void> {\n    await this.updateObservables(policies);\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._policies.next([]);\n    }\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n\n  private async updateObservables(policiesMap: { [id: string]: PolicyData }) {\n    const policies = Object.values(policiesMap || {}).map((f) => new Policy(f));\n\n    this._policies.next(policies);\n  }\n\n  private async checkPoliciesThatApplyToUser(\n    policies: Policy[],\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const organizations = await this.organizationService.getAll(userId);\n    const filteredPolicies = policies.filter(\n      (p) => p.type === policyType && p.enabled && (policyFilter == null || policyFilter(p))\n    );\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        policySet.has(o.id) &&\n        !this.isExcemptFromPolicies(o, policyType)\n    );\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { PolicyApiServiceAbstraction } from \"../../abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiService implements PolicyApiServiceAbstraction {\n  constructor(\n    private policyService: InternalPolicyService,\n    private apiService: ApiService,\n    private stateService: StateService\n  ) {}\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.policyService.mapPoliciesFromToken(response);\n    return await firstValueFrom(this.policyService.masterPasswordPolicyOptions$(policies));\n  }\n\n  async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<any> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    const response = new PolicyResponse(r);\n    const data = new PolicyData(response);\n    await this.policyService.upsert(data);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/send-file\";\nimport { SendText } from \"../models/domain/send-text\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"../../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { Verification } from \"../../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private userVerificationApiService: UserVerificationApiServiceAbstraction\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.userVerificationApiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.userVerificationApiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPasswordRequired\"));\n      }\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { InternalOrganizationService as InternalOrganizationServiceAbstraction } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { Organization } from \"../../models/domain/organization\";\n\nexport class OrganizationService implements InternalOrganizationServiceAbstraction {\n  protected _organizations = new BehaviorSubject<Organization[]>([]);\n\n  organizations$ = this._organizations.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (!unlocked) {\n            this._organizations.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getOrganizations();\n          this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizationsMap = await this.stateService.getOrganizations({ userId: userId });\n    return Object.values(organizationsMap || {}).map((o) => new Organization(o));\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const organizations = this._organizations.getValue();\n    return organizations.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  hasOrganizations(): boolean {\n    const organizations = this._organizations.getValue();\n    return organizations.length > 0;\n  }\n\n  async upsert(organization: OrganizationData): Promise<void> {\n    let organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      organizations = {};\n    }\n\n    organizations[organization.id] = organization;\n\n    await this.replace(organizations);\n  }\n\n  async delete(id: string): Promise<void> {\n    const organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      return;\n    }\n\n    if (organizations[id] == null) {\n      return;\n    }\n\n    delete organizations[id];\n    await this.replace(organizations);\n  }\n\n  get(id: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.id === id);\n  }\n\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the organization\n   */\n  async getFromState(id: string): Promise<Organization> {\n    const organizationsMap = await this.stateService.getOrganizations();\n    const organization = organizationsMap[id];\n    if (organization == null) {\n      return null;\n    }\n\n    return new Organization(organization);\n  }\n\n  getByIdentifier(identifier: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.identifier === identifier);\n  }\n\n  async replace(organizations: { [id: string]: OrganizationData }) {\n    await this.stateService.setOrganizations(organizations);\n    this.updateObservables(organizations);\n  }\n\n  private updateObservables(organizationsMap: { [id: string]: OrganizationData }) {\n    const organizations = Object.values(organizationsMap || {}).map((o) => new Organization(o));\n    this._organizations.next(organizations);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationUserService } from \"../../abstractions/organization-user/organization-user.service\";\nimport {\n  OrganizationUserAcceptRequest,\n  OrganizationUserBulkConfirmRequest,\n  OrganizationUserConfirmRequest,\n  OrganizationUserInviteRequest,\n  OrganizationUserResetPasswordEnrollmentRequest,\n  OrganizationUserResetPasswordRequest,\n  OrganizationUserUpdateGroupsRequest,\n  OrganizationUserUpdateRequest,\n} from \"../../abstractions/organization-user/requests\";\nimport {\n  OrganizationUserBulkPublicKeyResponse,\n  OrganizationUserBulkResponse,\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../../abstractions/organization-user/responses\";\nimport { ListResponse } from \"../../models/response/list.response\";\n\nimport { OrganizationUserBulkRequest } from \"./requests\";\n\nexport class OrganizationUserServiceImplementation implements OrganizationUserService {\n  constructor(private apiService: ApiService) {}\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getAllUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  revokeOrganizationUser(organizationId: string, id: string): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/revoke\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async revokeManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/revoke\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  restoreOrganizationUser(organizationId: string, id: string): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/restore\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async restoreManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/restore\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import { UntypedFormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof UntypedFormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\n\nexport class UserVerificationApiService implements UserVerificationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n  async postAccountRequestOTP(): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"../../abstractions/organization/organization-api.service.abstraction\";\nimport { SyncService } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organization-sso.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { ApiKeyResponse } from \"../../models/response/api-key.response\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organization-sso.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\n\nexport class OrganizationApiService implements OrganizationApiServiceAbstraction {\n  constructor(private apiService: ApiService, private syncService: SyncService) {}\n\n  async get(id: string): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getBilling(id: string): Promise<BillingResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/billing\",\n      null,\n      true,\n      true\n    );\n    return new BillingResponse(r);\n  }\n\n  async getSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/subscription\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getLicense(id: string, installationId: string): Promise<unknown> {\n    return this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getAutoEnrollStatus(identifier: string): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  async create(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations\", request, true, true);\n    // Forcing a sync will notify organization service that they need to repull\n    await this.syncService.fullSync(true);\n    return new OrganizationResponse(r);\n  }\n\n  async createLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async save(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    const data = new OrganizationResponse(r);\n    await this.syncService.fullSync(true);\n    return data;\n  }\n\n  async updatePayment(id: string, request: PaymentRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  async upgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/upgrade\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/subscription\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async updateSeats(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/seat\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/storage\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async verifyBank(id: string, request: VerifyBankRequest): Promise<void> {\n    await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/verify-bank\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async cancel(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  async reinstate(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  async leave(id: string): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async delete(id: string, request: SecretVerificationRequest): Promise<void> {\n    await this.apiService.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async updateLicense(id: string, data: FormData): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async importDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/import\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getOrCreateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getApiKeyInformation(\n    id: string,\n    organizationApiKeyType: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      organizationApiKeyType === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + organizationApiKeyType;\n    const r = await this.apiService.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async rotateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async updateTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<void> {\n    // Can't broadcast anything because the response doesn't have content\n    return this.apiService.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  async getKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async updateKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/keys\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationKeysResponse(r);\n  }\n\n  async getSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async updateSso(id: string, request: OrganizationSsoRequest): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/sso\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationSsoResponse(r);\n  }\n}\n","import { Subject } from \"rxjs\";\n\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"../../abstractions/sync/syncNotifier.service.abstraction\";\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\n/**\n * This class should most likely have 0 dependencies because it will hopefully\n * be rolled into SyncService once upon a time.\n */\nexport class SyncNotifierService implements SyncNotifierServiceAbstraction {\n  private _sync = new Subject<SyncEventArgs>();\n\n  sync$ = this._sync.asObservable();\n\n  next(event: SyncEventArgs): void {\n    this._sync.next(event);\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ServerConfig } from \"./server-config\";\n\nexport abstract class ConfigServiceAbstraction {\n  serverConfig$: Observable<ServerConfig | null>;\n}\n","import { BehaviorSubject, concatMap, map, switchMap, timer, EMPTY } from \"rxjs\";\n\nimport { ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"../../abstractions/config/config.service.abstraction\";\nimport { ServerConfig } from \"../../abstractions/config/server-config\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { ServerConfigData } from \"../../models/data/server-config.data\";\n\nexport class ConfigService implements ConfigServiceAbstraction {\n  private _serverConfig = new BehaviorSubject<ServerConfig | null>(null);\n  serverConfig$ = this._serverConfig.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private configApiService: ConfigApiServiceAbstraction\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        switchMap((unlocked) => {\n          if (!unlocked) {\n            this._serverConfig.next(null);\n            return EMPTY;\n          }\n\n          // Re-fetch the server config every hour\n          return timer(0, 3600 * 1000).pipe(map(() => unlocked));\n        }),\n        concatMap(async (unlocked) => {\n          return unlocked ? await this.buildServerConfig() : null;\n        })\n      )\n      .subscribe((serverConfig) => {\n        this._serverConfig.next(serverConfig);\n      });\n  }\n\n  private async buildServerConfig(): Promise<ServerConfig> {\n    const data = await this.stateService.getServerConfig();\n    const domain = data ? new ServerConfig(data) : null;\n\n    if (domain == null || !domain.isValid() || domain.expiresSoon()) {\n      const value = await this.fetchServerConfig();\n      return value ?? domain;\n    }\n\n    return domain;\n  }\n\n  private async fetchServerConfig(): Promise<ServerConfig> {\n    try {\n      const response = await this.configApiService.get();\n\n      if (response != null) {\n        const data = new ServerConfigData(response);\n        await this.stateService.setServerConfig(data);\n        return new ServerConfig(data);\n      }\n    } catch {\n      return null;\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { ConfigApiServiceAbstraction as ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport class ConfigApiService implements ConfigApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(): Promise<ServerConfigResponse> {\n    const r = await this.apiService.send(\"GET\", \"/config\", null, true, true);\n    return new ServerConfigResponse(r);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"../abstractions/validation.service\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nexport class ValidationService implements ValidationServiceAbstraction {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { AbstractMemoryStorageService } from \"../abstractions/storage.service\";\n\nexport class MemoryStorageService extends AbstractMemoryStorageService {\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n\n  getBypassCache<T>(key: string): Promise<T> {\n    return this.get<T>(key);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Injectable()\nexport class BroadcasterMessagingService implements MessagingService {\n  constructor(private broadcasterService: BroadcasterService) {}\n\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    this.broadcasterService.send(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\n\n@Injectable()\nexport class EventService {\n  private policies: Policy[];\n\n  constructor(private i18nService: I18nService, policyService: PolicyService) {\n    policyService.policies$.subscribe((policies) => {\n      this.policies = policies;\n    });\n  }\n\n  getDefaultDateFilters() {\n    const d = new Date();\n    const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n    d.setDate(d.getDate() - 30);\n    const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n    return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n  }\n\n  formatDateFilters(filterStart: string, filterEnd: string) {\n    const start: Date = new Date(filterStart);\n    const end: Date = new Date(filterEnd + \":59.999\");\n    if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n      throw new Error(\"Invalid date range.\");\n    }\n    return [start.toISOString(), end.toISOString()];\n  }\n\n  async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n    const appInfo = this.getAppInfo(ev.deviceType);\n    const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n    return {\n      message: message,\n      humanReadableMessage: humanReadableMessage,\n      appIcon: appInfo[0],\n      appName: appInfo[1],\n    };\n  }\n\n  private async getEventMessage(ev: EventResponse, options: EventOptions) {\n    let msg = \"\";\n    let humanReadableMsg = \"\";\n    switch (ev.type) {\n      // User\n      case EventType.User_LoggedIn:\n        msg = humanReadableMsg = this.i18nService.t(\"loggedIn\");\n        break;\n      case EventType.User_ChangedPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"changedPassword\");\n        break;\n      case EventType.User_Updated2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledUpdated2fa\");\n        break;\n      case EventType.User_Disabled2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"disabled2fa\");\n        break;\n      case EventType.User_Recovered2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"recovered2fa\");\n        break;\n      case EventType.User_FailedLogIn:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin\");\n        break;\n      case EventType.User_FailedLogIn2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin2fa\");\n        break;\n      case EventType.User_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedVault\");\n        break;\n      case EventType.User_UpdatedTempPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"updatedMasterPassword\");\n        break;\n      case EventType.User_MigratedKeyToKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"migratedKeyConnector\");\n        break;\n      // Cipher\n      case EventType.Cipher_Created:\n        msg = this.i18nService.t(\"createdItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"createdItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Updated:\n        msg = this.i18nService.t(\"editedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"editedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Deleted:\n        msg = this.i18nService.t(\"permanentlyDeletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"permanentlyDeletedItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_SoftDeleted:\n        msg = this.i18nService.t(\"deletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"deletedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Restored:\n        msg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        break;\n      case EventType.Cipher_AttachmentCreated:\n        msg = this.i18nService.t(\"createdAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"createdAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_AttachmentDeleted:\n        msg = this.i18nService.t(\"deletedAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_Shared:\n        msg = this.i18nService.t(\"movedItemIdToOrg\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"movedItemIdToOrg\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientViewed:\n        msg = this.i18nService.t(\"viewedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledPasswordVisible:\n        msg = this.i18nService.t(\"viewedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledHiddenFieldVisible:\n        msg = this.i18nService.t(\"viewedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardNumberVisible:\n        msg = this.i18nService.t(\"viewedCardNumberItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedCardNumberItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardCodeVisible:\n        msg = this.i18nService.t(\"viewedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedHiddenField:\n        msg = this.i18nService.t(\"copiedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedPassword:\n        msg = this.i18nService.t(\"copiedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"copiedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientCopiedCardCode:\n        msg = this.i18nService.t(\"copiedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientAutofilled:\n        msg = this.i18nService.t(\"autofilledItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"autofilledItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_UpdatedCollections:\n        msg = this.i18nService.t(\"editedCollectionsForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionsForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      // Collection\n      case EventType.Collection_Created:\n        msg = this.i18nService.t(\"createdCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Updated:\n        msg = this.i18nService.t(\"editedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Deleted:\n        msg = this.i18nService.t(\"deletedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      // Group\n      case EventType.Group_Created:\n        msg = this.i18nService.t(\"createdGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"createdGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Updated:\n        msg = this.i18nService.t(\"editedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Deleted:\n        msg = this.i18nService.t(\"deletedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"deletedGroupId\", this.getShortId(ev.groupId));\n        break;\n      // Org user\n      case EventType.OrganizationUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"invitedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UpdatedGroups:\n        msg = this.i18nService.t(\"editedGroupsForUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedGroupsForUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UnlinkedSso:\n        msg = this.i18nService.t(\"unlinkedSsoUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"unlinkedSsoUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Enroll:\n        msg = this.i18nService.t(\"eventEnrollPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventEnrollPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Withdraw:\n        msg = this.i18nService.t(\"eventWithdrawPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventWithdrawPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_AdminResetPassword:\n        msg = this.i18nService.t(\"eventAdminPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventAdminPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetSsoLink:\n        msg = this.i18nService.t(\"eventResetSsoLink\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventResetSsoLink\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_FirstSsoLogin:\n        msg = this.i18nService.t(\"firstSsoLogin\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"firstSsoLogin\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Revoked:\n        msg = this.i18nService.t(\"revokedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"revokedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Restored:\n        msg = this.i18nService.t(\"restoredUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"restoredUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      // Org\n      case EventType.Organization_Updated:\n        msg = humanReadableMsg = this.i18nService.t(\"editedOrgSettings\");\n        break;\n      case EventType.Organization_PurgedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"purgedOrganizationVault\");\n        break;\n      case EventType.Organization_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedOrganizationVault\");\n        break;\n      case EventType.Organization_VaultAccessed:\n        msg = humanReadableMsg = this.i18nService.t(\"vaultAccessedByProvider\");\n        break;\n      case EventType.Organization_EnabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledSso\");\n        break;\n      case EventType.Organization_DisabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledSso\");\n        break;\n      case EventType.Organization_EnabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledKeyConnector\");\n        break;\n      case EventType.Organization_DisabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledKeyConnector\");\n        break;\n      case EventType.Organization_SponsorshipsSynced:\n        msg = humanReadableMsg = this.i18nService.t(\"sponsorshipsSynced\");\n        break;\n      // Policies\n      case EventType.Policy_Updated: {\n        msg = this.i18nService.t(\"modifiedPolicyId\", this.formatPolicyId(ev));\n\n        const policy = this.policies.filter((p) => p.id === ev.policyId)[0];\n        let p1 = this.getShortId(ev.policyId);\n        if (policy != null) {\n          p1 = PolicyType[policy.type];\n        }\n\n        humanReadableMsg = this.i18nService.t(\"modifiedPolicyId\", p1);\n        break;\n      }\n      // Provider users:\n      case EventType.ProviderUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"invitedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.providerUserId)\n        );\n        break;\n      case EventType.ProviderUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"removedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderOrganization_Created:\n        msg = this.i18nService.t(\"createdOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Added:\n        msg = this.i18nService.t(\"addedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"addedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Removed:\n        msg = this.i18nService.t(\"removedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_VaultAccessed:\n        msg = this.i18nService.t(\"accessedClientVault\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"accessedClientVault\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      default:\n        break;\n    }\n    return {\n      message: msg === \"\" ? null : msg,\n      humanReadableMessage: humanReadableMsg === \"\" ? null : humanReadableMsg,\n    };\n  }\n\n  private getAppInfo(deviceType: DeviceType): [string, string] {\n    switch (deviceType) {\n      case DeviceType.Android:\n        return [\"bwi-android\", this.i18nService.t(\"mobile\") + \" - Android\"];\n      case DeviceType.iOS:\n        return [\"bwi-apple\", this.i18nService.t(\"mobile\") + \" - iOS\"];\n      case DeviceType.UWP:\n        return [\"bwi-windows\", this.i18nService.t(\"mobile\") + \" - Windows\"];\n      case DeviceType.ChromeExtension:\n        return [\"bwi-chrome\", this.i18nService.t(\"extension\") + \" - Chrome\"];\n      case DeviceType.FirefoxExtension:\n        return [\"bwi-firefox\", this.i18nService.t(\"extension\") + \" - Firefox\"];\n      case DeviceType.OperaExtension:\n        return [\"bwi-opera\", this.i18nService.t(\"extension\") + \" - Opera\"];\n      case DeviceType.EdgeExtension:\n        return [\"bwi-edge\", this.i18nService.t(\"extension\") + \" - Edge\"];\n      case DeviceType.VivaldiExtension:\n        return [\"bwi-puzzle\", this.i18nService.t(\"extension\") + \" - Vivaldi\"];\n      case DeviceType.SafariExtension:\n        return [\"bwi-safari\", this.i18nService.t(\"extension\") + \" - Safari\"];\n      case DeviceType.WindowsDesktop:\n        return [\"bwi-windows\", this.i18nService.t(\"desktop\") + \" - Windows\"];\n      case DeviceType.MacOsDesktop:\n        return [\"bwi-apple\", this.i18nService.t(\"desktop\") + \" - macOS\"];\n      case DeviceType.LinuxDesktop:\n        return [\"bwi-linux\", this.i18nService.t(\"desktop\") + \" - Linux\"];\n      case DeviceType.ChromeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Chrome\"];\n      case DeviceType.FirefoxBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Firefox\"];\n      case DeviceType.OperaBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Opera\"];\n      case DeviceType.SafariBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Safari\"];\n      case DeviceType.VivaldiBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Vivaldi\"];\n      case DeviceType.EdgeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Edge\"];\n      case DeviceType.IEBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - IE\"];\n      case DeviceType.UnknownBrowser:\n        return [\n          \"bwi-globe\",\n          this.i18nService.t(\"webVault\") + \" - \" + this.i18nService.t(\"unknown\"),\n        ];\n      default:\n        return [\"bwi-globe\", this.i18nService.t(\"unknown\")];\n    }\n  }\n\n  private formatCipherId(ev: EventResponse, options: EventOptions) {\n    const shortId = this.getShortId(ev.cipherId);\n    if (ev.organizationId == null || !options.cipherInfo) {\n      return \"<code>\" + shortId + \"</code>\";\n    }\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/vault?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.cipherId\n    );\n    return a.outerHTML;\n  }\n\n  private formatGroupId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.groupId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/organizations/\" + ev.organizationId + \"/groups?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatCollectionId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.collectionId);\n    const a = this.makeAnchor(shortId);\n    // TODO: Update view/edit collection link after EC-14 is completed\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/collections?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatOrgUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.organizationUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/members?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.organizationUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/providers/\" +\n        ev.providerId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.providerUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderOrganizationId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerOrganizationId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/providers/\" + ev.providerId + \"/clients?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatPolicyId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.policyId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/policies?policyId=\" + ev.policyId\n    );\n    return a.outerHTML;\n  }\n\n  private makeAnchor(shortId: string) {\n    const a = document.createElement(\"a\");\n    a.title = this.i18nService.t(\"view\");\n    a.innerHTML = \"<code>\" + shortId + \"</code>\";\n    return a;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  private toDateTimeLocalString(date: Date) {\n    return (\n      date.getFullYear() +\n      \"-\" +\n      this.pad(date.getMonth() + 1) +\n      \"-\" +\n      this.pad(date.getDate()) +\n      \"T\" +\n      this.pad(date.getHours()) +\n      \":\" +\n      this.pad(date.getMinutes())\n    );\n  }\n\n  private pad(num: number) {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  }\n}\n\nexport class EventInfo {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n}\n\nexport class EventOptions {\n  cipherInfo = true;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"@bitwarden/common/enums/htmlStorageLocation\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\n\n@Injectable()\nexport class HtmlStorageService implements AbstractStorageService {\n  get defaultOptions(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Session };\n  }\n\n  get<T>(key: string, options: StorageOptions = this.defaultOptions): Promise<T> {\n    let json: string = null;\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        json = window.localStorage.getItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        json = window.sessionStorage.getItem(key);\n        break;\n    }\n\n    if (json != null) {\n      const obj = JSON.parse(json);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string, options: StorageOptions = this.defaultOptions): Promise<boolean> {\n    return (await this.get(key, options)) != null;\n  }\n\n  save(key: string, obj: any, options: StorageOptions = this.defaultOptions): Promise<any> {\n    if (obj == null) {\n      return this.remove(key, options);\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const json = JSON.stringify(obj);\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.setItem(key, json);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.setItem(key, json);\n        break;\n    }\n    return Promise.resolve();\n  }\n\n  remove(key: string, options: StorageOptions = this.defaultOptions): Promise<any> {\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.removeItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.removeItem(key);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService, private encryptService: EncryptService) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  /**\n   * @throws Will throw if CryptoService was not instantiated and provided to the ContainerService constructor\n   */\n  getCryptoService(): CryptoService {\n    if (this.cryptoService == null) {\n      throw new Error(\"ContainerService.cryptoService not initialized.\");\n    }\n    return this.cryptoService;\n  }\n\n  /**\n   * @throws Will throw if EncryptService was not instantiated and provided to the ContainerService constructor\n   */\n  getEncryptService(): EncryptService {\n    if (this.encryptService == null) {\n      throw new Error(\"ContainerService.encryptService not initialized.\");\n    }\n    return this.encryptService;\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport { WINDOW } from \"@bitwarden/angular/services/injection-tokens\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EventUploadService } from \"@bitwarden/common/services/event/event-upload.service\";\nimport { VaultTimeoutService as VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\n\nimport { I18nService } from \"./i18n.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    @Inject(WINDOW) private win: Window,\n    private environmentService: EnvironmentServiceAbstraction,\n    private notificationsService: NotificationsServiceAbstraction,\n    private vaultTimeoutService: VaultTimeoutServiceAbstraction,\n    private i18nService: I18nServiceAbstraction,\n    private eventUploadService: EventUploadServiceAbstraction,\n    private twoFactorService: TwoFactorServiceAbstraction,\n    private stateService: StateServiceAbstraction,\n    private cryptoService: CryptoServiceAbstraction,\n    private themingService: AbstractThemingService,\n    private encryptService: EncryptService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      const urls = process.env.URLS as Urls;\n      urls.base ??= this.win.location.origin;\n      this.environmentService.setUrls(urls);\n\n      setTimeout(() => this.notificationsService.init(), 3000);\n      (this.vaultTimeoutService as VaultTimeoutService).init(true);\n      const locale = await this.stateService.getLocale();\n      await (this.i18nService as I18nService).init(locale);\n      (this.eventUploadService as EventUploadService).init(true);\n      this.twoFactorService.init();\n      const htmlEl = this.win.document.documentElement;\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n      await this.themingService.monitorThemeChanges();\n      const containerService = new ContainerService(this.cryptoService, this.encryptService);\n      containerService.attachToGlobal(this.win);\n    };\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport * as jq from \"jquery\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService as BaseModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n  el: any = null;\n  modalOpen = false;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    applicationRef: ApplicationRef,\n    injector: Injector,\n    private messagingService: MessagingService\n  ) {\n    super(componentFactoryResolver, applicationRef, injector);\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    modalRef.onCreated.pipe(first()).subscribe(() => {\n      const modals = Array.from(document.querySelectorAll(\".modal\"));\n      if (modals.length > 0) {\n        this.el = jq(modals[0]);\n        this.el.modal(\"show\");\n\n        this.el.on(\"show.bs.modal\", () => {\n          modalRef.show();\n          this.messagingService.send(\"modalShow\");\n        });\n        this.el.on(\"shown.bs.modal\", () => {\n          modalRef.shown();\n          this.messagingService.send(\"modalShown\");\n          if (!Utils.isMobileBrowser) {\n            this.el.find(\"*[appAutoFocus]\").focus();\n          }\n        });\n        this.el.on(\"hide.bs.modal\", () => {\n          this.messagingService.send(\"modalClose\");\n        });\n        this.el.on(\"hidden.bs.modal\", () => {\n          modalRef.closed();\n          this.messagingService.send(\"modalClosed\");\n        });\n      }\n    });\n\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      if (this.el != null) {\n        this.el.modal(\"hide\");\n      }\n    });\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"passwordConfirmation\" | i18n }}\n        </h1>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"passwordConfirmationDesc\" | i18n }}\n\n        <div class=\"form-group\">\n          <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n            <button\n              type=\"button\"\n              class=\"ml-1 btn btn-link\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { BasePolicy } from \"../organizations/policies\";\n\nexport class PolicyListService {\n  private policies: BasePolicy[] = [];\n\n  addPolicies(policies: BasePolicy[]) {\n    this.policies.push(...policies);\n  }\n\n  getPolicies(): BasePolicy[] {\n    return this.policies;\n  }\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class WebFileDownloadService implements FileDownloadService {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    const a = window.document.createElement(\"a\");\n    if (builder.downloadMethod === \"save\") {\n      a.download = request.fileName;\n    } else if (!this.platformUtilsService.isSafari()) {\n      a.target = \"_blank\";\n    }\n    a.href = URL.createObjectURL(builder.blob);\n    a.style.position = \"fixed\";\n    window.document.body.appendChild(a);\n    a.click();\n    window.document.body.removeChild(a);\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { Injectable } from \"@angular/core\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\n@Injectable()\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n  private browserCache: DeviceType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.browserCache != null) {\n      return this.browserCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.browserCache = DeviceType.FirefoxBrowser;\n    } else if (navigator.userAgent.indexOf(\" OPR/\") >= 0) {\n      this.browserCache = DeviceType.OperaBrowser;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.browserCache = DeviceType.EdgeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.browserCache = DeviceType.VivaldiBrowser;\n    } else if (\n      navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      this.browserCache = DeviceType.SafariBrowser;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.browserCache = DeviceType.ChromeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Trident/\") !== -1) {\n      this.browserCache = DeviceType.IEBrowser;\n    } else {\n      this.browserCache = DeviceType.UnknownBrowser;\n    }\n\n    return this.browserCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"browser\", \"\");\n  }\n\n  getClientType() {\n    return ClientType.Web;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxBrowser;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeBrowser;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeBrowser;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaBrowser;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiBrowser;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariBrowser;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  isViewOpen(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    const a = document.createElement(\"a\");\n    a.href = uri;\n    if (options == null || !options.sameWindow) {\n      a.target = \"_blank\";\n      a.rel = \"noreferrer noopener\";\n    }\n    a.classList.add(\"d-none\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(process.env.APPLICATION_VERSION || \"-\");\n  }\n\n  async getApplicationVersionNumber(): Promise<string> {\n    return (await this.getApplicationVersion()).split(RegExp(\"[+|-]\"))[0].trim();\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  async showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false,\n    target?: string\n  ) {\n    let iconClasses: string = null;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const bootstrapModal = document.querySelector(\"div.modal\");\n    if (bootstrapModal != null) {\n      bootstrapModal.removeAttribute(\"tabindex\");\n    }\n\n    const iconHtmlStr =\n      iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml: iconHtmlStr,\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      titleText: title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n      target: target != null ? target : \"body\",\n    });\n\n    if (bootstrapModal != null) {\n      bootstrapModal.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    return confirmed.value;\n  }\n\n  isDev(): boolean {\n    return process.env.NODE_ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return process.env.ENV.toString() === \"selfhosted\";\n  }\n\n  copyToClipboard(text: string, options?: any): void | boolean {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      let copyEl = doc.body;\n      // For some reason copy command won't work when modal is open if appending to body\n      if (doc.body.classList.contains(\"modal-open\")) {\n        copyEl = doc.body.querySelector<HTMLElement>(\".modal\");\n      }\n      copyEl.appendChild(textarea);\n      textarea.select();\n      let success = false;\n      try {\n        // Security exception may be thrown by some browsers.\n        success = doc.execCommand(\"copy\");\n        if (!success) {\n          this.logService.debug(\"Copy command unsupported or disabled.\");\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        copyEl.removeChild(textarea);\n      }\n      return success;\n    }\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Cannot read from clipboard on web.\");\n  }\n\n  supportsBiometric() {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric() {\n    return Promise.resolve(false);\n  }\n\n  supportsSecureStorage() {\n    return false;\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { APP_INITIALIZER, NgModule, Optional, SkipSelf } from \"@angular/core\";\n\nimport {\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  MEMORY_STORAGE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { JslibServicesModule } from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ModalService as ModalServiceAbstraction } from \"@bitwarden/angular/services/modal.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LoginService as LoginServiceAbstraction } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { LoginService } from \"@bitwarden/common/services/login.service\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\n\nimport { BroadcasterMessagingService } from \"./broadcaster-messaging.service\";\nimport { EventService } from \"./event.service\";\nimport { HtmlStorageService } from \"./html-storage.service\";\nimport { I18nService } from \"./i18n.service\";\nimport { InitService } from \"./init.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PolicyListService } from \"./policy-list.service\";\nimport { RouterService } from \"./router.service\";\nimport { Account, GlobalState, StateService } from \"./state\";\nimport { StateMigrationService } from \"./state-migration.service\";\nimport { WebFileDownloadService } from \"./web-file-download.service\";\nimport { WebPlatformUtilsService } from \"./web-platform-utils.service\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, JslibServicesModule],\n  providers: [\n    InitService,\n    RouterService,\n    EventService,\n    PolicyListService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: false,\n    },\n    {\n      provide: I18nServiceAbstraction,\n      useClass: I18nService,\n      deps: [SYSTEM_LANGUAGE, LOCALES_DIRECTORY],\n    },\n    { provide: AbstractStorageService, useClass: HtmlStorageService },\n    {\n      provide: SECURE_STORAGE,\n      // TODO: platformUtilsService.isDev has a helper for this, but using that service here results in a circular dependency.\n      // We have a tech debt item in the backlog to break up platformUtilsService, but in the meantime simply checking the environement here is less cumbersome.\n      useClass: process.env.NODE_ENV === \"development\" ? HtmlStorageService : MemoryStorageService,\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useClass: MemoryStorageService,\n    },\n    {\n      provide: PlatformUtilsServiceAbstraction,\n      useClass: WebPlatformUtilsService,\n    },\n    { provide: MessagingServiceAbstraction, useClass: BroadcasterMessagingService },\n    { provide: ModalServiceAbstraction, useClass: ModalService },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    StateService,\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateService,\n    },\n    {\n      provide: PasswordRepromptServiceAbstraction,\n      useClass: PasswordRepromptService,\n    },\n    {\n      provide: FileDownloadService,\n      useClass: WebFileDownloadService,\n    },\n    {\n      provide: LoginServiceAbstraction,\n      useClass: LoginService,\n      deps: [StateService],\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\n    if (parentModule) {\n      throw new Error(\"CoreModule is already loaded. Import it in the AppModule only\");\n    }\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { GlobalState as BaseGlobalState } from \"@bitwarden/common/models/domain/global-state\";\n\nexport class GlobalState extends BaseGlobalState {\n  theme?: ThemeType = ThemeType.Light;\n  rememberEmail = true;\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"af\",\n      \"ar\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"eo\",\n      \"es\",\n      \"et\",\n      \"eu\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-PT\",\n      \"pt-BR\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  private _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"ar\", \"العربية الفصحى\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"eu\", \"euskara\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string | number, p2?: string | number, p3?: string | number): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1.toString());\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2.toString());\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3.toString());\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { StateMigrationService as BaseStateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\n\nimport { Account } from \"./state/account\";\nimport { GlobalState } from \"./state/global-state\";\n\nexport class StateMigrationService extends BaseStateMigrationService<GlobalState, Account> {\n  protected async migrationStateFrom1To2(): Promise<void> {\n    await super.migrateStateFrom1To2();\n    const globals = (await this.get<GlobalState>(\"global\")) ?? this.stateFactory.createGlobal(null);\n    globals.rememberEmail = (await this.get<boolean>(\"rememberEmail\")) ?? globals.rememberEmail;\n    await this.set(\"global\", globals);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\nimport { filter } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Injectable()\nexport class RouterService {\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    i18nService: I18nService\n  ) {\n    this.currentUrl = this.router.url;\n\n    router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentUrl = event.url;\n\n        let title = i18nService.t(\"pageTitle\", \"Bitwarden\");\n        let child = this.activatedRoute.firstChild;\n        while (child.firstChild) {\n          child = child.firstChild;\n        }\n\n        const titleId: string = child?.snapshot?.data?.titleId;\n        const rawTitle: string = child?.snapshot?.data?.title;\n        const updateUrl = !child?.snapshot?.data?.doNotSaveUrl ?? true;\n\n        if (titleId != null || rawTitle != null) {\n          const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n          if (newTitle != null && newTitle !== \"\") {\n            title = newTitle + \" | \" + title;\n          }\n        }\n        this.titleService.setTitle(title);\n        if (updateUrl) {\n          this.setPreviousUrl(this.currentUrl);\n        }\n      });\n  }\n\n  getPreviousUrl() {\n    return this.previousUrl;\n  }\n\n  setPreviousUrl(url: string) {\n    this.previousUrl = url;\n  }\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = process.env.NODE_ENV === \"development\" ? null : 15;\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport {\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateMigrationService } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport {\n  AbstractMemoryStorageService,\n  AbstractStorageService,\n} from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { FolderData } from \"@bitwarden/common/models/data/folder.data\";\nimport { SendData } from \"@bitwarden/common/models/data/send.data\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\nimport { StateService as BaseStateService } from \"@bitwarden/common/services/state.service\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\n@Injectable()\nexport class StateService extends BaseStateService<GlobalState, Account> {\n  constructor(\n    storageService: AbstractStorageService,\n    @Inject(SECURE_STORAGE) secureStorageService: AbstractStorageService,\n    @Inject(MEMORY_STORAGE) memoryStorageService: AbstractMemoryStorageService,\n    logService: LogService,\n    stateMigrationService: StateMigrationService,\n    @Inject(STATE_FACTORY) stateFactory: StateFactory<GlobalState, Account>,\n    @Inject(STATE_SERVICE_USE_CACHE) useAccountCache = true\n  ) {\n    super(\n      storageService,\n      secureStorageService,\n      memoryStorageService,\n      logService,\n      stateMigrationService,\n      stateFactory,\n      useAccountCache\n    );\n  }\n\n  async addAccount(account: Account) {\n    // Apply web overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCiphers(options);\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCiphers(value, options);\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCollections(options);\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCollections(value, options);\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedFolders(options);\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedFolders(value, options);\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedSends(options);\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedSends(value, options);\n  }\n\n  override async getLastSync(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getLastSync(options);\n  }\n\n  override async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setLastSync(value, options);\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n})\nexport class FooterComponent implements OnInit {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n  }\n}\n","<div class=\"container footer text-muted\">\n  <div class=\"row\">\n    <div class=\"col\">&copy; {{ year }} Bitwarden Inc.</div>\n    <div class=\"col text-center\"></div>\n    <div class=\"col text-right\">\n      {{ \"versionNumber\" | i18n: version }}\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-frontend-layout\",\n  templateUrl: \"frontend-layout.component.html\",\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n    document.body.classList.add(\"layout_frontend\");\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n  &copy; {{ year }} Bitwarden Inc. <br />\n  {{ \"versionNumber\" | i18n: version }}\n</div>\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{ 'nav-background-alt': selfHosted }\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{ 'pageTitle' | i18n: 'Bitwarden' }}\">\n      <i class=\"bwi bwi-shield\" aria-hidden=\"true\"></i>\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/vault\">{{ \"vaults\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/sends\">{{ \"send\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/tools\">{{ \"tools\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/reports\">{{ \"reports\" | i18n }}</a>\n        </li>\n        <li\n          *ngIf=\"(organizations$ | async)?.length >= 1\"\n          class=\"nav-item\"\n          routerLinkActive=\"active\"\n        >\n          <a class=\"nav-link\" [routerLink]=\"['/organizations', (organizations$ | async)[0].id]\">{{\n            \"organizations\" | i18n\n          }}</a>\n        </li>\n        <ng-container *ngIf=\"providers.length >= 1\">\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\">\n            <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{\n              \"provider\" | i18n\n            }}</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\">\n            <a class=\"nav-link\" routerLink=\"/providers\">{{ \"provider\" | i18n }}</a>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n    <product-switcher buttonType=\"light\"></product-switcher>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li>\n        <button\n          [bitMenuTriggerFor]=\"accountMenu\"\n          class=\"tw-border-0 tw-bg-transparent tw-text-alt2 tw-opacity-70 hover:tw-opacity-90\"\n        >\n          <dynamic-avatar [text]=\"name\" size=\"xsmall\" aria-hidden=\"true\"></dynamic-avatar>\n          <i class=\"bwi bwi-caret-down bwi-sm\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu class=\"dropdown-menu\" #accountMenu>\n          <div class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\">\n            <div\n              class=\"tw-flex tw-items-center tw-py-1 tw-px-4 tw-leading-tight tw-text-info\"\n              *ngIf=\"name\"\n              appStopProp\n            >\n              <dynamic-avatar [text]=\"name\" size=\"small\"></dynamic-avatar>\n              <div class=\"tw-ml-2 tw-block tw-overflow-hidden tw-whitespace-nowrap\">\n                <span>{{ \"loggedInAs\" | i18n }}</span>\n                <small class=\"tw-block tw-overflow-hidden tw-whitespace-nowrap tw-text-muted\">{{\n                  name\n                }}</small>\n              </div>\n            </div>\n            <bit-menu-divider></bit-menu-divider>\n            <a bitMenuItem routerLink=\"/settings/account\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"accountSettings\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/help/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-question-circle\" aria-hidden=\"true\"></i>\n              {{ \"getHelp\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"getApps\" | i18n }}\n            </a>\n            <bit-menu-divider></bit-menu-divider>\n            <button bitMenuItem type=\"button\" (click)=\"lock()\">\n              <i class=\"bwi bwi-fw bwi-lock\" aria-hidden=\"true\"></i>\n              {{ \"lockNow\" | i18n }}\n            </button>\n            <button bitMenuItem type=\"button\" (click)=\"logOut()\">\n              <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </bit-menu>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport {\n  canAccessAdmin,\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class NavbarComponent implements OnInit {\n  selfHosted = false;\n  name: string;\n  email: string;\n  providers: Provider[] = [];\n  userId: string;\n  organizations$: Observable<Organization[]>;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private providerService: ProviderService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private i18nService: I18nService\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.name = await this.tokenService.getName();\n    this.email = await this.tokenService.getEmail();\n    this.userId = await this.tokenService.getUserId();\n    if (this.name == null || this.name.trim() === \"\") {\n      this.name = this.email;\n    }\n\n    // Ensure providers and organizations are loaded\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n    this.providers = await this.providerService.getAll();\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter(isNotProviderUser)),\n      canAccessAdmin(this.i18nService)\n    );\n  }\n\n  lock() {\n    this.messagingService.send(\"lockVault\");\n  }\n\n  logOut() {\n    this.messagingService.send(\"logout\");\n  }\n}\n","<bit-menu #menu ariaRole=\"dialog\" [ariaLabel]=\"'switchProducts' | i18n\">\n  <div class=\"tw-px-4 tw-py-2\" *ngIf=\"products$ | async as products\">\n    <!-- Bento options -->\n    <!-- grid-template-columns is dynamic so we can collapse empty columns  -->\n    <section\n      [ngStyle]=\"{\n        '--num-products': products.bento.length,\n        'grid-template-columns': 'repeat(min(var(--num-products,1),3),auto)'\n      }\"\n      class=\"tw-grid tw-gap-2\"\n    >\n      <a\n        *ngFor=\"let product of products.bento\"\n        [routerLink]=\"product.appRoute\"\n        class=\"tw-group tw-flex tw-h-24 tw-w-28 tw-flex-col tw-items-center tw-justify-center tw-rounded tw-p-1 tw-text-primary-500 tw-outline-none hover:tw-bg-background-alt hover:tw-text-primary-700 hover:tw-no-underline focus-visible:!tw-ring-2 focus-visible:!tw-ring-primary-700\"\n        routerLinkActive=\"tw-font-bold tw-bg-primary-500 hover:tw-bg-primary-500 !tw-text-contrast tw-ring-offset-2\"\n        ariaCurrentWhenActive=\"page\"\n      >\n        <i class=\"bwi {{ product.icon }} tw-text-4xl !tw-m-0 !tw-mb-1\"></i>\n        <span class=\"tw-text-center tw-text-sm tw-leading-snug group-hover:tw-underline\">{{\n          product.name\n        }}</span>\n      </a>\n    </section>\n\n    <!-- Other options -->\n    <section\n      *ngIf=\"products.other.length > 0\"\n      class=\"tw-mt-4 tw-flex tw-w-full tw-flex-col tw-border-0 tw-border-t tw-border-solid tw-border-t-text-muted tw-p-2 tw-pb-0\"\n    >\n      <span class=\"tw-mb-1 tw-text-xs tw-text-muted\">{{ \"moreFromBitwarden\" | i18n }}</span>\n      <a *ngFor=\"let product of products.other\" bitLink [href]=\"product.marketingRoute\">\n        <span class=\"tw-font-normal\">\n          <i class=\"bwi {{ product.icon }} tw-m-0 !tw-mr-3\"></i>{{ product.name }}\n        </span>\n      </a>\n    </section>\n  </div>\n</bit-menu>\n","import { Component, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { combineLatest, map } from \"rxjs\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { MenuComponent } from \"@bitwarden/components\";\n\ntype ProductSwitcherItem = {\n  /**\n   * Displayed name\n   */\n  name: string;\n\n  /**\n   * Displayed icon\n   */\n  icon: string;\n\n  /**\n   * Route for items in the `bentoProducts$` section\n   */\n  appRoute?: string | any[];\n\n  /**\n   * Route for items in the `otherProducts$` section\n   */\n  marketingRoute?: string | any[];\n};\n\n@Component({\n  selector: \"product-switcher-content\",\n  templateUrl: \"./product-switcher-content.component.html\",\n})\nexport class ProductSwitcherContentComponent {\n  @ViewChild(\"menu\")\n  menu: MenuComponent;\n\n  protected products$ = combineLatest([\n    this.organizationService.organizations$,\n    this.route.paramMap,\n  ]).pipe(\n    map(([orgs, paramMap]) => {\n      const routeOrg = orgs.find((o) => o.id === paramMap.get(\"organizationId\"));\n      // If the active route org doesn't have access to SM, find the first org that does.\n      const smOrg = routeOrg?.canAccessSecretsManager\n        ? routeOrg\n        : orgs.find((o) => o.canAccessSecretsManager);\n\n      /**\n       * We can update this to the \"satisfies\" type upon upgrading to TypeScript 4.9\n       * https://devblogs.microsoft.com/typescript/announcing-typescript-4-9/#satisfies\n       */\n      const products: Record<\"pm\" | \"sm\" | \"orgs\", ProductSwitcherItem> = {\n        pm: {\n          name: \"Password Manager\",\n          icon: \"bwi-lock\",\n          appRoute: \"/vault\",\n          marketingRoute: \"https://bitwarden.com/products/personal/\",\n        },\n        sm: {\n          name: \"Secrets Manager Beta\",\n          icon: \"bwi-cli\",\n          appRoute: [\"/sm\", smOrg?.id],\n          // TODO: update marketing link\n          marketingRoute: \"#\",\n        },\n        orgs: {\n          name: \"Organizations\",\n          icon: \"bwi-business\",\n          marketingRoute: \"https://bitwarden.com/products/business/\",\n        },\n      };\n\n      const bento: ProductSwitcherItem[] = [products.pm];\n      const other: ProductSwitcherItem[] = [];\n\n      if (smOrg) {\n        bento.push(products.sm);\n      }\n\n      if (orgs.length === 0) {\n        other.push(products.orgs);\n      }\n\n      return {\n        bento,\n        other,\n      };\n    })\n  );\n\n  constructor(private organizationService: OrganizationService, private route: ActivatedRoute) {}\n}\n","<ng-template [ngIf]=\"isEnabled\">\n  <button\n    bitIconButton=\"bwi bwi-fw bwi-filter\"\n    [bitMenuTriggerFor]=\"content?.menu\"\n    [buttonType]=\"buttonType\"\n    [attr.aria-label]=\"'switchProducts' | i18n\"\n  ></button>\n  <product-switcher-content #content></product-switcher-content>\n</ng-template>\n","import { AfterViewInit, ChangeDetectorRef, Component, Input } from \"@angular/core\";\n\nimport { IconButtonType } from \"@bitwarden/components/src/icon-button/icon-button.component\";\n\nimport { flagEnabled } from \"../../../utils/flags\";\n\n@Component({\n  selector: \"product-switcher\",\n  templateUrl: \"./product-switcher.component.html\",\n})\nexport class ProductSwitcherComponent implements AfterViewInit {\n  protected isEnabled = flagEnabled(\"secretsManager\");\n\n  /**\n   * Passed to the product switcher's `bitIconButton`\n   */\n  @Input()\n  buttonType: IconButtonType = \"main\";\n\n  ngAfterViewInit() {\n    /**\n     * Resolves https://angular.io/errors/NG0100 [SM-403]\n     *\n     * Caused by `[bitMenuTriggerFor]=\"content?.menu\"` in template\n     */\n    this.changeDetector.detectChanges();\n  }\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { I18nPipe } from \"@bitwarden/angular/pipes/i18n.pipe\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { ProductSwitcherContentComponent } from \"./product-switcher-content.component\";\nimport { ProductSwitcherComponent } from \"./product-switcher.component\";\n\n@NgModule({\n  imports: [SharedModule, A11yModule, RouterModule],\n  declarations: [ProductSwitcherComponent, ProductSwitcherContentComponent],\n  exports: [ProductSwitcherComponent],\n  providers: [I18nPipe],\n})\nexport class ProductSwitcherModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationInformationComponent } from \"./organization-information.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationInformationComponent],\n  exports: [OrganizationInformationComponent],\n})\nexport class OrganizationCreateModule {}\n","<form #form [formGroup]=\"formGroup\" *ngIf=\"nameOnly\">\n  <bit-form-field>\n    <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"name\" />\n  </bit-form-field>\n</form>\n<form #form [formGroup]=\"formGroup\" *ngIf=\"!nameOnly\">\n  <h2>{{ \"generalInformation\" | i18n }}</h2>\n  <div class=\"tw-flex tw-w-full tw-space-x-4\" *ngIf=\"createOrganization\">\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" formControlName=\"name\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"billingEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"billingEmail\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\" *ngIf=\"isProvider\">\n      <bit-label>{{ \"clientOwnerEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"clientOwnerEmail\" />\n    </bit-form-field>\n  </div>\n  <div *ngIf=\"!isProvider && !acceptingSponsorship\">\n    <input\n      type=\"checkbox\"\n      name=\"businessOwned\"\n      formControlName=\"businessOwned\"\n      (change)=\"changedBusinessOwned.emit()\"\n    />\n    <bit-label for=\"businessOwned\" class=\"tw-mb-3\">{{ \"accountOwnedBusiness\" | i18n }}</bit-label>\n    <div class=\"tw-mt-4\" *ngIf=\"formGroup.controls['businessOwned'].value\">\n      <bit-form-field class=\"tw-w-1/2\">\n        <bit-label>{{ \"businessName\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"businessName\" />\n      </bit-form-field>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-org-info\",\n  templateUrl: \"organization-information.component.html\",\n})\nexport class OrganizationInformationComponent {\n  @Input() nameOnly = false;\n  @Input() createOrganization = true;\n  @Input() isProvider = false;\n  @Input() acceptingSponsorship = false;\n  @Input() formGroup: UntypedFormGroup;\n  @Output() changedBusinessOwned = new EventEmitter<void>();\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessOrgAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationPermissionsGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private syncService: SyncService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // TODO: We need to fix this issue once and for all.\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n\n    const org = this.organizationService.get(route.params.organizationId);\n    if (org == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!org.isOwner && !org.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"organizationIsDisabled\")\n      );\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (organization: Organization) => boolean =\n      route.data?.organizationPermissions;\n    const hasPermissions = permissionsCallback == null || permissionsCallback(org);\n\n    if (!hasPermissions) {\n      // Handle linkable ciphers for organizations the user only has view access to\n      // https://bitwarden.atlassian.net/browse/EC-203\n      const cipherId =\n        state.root.queryParamMap.get(\"itemId\") || state.root.queryParamMap.get(\"cipherId\");\n      if (cipherId) {\n        return this.router.createUrlTree([\"/vault\"], {\n          queryParams: {\n            itemId: cipherId,\n          },\n        });\n      }\n\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return canAccessOrgAdmin(org)\n        ? this.router.createUrlTree([\"/organizations\", org.id])\n        : this.router.createUrlTree([\"/\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport {\n  canAccessOrgAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationRedirectGuard implements CanActivate {\n  constructor(private router: Router, private organizationService: OrganizationService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const org = this.organizationService.get(route.params.organizationId);\n\n    const customRedirect = route.data?.autoRedirectCallback;\n    if (customRedirect) {\n      let redirectPath = customRedirect(org);\n      if (typeof redirectPath === \"string\") {\n        redirectPath = [redirectPath];\n      }\n      return this.router.createUrlTree([state.url, ...redirectPath]);\n    }\n\n    if (canAccessOrgAdmin(org)) {\n      return this.router.createUrlTree([\"/organizations\", org.id]);\n    }\n    return this.router.createUrlTree([\"/\"]);\n  }\n}\n","<div *ngIf=\"loaded && activeOrganization != null\" class=\"tw-flex\">\n  <button\n    class=\"tw-flex tw-items-center tw-border-none tw-bg-background-alt\"\n    type=\"button\"\n    id=\"pickerButton\"\n    [appA11yTitle]=\"'organizationPicker' | i18n\"\n    [bitMenuTriggerFor]=\"orgPickerMenu\"\n  >\n    <bit-avatar [text]=\"activeOrganization.name\" [id]=\"activeOrganization.id\"></bit-avatar>\n    <div class=\"tw-flex\">\n      <div class=\"org-name tw-ml-3\">\n        <span>{{ activeOrganization.name }}</span>\n        <small class=\"tw-text-muted\">{{ \"organization\" | i18n }}</small>\n      </div>\n      <div class=\"tw-ml-3\">\n        <i class=\"bwi bwi-angle-down tw-text-main\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </button>\n  <div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-danger-500 tw-text-danger\"\n      *ngIf=\"!activeOrganization.enabled\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"organizationIsDisabled\" | i18n }}\n      </div>\n    </div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-info-500 tw-text-info\"\n      *ngIf=\"activeOrganization.isProviderUser\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"accessingUsingProvider\" | i18n: activeOrganization.providerName }}\n      </div>\n    </div>\n  </div>\n\n  <bit-menu #orgPickerMenu>\n    <ul aria-labelledby=\"pickerButton\" class=\"tw-m-0 tw-p-0\">\n      <li\n        *ngFor=\"let org of organizations$ | async\"\n        class=\"tw-flex tw-list-none tw-flex-col\"\n        role=\"none\"\n      >\n        <a bitMenuItem [routerLink]=\"['/organizations', org.id]\">\n          <i\n            class=\"bwi bwi-check mr-2\"\n            [ngClass]=\"org.id === activeOrganization.id ? 'visible' : 'invisible'\"\n          >\n            <span class=\"tw-sr-only\">{{ \"currentOrganization\" | i18n }}</span>\n          </i>\n          {{ org.name }}\n        </a>\n      </li>\n      <bit-menu-divider></bit-menu-divider>\n      <li class=\"tw-list-none\" role=\"none\">\n        <a bitMenuItem routerLink=\"/create-organization\">\n          <i class=\"bwi bwi-plus mr-2\"></i>\n          {{ \"newOrganization\" | i18n }}</a\n        >\n      </li>\n    </ul>\n  </bit-menu>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessAdmin,\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-switcher\",\n  templateUrl: \"organization-switcher.component.html\",\n})\nexport class OrganizationSwitcherComponent implements OnInit {\n  constructor(private organizationService: OrganizationService, private i18nService: I18nService) {}\n\n  @Input() activeOrganization: Organization = null;\n  organizations$: Observable<Organization[]>;\n\n  loaded = false;\n\n  async ngOnInit() {\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter(isNotProviderUser)),\n      canAccessAdmin(this.i18nService),\n      map((orgs) => orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")))\n    );\n\n    this.loaded = true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav !tw-h-32\" *ngIf=\"organization$ | async as organization\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <app-organization-switcher\n        class=\"my-auto pl-1\"\n        [activeOrganization]=\"organization\"\n      ></app-organization-switcher>\n      <bit-tab-nav-bar class=\"-tw-mb-px\">\n        <bit-tab-link route=\"vault\">{{ \"vault\" | i18n }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowManageTab(organization)\" route=\"manage\">\n          {{ \"manage\" | i18n }}\n        </bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowReportsTab(organization)\" route=\"reporting\">\n          {{ getReportTabLabel(organization) | i18n }}\n        </bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowBillingTab(organization)\" route=\"billing\">{{\n          \"billing\" | i18n\n        }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowSettingsTab(organization)\" route=\"settings\">{{\n          \"settings\" | i18n\n        }}</bit-tab-link>\n      </bit-tab-nav-bar>\n    </div>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, mergeMap, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport {\n  canAccessBillingTab,\n  canAccessGroupsTab,\n  canAccessManageTab,\n  canAccessMembersTab,\n  canAccessReportingTab,\n  canAccessSettingsTab,\n  getOrganizationById,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-layout\",\n  templateUrl: \"organization-layout.component.html\",\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n  organization$: Observable<Organization>;\n\n  private _destroy = new Subject<void>();\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n\n    this.organization$ = this.route.params\n      .pipe(takeUntil(this._destroy))\n      .pipe<string>(map((p) => p.organizationId))\n      .pipe(\n        mergeMap((id) => {\n          return this.organizationService.organizations$\n            .pipe(takeUntil(this._destroy))\n            .pipe(getOrganizationById(id));\n        })\n      );\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  canShowSettingsTab(organization: Organization): boolean {\n    return canAccessSettingsTab(organization);\n  }\n\n  canShowManageTab(organization: Organization): boolean {\n    return canAccessManageTab(organization);\n  }\n\n  canShowMembersTab(organization: Organization): boolean {\n    return canAccessMembersTab(organization);\n  }\n\n  canShowGroupsTab(organization: Organization): boolean {\n    return canAccessGroupsTab(organization);\n  }\n\n  canShowReportsTab(organization: Organization): boolean {\n    return canAccessReportingTab(organization);\n  }\n\n  canShowBillingTab(organization: Organization): boolean {\n    return canAccessBillingTab(organization);\n  }\n\n  getReportTabLabel(organization: Organization): string {\n    return organization.useEvents ? \"reporting\" : \"reports\";\n  }\n}\n","type OrganizationUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n  keys: OrganizationUserBulkRequestEntry[];\n\n  constructor(keys: OrganizationUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"confirmUsers\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!loading && !done\">\n          <p>\n            {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n            <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n              {{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"fingerprint\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ fingerprints.get(user.id) }}\n              </td>\n            </tr>\n            <tr *ngFor=\"let user of excludedUsers\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"!loading && done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserBulkConfirmRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-confirm\",\n  templateUrl: \"bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent implements OnInit {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  excludedUsers: BulkUserDetails[];\n  filteredUsers: BulkUserDetails[];\n  publicKeys: Map<string, Uint8Array> = new Map();\n  fingerprints: Map<string, string> = new Map();\n  statuses: Map<string, string> = new Map();\n\n  loading = true;\n  done = false;\n  error: string;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    private organizationUserService: OrganizationUserService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.excludedUsers = this.users.filter((u) => !this.isAccepted(u));\n    this.filteredUsers = this.users.filter((u) => this.isAccepted(u));\n\n    if (this.filteredUsers.length <= 0) {\n      this.done = true;\n    }\n\n    const response = await this.getPublicKeys();\n\n    for (const entry of response.data) {\n      const publicKey = Utils.fromB64ToArray(entry.key);\n      const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n      if (fingerprint != null) {\n        this.publicKeys.set(entry.id, publicKey);\n        this.fingerprints.set(entry.id, fingerprint.join(\"-\"));\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const key = await this.getCryptoKey();\n      const userIdsWithKeys: any[] = [];\n      for (const user of this.filteredUsers) {\n        const publicKey = this.publicKeys.get(user.id);\n        if (publicKey == null) {\n          continue;\n        }\n        const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n        userIdsWithKeys.push({\n          id: user.id,\n          key: encryptedKey.encryptedString,\n        });\n      }\n      const response = await this.postConfirmRequest(userIdsWithKeys);\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkConfirmMessage\");\n        this.statuses.set(entry.id, error);\n      });\n\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n    this.loading = false;\n  }\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === OrganizationUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    return await this.organizationUserService.postOrganizationUsersPublicKey(\n      this.organizationId,\n      this.filteredUsers.map((user) => user.id)\n    );\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getOrgKey(this.organizationId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.organizationUserService.postOrganizationUserBulkConfirm(\n      this.organizationId,\n      request\n    );\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"removeUsers\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\">\n            {{ removeUsersWarning }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"removeUsers\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-remove\",\n  templateUrl: \"bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.deleteUsers();\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkRemovedMessage\");\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async deleteUsers() {\n    return await this.organizationUserService.deleteManyOrganizationUsers(\n      this.organizationId,\n      this.users.map((user) => user.id)\n    );\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeOrgUsersConfirmation\");\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"bulkConfirmStatus\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              <th>{{ \"status\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tr *ngFor=\"let item of users\">\n            <td width=\"30\">\n              <bit-avatar\n                [text]=\"item.user | userName\"\n                [id]=\"item.user.id\"\n                size=\"small\"\n              ></bit-avatar>\n            </td>\n            <td>\n              {{ item.user.email }}\n              <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{ item.user.name }}</small>\n            </td>\n            <td class=\"text-danger\" *ngIf=\"item.error\">\n              {{ item.message }}\n            </td>\n            <td *ngIf=\"!item.error\">\n              {{ item.message }}\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\n\nexport interface BulkUserDetails {\n  id: string;\n  name: string;\n  email: string;\n  status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n  user: BulkUserDetails;\n  error: boolean;\n  message: string;\n};\n\n@Component({\n  selector: \"app-bulk-status\",\n  templateUrl: \"bulk-status.component.html\",\n})\nexport class BulkStatusComponent {\n  users: BulkStatusEntry[];\n  loading = false;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"eventLogsTitle\">\n          {{ \"eventLogs\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loaded\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loaded\">\n        <div class=\"d-flex\">\n          <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"start\"\n              placeholder=\"{{ 'startDate' | i18n }}\"\n              [(ngModel)]=\"start\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"end\"\n              placeholder=\"{{ 'endDate' | i18n }}\"\n              [(ngModel)]=\"end\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n          </div>\n          <button\n            #refreshBtn\n            [appApiAction]=\"refreshPromise\"\n            type=\"button\"\n            class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\"\n            [disabled]=\"loaded && $any(refreshBtn).loading\"\n          >\n            <i\n              class=\"bwi bwi-refresh bwi-fw\"\n              [ngClass]=\"{ 'bwi-spin': loaded && $any(refreshBtn).loading }\"\n              aria-hidden=\"true\"\n            ></i>\n            {{ \"refresh\" | i18n }}\n          </button>\n        </div>\n        <hr />\n        <div *ngIf=\"!events || !events.length\">\n          {{ \"noEventsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n          <thead>\n            <tr>\n              <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n              <th class=\"border-top-0\" width=\"40\">\n                <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n              </th>\n              <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{ \"user\" | i18n }}</th>\n              <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let e of events\">\n              <td>{{ e.date | date: \"medium\" }}</td>\n              <td>\n                <i\n                  class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n                  title=\"{{ e.appName }}, {{ e.ip }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n              </td>\n              <td *ngIf=\"showUser\">\n                <span appA11yTitle=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n              </td>\n              <td [innerHTML]=\"e.message\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          #moreBtn\n          [appApiAction]=\"morePromise\"\n          type=\"button\"\n          class=\"btn btn-block btn-link btn-submit\"\n          (click)=\"loadEvents(false)\"\n          [disabled]=\"loaded && $any(moreBtn).loading\"\n          *ngIf=\"continuationToken\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"loadMore\" | i18n }}</span>\n        </button>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\n\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-entity-events\",\n  templateUrl: \"entity-events.component.html\",\n})\nexport class EntityEventsComponent implements OnInit {\n  @Input() name: string;\n  @Input() entity: \"user\" | \"cipher\";\n  @Input() entityId: string;\n  @Input() organizationId: string;\n  @Input() providerId: string;\n  @Input() showUser = false;\n\n  loading = true;\n  loaded = false;\n  events: any[];\n  start: string;\n  end: string;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private orgUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private eventService: EventService,\n    private platformUtilsService: PlatformUtilsService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n    await this.load();\n  }\n\n  async load() {\n    if (this.showUser) {\n      const response = await this.organizationUserService.getAllUsers(this.organizationId);\n      response.data.forEach((u) => {\n        const name = this.userNamePipe.transform(u);\n        this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n        this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n      });\n    }\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.refreshPromise != null || this.morePromise != null) {\n      return;\n    }\n\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return;\n    }\n\n    this.loading = true;\n    let response: ListResponse<EventResponse>;\n    try {\n      let promise: Promise<any>;\n      if (this.entity === \"user\" && this.providerId) {\n        promise = this.apiService.getEventsProviderUser(\n          this.providerId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else if (this.entity === \"user\") {\n        promise = this.apiService.getEventsOrganizationUser(\n          this.organizationId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else {\n        promise = this.apiService.getEventsCipher(\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      }\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      response = await promise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.continuationToken = response.continuationToken;\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user =\n          this.showUser && userId != null && this.orgUsersUserIdMap.has(userId)\n            ? this.orgUsersUserIdMap.get(userId)\n            : null;\n        return {\n          message: eventInfo.message,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.showUser ? this.i18nService.t(\"unknown\") : null,\n          userEmail: user != null ? user.email : this.showUser ? \"\" : null,\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        };\n      })\n    );\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyRequest {\n  type: PolicyType;\n  enabled: boolean;\n  data: any;\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nexport abstract class BasePolicy {\n  abstract name: string;\n  abstract description: string;\n  abstract type: PolicyType;\n  abstract component: any;\n\n  display(organization: Organization) {\n    return true;\n  }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n  @Input() policyResponse: PolicyResponse;\n  @Input() policy: BasePolicy;\n\n  enabled = new UntypedFormControl(false);\n  data: UntypedFormGroup = null;\n\n  ngOnInit(): void {\n    this.enabled.setValue(this.policyResponse.enabled);\n\n    if (this.policyResponse.data != null) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.data.patchValue(this.policyResponse.data ?? {});\n  }\n\n  buildRequestData() {\n    if (this.data != null) {\n      return this.data.value;\n    }\n\n    return null;\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n    const request = new PolicyRequest();\n    request.enabled = this.enabled.value;\n    request.type = this.policy.type;\n    request.data = this.buildRequestData();\n\n    return Promise.resolve(request);\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { DisableSendPolicyComponent } from \"./disable-send.component\";\nimport { MasterPasswordPolicyComponent } from \"./master-password.component\";\nimport { PasswordGeneratorPolicyComponent } from \"./password-generator.component\";\nimport { PersonalOwnershipPolicyComponent } from \"./personal-ownership.component\";\nimport { PoliciesComponent } from \"./policies.component\";\nimport { PolicyEditComponent } from \"./policy-edit.component\";\nimport { RequireSsoPolicyComponent } from \"./require-sso.component\";\nimport { ResetPasswordPolicyComponent } from \"./reset-password.component\";\nimport { SendOptionsPolicyComponent } from \"./send-options.component\";\nimport { SingleOrgPolicyComponent } from \"./single-org.component\";\nimport { TwoFactorAuthenticationPolicyComponent } from \"./two-factor-authentication.component\";\n\n@NgModule({\n  imports: [SharedModule, LooseComponentsModule],\n  declarations: [\n    DisableSendPolicyComponent,\n    MasterPasswordPolicyComponent,\n    PasswordGeneratorPolicyComponent,\n    PersonalOwnershipPolicyComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SendOptionsPolicyComponent,\n    SingleOrgPolicyComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    PoliciesComponent,\n    PolicyEditComponent,\n  ],\n  exports: [\n    DisableSendPolicyComponent,\n    MasterPasswordPolicyComponent,\n    PasswordGeneratorPolicyComponent,\n    PersonalOwnershipPolicyComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SendOptionsPolicyComponent,\n    SingleOrgPolicyComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    PoliciesComponent,\n    PolicyEditComponent,\n  ],\n})\nexport class PoliciesModule {}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class DisableSendPolicy extends BasePolicy {\n  name = \"disableSend\";\n  description = \"disableSendPolicyDesc\";\n  type = PolicyType.DisableSend;\n  component = DisableSendPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-send\",\n  templateUrl: \"disable-send.component.html\",\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"disableSendExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minComplexity\">{{ \"minComplexityScore\" | i18n }}</label>\n      <select\n        id=\"minComplexity\"\n        name=\"minComplexity\"\n        formControlName=\"minComplexity\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"8\"\n        name=\"minLength\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireUpper\"\n      name=\"requireUpper\"\n      formControlName=\"requireUpper\"\n    />\n    <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireLower\"\n      name=\"requireLower\"\n      formControlName=\"requireLower\"\n    />\n    <label class=\"form-check-label\" for=\"requireLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireNumbers\"\n      name=\"requireNumbers\"\n      formControlName=\"requireNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireSpecial\"\n      name=\"requireSpecial\"\n      formControlName=\"requireSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class MasterPasswordPolicy extends BasePolicy {\n  name = \"masterPassPolicyTitle\";\n  description = \"masterPassPolicyDesc\";\n  type = PolicyType.MasterPassword;\n  component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-master-password\",\n  templateUrl: \"master-password.component.html\",\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    minComplexity: [null],\n    minLength: [null],\n    requireUpper: [null],\n    requireLower: [null],\n    requireNumbers: [null],\n    requireSpecial: [null],\n  });\n\n  passwordScores: { name: string; value: number }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {\n    super();\n\n    this.passwordScores = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"weak\") + \" (0)\", value: 0 },\n      { name: i18nService.t(\"weak\") + \" (1)\", value: 1 },\n      { name: i18nService.t(\"weak\") + \" (2)\", value: 2 },\n      { name: i18nService.t(\"good\") + \" (3)\", value: 3 },\n      { name: i18nService.t(\"strong\") + \" (4)\", value: 4 },\n    ];\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group mb-0\">\n      <label for=\"defaultType\">{{ \"defaultType\" | i18n }}</label>\n      <select\n        id=\"defaultType\"\n        name=\"defaultType\"\n        formControlName=\"defaultType\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n  </div>\n  <h3 class=\"mt-4\">{{ \"password\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minLength\"\n        min=\"5\"\n        max=\"128\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumbers\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"minNumbers\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumbers\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minNumbers\"\n      />\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minSpecial\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"minSpecial\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minSpecial\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minSpecial\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useUpper\"\n      formControlName=\"useUpper\"\n      name=\"useUpper\"\n    />\n    <label class=\"form-check-label\" for=\"useUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useLower\"\n      name=\"useLower\"\n      formControlName=\"useLower\"\n    />\n    <label class=\"form-check-label\" for=\"useLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useNumbers\"\n      name=\"useNumbers\"\n      formControlName=\"useNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"useNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useSpecial\"\n      name=\"useSpecial\"\n      formControlName=\"useSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label>\n  </div>\n  <h3 class=\"mt-4\">{{ \"passphrase\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumberWords\">{{ \"minimumNumberOfWords\" | i18n }}</label>\n      <input\n        id=\"minNumberWords\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumberWords\"\n        min=\"3\"\n        max=\"20\"\n        formControlName=\"minNumberWords\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"capitalize\"\n      name=\"capitalize\"\n      formControlName=\"capitalize\"\n    />\n    <label class=\"form-check-label\" for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"includeNumber\"\n      name=\"includeNumber\"\n      formControlName=\"includeNumber\"\n    />\n    <label class=\"form-check-label\" for=\"includeNumber\">{{ \"includeNumber\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n  name = \"passwordGenerator\";\n  description = \"passwordGeneratorPolicyDesc\";\n  type = PolicyType.PasswordGenerator;\n  component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    defaultType: [null],\n    minLength: [null],\n    useUpper: [null],\n    useLower: [null],\n    useNumbers: [null],\n    useSpecial: [null],\n    minNumbers: [null],\n    minSpecial: [null],\n    minNumberWords: [null],\n    capitalize: [null],\n    includeNumber: [null],\n  });\n\n  defaultTypes: { name: string; value: string }[];\n\n  constructor(private formBuilder: UntypedFormBuilder, i18nService: I18nService) {\n    super();\n\n    this.defaultTypes = [\n      { name: i18nService.t(\"userPreference\"), value: null },\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n  name = \"personalOwnership\";\n  description = \"personalOwnershipPolicyDesc\";\n  type = PolicyType.PersonalOwnership;\n  component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-personal-ownership\",\n  templateUrl: \"personal-ownership.component.html\",\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"personalOwnershipExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class RequireSsoPolicy extends BasePolicy {\n  name = \"requireSso\";\n  description = \"requireSsoPolicyDesc\";\n  type = PolicyType.RequireSso;\n  component = RequireSsoPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useSso;\n  }\n}\n\n@Component({\n  selector: \"policy-require-sso\",\n  templateUrl: \"require-sso.component.html\",\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n<app-callout type=\"warning\">\n  {{ \"requireSsoExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<app-callout type=\"warning\">\n  {{ \"resetPasswordPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"resetPasswordPolicyAutoEnroll\" | i18n }}</h3>\n  <p>{{ \"resetPasswordPolicyAutoEnrollDescription\" | i18n }}</p>\n  <app-callout type=\"warning\">\n    {{ \"resetPasswordPolicyAutoEnrollWarning\" | i18n }}\n  </app-callout>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"autoEnrollEnabled\"\n      name=\"AutoEnrollEnabled\"\n      formControlName=\"autoEnrollEnabled\"\n    />\n    <label class=\"form-check-label\" for=\"autoEnrollEnabled\">\n      {{ \"resetPasswordPolicyAutoEnrollCheckbox\" | i18n }}\n    </label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class ResetPasswordPolicy extends BasePolicy {\n  name = \"resetPasswordPolicy\";\n  description = \"resetPasswordPolicyDescription\";\n  type = PolicyType.ResetPassword;\n  component = ResetPasswordPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useResetPassword;\n  }\n}\n\n@Component({\n  selector: \"policy-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    autoEnrollEnabled: false,\n  });\n\n  defaultTypes: { name: string; value: string }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private organizationService: OrganizationService\n  ) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SendOptionsPolicy extends BasePolicy {\n  name = \"sendOptions\";\n  description = \"sendOptionsPolicyDesc\";\n  type = PolicyType.SendOptions;\n  component = SendOptionsPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-send-options\",\n  templateUrl: \"send-options.component.html\",\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    disableHideEmail: false,\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder) {\n    super();\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"sendOptionsExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"disableHideEmail\"\n      name=\"DisableHideEmail\"\n      formControlName=\"disableHideEmail\"\n    />\n    <label class=\"form-check-label\" for=\"disableHideEmail\">{{ \"disableHideEmail\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SingleOrgPolicy extends BasePolicy {\n  name = \"singleOrg\";\n  description = \"singleOrgDesc\";\n  type = PolicyType.SingleOrg;\n  component = SingleOrgPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-single-org\",\n  templateUrl: \"single-org.component.html\",\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    if (!this.enabled.value) {\n      if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"requireSso\"))\n        );\n      }\n\n      if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"maximumVaultTimeoutLabel\"))\n        );\n      }\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"singleOrgPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n  name = \"twoStepLoginPolicyTitle\";\n  description = \"twoStepLoginPolicyDesc\";\n  type = PolicyType.TwoFactorAuthentication;\n  component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-two-factor-authentication\",\n  templateUrl: \"two-factor-authentication.component.html\",\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"twoStepLoginPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"policiesEditTitle\">\n          {{ \"editPolicy\" | i18n }} - {{ policy.name | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-body\" *ngIf=\"loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div [hidden]=\"loading\">\n          <p>{{ policy.description | i18n }}</p>\n          <ng-template #policyForm></ng-template>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { BasePolicy, BasePolicyComponent } from \"../policies\";\n\n@Component({\n  selector: \"app-policy-edit\",\n  templateUrl: \"policy-edit.component.html\",\n})\nexport class PolicyEditComponent {\n  @Input() policy: BasePolicy;\n  @Input() organizationId: string;\n  @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n  @Output() onSavedPolicy = new EventEmitter();\n\n  @ViewChild(\"policyForm\", { read: ViewContainerRef, static: true })\n  policyFormRef: ViewContainerRef;\n\n  policyType = PolicyType;\n  loading = true;\n  enabled = false;\n  formPromise: Promise<any>;\n  defaultTypes: any[];\n  policyComponent: BasePolicyComponent;\n\n  private policyResponse: PolicyResponse;\n\n  constructor(\n    private policyApiService: PolicyApiServiceAbstraction,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private logService: LogService\n  ) {}\n\n  async ngAfterViewInit() {\n    await this.load();\n    this.loading = false;\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n    this.policyComponent = this.policyFormRef.createComponent(factory)\n      .instance as BasePolicyComponent;\n    this.policyComponent.policy = this.policy;\n    this.policyComponent.policyResponse = this.policyResponse;\n\n    this.cdr.detectChanges();\n  }\n\n  async load() {\n    try {\n      this.policyResponse = await this.policyApiService.getPolicy(\n        this.organizationId,\n        this.policy.type\n      );\n    } catch (e) {\n      if (e.statusCode === 404) {\n        this.policyResponse = new PolicyResponse({ Enabled: false });\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async submit() {\n    let request: PolicyRequest;\n    try {\n      request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.policyApiService.putPolicy(\n        this.organizationId,\n        this.policy.type,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedPolicyId\", this.i18nService.t(this.policy.name))\n      );\n      this.onSavedPolicy.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"policies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n  <tbody>\n    <tr *ngFor=\"let p of policies\">\n      <td *ngIf=\"p.display(organization)\">\n        <a href=\"#\" appStopClick (click)=\"edit(p)\">{{ p.name | i18n }}</a>\n        <span bitBadge badgeType=\"success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{\n          \"on\" | i18n\n        }}</span>\n        <small class=\"text-muted d-block\">{{ p.description | i18n }}</small>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { PolicyListService } from \"../../core\";\nimport { BasePolicy } from \"../policies\";\n\nimport { PolicyEditComponent } from \"./policy-edit.component\";\n\n@Component({\n  selector: \"app-org-policies\",\n  templateUrl: \"policies.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PoliciesComponent implements OnInit {\n  @ViewChild(\"editTemplate\", { read: ViewContainerRef, static: true })\n  editModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  policies: BasePolicy[];\n  organization: Organization;\n\n  private orgPolicies: PolicyResponse[];\n  protected policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyListService: PolicyListService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      this.policies = this.policyListService.getPolicies();\n\n      await this.load();\n\n      // Handle policies component launch from Event message\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        if (qParams.policyId != null) {\n          const policyIdFromEvents: string = qParams.policyId;\n          for (const orgPolicy of this.orgPolicies) {\n            if (orgPolicy.id === policyIdFromEvents) {\n              for (let i = 0; i < this.policies.length; i++) {\n                if (this.policies[i].type === orgPolicy.type) {\n                  this.edit(this.policies[i]);\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.policyApiService.getPolicies(this.organizationId);\n    this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n    this.orgPolicies.forEach((op) => {\n      this.policiesEnabledMap.set(op.type, op.enabled);\n    });\n\n    this.loading = false;\n  }\n\n  async edit(policy: BasePolicy) {\n    const [modal] = await this.modalService.openViewRef(\n      PolicyEditComponent,\n      this.editModalRef,\n      (comp) => {\n        comp.policy = policy;\n        comp.organizationId = this.organizationId;\n        comp.policiesEnabledMap = this.policiesEnabledMap;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedPolicy.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n}\n","import { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  /**\n   * @deprecated 2022-08-03 Moved to OrganizationSsoRequest, left for backwards compatability.\n   * https://bitwarden.atlassian.net/browse/EC-489\n   */\n  identifier: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      *ngIf=\"loaded\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{ \"deleteOrganization\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{\n          \"deletingOrganizationIsPermanentWarning\" | i18n: organizationName\n        }}</app-callout>\n        <p id=\"organizationDeleteDescription\">\n          <ng-container\n            *ngIf=\"\n              deleteOrganizationRequestType === 'InvalidFamiliesForEnterprise';\n              else regularDelete\n            \"\n          >\n            {{ \"orgCreatedSponsorshipInvalid\" | i18n }}\n          </ng-container>\n          <ng-template #regularDelete>\n            <ng-container *ngIf=\"organizationContentSummary.totalItemCount > 0\">\n              {{ \"deletingOrganizationContentWarning\" | i18n: organizationName }}\n              <ul>\n                <li *ngFor=\"let type of organizationContentSummary.itemCountByType\">\n                  {{ type.count }} {{ type.localizationKey | i18n }}\n                </li>\n              </ul>\n              {{ \"deletingOrganizationActiveUserAccountsWarning\" | i18n }}\n            </ng-container>\n          </ng-template>\n        </p>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteOrganization\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nclass CountBasedLocalizationKey {\n  singular: string;\n  plural: string;\n\n  getKey(count: number) {\n    return count == 1 ? this.singular : this.plural;\n  }\n\n  constructor(singular: string, plural: string) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n}\n\nclass OrganizationContentSummaryItem {\n  count: number;\n  get localizationKey(): string {\n    return this.localizationKeyOptions.getKey(this.count);\n  }\n  private localizationKeyOptions: CountBasedLocalizationKey;\n  constructor(count: number, localizationKeyOptions: CountBasedLocalizationKey) {\n    this.count = count;\n    this.localizationKeyOptions = localizationKeyOptions;\n  }\n}\n\nclass OrganizationContentSummary {\n  totalItemCount = 0;\n  itemCountByType: OrganizationContentSummaryItem[] = [];\n}\n\n@Component({\n  selector: \"app-delete-organization\",\n  templateUrl: \"delete-organization.component.html\",\n})\nexport class DeleteOrganizationComponent implements OnInit {\n  organizationId: string;\n  loaded: boolean;\n  deleteOrganizationRequestType: \"InvalidFamiliesForEnterprise\" | \"RegularDelete\" = \"RegularDelete\";\n  organizationName: string;\n  organizationContentSummary: OrganizationContentSummary = new OrganizationContentSummary();\n  @Output() onSuccess: EventEmitter<void> = new EventEmitter();\n\n  masterPassword: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private cipherService: CipherService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.load();\n  }\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.organizationApiService.delete(this.organizationId, request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"organizationDeleted\"),\n        this.i18nService.t(\"organizationDeletedDesc\")\n      );\n      this.onSuccess.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async load() {\n    this.organizationName = (await this.organizationService.get(this.organizationId)).name;\n    this.organizationContentSummary = await this.buildOrganizationContentSummary();\n    this.loaded = true;\n  }\n\n  private async buildOrganizationContentSummary(): Promise<OrganizationContentSummary> {\n    const organizationContentSummary = new OrganizationContentSummary();\n    const organizationItems = (\n      await this.cipherService.getAllFromApiForOrganization(this.organizationId)\n    ).filter((item) => item.deletedDate == null);\n\n    if (organizationItems.length < 1) {\n      return organizationContentSummary;\n    }\n\n    organizationContentSummary.totalItemCount = organizationItems.length;\n    for (const cipherType of Utils.iterateEnum(CipherType)) {\n      const count = this.getOrganizationItemCountByType(organizationItems, cipherType);\n      if (count > 0) {\n        organizationContentSummary.itemCountByType.push(\n          new OrganizationContentSummaryItem(\n            count,\n            this.getOrganizationItemLocalizationKeysByType(CipherType[cipherType])\n          )\n        );\n      }\n    }\n\n    return organizationContentSummary;\n  }\n\n  private getOrganizationItemCountByType(items: CipherView[], type: CipherType) {\n    return items.filter((item) => item.type == type).length;\n  }\n\n  private getOrganizationItemLocalizationKeysByType(type: string): CountBasedLocalizationKey {\n    return new CountBasedLocalizationKey(`type${type}`, `type${type}Plural`);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"organizationInfo\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <bit-avatar [text]=\"org.name\" [id]=\"org.id\" size=\"large\"></bit-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organization-keys.request\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/models/request/organization-update.request\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organization.response\";\n\nimport { ApiKeyComponent } from \"../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../settings/purge-vault.component\";\n\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n\n  selfHosted = false;\n  canManageBilling = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<OrganizationResponse>;\n  taxFormPromise: Promise<unknown>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.canManageBilling = this.organizationService.get(this.organizationId).canManageBilling;\n      try {\n        this.org = await this.organizationApiService.get(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n      request.identifier = this.org.identifier;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.organizationApiService.save(this.organizationId, request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteOrganization() {\n    await this.modalService.openViewRef(\n      DeleteOrganizationComponent,\n      this.deleteModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSuccess.subscribe(() => {\n          this.router.navigate([\"/\"]);\n        });\n      }\n    );\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.getOrCreateApiKey.bind(\n        this.organizationApiService\n      );\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.rotateApiKey.bind(this.organizationApiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-header\">\n  <h1 *ngIf=\"!organizationId\">{{ \"twoStepLogin\" | i18n }}</h1>\n  <h1 *ngIf=\"organizationId\">{{ \"twoStepLoginEnforcement\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<ng-container *ngIf=\"organizationId\">\n  <p>\n    {{ \"twoStepLoginOrganizationDescStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"twoStepLoginPolicy\" | i18n }}.</a>\n    <br />\n    {{ \"twoStepLoginOrganizationDuoDesc\" | i18n }}\n  </p>\n  <p>{{ \"twoStepLoginOrganizationSsoDesc\" | i18n }}</p>\n</ng-container>\n<bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</bit-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</bit-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { TwoFactorDuoComponent } from \"../../settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../settings/two-factor-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(apiService, modalService, messagingService, policyService, stateService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { canAccessSettingsTab } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"../guards/org-permissions.guard\";\nimport { OrganizationRedirectGuard } from \"../guards/org-redirect.guard\";\nimport { PoliciesComponent } from \"../policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SettingsComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: { organizationPermissions: canAccessSettingsTab },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        canActivate: [OrganizationRedirectGuard],\n        data: {\n          autoRedirectCallback: getSettingsRoute,\n        },\n        children: [], // This is required to make the auto redirect work,\n      },\n      { path: \"account\", component: AccountComponent, data: { titleId: \"organizationInfo\" } },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"policies\",\n        component: PoliciesComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: (org: Organization) => org.canManagePolicies,\n          titleId: \"policies\",\n        },\n      },\n      {\n        path: \"tools\",\n        loadChildren: () =>\n          import(\"../tools/import-export/org-import-export.module\").then(\n            (m) => m.OrganizationImportExportModule\n          ),\n      },\n    ],\n  },\n];\n\nfunction getSettingsRoute(organization: Organization) {\n  if (organization.isOwner) {\n    return \"account\";\n  }\n  if (organization.canManagePolicies) {\n    return \"policies\";\n  }\n  if (organization.canAccessImportExport) {\n    return [\"tools\", \"import\"];\n  }\n  if (organization.canManageSso) {\n    return \"sso\";\n  }\n  if (organization.canManageScim) {\n    return \"scim\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationSettingsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { PoliciesModule } from \"../policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\nimport { OrganizationSettingsRoutingModule } from \"./organization-settings-routing.module\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\n@NgModule({\n  imports: [SharedModule, LooseComponentsModule, PoliciesModule, OrganizationSettingsRoutingModule],\n  declarations: [\n    SettingsComponent,\n    AccountComponent,\n    DeleteOrganizationComponent,\n    TwoFactorSetupComponent,\n  ],\n})\nexport class OrganizationSettingsModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"account\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.isOwner\"\n          >\n            {{ \"organizationInfo\" | i18n }}\n          </a>\n          <a\n            routerLink=\"policies\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canManagePolicies\"\n          >\n            {{ \"policies\" | i18n }}\n          </a>\n          <a\n            routerLink=\"two-factor\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.use2fa && organization?.isOwner\"\n          >\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n          <a\n            routerLink=\"tools/import\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canAccessImportExport\"\n          >\n            {{ \"importData\" | i18n }}\n          </a>\n          <a\n            routerLink=\"tools/export\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canAccessImportExport\"\n          >\n            {{ \"exportVault\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sso\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canManageSso\"\n          >\n            {{ \"singleSignOn\" | i18n }}\n          </a>\n          <a\n            routerLink=\"scim\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canManageScim\"\n          >\n            {{ \"scim\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  organization: Organization;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    this.route.params\n      .pipe(\n        switchMap(async (params) => await this.organizationService.get(params.organizationId)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((organization) => {\n        this.organization = organization;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"cipherAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"cipher\">\n        <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\">\n          {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n        </app-callout>\n        <div class=\"row\" *ngIf=\"!editMode && !viewOnly\">\n          <div class=\"col-6 form-group\">\n            <label for=\"type\">{{ \"whatTypeOfItem\" | i18n }}</label>\n            <select\n              id=\"type\"\n              name=\"Type\"\n              [(ngModel)]=\"cipher.type\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted\"\n              appAutofocus\n            >\n              <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"cipher.name\"\n              required\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n            <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n            <select\n              id=\"folder\"\n              name=\"FolderId\"\n              [(ngModel)]=\"cipher.folderId\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n            </select>\n          </div>\n        </div>\n        <!-- Login -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginUsername\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Login.Username\"\n                  [(ngModel)]=\"cipher.login.username\"\n                  appInputVerbatim\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n                    (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 form-group\">\n              <div class=\"d-flex\">\n                <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n                  <a\n                    href=\"#\"\n                    class=\"d-block mr-2 bwi-icon-above-input\"\n                    appStopClick\n                    appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                    (click)=\"generatePassword()\"\n                    *ngIf=\"cipher.viewPassword && !(!cipher.edit && editMode)\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-generate\" aria-hidden=\"true\"></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    #checkPasswordBtn\n                    appStopClick\n                    appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                    (click)=\"checkPassword()\"\n                    [appApiAction]=\"checkPasswordPromise\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-check-circle\"\n                      [hidden]=\"$any(checkPasswordBtn).loading\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-spinner bwi-spin\"\n                      aria-hidden=\"true\"\n                      [hidden]=\"!$any(checkPasswordBtn).loading\"\n                      title=\"{{ 'loading' | i18n }}\"\n                    ></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    appStopClick\n                    [appA11yTitle]=\"'toggleCharacterCount' | i18n\"\n                    (click)=\"togglePasswordCount()\"\n                    *ngIf=\"cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-numbered-list\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginPassword\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Login.Password\"\n                  [(ngModel)]=\"cipher.login.password\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePassword()\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                    (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"showPasswordCount\" class=\"tw-mb-4\">\n            <label>{{ \"passwordCharacterCount\" | i18n }}</label>\n            <div class=\"tw-flex tw-justify-between\">\n              <bit-color-password\n                [password]=\"cipher.login.password\"\n                [showCount]=\"true\"\n              ></bit-color-password>\n              <button type=\"button\" bitLink (click)=\"togglePasswordCount()\">\n                {{ \"hide\" | i18n }}\n              </button>\n            </div>\n          </div>\n          <div class=\"tw-flex tw-flex-row\">\n            <div class=\"tw-mb-4 tw-w-1/2\">\n              <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n              <input\n                id=\"loginTotp\"\n                type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n                name=\"Login.Totp\"\n                class=\"form-control text-monospace\"\n                [(ngModel)]=\"cipher.login.totp\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"tw-mb-4 tw-ml-4 tw-flex tw-w-1/2 tw-items-end\" [ngClass]=\"{ low: totpLow }\">\n              <div\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n                *ngIf=\"!cipher.login.totp || !totpCode\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec tw-text-muted\">15</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle-muted inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        opacity=\"0.25\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': 40 }\"\n                      ></circle>\n                      <circle\n                        class=\"totp-circle-muted outer\"\n                        opacity=\"0.25\"\n                        r=\"14\"\n                        cy=\"16\"\n                        cx=\"16\"\n                      ></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-3 tw-ml-2 tw-text-muted\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >--- ---</span\n                >\n                <i class=\"bwi bwi-lg bwi-clone tw-text-muted\" aria-hidden=\"true\"></i>\n              </div>\n              <div class=\"tw-pb-2\" *ngIf=\"!cipher.login.totp || !totpCode\">\n                <app-premium-badge\n                  *ngIf=\"!organization && !cipher.organizationId\"\n                  class=\"ml-3\"\n                ></app-premium-badge>\n                <a\n                  href=\"#\"\n                  appStopClick\n                  bitBadge\n                  badgeType=\"primary\"\n                  class=\"tw-ml-4\"\n                  (click)=\"upgradeOrganization()\"\n                  *ngIf=\"\n                    (organization && !organization.useTotp) ||\n                    (!organization &&\n                      !canAccessPremium &&\n                      cipher.organizationId &&\n                      !cipher.organizationUseTotp)\n                  \"\n                >\n                  {{ \"upgrade\" | i18n }}\n                </a>\n              </div>\n              <div\n                *ngIf=\"cipher.login.totp && totpCode\"\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec\">{{ totpSec }}</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                      ></circle>\n                      <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-2 tw-ml-2 tw-mt-1\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >{{ totpCodeFormatted }}</span\n                >\n                <button\n                  type=\"button\"\n                  class=\"tw-items-center tw-border-none tw-bg-transparent tw-text-primary-500\"\n                  appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n                  (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"cipher.login.hasUris\">\n            <div\n              role=\"group\"\n              class=\"row\"\n              *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n              attr.aria-label=\"{{ 'uriPosition' | i18n: i + 1 }}\"\n            >\n              <div class=\"col-7 form-group\">\n                <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n                <div class=\"input-group\">\n                  <input\n                    class=\"form-control\"\n                    id=\"loginUri{{ i }}\"\n                    type=\"text\"\n                    name=\"Login.Uris[{{ i }}].Uri\"\n                    [(ngModel)]=\"u.uri\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                    placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                    appInputVerbatim\n                  />\n                  <div class=\"input-group-append\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'launch' | i18n }}\"\n                      (click)=\"launch(u)\"\n                      [disabled]=\"!u.canLaunch\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n                      (click)=\"copy(u.uri, 'uri', 'URI')\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-5 form-group\">\n                <div class=\"d-flex\">\n                  <label for=\"loginUriMatch{{ i }}\">\n                    {{ \"matchDetection\" | i18n }}\n                  </label>\n                  <a\n                    class=\"ml-auto\"\n                    href=\"https://bitwarden.com/help/uri-match-detection/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                  >\n                    <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n                <div class=\"d-flex\">\n                  <select\n                    class=\"form-control overflow-hidden\"\n                    id=\"loginUriMatch{{ i }}\"\n                    name=\"Login.Uris[{{ i }}].Match\"\n                    [(ngModel)]=\"u.match\"\n                    (change)=\"loginUriMatchChanged(u)\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                  >\n                    <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">\n                      {{ o.name }}\n                    </option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link text-danger ml-2\"\n                    (click)=\"removeUri(u)\"\n                    appA11yTitle=\"{{ 'remove' | i18n }}\"\n                    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n                  >\n                    <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <a\n            href=\"#\"\n            appStopClick\n            (click)=\"addUri()\"\n            class=\"d-inline-block mb-3\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n          </a>\n        </ng-container>\n        <!-- Card -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n              <input\n                id=\"cardCardholderName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.CardCardholderName\"\n                [(ngModel)]=\"cipher.card.cardholderName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardBrand\">\n                <select\n                  id=\"cardBrand\"\n                  class=\"form-control\"\n                  name=\"Card.Brand\"\n                  [(ngModel)]=\"cipher.card.brand\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyCardBrand>\n                <input\n                  id=\"cardBrand\"\n                  class=\"form-control\"\n                  name=\"Card.Brand\"\n                  type=\"text\"\n                  [readonly]=\"true\"\n                  [value]=\"cipher.card.brand\"\n                />\n              </ng-template>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardNumber\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                  name=\"Card.Number\"\n                  [(ngModel)]=\"cipher.card.number\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardNumber()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{\n                        'bwi-eye': !showCardNumber,\n                        'bwi-eye-slash': showCardNumber\n                      }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n                    (click)=\"copy(cipher.card.number, 'number', 'Number')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardExpMonth\">\n                <select\n                  id=\"cardExpMonth\"\n                  class=\"form-control\"\n                  name=\"Card.ExpMonth\"\n                  [(ngModel)]=\"cipher.card.expMonth\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyCardExpMonth>\n                <input\n                  id=\"cardExpMonth\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Card.ExpMonth\"\n                  [readonly]=\"true\"\n                  [value]=\"getCardExpMonthDisplay()\"\n                />\n              </ng-template>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n              <input\n                id=\"cardExpYear\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.ExpYear\"\n                [(ngModel)]=\"cipher.card.expYear\"\n                placeholder=\"{{ 'ex' | i18n }} 2019\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardCode\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                  name=\"Card.Code\"\n                  [(ngModel)]=\"cipher.card.code\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardCode()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'securityCode' | i18n }}\"\n                    (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!-- Identity -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyIdTitle\">\n                <select\n                  id=\"idTitle\"\n                  class=\"form-control\"\n                  name=\"Identity.Title\"\n                  [(ngModel)]=\"cipher.identity.title\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyIdTitle>\n                <input\n                  id=\"idTitle\"\n                  class=\"form-control\"\n                  name=\"Identity.Title\"\n                  type=\"text\"\n                  [readonly]=\"true\"\n                  [value]=\"cipher.identity.title\"\n                />\n              </ng-template>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n              <input\n                id=\"idFirstName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.FirstName\"\n                [(ngModel)]=\"cipher.identity.firstName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n              <input\n                id=\"idMiddleName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.MiddleName\"\n                [(ngModel)]=\"cipher.identity.middleName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n              <input\n                id=\"idLastName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LastName\"\n                [(ngModel)]=\"cipher.identity.lastName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"idUsername\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Username\"\n                [(ngModel)]=\"cipher.identity.username\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n              <input\n                id=\"idCompany\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Company\"\n                [(ngModel)]=\"cipher.identity.company\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n              <input\n                id=\"idSsn\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.SSN\"\n                [(ngModel)]=\"cipher.identity.ssn\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n              <input\n                id=\"idPassportNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PassportNumber\"\n                [(ngModel)]=\"cipher.identity.passportNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n              <input\n                id=\"idLicenseNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LicenseNumber\"\n                [(ngModel)]=\"cipher.identity.licenseNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n              <input\n                id=\"idEmail\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"email\"\n                name=\"Identity.Email\"\n                [(ngModel)]=\"cipher.identity.email\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n              <input\n                id=\"idPhone\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"tel\"\n                name=\"Identity.Phone\"\n                [(ngModel)]=\"cipher.identity.phone\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n              <input\n                id=\"idAddress1\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address1\"\n                [(ngModel)]=\"cipher.identity.address1\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n              <input\n                id=\"idAddress2\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address2\"\n                [(ngModel)]=\"cipher.identity.address2\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n              <input\n                id=\"idAddress3\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address3\"\n                [(ngModel)]=\"cipher.identity.address3\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n              <input\n                id=\"idCity\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.City\"\n                [(ngModel)]=\"cipher.identity.city\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n              <input\n                id=\"idState\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.State\"\n                [(ngModel)]=\"cipher.identity.state\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n              <input\n                id=\"idPostalCode\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PostalCode\"\n                [(ngModel)]=\"cipher.identity.postalCode\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n              <input\n                id=\"idCountry\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Country\"\n                [(ngModel)]=\"cipher.identity.country\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n        </ng-container>\n        <div class=\"form-group\">\n          <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [disabled]=\"cipher.isDeleted || viewOnly\"\n            [readonly]=\"!cipher.edit && editMode\"\n            class=\"form-control\"\n          ></textarea>\n        </div>\n        <app-vault-add-edit-custom-fields\n          *ngIf=\"!(!cipher.hasFields && !cipher.edit && editMode)\"\n          [cipher]=\"cipher\"\n          [thisCipherType]=\"cipher.type\"\n          [viewOnly]=\"viewOnly\"\n          [copy]=\"copy.bind(this)\"\n          [editMode]=\"editMode\"\n        ></app-vault-add-edit-custom-fields>\n        <ng-container *ngIf=\"allowOwnershipAssignment()\">\n          <h3 class=\"mt-4\">{{ \"ownership\" | i18n }}</h3>\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n              <select\n                id=\"organizationId\"\n                class=\"form-control\"\n                name=\"OrganizationId\"\n                [(ngModel)]=\"cipher.organizationId\"\n                (change)=\"organizationChanged()\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n          <h3 class=\"mt-4\">{{ \"collections\" | i18n }}</h3>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <ng-container *ngIf=\"collections && collections.length\">\n            <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"$any(c).checked\"\n                id=\"collection-{{ i }}\"\n                name=\"Collection[{{ i }}].Checked\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n              <label class=\"form-check-label\" for=\"collection-{{ i }}\">{{ c.name }}</label>\n            </div>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"editMode\">\n          <div class=\"small text-muted mt-4\">\n            <div>\n              <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n              {{ cipher.revisionDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"cipher.creationDate\">\n              <b class=\"font-weight-semibold\">{{ \"dateCreated\" | i18n }}:</b>\n              {{ cipher.creationDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"showRevisionDate\">\n              <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n              {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"hasPasswordHistory\">\n              <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n              <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{ 'view' | i18n }}\">\n                {{ cipher.passwordHistory.length }}\n              </a>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n              <div *ngFor=\"let ph of cipher.passwordHistory\">\n                {{ ph.lastUsedDate | date: \"short\" }} -\n                <bit-color-password [password]=\"ph.password\"></bit-color-password>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"canUseReprompt\">\n          <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [ngModel]=\"reprompt\"\n              (change)=\"repromptChanged()\"\n              id=\"passwordPrompt\"\n              name=\"passwordPrompt\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.edit && editMode)\"\n            />\n            <label class=\"form-check-label\" for=\"passwordPrompt\">{{\n              \"passwordPrompt\" | i18n\n            }}</label>\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (cipher?.isDeleted ? \"restore\" : \"save\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ (viewOnly ? \"close\" : \"cancel\") | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\">\n          <button\n            *ngIf=\"!organization && !cipher.isDeleted\"\n            type=\"button\"\n            (click)=\"toggleFavorite()\"\n            class=\"btn btn-link\"\n            appA11yTitle=\"{{ (cipher.favorite ? 'unfavorite' : 'favorite') | i18n }}\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              [ngClass]=\"{ 'bwi-star-f': cipher.favorite, 'bwi-star': !cipher.favorite }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ (cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n }}\"\n            *ngIf=\"editMode && !cloneMode && !(!cipher.edit && editMode)\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherCreateRequest } from \"@bitwarden/common/models/request/cipher-create.request\";\nimport { CipherRequest } from \"@bitwarden/common/models/request/cipher.request\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../../vault/add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  protected override componentName = \"app-org-vault-add-edit\";\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    messagingService: MessagingService,\n    eventCollectionService: EventCollectionService,\n    policyService: PolicyService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  protected allowOwnershipAssignment() {\n    if (\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    ) {\n      if (this.organization != null) {\n        return this.cloneMode && this.organization.canEditAnyCollection;\n      } else {\n        return !this.editMode || this.cloneMode;\n      }\n    }\n    return false;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    const data = new CipherData(response);\n\n    data.edit = true;\n    const cipher = new Cipher(data);\n    this.originalCipher = cipher;\n    return cipher;\n  }\n\n  protected encryptCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.encryptCipher();\n    }\n    return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n  }\n\n  protected async saveCipher(cipher: Cipher) {\n    if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n      return super.saveCipher(cipher);\n    }\n    if (this.editMode && !this.cloneMode) {\n      const request = new CipherRequest(cipher);\n      return this.apiService.putCipherAdmin(this.cipherId, request);\n    } else {\n      const request = new CipherCreateRequest(cipher);\n      return this.apiService.postCipherAdmin(request);\n    }\n  }\n\n  protected async deleteCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher();\n    }\n    return this.cipher.isDeleted\n      ? this.apiService.deleteCipherAdmin(this.cipherId)\n      : this.apiService.putDeleteCipherAdmin(this.cipherId);\n  }\n}\n","export class EmergencyAccessAcceptRequest {\n  token: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"emergencyAccess\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ name }}\n          </p>\n          <p>{{ \"acceptEmergencyAccess\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessAcceptRequest } from \"@bitwarden/common/models/request/emergency-access-accept.request\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-emergency\",\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const request = new EmergencyAccessAcceptRequest();\n    request.token = qParams.token;\n    this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n  }\n}\n","export class OrganizationUserAcceptRequest {\n  token: string;\n  // Used to auto-enroll in master password reset\n  resetPasswordKey: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img src=\"../../images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinOrganization\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ orgName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinOrganizationDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserAcceptRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-organization\",\n  templateUrl: \"accept-organization.component.html\",\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n  orgName: string;\n\n  protected requiredParameters: string[] = [\"organizationId\", \"organizationUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private cryptoService: CryptoService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService,\n    private messagingService: MessagingService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const needsReAuth = (await this.stateService.getOrganizationInvitation()) != null;\n    if (!needsReAuth) {\n      // Accepting an org invite requires authentication from a logged out state\n      this.messagingService.send(\"logout\", { redirect: false });\n      await this.prepareOrganizationInvitation(qParams);\n      return;\n    }\n\n    // User has already logged in and passed the Master Password policy check\n    this.actionPromise = this.prepareAcceptRequest(qParams).then(async (request) => {\n      await this.organizationUserService.postOrganizationUserAccept(\n        qParams.organizationId,\n        qParams.organizationUserId,\n        request\n      );\n    });\n\n    await this.stateService.setOrganizationInvitation(null);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"inviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    await this.prepareOrganizationInvitation(qParams);\n  }\n\n  private async prepareAcceptRequest(qParams: Params): Promise<OrganizationUserAcceptRequest> {\n    const request = new OrganizationUserAcceptRequest();\n    request.token = qParams.token;\n\n    if (await this.performResetPasswordAutoEnroll(qParams)) {\n      const response = await this.organizationApiService.getKeys(qParams.organizationId);\n\n      if (response == null) {\n        throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n      }\n\n      const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n      // RSA Encrypt user's encKey.key with organization public key\n      const encKey = await this.cryptoService.getEncKey();\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Add reset password key to accept request\n      request.resetPasswordKey = encryptedKey.encryptedString;\n    }\n    return request;\n  }\n\n  private async performResetPasswordAutoEnroll(qParams: Params): Promise<boolean> {\n    let policyList: Policy[] = null;\n    try {\n      const policies = await this.policyApiService.getPoliciesByToken(\n        qParams.organizationId,\n        qParams.token,\n        qParams.email,\n        qParams.organizationUserId\n      );\n      policyList = this.policyService.mapPoliciesFromToken(policies);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (policyList != null) {\n      const result = this.policyService.getResetPasswordPolicyOptions(\n        policyList,\n        qParams.organizationId\n      );\n      // Return true if policy enabled and auto-enroll enabled\n      return result[1] && result[0].autoEnrollEnabled;\n    }\n\n    return false;\n  }\n\n  private async prepareOrganizationInvitation(qParams: Params): Promise<void> {\n    this.orgName = qParams.organizationName;\n    if (this.orgName != null) {\n      // Fix URL encoding of space issue with Angular\n      this.orgName = this.orgName.replace(/\\+/g, \" \");\n    }\n    await this.stateService.setOrganizationInvitation(qParams);\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/password-hint.request\";\n\n@Directive()\nexport class HintComponent implements OnInit {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private loginService: LoginService\n  ) {}\n\n  ngOnInit(): void {\n    this.email = this.loginService.getEmail() ?? \"\";\n  }\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    loginService: LoginService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService, loginService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"passwordHint\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n            <small class=\"form-text text-muted\">{{ \"enterEmailToGetHint\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\nimport { concatMap, take, takeUntil } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\n\n@Directive()\nexport class LockComponent implements OnInit, OnDestroy {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.load();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (this.pinLock) {\n      return await this.handlePinRequiredUnlock();\n    }\n\n    await this.handleMasterPasswordRequiredUnlock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async handlePinRequiredUnlock() {\n    if (this.pin == null || this.pin === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n\n    return await this.doUnlockWithPin();\n  }\n\n  private async doUnlockWithPin() {\n    let failed = true;\n    try {\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      if (this.pinSet[0]) {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations,\n          await this.stateService.getDecryptedPinProtected()\n        );\n        const encKey = await this.cryptoService.getEncKey(key);\n        const protectedPin = await this.stateService.getProtectedPin();\n        const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n        failed = decPin !== this.pin;\n        if (!failed) {\n          await this.setKeyAndContinue(key);\n        }\n      } else {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations\n        );\n        failed = false;\n        await this.setKeyAndContinue(key);\n      }\n    } catch {\n      failed = true;\n    }\n\n    if (failed) {\n      this.invalidPinAttempts++;\n      if (this.invalidPinAttempts >= 5) {\n        this.messagingService.send(\"logout\");\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidPin\")\n      );\n    }\n  }\n\n  private async handleMasterPasswordRequiredUnlock() {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n    await this.doUnlockWithMasterPassword();\n  }\n\n  private async doUnlockWithMasterPassword() {\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const storedKeyHash = await this.cryptoService.getKeyHash();\n\n    let passwordValid = false;\n\n    if (storedKeyHash != null) {\n      passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n    } else {\n      const request = new SecretVerificationRequest();\n      const serverKeyHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      request.masterPasswordHash = serverKeyHash;\n      try {\n        this.formPromise = this.apiService.postAccountVerifyPassword(request);\n        await this.formPromise;\n        passwordValid = true;\n        const localKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.LocalAuthorization\n        );\n        await this.cryptoService.setKeyHash(localKeyHash);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (!passwordValid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    if (this.pinSet[0]) {\n      const protectedPin = await this.stateService.getProtectedPin();\n      const encKey = await this.cryptoService.getEncKey(key);\n      const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n      const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n      await this.stateService.setDecryptedPinProtected(\n        await this.cryptoService.encrypt(key.key, pinKey)\n      );\n    }\n    await this.setKeyAndContinue(key);\n  }\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutSettingsService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    environmentService: EnvironmentService,\n    private routerService: RouterService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      vaultTimeoutSettingsService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.onSuccessfulSubmit = async () => {\n      const previousUrl = this.routerService.getPreviousUrl();\n      if (previousUrl && previousUrl !== \"/\" && previousUrl.indexOf(\"lock\") === -1) {\n        this.successRoute = previousUrl;\n      }\n      this.router.navigateByUrl(this.successRoute);\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"text-center mb-4\">\n        <i class=\"bwi bwi-lock bwi-4x text-muted\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"yourVaultIsLocked\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appAutofocus\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"text-muted form-text\">\n              {{ \"loggedInAsEmailOn\" | i18n: email:webVaultHostname }}\n            </small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-unlock\" aria-hidden=\"true\"></i> {{ \"unlock\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","export enum AuthRequestType {\n  AuthenticateAndUnlock = 0,\n  Unlock = 1,\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenTwoFactorRequest } from \"../request/identity-token/token-two-factor.request\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class UserApiLogInCredentials {\n  readonly type = AuthenticationType.UserApi;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n\nexport class PasswordlessLogInCredentials {\n  readonly type = AuthenticationType.Passwordless;\n\n  constructor(\n    public email: string,\n    public accessCode: string,\n    public authRequestId: string,\n    public decKey: SymmetricCryptoKey,\n    public localPasswordHash: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n","import { AuthRequestType } from \"../../enums/authRequestType\";\n\nexport class PasswordlessCreateAuthRequest {\n  constructor(\n    readonly email: string,\n    readonly deviceIdentifier: string,\n    readonly publicKey: string,\n    readonly type: AuthRequestType,\n    readonly accessCode: string,\n    readonly fingerprintPhrase: string\n  ) {}\n}\n","<div\n  class=\"tw-mx-auto tw-mt-5 tw-flex tw-max-w-lg tw-flex-col tw-items-center tw-justify-center tw-p-8\"\n>\n  <div>\n    <img class=\"logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"tw-mx-4 tw-mt-3 tw-mb-4 tw-text-center tw-text-xl\">\n      {{ \"loginOrCreateNewAccount\" | i18n }}\n    </p>\n\n    <div\n      class=\"tw-mt-3 tw-rounded-md tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-6\"\n    >\n      <h2 class=\"tw-mb-6 tw-text-xl tw-font-semibold\">{{ \"logInInitiated\" | i18n }}</h2>\n\n      <div class=\"tw-text-light\">\n        <p class=\"tw-mb-6\">{{ \"notificationSentDevice\" | i18n }}</p>\n\n        <p class=\"tw-mb-6\">\n          {{ \"fingerprintMatchInfo\" | i18n }}\n        </p>\n      </div>\n\n      <div class=\"tw-mb-6\">\n        <h4 class=\"tw-font-semibold\">{{ \"fingerprintPhraseHeader\" | i18n }}</h4>\n        <p>\n          <code>{{ passwordlessRequest?.fingerprintPhrase }}</code>\n        </p>\n      </div>\n\n      <div class=\"tw-my-10\" *ngIf=\"showResendNotification\">\n        <a [routerLink]=\"[]\" disabled=\"true\" (click)=\"startPasswordlessLogin()\">{{\n          \"resendNotification\" | i18n\n        }}</a>\n      </div>\n\n      <hr />\n\n      <div class=\"tw-text-light tw-mt-3\">\n        {{ \"loginWithDeviceEnabledInfo\" | i18n }}\n        <a routerLink=\"/login\">{{ \"viewAllLoginOptions\" | i18n }}</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { CaptchaProtectedComponent } from \"@bitwarden/angular/components/captchaProtected.component\";\nimport { AnonymousHubService } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { AuthRequestType } from \"@bitwarden/common/enums/authRequestType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { PasswordlessLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { PasswordlessCreateAuthRequest } from \"@bitwarden/common/models/request/passwordless-create-auth.request\";\nimport { AuthRequestResponse } from \"@bitwarden/common/models/response/auth-request.response\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\n\nimport { StateService } from \"../../core/state/state.service\";\n\n@Component({\n  selector: \"app-login-with-device\",\n  templateUrl: \"login-with-device.component.html\",\n})\nexport class LoginWithDeviceComponent\n  extends CaptchaProtectedComponent\n  implements OnInit, OnDestroy\n{\n  private destroy$ = new Subject<void>();\n  email: string;\n  showResendNotification = false;\n  passwordlessRequest: PasswordlessCreateAuthRequest;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  private authRequestKeyPair: [publicKey: ArrayBuffer, privateKey: ArrayBuffer];\n\n  constructor(\n    private router: Router,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private appIdService: AppIdService,\n    private passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    private authService: AuthService,\n    private logService: LogService,\n    environmentService: EnvironmentService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private anonymousHubService: AnonymousHubService,\n    private validationService: ValidationService,\n    private stateService: StateService,\n    private loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n\n    const navigation = this.router.getCurrentNavigation();\n    if (navigation) {\n      this.email = this.loginService.getEmail();\n    }\n\n    //gets signalR push notification\n    this.authService\n      .getPushNotifcationObs$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((id) => {\n        this.confirmResponse(id);\n      });\n  }\n\n  async ngOnInit() {\n    if (!this.email) {\n      this.router.navigate([\"/login\"]);\n      return;\n    }\n\n    this.startPasswordlessLogin();\n  }\n\n  async startPasswordlessLogin() {\n    this.showResendNotification = false;\n\n    try {\n      await this.buildAuthRequest();\n      const reqResponse = await this.apiService.postAuthRequest(this.passwordlessRequest);\n\n      if (reqResponse.id) {\n        this.anonymousHubService.createHubConnection(reqResponse.id);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    setTimeout(() => {\n      this.showResendNotification = true;\n    }, 12000);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.anonymousHubService.stopHubConnection();\n  }\n\n  private async confirmResponse(requestId: string) {\n    try {\n      const response = await this.apiService.getAuthResponse(\n        requestId,\n        this.passwordlessRequest.accessCode\n      );\n\n      if (!response.requestApproved) {\n        return;\n      }\n\n      const credentials = await this.buildLoginCredntials(requestId, response);\n      const loginResponse = await this.authService.logIn(credentials);\n\n      if (loginResponse.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (loginResponse.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        await this.loginService.saveEmailSettings();\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (error) {\n      if (error instanceof ErrorResponse) {\n        this.router.navigate([\"/login\"]);\n        this.validationService.showError(error);\n        return;\n      }\n\n      this.logService.error(error);\n    }\n  }\n\n  private async buildAuthRequest() {\n    this.authRequestKeyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const fingerprint = await (\n      await this.cryptoService.getFingerprint(this.email, this.authRequestKeyPair[0])\n    ).join(\"-\");\n    const deviceIdentifier = await this.appIdService.getAppId();\n    const publicKey = Utils.fromBufferToB64(this.authRequestKeyPair[0]);\n    const accessCode = await this.passwordGenerationService.generatePassword({ length: 25 });\n\n    this.passwordlessRequest = new PasswordlessCreateAuthRequest(\n      this.email,\n      deviceIdentifier,\n      publicKey,\n      AuthRequestType.AuthenticateAndUnlock,\n      accessCode,\n      fingerprint\n    );\n  }\n\n  private async buildLoginCredntials(\n    requestId: string,\n    response: AuthRequestResponse\n  ): Promise<PasswordlessLogInCredentials> {\n    const decKey = await this.cryptoService.rsaDecrypt(response.key, this.authRequestKeyPair[1]);\n    const decMasterPasswordHash = await this.cryptoService.rsaDecrypt(\n      response.masterPasswordHash,\n      this.authRequestKeyPair[1]\n    );\n    const key = new SymmetricCryptoKey(decKey);\n    const localHashedPassword = Utils.fromBufferToUtf8(decMasterPasswordHash);\n\n    return new PasswordlessLogInCredentials(\n      this.email,\n      this.passwordlessRequest.accessCode,\n      requestId,\n      key,\n      localHashedPassword\n    );\n  }\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n  private selfHosted = false;\n  showLoginWithDevice: boolean;\n  validatedEmail = false;\n  paramEmailSet = false;\n\n  formGroup = this.formBuilder.group({\n    email: [\"\", [Validators.required, Validators.email]],\n    masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n    rememberEmail: [false],\n  });\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n\n  get loggedEmail() {\n    return this.formGroup.value.email;\n  }\n\n  constructor(\n    protected apiService: ApiService,\n    protected appIdService: AppIdService,\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone,\n    protected formBuilder: FormBuilder,\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected route: ActivatedRoute,\n    protected loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  async ngOnInit() {\n    this.route?.queryParams.subscribe((params) => {\n      if (params != null) {\n        const queryParamsEmail = params[\"email\"];\n        if (queryParamsEmail != null && queryParamsEmail.indexOf(\"@\") > -1) {\n          this.formGroup.get(\"email\").setValue(queryParamsEmail);\n          this.loginService.setEmail(queryParamsEmail);\n          this.paramEmailSet = true;\n        }\n      }\n    });\n    let email = this.loginService.getEmail();\n\n    if (email == null || email === \"\") {\n      email = await this.stateService.getRememberedEmail();\n    }\n\n    if (!this.paramEmailSet) {\n      this.formGroup.get(\"email\")?.setValue(email ?? \"\");\n    }\n    let rememberEmail = this.loginService.getRememberEmail();\n    if (rememberEmail == null) {\n      rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    this.formGroup.get(\"rememberEmail\")?.setValue(rememberEmail);\n  }\n\n  async submit(showToast = true) {\n    const data = this.formGroup.value;\n\n    await this.setupCaptcha();\n\n    this.formGroup.markAllAsTouched();\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return;\n    }\n\n    //desktop, browser; This should be removed once all clients use reactive forms\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        data.email,\n        data.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      this.setFormValues();\n      await this.loginService.saveEmailSettings();\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    await this.saveEmailSettings();\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  async validateEmail() {\n    this.formGroup.controls.email.markAsTouched();\n    const emailInvalid = this.formGroup.get(\"email\").invalid;\n    if (!emailInvalid) {\n      this.toggleValidateEmail(true);\n      await this.getLoginWithDevice(this.loggedEmail);\n    }\n  }\n\n  toggleValidateEmail(value: boolean) {\n    this.validatedEmail = value;\n    this.formGroup.controls.masterPassword.reset();\n  }\n\n  setFormValues() {\n    this.loginService.setEmail(this.formGroup.value.email);\n    this.loginService.setRememberEmail(this.formGroup.value.rememberEmail);\n  }\n\n  async saveEmailSettings() {\n    this.setFormValues();\n    await this.loginService.saveEmailSettings();\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  private async getLoginWithDevice(email: string) {\n    try {\n      const deviceIdentifier = await this.appIdService.getAppId();\n      const res = await this.apiService.getKnownDevice(email, deviceIdentifier);\n      //ensure the application is not self-hosted\n      this.showLoginWithDevice = res && !this.selfHosted;\n    } catch (e) {\n      this.showLoginWithDevice = false;\n    }\n  }\n}\n","export abstract class BitFormControlAbstraction {\n  disabled: boolean;\n  required: boolean;\n  hasError: boolean;\n  error: [string, any];\n}\n","<label [class]=\"labelClasses\">\n  <ng-content></ng-content>\n  <span [class]=\"labelContentClasses\">\n    <ng-content select=\"bit-label\"></ng-content>\n    <span *ngIf=\"required\" class=\"tw-text-xs tw-font-normal\"> ({{ \"required\" | i18n }})</span>\n  </span>\n</label>\n<div>\n  <ng-content select=\"bit-hint\" *ngIf=\"!hasError\"></ng-content>\n</div>\n<div *ngIf=\"hasError\" class=\"tw-mt-1 tw-text-danger\">\n  <i class=\"bwi bwi-error\"></i> {{ displayError }}\n</div>\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { Component, ContentChild, HostBinding, Input } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitFormControlAbstraction } from \"./form-control.abstraction\";\n\n@Component({\n  selector: \"bit-form-control\",\n  templateUrl: \"form-control.component.html\",\n})\nexport class FormControlComponent {\n  @Input() label: string;\n\n  private _inline = false;\n  @Input() get inline() {\n    return this._inline;\n  }\n  set inline(value: boolean | \"\") {\n    this._inline = coerceBooleanProperty(value);\n  }\n\n  @ContentChild(BitFormControlAbstraction) protected formControl: BitFormControlAbstraction;\n\n  @HostBinding(\"class\") get classes() {\n    return [\"tw-mb-6\"].concat(this.inline ? [\"tw-inline-block\", \"tw-mr-4\"] : [\"tw-block\"]);\n  }\n\n  constructor(private i18nService: I18nService) {}\n\n  protected get labelClasses() {\n    return [\"tw-transition\", \"tw-select-none\", \"tw-mb-0\"].concat(\n      this.formControl.disabled ? \"tw-cursor-auto\" : \"tw-cursor-pointer\"\n    );\n  }\n\n  protected get labelContentClasses() {\n    return [\"tw-font-semibold\"].concat(\n      this.formControl.disabled ? \"tw-text-muted\" : \"tw-text-main\"\n    );\n  }\n\n  get required() {\n    return this.formControl.required;\n  }\n\n  get hasError() {\n    return this.formControl.hasError;\n  }\n\n  get error() {\n    return this.formControl.error;\n  }\n\n  get displayError() {\n    switch (this.error[0]) {\n      case \"required\":\n        return this.i18nService.t(\"inputRequired\");\n      default:\n        // Attempt to show a custom error message.\n        if (this.error[1]?.message) {\n          return this.error[1]?.message;\n        }\n\n        return this.error;\n    }\n  }\n}\n","import { Component, HostBinding, Input, Optional, Self } from \"@angular/core\";\nimport { NgControl, Validators } from \"@angular/forms\";\n\nimport { BitFormControlAbstraction } from \"../form-control\";\n\n@Component({\n  selector: \"input[type=checkbox][bitCheckbox]\",\n  template: \"\",\n  providers: [{ provide: BitFormControlAbstraction, useExisting: CheckboxComponent }],\n})\nexport class CheckboxComponent implements BitFormControlAbstraction {\n  @HostBinding(\"class\")\n  protected inputClasses = [\n    \"tw-appearance-none\",\n    \"tw-outline-none\",\n    \"tw-relative\",\n    \"tw-transition\",\n    \"tw-cursor-pointer\",\n    \"tw-inline-block\",\n    \"tw-rounded\",\n    \"tw-border\",\n    \"tw-border-solid\",\n    \"tw-border-secondary-500\",\n    \"tw-h-3.5\",\n    \"tw-w-3.5\",\n    \"tw-mr-1.5\",\n    \"tw-bottom-[-1px]\", // Fix checkbox looking off-center\n\n    \"before:tw-content-['']\",\n    \"before:tw-block\",\n    \"before:tw-absolute\",\n    \"before:tw-inset-0\",\n\n    \"hover:tw-border-2\",\n    \"[&>label]:tw-border-2\",\n\n    \"focus-visible:tw-ring-2\",\n    \"focus-visible:tw-ring-offset-2\",\n    \"focus-visible:tw-ring-primary-700\",\n\n    \"disabled:tw-cursor-auto\",\n    \"disabled:tw-border\",\n    \"disabled:tw-bg-secondary-100\",\n\n    \"checked:tw-bg-primary-500\",\n    \"checked:tw-border-primary-500\",\n\n    \"checked:hover:tw-bg-primary-700\",\n    \"checked:hover:tw-border-primary-700\",\n    \"[&>label:hover]:checked:tw-bg-primary-700\",\n    \"[&>label:hover]:checked:tw-border-primary-700\",\n\n    \"checked:before:tw-bg-text-contrast\",\n    \"checked:before:tw-mask-image-[var(--mask-image)]\",\n    \"checked:before:tw-mask-position-[center]\",\n    \"checked:before:tw-mask-repeat-[no-repeat]\",\n\n    \"checked:disabled:tw-border-secondary-100\",\n    \"checked:disabled:tw-bg-secondary-100\",\n\n    \"checked:disabled:before:tw-bg-text-muted\",\n  ];\n\n  constructor(@Optional() @Self() private ngControl?: NgControl) {}\n\n  @HostBinding(\"style.--mask-image\")\n  protected maskImage = `url('data:image/svg+xml,%3Csvg class=\"svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"8\" height=\"8\" viewBox=\"0 0 10 10\"%3E%3Cpath d=\"M0.5 6.2L2.9 8.6L9.5 1.4\" fill=\"none\" stroke=\"white\" stroke-width=\"2\"%3E%3C/path%3E%3C/svg%3E')`;\n\n  @HostBinding()\n  @Input()\n  get disabled() {\n    return this._disabled ?? this.ngControl?.disabled ?? false;\n  }\n  set disabled(value: any) {\n    this._disabled = value != null && value !== false;\n  }\n  private _disabled: boolean;\n\n  @Input()\n  get required() {\n    return (\n      this._required ?? this.ngControl?.control?.hasValidator(Validators.requiredTrue) ?? false\n    );\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl.errors)[0];\n    return [key, this.ngControl.errors[key]];\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div\n    class=\"tw-mx-auto tw-mt-5 tw-flex tw-max-w-lg tw-flex-col tw-items-center tw-justify-center tw-p-8\"\n  >\n    <div>\n      <img class=\"logo logo-themed\" alt=\"Bitwarden\" />\n      <p class=\"tw-mx-4 tw-mt-3 tw-mb-4 tw-text-center tw-text-xl\">\n        {{ \"loginOrCreateNewAccount\" | i18n }}\n      </p>\n      <div\n        class=\"tw-mt-3 tw-rounded-md tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-6\"\n      >\n        <ng-container *ngIf=\"!validatedEmail; else loginPage\">\n          <div class=\"tw-mb-3\">\n            <bit-form-field>\n              <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n              <input\n                id=\"login_input_email\"\n                bitInput\n                type=\"email\"\n                formControlName=\"email\"\n                appAutofocus\n                (keyup.enter)=\"validateEmail()\"\n              />\n            </bit-form-field>\n          </div>\n\n          <div class=\"tw-mb-3 tw-flex tw-items-start\">\n            <bit-form-control class=\"tw-mb-0\">\n              <input type=\"checkbox\" bitCheckbox formControlName=\"rememberEmail\" />\n              <bit-label>{{ \"rememberEmail\" | i18n }}</bit-label>\n            </bit-form-control>\n          </div>\n\n          <div class=\"tw-mb-3\">\n            <button\n              bitButton\n              type=\"button\"\n              buttonType=\"primary\"\n              class=\"tw-w-full\"\n              [disabled]=\"form.loading\"\n              (click)=\"validateEmail()\"\n            >\n              <span> {{ \"continue\" | i18n }} </span>\n            </button>\n          </div>\n\n          <hr />\n\n          <p class=\"tw-m-0 tw-text-sm\">\n            {{ \"newAroundHere\" | i18n }}\n            <a routerLink=\"/register\">{{ \"createAccount\" | i18n }}</a>\n          </p>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</form>\n\n<ng-template [formGroup]=\"formGroup\" #loginPage>\n  <div class=\"tw-mb-6 tw-h-28\">\n    <bit-form-field class=\"!tw-mb-1\">\n      <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n      <input\n        id=\"login_input_master-password\"\n        type=\"password\"\n        bitInput\n        formControlName=\"masterPassword\"\n        appAutofocus\n      />\n      <button type=\"button\" bitSuffix bitIconButton bitPasswordInputToggle></button>\n    </bit-form-field>\n    <a class=\"-tw-mt-2\" routerLink=\"/hint\" (mousedown)=\"goToHint()\" (click)=\"setFormValues()\">{{\n      \"getMasterPasswordHint\" | i18n\n    }}</a>\n  </div>\n\n  <div [hidden]=\"!showCaptcha()\">\n    <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n  </div>\n\n  <div class=\"tw-mb-3 tw-flex tw-space-x-4\">\n    <button bitButton buttonType=\"primary\" type=\"submit\" [block]=\"true\" [loading]=\"form.loading\">\n      <span> {{ \"loginWithMasterPassword\" | i18n }} </span>\n    </button>\n  </div>\n\n  <div class=\"tw-mb-3\" *ngIf=\"showLoginWithDevice && showPasswordless\">\n    <button\n      bitButton\n      type=\"button\"\n      [block]=\"true\"\n      buttonType=\"secondary\"\n      (click)=\"startPasswordlessLogin()\"\n    >\n      <span> <i class=\"bwi bwi-mobile\"></i> {{ \"loginWithDevice\" | i18n }} </span>\n    </button>\n  </div>\n\n  <div class=\"tw-mb-3\">\n    <a\n      routerLink=\"/sso\"\n      (click)=\"saveEmailSettings()\"\n      bitButton\n      buttonType=\"secondary\"\n      class=\"tw-w-full\"\n    >\n      <i class=\"bwi bwi-provider tw-mr-2\"></i>\n      {{ \"enterpriseSingleSignOn\" | i18n }}\n    </a>\n  </div>\n\n  <hr />\n\n  <div class=\"tw-m-0 tw-text-sm\">\n    <p class=\"tw-mb-1\">{{ \"loggingInAs\" | i18n }} {{ loggedEmail }}</p>\n    <a [routerLink]=\"[]\" (click)=\"toggleValidateEmail(false)\">{{ \"notYou\" | i18n }}</a>\n  </div>\n</ng-template>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { flagEnabled } from \"../../../utils/flags\";\nimport { RouterService, StateService } from \"../../core\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent implements OnInit, OnDestroy {\n  showResetPasswordAutoEnrollWarning = false;\n  enforcedPasswordPolicyOptions: MasterPasswordPolicyOptions;\n  policies: ListResponse<PolicyResponse>;\n  showPasswordless = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    apiService: ApiService,\n    appIdService: AppIdService,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    cryptoFunctionService: CryptoFunctionService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: InternalPolicyService,\n    logService: LogService,\n    ngZone: NgZone,\n    protected stateService: StateService,\n    private messagingService: MessagingService,\n    private routerService: RouterService,\n    formBuilder: FormBuilder,\n    formValidationErrorService: FormValidationErrorsService,\n    loginService: LoginService\n  ) {\n    super(\n      apiService,\n      appIdService,\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone,\n      formBuilder,\n      formValidationErrorService,\n      route,\n      loginService\n    );\n    this.onSuccessfulLogin = async () => {\n      this.messagingService.send(\"setFullWidth\");\n    };\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    this.showPasswordless = flagEnabled(\"showPasswordless\");\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { token: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      await super.ngOnInit();\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      let policyList: Policy[] = null;\n      try {\n        this.policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        policyList = this.policyService.mapPoliciesFromToken(this.policies);\n      } catch (e) {\n        this.logService.error(e);\n      }\n\n      if (policyList != null) {\n        const resetPasswordPolicy = this.policyService.getResetPasswordPolicyOptions(\n          policyList,\n          invite.organizationId\n        );\n        // Set to true if policy enabled and auto-enroll enabled\n        this.showResetPasswordAutoEnrollWarning =\n          resetPasswordPolicy[1] && resetPasswordPolicy[0].autoEnrollEnabled;\n\n        this.policyService\n          .masterPasswordPolicyOptions$(policyList)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((enforcedPasswordPolicyOptions) => {\n            this.enforcedPasswordPolicyOptions = enforcedPasswordPolicyOptions;\n          });\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async goAfterLogIn() {\n    const masterPassword = this.formGroup.value.masterPassword;\n\n    // Check master password against policy\n    if (this.enforcedPasswordPolicyOptions != null) {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      const masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n\n      // If invalid, save policies and require update\n      if (\n        !this.policyService.evaluateMasterPassword(\n          masterPasswordScore,\n          masterPassword,\n          this.enforcedPasswordPolicyOptions\n        )\n      ) {\n        const policiesData: { [id: string]: PolicyData } = {};\n        this.policies.data.map((p) => (policiesData[p.id] = new PolicyData(p)));\n        await this.policyService.replace(policiesData);\n        this.router.navigate([\"update-password\"]);\n        return;\n      }\n    }\n\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.loginService.clearValues();\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  goToHint() {\n    this.setFormValues();\n    this.router.navigateByUrl(\"/hint\");\n  }\n\n  async submit() {\n    const rememberEmail = this.formGroup.value.rememberEmail;\n\n    if (!rememberEmail) {\n      await this.stateService.setRememberedEmail(null);\n    }\n    await super.submit(false);\n  }\n\n  async startPasswordlessLogin() {\n    this.formGroup.get(\"masterPassword\")?.clearValidators();\n    this.formGroup.get(\"masterPassword\")?.updateValueAndValidity();\n\n    if (!this.formGroup.valid) {\n      return;\n    }\n\n    this.setFormValues();\n    this.router.navigate([\"/login-with-device\"]);\n  }\n\n  private getPasswordStrengthUserInput() {\n    const email = this.formGroup.value.email;\n    let userInput: string[] = [];\n    const atPosition = email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","export class DeleteRecoverRequest {\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { DeleteRecoverRequest } from \"@bitwarden/common/models/request/delete-recover.request\";\n\n@Component({\n  selector: \"app-recover-delete\",\n  templateUrl: \"recover-delete.component.html\",\n})\nexport class RecoverDeleteComponent {\n  email: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new DeleteRecoverRequest();\n      request.email = this.email.trim().toLowerCase();\n      this.formPromise = this.apiService.postAccountRecoverDelete(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deleteRecoverEmailSent\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>{{ \"deleteRecoverDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n  recoveryCode: string;\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorRecoveryRequest } from \"@bitwarden/common/models/request/two-factor-recovery.request\";\n\n@Component({\n  selector: \"app-recover-two-factor\",\n  templateUrl: \"recover-two-factor.component.html\",\n})\nexport class RecoverTwoFactorComponent {\n  email: string;\n  masterPassword: string;\n  recoveryCode: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new TwoFactorRecoveryRequest();\n      request.recoveryCode = this.recoveryCode.replace(/\\s/g, \"\").toLowerCase();\n      request.email = this.email.trim().toLowerCase();\n      const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n      this.formPromise = this.apiService.postTwoFactorRecover(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"twoStepRecoverDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"recoverAccountTwoStep\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>\n            {{ \"recoverAccountTwoStepDesc\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/lost-two-step-device/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              >{{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"password\"\n              name=\"MasterPassword\"\n              class=\"form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recoveryCode\">{{ \"recoveryCodeTitle\" | i18n }}</label>\n            <input\n              id=\"recoveryCode\"\n              class=\"text-monospace form-control\"\n              type=\"text\"\n              name=\"RecoveryCode\"\n              [(ngModel)]=\"recoveryCode\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<void | boolean>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.organizationApiService.leave(this.organization.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"removeMasterPassword\" | i18n }}</p>\n      <hr />\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-block\"\n            (click)=\"convert()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"continuing\"\n            ></i>\n            {{ \"removeMasterPassword\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-block\"\n            (click)=\"leave()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"leaving\"\n            ></i>\n            {{ \"leaveOrganization\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"../../../models/request/secret-verification.request\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keys.request\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  protected destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.policyService\n      .masterPasswordPolicyOptions$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (enforcedPasswordPolicyOptions) =>\n          (this.enforcedPolicyOptions ??= enforcedPasswordPolicyOptions)\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinlength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordStrengthResult;\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/set-password.request\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.organizationApiService.getAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyApiService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.organizationApiService.getKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\n\nexport interface PasswordColorText {\n  color: string;\n  text: string;\n}\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() showText = false;\n  @Input() email: string;\n  @Input() name: string;\n  @Input() set password(value: string) {\n    this.updatePasswordStrength(value);\n  }\n  @Output() passwordStrengthResult = new EventEmitter<any>();\n  @Output() passwordScoreColor = new EventEmitter<PasswordColorText>();\n\n  masterPasswordScore: number;\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  private masterPasswordStrengthTimeout: any;\n\n  //used by desktop and browser to display strength text color\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  //used by desktop and browser to display strength text\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  constructor(\n    private i18nService: I18nService,\n    private passwordGenerationService: PasswordGenerationService\n  ) {}\n\n  ngOnChanges(): void {\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      this.scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n\n      switch (this.masterPasswordScore) {\n        case 4:\n          this.color = \"bg-success\";\n          this.text = this.i18nService.t(\"strong\");\n          break;\n        case 3:\n          this.color = \"bg-primary\";\n          this.text = this.i18nService.t(\"good\");\n          break;\n        case 2:\n          this.color = \"bg-warning\";\n          this.text = this.i18nService.t(\"weak\");\n          break;\n        default:\n          this.color = \"bg-danger\";\n          this.text = this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n          break;\n      }\n\n      this.setPasswordScoreText(this.color, this.text);\n    }, 300);\n  }\n\n  updatePasswordStrength(password: string) {\n    const masterPassword = password;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    this.passwordStrengthResult.emit(strengthResult);\n    this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n  }\n\n  getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.email;\n    const name = this.name;\n    const atPosition = email?.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  setPasswordScoreText(color: string, text: string) {\n    color = color.slice(3);\n    this.passwordScoreColor.emit({ color: color, text: text });\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!syncLoading\">\n          <app-callout type=\"info\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"resetPasswordAutoEnroll\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n            <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    organizationApiService: OrganizationApiServiceAbstraction,\n    organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyApiService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService,\n      organizationApiService,\n      organizationUserService\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/sso-pre-validate.response\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  class=\"container\"\n  [appApiAction]=\"initiateSsoFormPromise\"\n  ngNativeValidate\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\" />\n      <div class=\"card d-block mt-4\">\n        <div class=\"card-body\" *ngIf=\"loggingIn\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loggingIn\">\n          <p>{{ \"ssoLogInWithOrgIdentifier\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"identifier\">{{ \"ssoIdentifier\" | i18n }}</label>\n            <input\n              id=\"identifier\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Identifier\"\n              [(ngModel)]=\"identifier\"\n              required\n              appAutofocus\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      } else {\n        const storedIdentifier = await this.stateService.getSsoOrgIdentifier();\n        if (storedIdentifier != null) {\n          this.identifier = storedIdentifier;\n        }\n      }\n    });\n  }\n\n  async submit() {\n    await this.stateService.setSsoOrganizationIdentifier(this.identifier);\n    if (this.clientId === \"browser\") {\n      document.cookie = `ssoHandOffMessage=${this.i18nService.t(\"ssoHandOff\")};SameSite=strict`;\n    }\n    super.submit();\n  }\n}\n","export class ReferenceEventRequest {\n  id: string;\n  layout: string;\n  flow: string;\n}\n","<ng-template>\n  <div\n    class=\"tw-inline-block tw-w-11/12 tw-pl-7\"\n    [ngClass]=\"{ 'tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300': applyBorder }\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { CdkStep } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-step\",\n  templateUrl: \"vertical-step.component.html\",\n  providers: [{ provide: CdkStep, useExisting: VerticalStep }],\n})\nexport class VerticalStep extends CdkStep {\n  @Input() subLabel = \"\";\n  @Input() applyBorder = true;\n}\n","<div class=\"tw-m-2.5 tw-h-16 tw-text-center\">\n  <button\n    (click)=\"selectStep()\"\n    [disabled]=\"disabled\"\n    class=\"tw-flex tw-w-full tw-items-center tw-border-none tw-bg-transparent\"\n    [ngClass]=\"{\n      'hover:tw-bg-secondary-100': !disabled && step.editable\n    }\"\n    [attr.aria-expanded]=\"selected\"\n  >\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-font-bold tw-leading-9\"\n      *ngIf=\"!step.completed\"\n      [ngClass]=\"{\n        'tw-bg-primary-500 tw-text-contrast': selected,\n        'tw-bg-secondary-300 tw-text-main': !selected && !disabled && step.editable,\n        'tw-bg-transparent tw-text-muted': disabled\n      }\"\n    >\n      {{ stepNumber }}\n    </span>\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-bg-primary-500 tw-font-bold tw-leading-9 tw-text-contrast\"\n      *ngIf=\"step.completed\"\n    >\n      <i class=\"bwi bwi-fw bwi-check tw-p-1\" aria-hidden=\"true\"></i>\n    </span>\n    <div\n      class=\"tw-txt-main tw-mt-3.5 tw-h-12 tw-text-left tw-leading-snug\"\n      [ngClass]=\"{\n        'tw-font-bold': selected\n      }\"\n    >\n      <p\n        class=\"main-label text tw-mb-1 tw-text-main\"\n        [ngClass]=\"{\n          'tw-mt-1': !step.subLabel\n        }\"\n      >\n        {{ step.label }}\n      </p>\n      <p class=\"sub-label small tw-text-muted\">{{ step.subLabel }}</p>\n    </div>\n  </button>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-step-content\",\n  templateUrl: \"vertical-step-content.component.html\",\n})\nexport class VerticalStepContentComponent {\n  @Output() onSelectStep = new EventEmitter<void>();\n\n  @Input() disabled = false;\n  @Input() selected = false;\n  @Input() step: VerticalStep;\n  @Input() stepNumber: number;\n\n  selectStep() {\n    this.onSelectStep.emit();\n  }\n}\n","<div>\n  <ul class=\"tw-flex tw-list-none tw-flex-col tw-flex-wrap tw-p-5\">\n    <li *ngFor=\"let step of steps; let i = index; let isLast = last\">\n      <app-vertical-step-content\n        [disabled]=\"isStepDisabled(i)\"\n        [selected]=\"selectedIndex === i\"\n        [step]=\"step\"\n        [stepNumber]=\"i + 1\"\n        (onSelectStep)=\"selectStepByIndex(i)\"\n      ></app-vertical-step-content>\n      <div\n        class=\"tw-inline-block tw-pl-7\"\n        *ngIf=\"selectedIndex === i\"\n        [ngTemplateOutlet]=\"selected ? selected.content : null\"\n      ></div>\n      <div\n        class=\"tw-ml-8 tw-h-6 tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300\"\n        *ngIf=\"!isLast && !(selectedIndex === i)\"\n      ></div>\n    </li>\n  </ul>\n</div>\n","import { CdkStepper } from \"@angular/cdk/stepper\";\nimport { Component, Input, QueryList } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-stepper\",\n  templateUrl: \"vertical-stepper.component.html\",\n  providers: [{ provide: CdkStepper, useExisting: VerticalStepperComponent }],\n})\nexport class VerticalStepperComponent extends CdkStepper {\n  readonly steps: QueryList<VerticalStep>;\n\n  @Input()\n  activeClass = \"active\";\n\n  isNextButtonHidden() {\n    return !(this.steps.length === this.selectedIndex + 1);\n  }\n\n  isStepDisabled(index: number) {\n    if (this.selectedIndex !== index) {\n      return this.selectedIndex === index - 1\n        ? !this.steps.find((_, i) => i == index - 1)?.completed\n        : true;\n    }\n    return false;\n  }\n\n  selectStepByIndex(index: number): void {\n    this.selectedIndex = index;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captcha-protected.request\";\nimport { KeysRequest } from \"./keys.request\";\nimport { ReferenceEventRequest } from \"./reference-event.request\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: UntypedFormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/register.request\";\nimport { RegisterResponse } from \"@bitwarden/common/models/response/authentication/register.response\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\nimport { InputsFieldMatch } from \"../validators/inputsFieldMatch.validator\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<RegisterResponse>;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n\n  protected accountCreated = false;\n\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: UntypedFormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.value.email;\n    email = email.trim().toLowerCase();\n    let name = this.formGroup.value.name;\n    name = name === \"\" ? null : name; // Why do we do this?\n    const masterPassword = this.formGroup.value.masterPassword;\n    try {\n      if (!this.accountCreated) {\n        const registerResponse = await this.registerAccount(\n          await this.buildRegisterRequest(email, masterPassword, name),\n          showToast\n        );\n        if (!registerResponse.successful) {\n          return;\n        }\n        this.captchaBypassToken = registerResponse.captchaBypassToken;\n        this.accountCreated = true;\n      }\n      if (this.isInTrialFlow) {\n        if (!this.accountCreated) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"trialAccountCreated\")\n          );\n        }\n        const loginResponse = await this.logIn(email, masterPassword, this.captchaBypassToken);\n        if (loginResponse.captchaRequired) {\n          return;\n        }\n        this.createdAccount.emit(this.formGroup.value.email);\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"newAccountCreated\")\n        );\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n\n  private async validateRegistration(showToast: boolean): Promise<{ isValid: boolean }> {\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return { isValid: false };\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return { isValid: false };\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return { isValid: false };\n    }\n\n    if (this.passwordStrengthResult != null && this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    }\n    return { isValid: true };\n  }\n\n  private async buildRegisterRequest(\n    email: string,\n    masterPassword: string,\n    name: string\n  ): Promise<RegisterRequest> {\n    const hint = this.formGroup.value.hint;\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n    return request;\n  }\n\n  private async registerAccount(\n    request: RegisterRequest,\n    showToast: boolean\n  ): Promise<{ successful: boolean; captchaBypassToken?: string }> {\n    if (!(await this.validateRegistration(showToast)).isValid) {\n      return { successful: false };\n    }\n    this.formPromise = this.apiService.postRegister(request);\n    try {\n      const response = await this.formPromise;\n      return { successful: true, captchaBypassToken: response.captchaBypassToken };\n    } catch (e) {\n      if (this.handleCaptchaRequired(e)) {\n        return { successful: false };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private async logIn(\n    email: string,\n    masterPassword: string,\n    captchaBypassToken: string\n  ): Promise<{ captchaRequired: boolean }> {\n    const credentials = new PasswordLogInCredentials(\n      email,\n      masterPassword,\n      captchaBypassToken,\n      null\n    );\n    const loginResponse = await this.authService.logIn(credentials);\n    if (this.handleCaptchaRequired(loginResponse)) {\n      return { captchaRequired: true };\n    }\n    return { captchaRequired: false };\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div>\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n        <input id=\"register-form_input_email\" bitInput type=\"email\" formControlName=\"email\" />\n        <bit-hint>{{ \"emailAddressDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"name\" | i18n }}</bit-label>\n        <input id=\"register-form_input_name\" bitInput type=\"text\" formControlName=\"name\" />\n        <bit-hint>{{ \"yourNameDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <app-callout\n        type=\"info\"\n        [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n        *ngIf=\"enforcedPolicyOptions\"\n      >\n      </app-callout>\n      <bit-form-field>\n        <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_master-password\"\n          bitInput\n          type=\"password\"\n          formControlName=\"masterPassword\"\n        />\n        <button\n          type=\"button\"\n          bitSuffix\n          bitIconButton\n          bitPasswordInputToggle\n          [(toggled)]=\"showPassword\"\n        ></button>\n        <bit-hint>\n          <span class=\"tw-font-semibold\">Important:</span>\n          {{ \"masterPassImportant\" | i18n }}\n        </bit-hint>\n      </bit-form-field>\n      <app-password-strength\n        [password]=\"formGroup.get('masterPassword')?.value\"\n        [email]=\"formGroup.get('email')?.value\"\n        [name]=\"formGroup.get('name')?.value\"\n        [showText]=\"true\"\n        (passwordStrengthResult)=\"getStrengthResult($event)\"\n      >\n      </app-password-strength>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"reTypeMasterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_confirm-master-password\"\n          bitInput\n          type=\"password\"\n          formControlName=\"confirmMasterPassword\"\n        />\n        <button\n          type=\"button\"\n          bitSuffix\n          bitIconButton\n          bitPasswordInputToggle\n          [(toggled)]=\"showPassword\"\n        ></button>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"masterPassHint\" | i18n }}</bit-label>\n        <input id=\"register-form_input_hint\" bitInput type=\"text\" formControlName=\"hint\" />\n        <bit-hint>{{ \"masterPassHintDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex tw-items-start\" *ngIf=\"showTerms\">\n      <div class=\"tw-flex tw-h-6 tw-items-center\">\n        <input\n          id=\"register-form_input_accept-policies\"\n          class=\"tw-border-gray-300 tw-w-4 tw-rounded tw-border\"\n          bitInput\n          type=\"checkbox\"\n          formControlName=\"acceptPolicies\"\n        />\n      </div>\n      <bit-label class=\"ml-2\">\n        {{ \"acceptPolicies\" | i18n }}<br />\n        <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n          \"termsOfService\" | i18n\n        }}</a\n        >,\n        <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n          \"privacyPolicy\" | i18n\n        }}</a>\n      </bit-label>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex\">\n      <ng-container *ngIf=\"!accountCreated\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"createAccount\" | i18n }}\n        </button>\n        <a\n          bitButton\n          buttonType=\"secondary\"\n          routerLink=\"/login\"\n          class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n        >\n          <i class=\"bwi bwi-sign-in tw-mr-2\"></i>\n          {{ \"logIn\" | i18n }}\n        </a>\n      </ng-container>\n      <ng-container *ngIf=\"accountCreated\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"logIn\" | i18n }}\n        </button>\n      </ng-container>\n    </div>\n    <bit-error-summary *ngIf=\"showErrorSummary\" [formGroup]=\"formGroup\"></bit-error-summary>\n  </div>\n</form>\n","import { Component, Input } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\n\n@Component({\n  selector: \"app-register-form\",\n  templateUrl: \"./register-form.component.html\",\n})\nexport class RegisterFormComponent extends BaseRegisterComponent {\n  @Input() queryParamEmail: string;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() referenceDataValue: ReferenceEventRequest;\n\n  showErrorSummary = false;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.referenceData = this.referenceDataValue;\n\n    if (this.queryParamEmail) {\n      this.formGroup.get(\"email\")?.setValue(this.queryParamEmail);\n    }\n  }\n\n  async submit() {\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.formGroup.value.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    await super.submit(false);\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-forbes\",\n  templateUrl: \"logo-forbes.component.html\",\n})\nexport class LogoForbesComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/forbes-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"Forbes Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    “Bitwarden boasts the backing of some of the world's best security experts and an attractive,\n    easy-to-use interface”\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-us-news\",\n  templateUrl: \"logo-us-news.component.html\",\n})\nexport class LogoUSNewsComponent {}\n","<img\n  src=\"../../images/register-layout/usnews-360-badge.svg\"\n  class=\"tw-mx-auto tw-block tw-w-48\"\n  alt=\"US News 360 Reviews Best Password Manager\"\n/>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise-content\",\n  templateUrl: \"enterprise-content.component.html\",\n})\nexport class EnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams-content\",\n  templateUrl: \"teams-content.component.html\",\n})\nexport class TeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-trial-confirmation-details\",\n  templateUrl: \"confirmation-details.component.html\",\n})\nexport class ConfirmationDetailsComponent {\n  @Input() email: string;\n  @Input() orgLabel: string;\n}\n","<div class=\"tw-pl-6 tw-pb-6\">\n  <p class=\"tw-text-xl\">{{ \"trialThankYou\" | i18n: orgLabel }}</p>\n  <ul class=\"tw-list-disc\">\n    <li>\n      <p>\n        {{ \"trialConfirmationEmail\" | i18n }}\n        <span class=\"tw-font-bold\">{{ email }}</span\n        >.\n      </p>\n    </li>\n    <li>\n      <p>\n        {{ \"trialPaidInfoMessage\" | i18n: orgLabel }}\n      </p>\n    </li>\n  </ul>\n</div>\n","<form #form [formGroup]=\"formGroup\" [appApiAction]=\"formPromise\" (ngSubmit)=\"submit()\">\n  <div class=\"tw-container tw-mb-3\">\n    <div class=\"tw-mb-6\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"billingPlanLabel\" | i18n }}</h2>\n      <div class=\"tw-mb-1 tw-items-center\" *ngFor=\"let selectablePlan of selectablePlans\">\n        <label class=\"tw- tw-block tw-text-main\" for=\"interval{{ selectablePlan.type }}\">\n          <input\n            checked\n            class=\"tw-h-4 tw-w-4 tw-align-middle\"\n            id=\"interval{{ selectablePlan.type }}\"\n            name=\"plan\"\n            type=\"radio\"\n            [value]=\"selectablePlan.type\"\n            formControlName=\"plan\"\n          />\n          <ng-container *ngIf=\"selectablePlan.isAnnual\">\n            {{ \"annual\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"yr\" | i18n }}\n          </ng-container>\n          <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n            {{ \"monthly\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"monthAbbr\" | i18n }}\n          </ng-container>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"tw-mb-4\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"paymentType\" | i18n }}</h2>\n      <app-payment [hideCredit]=\"true\" [trialFlow]=\"true\"></app-payment>\n      <app-tax-info [trialFlow]=\"true\" (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    </div>\n\n    <div class=\"tw-flex tw-space-x-2\">\n      <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n        {{ \"startTrial\" | i18n }}\n      </button>\n\n      <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"stepBack()\">Back</button>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-billing\",\n  templateUrl: \"./billing.component.html\",\n})\nexport class BillingComponent extends OrganizationPlansComponent {\n  @Input() orgInfoForm: FormGroup;\n  @Output() previousStep = new EventEmitter();\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    router: Router,\n    syncService: SyncService,\n    policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    messagingService: MessagingService,\n    formBuilder: UntypedFormBuilder,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      apiService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      router,\n      syncService,\n      policyService,\n      organizationService,\n      logService,\n      messagingService,\n      formBuilder,\n      organizationApiService\n    );\n  }\n\n  async ngOnInit() {\n    const additionalSeats = this.product == ProductType.Families ? 0 : 1;\n    this.formGroup.patchValue({\n      name: this.orgInfoForm.value.name,\n      billingEmail: this.orgInfoForm.value.email,\n      additionalSeats: additionalSeats,\n      plan: this.plan,\n      product: this.product,\n    });\n    this.isInTrialFlow = true;\n    await super.ngOnInit();\n  }\n\n  stepBack() {\n    this.previousStep.emit();\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-default-content\",\n  templateUrl: \"default-content.component.html\",\n})\nexport class DefaultContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise1-content\",\n  templateUrl: \"enterprise1-content.component.html\",\n})\nexport class Enterprise1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise2-content\",\n  templateUrl: \"enterprise2-content.component.html\",\n})\nexport class Enterprise2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams1-content\",\n  templateUrl: \"teams1-content.component.html\",\n})\nexport class Teams1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams2-content\",\n  templateUrl: \"teams2-content.component.html\",\n})\nexport class Teams2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-cnet\",\n  templateUrl: \"logo-cnet.component.html\",\n})\nexport class LogoCnetComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/cnet-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"CNET Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    \"No more excuses; start using Bitwarden today. The identity you save could be your own. The\n    money definitely will be.\"\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-enterprise-content\",\n  templateUrl: \"cnet-enterprise-content.component.html\",\n})\nexport class CnetEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-individual-content\",\n  templateUrl: \"cnet-individual-content.component.html\",\n})\nexport class CnetIndividualContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Premium Account Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Secure your account with advanced two-step login</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-teams-content\",\n  templateUrl: \"cnet-teams-content.component.html\",\n})\nexport class CnetTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-enterprise-content\",\n  templateUrl: \"abm-enterprise-content.component.html\",\n})\nexport class AbmEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-teams-content\",\n  templateUrl: \"abm-teams-content.component.html\",\n})\nexport class AbmTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","<div *ngIf=\"accountCreateOnly\" class=\"\">\n  <h1 class=\"tw-mt-12 tw-text-center tw-text-xl\">{{ \"createAccount\" | i18n }}</h1>\n  <div\n    class=\"tw-min-w-xl tw-m-auto tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n  >\n    <app-register-form\n      [queryParamEmail]=\"email\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      [referenceDataValue]=\"referenceData\"\n    ></app-register-form>\n  </div>\n</div>\n<div *ngIf=\"!accountCreateOnly\">\n  <div class=\"tw-absolute tw--z-10 tw--mt-48 tw-h-[28rem] tw-w-full tw-bg-background-alt2\"></div>\n  <div class=\"tw-min-w-4xl tw-mx-auto tw-flex tw-max-w-screen-xl tw-gap-12 tw-px-4\">\n    <div class=\"tw-w-1/2\">\n      <img\n        alt=\"Bitwarden\"\n        style=\"height: 50px; width: 335px\"\n        class=\"tw-mt-6\"\n        src=\"../../images/register-layout/logo-horizontal-white.svg\"\n      />\n\n      <div class=\"tw-pt-12\">\n        <!-- Layout params are used by marketing to determine left-hand content -->\n        <app-default-content *ngIf=\"layout === layouts.default\"></app-default-content>\n        <app-teams-content *ngIf=\"layout === layouts.teams\"></app-teams-content>\n        <app-teams1-content *ngIf=\"layout === layouts.teams1\"></app-teams1-content>\n        <app-teams2-content *ngIf=\"layout === layouts.teams2\"></app-teams2-content>\n        <app-enterprise-content *ngIf=\"layout === layouts.enterprise\"></app-enterprise-content>\n        <app-enterprise1-content *ngIf=\"layout === layouts.enterprise1\"></app-enterprise1-content>\n        <app-enterprise2-content *ngIf=\"layout === layouts.enterprise2\"></app-enterprise2-content>\n        <app-cnet-enterprise-content\n          *ngIf=\"layout === layouts.cnetcmpgnent\"\n        ></app-cnet-enterprise-content>\n        <app-cnet-individual-content\n          *ngIf=\"layout === layouts.cnetcmpgnind\"\n        ></app-cnet-individual-content>\n        <app-cnet-teams-content *ngIf=\"layout === layouts.cnetcmpgnteams\"></app-cnet-teams-content>\n        <app-abm-enterprise-content\n          *ngIf=\"layout === layouts.abmenterprise\"\n        ></app-abm-enterprise-content>\n        <app-abm-teams-content *ngIf=\"layout === layouts.abmteams\"></app-abm-teams-content>\n      </div>\n    </div>\n    <div class=\"tw-w-1/2\">\n      <div *ngIf=\"!useTrialStepper\">\n        <div\n          class=\"tw-min-w-xl tw-m-auto tw-mt-28 tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n        >\n          <app-register-form\n            [queryParamEmail]=\"email\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            [referenceDataValue]=\"referenceData\"\n          ></app-register-form>\n        </div>\n      </div>\n      <div class=\"tw-pt-44\" *ngIf=\"useTrialStepper\">\n        <div class=\"tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background\">\n          <div class=\"tw-flex tw-h-12 tw-w-full tw-items-center tw-rounded-t tw-bg-secondary-100\">\n            <h2 class=\"tw-mb-0 tw-pl-4 tw-text-base tw-font-bold tw-uppercase\">\n              Start your 7-Day free trial of Bitwarden for {{ org }}\n            </h2>\n          </div>\n          <app-vertical-stepper #stepper linear (selectionChange)=\"stepSelectionChange($event)\">\n            <app-vertical-step label=\"Create Account\" [editable]=\"false\" [subLabel]=\"email\">\n              <app-register-form\n                [isInTrialFlow]=\"true\"\n                (createdAccount)=\"createdAccount($event)\"\n                [referenceDataValue]=\"referenceData\"\n              ></app-register-form>\n            </app-vertical-step>\n            <app-vertical-step label=\"Organization Information\" [subLabel]=\"orgInfoSubLabel\">\n              <app-org-info [nameOnly]=\"true\" [formGroup]=\"orgInfoFormGroup\"></app-org-info>\n              <button\n                bitButton\n                buttonType=\"primary\"\n                [disabled]=\"orgInfoFormGroup.get('name').invalid\"\n                cdkStepperNext\n              >\n                Next\n              </button>\n            </app-vertical-step>\n            <app-vertical-step label=\"Billing\" [subLabel]=\"billingSubLabel\">\n              <app-billing\n                *ngIf=\"stepper.selectedIndex === 2\"\n                [plan]=\"plan\"\n                [product]=\"product\"\n                [orgInfoForm]=\"orgInfoFormGroup\"\n                (previousStep)=\"previousStep()\"\n                (onTrialBillingSuccess)=\"billingSuccess($event)\"\n              ></app-billing>\n            </app-vertical-step>\n            <app-vertical-step label=\"Confirmation Details\" [applyBorder]=\"false\">\n              <app-trial-confirmation-details\n                [email]=\"email\"\n                [orgLabel]=\"orgLabel\"\n              ></app-trial-confirmation-details>\n              <div class=\"tw-mb-3 tw-flex\">\n                <button bitButton buttonType=\"primary\" (click)=\"navigateToOrgVault()\">\n                  Get Started\n                </button>\n                <button\n                  bitButton\n                  buttonType=\"secondary\"\n                  (click)=\"navigateToOrgInvite()\"\n                  class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n                >\n                  Invite Users\n                </button>\n              </div>\n            </app-vertical-step>\n          </app-vertical-stepper>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { StepperSelectionEvent } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\n\nimport { RouterService } from \"./../../core/router.service\";\nimport { VerticalStepperComponent } from \"./vertical-stepper/vertical-stepper.component\";\n\nenum ValidOrgParams {\n  families = \"families\",\n  enterprise = \"enterprise\",\n  teams = \"teams\",\n  individual = \"individual\",\n  premium = \"premium\",\n  free = \"free\",\n}\n\nenum ValidLayoutParams {\n  default = \"default\",\n  teams = \"teams\",\n  teams1 = \"teams1\",\n  teams2 = \"teams2\",\n  enterprise = \"enterprise\",\n  enterprise1 = \"enterprise1\",\n  enterprise2 = \"enterprise2\",\n  cnetcmpgnent = \"cnetcmpgnent\",\n  cnetcmpgnind = \"cnetcmpgnind\",\n  cnetcmpgnteams = \"cnetcmpgnteams\",\n  abmenterprise = \"abmenterprise\",\n  abmteams = \"abmteams\",\n}\n\n@Component({\n  selector: \"app-trial\",\n  templateUrl: \"trial-initiation.component.html\",\n})\nexport class TrialInitiationComponent implements OnInit, OnDestroy {\n  email = \"\";\n  org = \"\";\n  orgInfoSubLabel = \"\";\n  orgId = \"\";\n  orgLabel = \"\";\n  billingSubLabel = \"\";\n  layout = \"default\";\n  plan: PlanType;\n  product: ProductType;\n  accountCreateOnly = true;\n  useTrialStepper = false;\n  policies: Policy[];\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  trialFlowOrgs: string[] = [\n    ValidOrgParams.teams,\n    ValidOrgParams.enterprise,\n    ValidOrgParams.families,\n  ];\n  routeFlowOrgs: string[] = [\n    ValidOrgParams.free,\n    ValidOrgParams.premium,\n    ValidOrgParams.individual,\n  ];\n  layouts = ValidLayoutParams;\n  referenceData: ReferenceEventRequest;\n  @ViewChild(\"stepper\", { static: false }) verticalStepper: VerticalStepperComponent;\n\n  orgInfoFormGroup = this.formBuilder.group({\n    name: [\"\", { validators: [Validators.required, Validators.maxLength(50)], updateOn: \"change\" }],\n    email: [\"\"],\n  });\n\n  private set referenceDataId(referenceId: string) {\n    if (referenceId != null) {\n      this.referenceData.id = referenceId;\n    } else {\n      this.referenceData.id = (\"; \" + document.cookie)\n        .split(\"; reference=\")\n        .pop()\n        .split(\";\")\n        .shift();\n    }\n\n    if (this.referenceData.id === \"\") {\n      this.referenceData.id = null;\n    }\n  }\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private route: ActivatedRoute,\n    protected router: Router,\n    private formBuilder: UntypedFormBuilder,\n    private titleCasePipe: TitleCasePipe,\n    private stateService: StateService,\n    private logService: LogService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private i18nService: I18nService,\n    private routerService: RouterService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n\n      this.referenceDataId = qParams.reference;\n\n      if (Object.values(ValidLayoutParams).includes(qParams.layout)) {\n        this.layout = qParams.layout;\n        this.accountCreateOnly = false;\n      }\n\n      if (this.trialFlowOrgs.includes(qParams.org)) {\n        this.org = qParams.org;\n        this.orgLabel = this.titleCasePipe.transform(this.org);\n        this.useTrialStepper = true;\n        this.referenceData.flow = qParams.org;\n\n        if (this.org === ValidOrgParams.families) {\n          this.plan = PlanType.FamiliesAnnually;\n          this.product = ProductType.Families;\n        } else if (this.org === ValidOrgParams.teams) {\n          this.plan = PlanType.TeamsAnnually;\n          this.product = ProductType.Teams;\n        } else if (this.org === ValidOrgParams.enterprise) {\n          this.plan = PlanType.EnterpriseAnnually;\n          this.product = ProductType.Enterprise;\n        }\n      } else if (this.routeFlowOrgs.includes(qParams.org)) {\n        this.referenceData.flow = qParams.org;\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      // After logging in redirect them to setup the families sponsorship\n      this.setupFamilySponsorship(qParams.sponsorshipToken);\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.policyService\n        .masterPasswordPolicyOptions$(this.policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPasswordPolicyOptions) => {\n          this.enforcedPolicyOptions = enforcedPasswordPolicyOptions;\n        });\n    }\n\n    this.orgInfoFormGroup.controls.name.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.orgInfoFormGroup.controls.name.markAsTouched();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  stepSelectionChange(event: StepperSelectionEvent) {\n    // Set org info sub label\n    if (event.selectedIndex === 1 && this.orgInfoFormGroup.controls.name.value === \"\") {\n      this.orgInfoSubLabel =\n        \"Enter your \" + this.titleCasePipe.transform(this.org) + \" organization information\";\n    } else if (event.previouslySelectedIndex === 1) {\n      this.orgInfoSubLabel = this.orgInfoFormGroup.controls.name.value;\n    }\n\n    //set billing sub label\n    if (event.selectedIndex === 2) {\n      this.billingSubLabel = this.i18nService.t(\"billingTrialSubLabel\");\n    }\n  }\n\n  createdAccount(email: string) {\n    this.email = email;\n    this.orgInfoFormGroup.get(\"email\")?.setValue(email);\n    this.verticalStepper.next();\n  }\n\n  billingSuccess(event: any) {\n    this.orgId = event?.orgId;\n    this.billingSubLabel = event?.subLabelText;\n    this.verticalStepper.next();\n  }\n\n  navigateToOrgVault() {\n    this.router.navigate([\"organizations\", this.orgId, \"vault\"]);\n  }\n\n  navigateToOrgInvite() {\n    this.router.navigate([\"organizations\", this.orgId, \"manage\", \"members\"]);\n  }\n\n  previousStep() {\n    this.verticalStepper.previous();\n  }\n\n  private setupFamilySponsorship(sponsorshipToken: string) {\n    if (sponsorshipToken != null) {\n      const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n        queryParams: { plan: sponsorshipToken },\n      });\n      this.routerService.setPreviousUrl(route.toString());\n    }\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { TokenTwoFactorRequest } from \"@bitwarden/common/models/request/identity-token/token-two-factor.request\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/two-factor-email.request\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService,\n    protected loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenTwoFactorRequest(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.loginService.clearValues();\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.loginService.clearValues();\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.loginService.clearValues();\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      request.authRequestAccessCode = this.authService.accessCode;\n      request.authRequestId = this.authService.authRequestId;\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithUserApiKey() ||\n      this.authService.authingWithPasswordless()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithUserApiKey();\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{ \"twoStepOptions\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-group list-group-flush-2fa\">\n          <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ p.name }}</h3>\n                {{ p.description }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-describedby]=\"p.name\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"choose(p)\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img class=\"recovery-code-img\" alt=\"rc logo\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ \"recoveryCodeTitle\" | i18n }}</h3>\n                {{ \"recoveryCodeDesc\" | i18n }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"recover()\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"container\"\n  ngNativeValidate\n  autocomplete=\"off\"\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div\n      class=\"col-5\"\n      [ngClass]=\"{\n        'col-9':\n          selectedProviderType === providerType.Duo ||\n          selectedProviderType === providerType.OrganizationDuo\n      }\"\n    >\n      <p class=\"lead text-center mb-4\">{{ title }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Email ||\n              selectedProviderType === providerType.Authenticator\n            \"\n          >\n            <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n              {{ \"enterVerificationCodeApp\" | i18n }}\n            </p>\n            <p *ngIf=\"selectedProviderType === providerType.Email\">\n              {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n            </p>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"text\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                inputmode=\"tel\"\n                appInputVerbatim\n              />\n              <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                <a\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"sendEmail(true)\"\n                  [appApiAction]=\"emailPromise\"\n                  *ngIf=\"selectedProviderType === providerType.Email\"\n                >\n                  {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n                </a>\n              </small>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n            <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n            <picture>\n              <source srcset=\"../../images/yubikey.avif\" type=\"image/avif\" />\n              <source srcset=\"../../images/yubikey.webp\" type=\"image/webp\" />\n              <img src=\"../../images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\" />\n            </picture>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"password\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\">\n            <div id=\"web-authn-frame\" class=\"mb-3\">\n              <iframe id=\"webauthn_iframe\" [attr.allow]=\"webAuthnAllow\"></iframe>\n            </div>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Duo ||\n              selectedProviderType === providerType.OrganizationDuo\n            \"\n          >\n            <div id=\"duo-frame\" class=\"mb-3\">\n              <iframe id=\"duo_iframe\"></iframe>\n            </div>\n          </ng-container>\n          <i\n            class=\"bwi bwi-spinner text-muted bwi-spin pull-right\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\"\n            aria-hidden=\"true\"\n          ></i>\n          <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              name=\"Remember\"\n              class=\"form-check-input\"\n              [(ngModel)]=\"remember\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">{{ \"rememberMe\" | i18n }}</label>\n          </div>\n          <ng-container *ngIf=\"selectedProviderType == null\">\n            <p>{{ \"noTwoStepProviders\" | i18n }}</p>\n            <p>{{ \"noTwoStepProviders2\" | i18n }}</p>\n          </ng-container>\n          <hr />\n          <div [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n              *ngIf=\"\n                selectedProviderType != null &&\n                selectedProviderType !== providerType.Duo &&\n                selectedProviderType !== providerType.OrganizationDuo &&\n                selectedProviderType !== providerType.WebAuthn\n              \"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n          <div class=\"text-center\">\n            <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{\n              \"useAnotherTwoStepMethod\" | i18n\n            }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { RouterService } from \"../core\";\n\nimport { TwoFactorOptionsComponent } from \"./two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  @ViewChild(\"twoFactorOptions\", { read: ViewContainerRef, static: true })\n  twoFactorOptionsModal: ViewContainerRef;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    private modalService: ModalService,\n    route: ActivatedRoute,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService,\n    private routerService: RouterService,\n    loginService: LoginService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService,\n      loginService\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async anotherMethod() {\n    const [modal] = await this.modalService.openViewRef(\n      TwoFactorOptionsComponent,\n      this.twoFactorOptionsModal,\n      (comp) => {\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n          modal.close();\n          this.selectedProviderType = provider;\n          await this.init();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRecoverSelected.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async goAfterLogIn() {\n    this.loginService.clearValues();\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class PasswordRequest extends SecretVerificationRequest {\n  newMasterPasswordHash: string;\n  masterPasswordHint: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/password.request\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdatePasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n  currentMasterPassword: string;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n\n  constructor(\n    protected router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async cancel() {\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    const secret: Verification = {\n      type: VerificationType.MasterPassword,\n      secret: this.currentMasterPassword,\n    };\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return false;\n    }\n\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create Request\n      const request = new PasswordRequest();\n      request.masterPasswordHash = await this.cryptoService.hashPassword(\n        this.currentMasterPassword,\n        null\n      );\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.key = encKey[1].encryptedString;\n\n      // Update user's password\n      this.apiService.postPassword(request);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"masterPasswordInvalidWarning\" | i18n }} </app-callout>\n          <app-callout\n            type=\"info\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            *ngIf=\"enforcedPolicyOptions\"\n          ></app-callout>\n\n          <form\n            #form\n            (ngSubmit)=\"submit()\"\n            [appApiAction]=\"formPromise\"\n            ngNativeValidate\n            autocomplete=\"off\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"currentMasterPassword\"\n                    type=\"password\"\n                    name=\"MasterPasswordHash\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\"\n                    required\n                    appInputVerbatim\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"newMasterPassword\"\n                    type=\"password\"\n                    name=\"NewMasterPasswordHash\"\n                    class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                  <app-password-strength\n                    [password]=\"masterPassword\"\n                    [email]=\"email\"\n                    [showText]=\"true\"\n                    (passwordStrengthResult)=\"getStrengthResult($event)\"\n                  ></app-password-strength>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"masterPasswordRetype\"\n                    type=\"password\"\n                    name=\"MasterPasswordRetype\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"masterPasswordRetype\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n              <i\n                class=\"fa fa-spinner fa-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"changeMasterPassword\" | i18n }}</span>\n            </button>\n            <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n              <span>{{ \"cancel\" | i18n }}</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { UpdatePasswordComponent as BaseUpdatePasswordComponent } from \"@bitwarden/angular/components/update-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\n@Component({\n  selector: \"app-update-password\",\n  templateUrl: \"update-password.component.html\",\n})\nexport class UpdatePasswordComponent extends BaseUpdatePasswordComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      userVerificationService,\n      logService\n    );\n  }\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { OrganizationUserResetPasswordRequest } from \"../../abstractions/organization-user/requests\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/update-temp-password.request\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"updateMasterPasswordWarning\" | i18n }} </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    syncService: SyncService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export class VerifyEmailRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VerifyEmailRequest } from \"@bitwarden/common/models/request/verify-email.request\";\n\n@Component({\n  selector: \"app-verify-email-token\",\n  templateUrl: \"verify-email-token.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyEmailTokenComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null) {\n        try {\n          await this.apiService.postAccountVerifyEmailToken(\n            new VerifyEmailRequest(qParams.userId, qParams.token)\n          );\n          if (await this.stateService.getIsAuthenticated()) {\n            await this.apiService.refreshIdentityToken();\n          }\n          this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n          this.router.navigate([\"/\"]);\n          return;\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"emailVerifiedFailed\"));\n      this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","export class VerifyDeleteRecoverRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VerifyDeleteRecoverRequest } from \"@bitwarden/common/models/request/verify-delete-recover.request\";\n\n@Component({\n  selector: \"app-verify-recover-delete\",\n  templateUrl: \"verify-recover-delete.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyRecoverDeleteComponent implements OnInit {\n  email: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private token: string;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n        this.userId = qParams.userId;\n        this.token = qParams.token;\n        this.email = qParams.email;\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    try {\n      const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n      this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n          <p class=\"text-center\">\n            <strong>{{ email }}</strong>\n          </p>\n          <p>{{ \"deleteRecoverConfirmDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-danger btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"deleteAccount\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HomeGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return this.router.createUrlTree([\"/login\"], { queryParams: route.queryParams });\n    }\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"/lock\"], { queryParams: route.queryParams });\n    }\n    return this.router.createUrlTree([\"/vault\"], { queryParams: route.queryParams });\n  }\n}\n","import { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport { SelectionReadOnlyResponse } from \"@bitwarden/common/models/response/selection-read-only.response\";\nimport { SelectItemView } from \"@bitwarden/components/src/multi-select/models/select-item-view\";\n\n/**\n * Permission options that replace/correspond with readOnly and hidePassword server fields.\n */\nexport enum CollectionPermission {\n  View = \"view\",\n  ViewExceptPass = \"viewExceptPass\",\n  Edit = \"edit\",\n  EditExceptPass = \"editExceptPass\",\n}\n\nexport enum AccessItemType {\n  Collection,\n  Group,\n  Member,\n}\n\n/**\n * A \"generic\" type that describes an item that can be selected from a\n * ng-select list and have its collection permission modified.\n *\n * Currently, it supports Collections, Groups, and Members. Members require some additional\n * details to render in the AccessSelectorComponent so their type is defined separately\n * and then joined back with the base type.\n *\n */\nexport type AccessItemView =\n  | SelectItemView & {\n      /**\n       * Flag that this group/member can access all items.\n       * This will disable the permission editor for this item.\n       */\n      accessAllItems?: boolean;\n\n      /**\n       * Flag that this item cannot be modified.\n       * This will disable the permission editor and will keep\n       * the item always selected.\n       */\n      readonly?: boolean;\n\n      /**\n       * Optional permission that will be rendered for this\n       * item if it set to readonly.\n       */\n      readonlyPermission?: CollectionPermission;\n    } & (\n        | {\n            type: AccessItemType.Collection;\n            viaGroupName?: string;\n          }\n        | {\n            type: AccessItemType.Group;\n          }\n        | {\n            type: AccessItemType.Member; // Members have a few extra details required to display, so they're added here\n            email: string;\n            role: OrganizationUserType;\n            status: OrganizationUserStatusType;\n          }\n      );\n\n/**\n * A type that is emitted as a value for the ngControl\n */\nexport type AccessItemValue = {\n  id: string;\n  permission?: CollectionPermission;\n  type: AccessItemType;\n};\n\n/**\n * Converts the older SelectionReadOnly interface to one of the new CollectionPermission values\n * for the dropdown in the AccessSelectorComponent\n * @param value\n */\nexport const convertToPermission = (value: SelectionReadOnlyResponse) => {\n  if (value.readOnly) {\n    return value.hidePasswords ? CollectionPermission.ViewExceptPass : CollectionPermission.View;\n  } else {\n    return value.hidePasswords ? CollectionPermission.EditExceptPass : CollectionPermission.Edit;\n  }\n};\n\n/**\n * Converts an AccessItemValue back into a SelectionReadOnly class using the CollectionPermission\n * to determine the values for `readOnly` and `hidePassword`\n * @param value\n */\nexport const convertToSelectionReadOnly = (value: AccessItemValue) => {\n  return new SelectionReadOnlyRequest(\n    value.id,\n    readOnly(value.permission),\n    hidePassword(value.permission)\n  );\n};\n\nconst readOnly = (perm: CollectionPermission) =>\n  [CollectionPermission.View, CollectionPermission.ViewExceptPass].includes(perm);\n\nconst hidePassword = (perm: CollectionPermission) =>\n  [CollectionPermission.ViewExceptPass, CollectionPermission.EditExceptPass].includes(perm);\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user-layout\",\n  templateUrl: \"user-layout.component.html\",\n})\nexport class UserLayoutComponent implements OnInit {\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","import { AbstractControl, FormArray } from \"@angular/forms\";\n\nexport type SelectionItemId = {\n  id: string;\n};\n\nfunction findSortedIndex<T>(sortedArray: T[], val: T, compareFn: (a: T, b: T) => number) {\n  let low = 0;\n  let high = sortedArray.length || 0;\n  let mid = -1,\n    c = 0;\n  while (low < high) {\n    mid = Math.floor((low + high) / 2);\n    c = compareFn(sortedArray[mid], val);\n    if (c < 0) {\n      low = mid + 1;\n    } else if (c > 0) {\n      high = mid;\n    } else {\n      return mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Utility to help manage a list of selectable items for use with Reactive Angular forms and FormArrays.\n *\n * It supports selecting/deselecting items, keeping items sorted, and synchronizing the selected items\n * with an array of FormControl.\n *\n * The first type parameter TItem represents the item being selected/deselected, it must have an `id`\n * property for identification/comparison. The second type parameter TControlValue represents the value\n * type of the form control.\n */\nexport class FormSelectionList<\n  TItem extends SelectionItemId,\n  TControlValue extends SelectionItemId\n> {\n  allItems: TItem[] = [];\n  /**\n   * Sorted list of selected items\n   * Immutable and should be recreated whenever a modification is made\n   */\n  selectedItems: TItem[] = [];\n\n  /**\n   * Sorted list of deselected items\n   * Immutable and should be recreated whenever a modification is made\n   */\n  deselectedItems: TItem[] = [];\n\n  /**\n   * Sorted FormArray that corresponds and stays in sync with the selectedItems\n   */\n  formArray: FormArray<AbstractControl<Partial<TControlValue>, TControlValue>> = new FormArray([]);\n\n  /**\n   * Construct a new FormSelectionList\n   * @param controlFactory - Factory responsible for creating initial form controls for each selected item. It is\n   * provided a copy of the selected item for any form control initialization logic. Specify any additional form\n   * control options or validators here.\n   * @param compareFn - Comparison function used for sorting the items.\n   */\n  constructor(\n    private controlFactory: (item: TItem) => AbstractControl<Partial<TControlValue>, TControlValue>,\n    private compareFn: (a: TItem, b: TItem) => number\n  ) {}\n\n  /**\n   * Select multiple items by their ids at once. Optionally provide an initial form control value.\n   * @param ids - List of ids to select\n   * @param initialValue - Value that will be applied to the corresponding form controls\n   * The provided `id` arguments will be automatically assigned to each form control value\n   */\n  selectItems(ids: string[], initialValue?: Partial<TControlValue> | undefined) {\n    for (const id of ids) {\n      this.selectItem(id, initialValue);\n    }\n  }\n\n  /**\n   * Deselect multiple items by their ids at once\n   * @param ids - List of ids to deselect\n   */\n  deselectItems(ids: string[]) {\n    for (const id of ids) {\n      this.deselectItem(id);\n    }\n  }\n\n  deselectAll() {\n    this.formArray.clear();\n    this.selectedItems = [];\n    this.deselectedItems = [...this.allItems];\n  }\n\n  /**\n   * Select a single item by id.\n   *\n   * Maintains list order for both selected items, deselected items, and the FormArray.\n   *\n   * @param id - Id of the item to select\n   * @param initialValue - Value that will be applied to the corresponding form control for the selected item.\n   * The provided `id` argument will be automatically assigned unless explicitly set in the initialValue.\n   */\n  selectItem(id: string, initialValue?: Partial<TControlValue>) {\n    const index = this.deselectedItems.findIndex((o) => o.id === id);\n\n    if (index === -1) {\n      return;\n    }\n\n    const selectedOption = this.deselectedItems[index];\n\n    // Note: Changes to the deselected/selected arrays must create a new copy of the array\n    // in order for Angular's Change Detection to pick up the modification (i.e. treat the arrays as immutable)\n\n    // Remove from the list of deselected options\n    this.deselectedItems = [\n      ...this.deselectedItems.slice(0, index),\n      ...this.deselectedItems.slice(index + 1),\n    ];\n\n    // Insert into the sorted selected options list\n    const sortedInsertIndex = findSortedIndex(this.selectedItems, selectedOption, this.compareFn);\n\n    this.selectedItems = [\n      ...this.selectedItems.slice(0, sortedInsertIndex),\n      selectedOption,\n      ...this.selectedItems.slice(sortedInsertIndex),\n    ];\n\n    const newControl = this.controlFactory(selectedOption);\n\n    // Patch the value and ensure the `id` is set\n    newControl.patchValue({\n      id,\n      ...initialValue,\n    });\n\n    this.formArray.insert(sortedInsertIndex, newControl);\n  }\n\n  /**\n   * Deselect a single item by id.\n   *\n   * Maintains list order for both selected items, deselected items, and the FormArray.\n   *\n   * @param id - Id of the item to deselect\n   */\n  deselectItem(id: string) {\n    const index = this.selectedItems.findIndex((o) => o.id === id);\n\n    if (index === -1) {\n      return;\n    }\n\n    const deselectedOption = this.selectedItems[index];\n\n    // Note: Changes to the deselected/selected arrays must create a new copy of the array\n    // in order for Angular's Change Detection to pick up the modification (i.e. treat the arrays as immutable)\n\n    // Remove from the list of selected items (and FormArray)\n    this.selectedItems = [\n      ...this.selectedItems.slice(0, index),\n      ...this.selectedItems.slice(index + 1),\n    ];\n    this.formArray.removeAt(index);\n\n    // Insert into the sorted deselected array\n    const sortedInsertIndex = findSortedIndex(\n      this.deselectedItems,\n      deselectedOption,\n      this.compareFn\n    );\n\n    this.deselectedItems = [\n      ...this.deselectedItems.slice(0, sortedInsertIndex),\n      deselectedOption,\n      ...this.deselectedItems.slice(sortedInsertIndex),\n    ];\n  }\n\n  /**\n   * Populate the list of deselected items, and optional specify which items should be selected and with what initial\n   * value for their Form Control\n   * @param items - A list of all items. (Will be sorted internally)\n   * @param selectedItems - The items to select initially\n   */\n  populateItems(items: TItem[], selectedItems: TControlValue[] = []) {\n    this.formArray.clear();\n    this.allItems = [...items].sort(this.compareFn);\n    this.selectedItems = [];\n    this.deselectedItems = [...this.allItems];\n\n    for (const selectedItem of selectedItems) {\n      this.selectItem(selectedItem.id, selectedItem);\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","<ng-select\n  [items]=\"baseItems\"\n  [(ngModel)]=\"selectedItems\"\n  (ngModelChange)=\"onChange($event)\"\n  (blur)=\"onBlur()\"\n  bindLabel=\"listName\"\n  groupBy=\"parentGrouping\"\n  [placeholder]=\"placeholder\"\n  [loading]=\"loading\"\n  [loadingText]=\"loadingText\"\n  notFoundText=\"{{ 'multiSelectNotFound' | i18n }}\"\n  clearAllText=\"{{ 'multiSelectClearAll' | i18n }}\"\n  [multiple]=\"true\"\n  [selectOnTab]=\"true\"\n  [closeOnSelect]=\"false\"\n  (close)=\"onDropdownClosed()\"\n  [disabled]=\"disabled\"\n  [clearSearchOnAdd]=\"true\"\n  [labelForId]=\"labelForId\"\n  appendTo=\"body\"\n>\n  <ng-template ng-loadingspinner-tmp>\n    <i class=\"bwi bwi-spinner bwi-spin tw-mr-1\" [title]=\"loadingText\" aria-hidden=\"true\"></i>\n  </ng-template>\n  <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n    <button\n      type=\"button\"\n      bitBadge\n      badgeType=\"primary\"\n      class=\"tw-mr-1 disabled:tw-border-0\"\n      [disabled]=\"disabled\"\n      (click)=\"clear(item)\"\n    >\n      <i\n        *ngIf=\"item.icon != null\"\n        class=\"tw-mr-1 bwi bwi-fw {{ item.icon }}\"\n        aria-hidden=\"true\"\n      ></i>\n      {{ item.labelName }}\n      <i class=\"bwi bwi-fw bwi-close bwi-sm tw-ml-1\" aria-hidden=\"true\"></i>\n    </button>\n  </ng-template>\n  <ng-template ng-option-tmp let-item=\"item\">\n    <div class=\"tw-flex\">\n      <div class=\"tw-w-7 tw-flex-none\">\n        <i *ngIf=\"isSelected(item)\" class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n      </div>\n      <div class=\"tw-mr-2 tw-flex-initial\">\n        <i *ngIf=\"item.icon != null\" class=\"bwi bwi-fw {{ item.icon }}\" aria-hidden=\"true\"></i>\n      </div>\n      <div class=\"tw-flex-1\">\n        {{ item.listName }}\n      </div>\n    </div>\n  </ng-template>\n</ng-select>\n","import {\n  Component,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  EventEmitter,\n  HostBinding,\n  Optional,\n  Self,\n} from \"@angular/core\";\nimport { ControlValueAccessor, NgControl, Validators } from \"@angular/forms\";\nimport { NgSelectComponent } from \"@ng-select/ng-select\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitFormFieldControl } from \"../form-field/form-field-control\";\n\nimport { SelectItemView } from \"./models/select-item-view\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-multi-select\",\n  templateUrl: \"./multi-select.component.html\",\n  providers: [{ provide: BitFormFieldControl, useExisting: MultiSelectComponent }],\n})\n/**\n * This component has been implemented to only support Multi-select list events\n */\nexport class MultiSelectComponent implements OnInit, BitFormFieldControl, ControlValueAccessor {\n  @ViewChild(NgSelectComponent) select: NgSelectComponent;\n\n  // Parent component should only pass selectable items (complete list - selected items = baseItems)\n  @Input() baseItems: SelectItemView[];\n  // Defaults to native ng-select behavior - set to \"true\" to clear selected items on dropdown close\n  @Input() removeSelectedItems = false;\n  @Input() placeholder: string;\n  @Input() loading = false;\n  @Input() disabled = false;\n\n  // Internal tracking of selected items\n  @Input() selectedItems: SelectItemView[];\n\n  // Default values for our implementation\n  loadingText: string;\n\n  protected searchInputId = `search-input-${nextId++}`;\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  private notifyOnChange?: (value: SelectItemView[]) => void;\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  private notifyOnTouched?: () => void;\n\n  @Output() onItemsConfirmed = new EventEmitter<any[]>();\n\n  constructor(private i18nService: I18nService, @Optional() @Self() private ngControl?: NgControl) {\n    if (ngControl != null) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n    // Default Text Values\n    this.placeholder = this.placeholder ?? this.i18nService.t(\"multiSelectPlaceholder\");\n    this.loadingText = this.i18nService.t(\"multiSelectLoading\");\n  }\n\n  /** Helper method for showing selected state in custom template */\n  isSelected(item: any): boolean {\n    return this.selectedItems?.find((selected) => selected.id === item.id) != undefined;\n  }\n\n  /**\n   * The `close` callback will act as the only trigger for signifying the user's intent of completing the selection\n   * of items. Selected items will be emitted to the parent component in order to allow for separate data handling.\n   */\n  onDropdownClosed(): void {\n    // Early exit\n    if (this.selectedItems == null || this.selectedItems.length == 0) {\n      return;\n    }\n\n    // Emit results to parent component\n    this.onItemsConfirmed.emit(this.selectedItems);\n\n    // Remove selected items from base list based on input property\n    if (this.removeSelectedItems) {\n      let updatedBaseItems = this.baseItems;\n      this.selectedItems.forEach((selectedItem) => {\n        updatedBaseItems = updatedBaseItems.filter((item) => selectedItem.id !== item.id);\n      });\n\n      // Reset Lists\n      this.selectedItems = null;\n      this.baseItems = updatedBaseItems;\n    }\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  writeValue(obj: SelectItemView[]): void {\n    this.selectedItems = obj;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  registerOnChange(fn: (value: SelectItemView[]) => void): void {\n    this.notifyOnChange = fn;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  registerOnTouched(fn: any): void {\n    this.notifyOnTouched = fn;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  protected onChange(items: SelectItemView[]) {\n    if (!this.notifyOnChange) {\n      return;\n    }\n\n    this.notifyOnChange(items);\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  protected onBlur() {\n    if (!this.notifyOnTouched) {\n      return;\n    }\n\n    this.notifyOnTouched();\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding(\"attr.aria-describedby\")\n  get ariaDescribedBy() {\n    return this._ariaDescribedBy;\n  }\n  set ariaDescribedBy(value: string) {\n    this._ariaDescribedBy = value;\n    this.select?.searchInput.nativeElement.setAttribute(\"aria-describedby\", value);\n  }\n  private _ariaDescribedBy: string;\n\n  /**Implemented as part of BitFormFieldControl */\n  get labelForId() {\n    return this.searchInputId;\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding() @Input() id = `bit-multi-select-${nextId++}`;\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding(\"attr.required\")\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  /**Implemented as part of BitFormFieldControl */\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl?.errors)[0];\n    return [key, this.ngControl?.errors[key]];\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\n\n@Pipe({\n  name: \"userType\",\n})\nexport class UserTypePipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(value?: OrganizationUserType, unknownText?: string): string {\n    if (value == null) {\n      return unknownText ?? this.i18nService.t(\"unknown\");\n    }\n    switch (value) {\n      case OrganizationUserType.Owner:\n        return this.i18nService.t(\"owner\");\n      case OrganizationUserType.Admin:\n        return this.i18nService.t(\"admin\");\n      case OrganizationUserType.User:\n        return this.i18nService.t(\"user\");\n      case OrganizationUserType.Manager:\n        return this.i18nService.t(\"manager\");\n      case OrganizationUserType.Custom:\n        return this.i18nService.t(\"custom\");\n    }\n  }\n}\n","<div class=\"tw-flex\">\n  <bit-form-field *ngIf=\"permissionMode == 'edit'\">\n    <bit-label>{{ \"permission\" | i18n }}</bit-label>\n    <select\n      bitInput\n      [disabled]=\"disabled\"\n      [(ngModel)]=\"initialPermission\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      (blur)=\"handleBlur()\"\n    >\n      <option *ngFor=\"let p of permissionList\" [value]=\"p.perm\">\n        {{ p.labelId | i18n }}\n      </option>\n    </select>\n  </bit-form-field>\n\n  <bit-form-field class=\"tw-ml-3 tw-flex-grow\">\n    <bit-label>{{ selectorLabelText }}</bit-label>\n    <bit-multi-select\n      class=\"tw-w-full\"\n      [baseItems]=\"selectionList.deselectedItems\"\n      [removeSelectedItems]=\"true\"\n      [disabled]=\"disabled\"\n      (onItemsConfirmed)=\"selectItems($event)\"\n      (blur)=\"handleBlur()\"\n    ></bit-multi-select>\n    <bit-hint *ngIf=\"selectorHelpText\">{{ selectorHelpText }}</bit-hint>\n  </bit-form-field>\n</div>\n\n<bit-table [formGroup]=\"formGroup\">\n  <ng-container header>\n    <tr>\n      <th bitCell>{{ columnHeader }}</th>\n      <th bitCell id=\"permissionColHeading\" *ngIf=\"permissionMode != 'hidden'\">\n        {{ \"permission\" | i18n }}\n      </th>\n      <th bitCell id=\"roleColHeading\" *ngIf=\"showMemberRoles\">{{ \"role\" | i18n }}</th>\n      <th bitCell id=\"groupColHeading\" *ngIf=\"showGroupColumn\">{{ \"group\" | i18n }}</th>\n      <th bitCell style=\"width: 50px\"></th>\n    </tr>\n  </ng-container>\n  <ng-template body formArrayName=\"items\">\n    <tr\n      bitRow\n      *ngFor=\"let item of selectionList.selectedItems; let i = index\"\n      [formGroupName]=\"i\"\n      [ngClass]=\"{ 'tw-text-muted': item.readonly }\"\n    >\n      <td bitCell [ngSwitch]=\"item.type\">\n        <div class=\"tw-flex tw-items-center\" *ngSwitchCase=\"itemType.Member\">\n          <bit-avatar size=\"small\" class=\"tw-mr-3\" text=\"{{ item.labelName }}\"></bit-avatar>\n          <div class=\"tw-flex tw-flex-col\">\n            <div class=\"tw-text-sm\">\n              {{ item.labelName }}\n              <span *ngIf=\"$any(item).status == 0\" bitBadge badgeType=\"secondary\">\n                {{ \"invited\" | i18n }}\n              </span>\n            </div>\n            <div class=\"tw-text-xs tw-text-muted\" *ngIf=\"$any(item).status != 0\">\n              {{ $any(item).email }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"tw-flex tw-items-center tw-text-sm\" *ngSwitchDefault>\n          <i\n            class=\"bwi tw-mr-3 tw-px-0.5 tw-text-2xl\"\n            [ngClass]=\"item.icon || itemIcon(item)\"\n            aria-hidden=\"true\"\n          ></i>\n          <span>{{ item.labelName }}</span>\n        </div>\n      </td>\n\n      <td bitCell *ngIf=\"permissionMode != 'hidden'\">\n        <ng-container *ngIf=\"canEditItemPermission(item); else readOnlyPerm\">\n          <label class=\"sr-only\" [for]=\"'permission' + i\"\n            >{{ item.labelName }} {{ \"permission\" | i18n }}</label\n          >\n          <select\n            bitInput\n            class=\"-tw-ml-1 tw-max-w-36 tw-overflow-ellipsis !tw-rounded tw-border-0 !tw-bg-transparent tw-pl-0 tw-font-bold\"\n            formControlName=\"permission\"\n            [id]=\"'permission' + i\"\n            (blur)=\"handleBlur()\"\n          >\n            <option *ngFor=\"let p of permissionList\" [value]=\"p.perm\">\n              {{ p.labelId | i18n }}\n            </option>\n          </select>\n        </ng-container>\n\n        <ng-template #readOnlyPerm>\n          <div\n            *ngIf=\"item.accessAllItems\"\n            class=\"tw-max-w-36 tw-overflow-hidden tw-overflow-ellipsis tw-whitespace-nowrap tw-font-bold tw-text-muted\"\n            [appA11yTitle]=\"accessAllLabelId(item) | i18n\"\n          >\n            {{ \"canEdit\" | i18n }}\n            <i class=\"bwi bwi-filter tw-ml-1\" aria-hidden=\"true\"></i>\n          </div>\n\n          <div\n            *ngIf=\"item.readonly\"\n            class=\"tw-max-w-36 tw-overflow-hidden tw-overflow-ellipsis tw-whitespace-nowrap tw-font-bold tw-text-muted\"\n            [title]=\"permissionLabelId(item.readonlyPermission) | i18n\"\n          >\n            {{ permissionLabelId(item.readonlyPermission) | i18n }}\n          </div>\n        </ng-template>\n      </td>\n\n      <td bitCell *ngIf=\"showMemberRoles\">\n        {{ $any(item).role | userType: \"-\" }}\n      </td>\n\n      <td bitCell *ngIf=\"showGroupColumn\">\n        {{ $any(item).viaGroupName ?? \"-\" }}\n      </td>\n\n      <td bitCell>\n        <button\n          *ngIf=\"!item.readonly\"\n          type=\"button\"\n          bitIconButton=\"bwi-close\"\n          buttonType=\"muted\"\n          appA11yTitle=\"{{ 'remove' | i18n }} {{ item.labelName }}\"\n          [disabled]=\"disabled\"\n          (click)=\"selectionList.deselectItem(item.id); handleBlur()\"\n        ></button>\n      </td>\n    </tr>\n    <tr *ngIf=\"selectionList.selectedItems.length == 0\">\n      <td bitCell>{{ emptySelectionText }}</td>\n    </tr>\n  </ng-template>\n</bit-table>\n","import { Component, forwardRef, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormBuilder, NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { FormSelectionList } from \"@bitwarden/angular/utils/form-selection-list\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { SelectItemView } from \"@bitwarden/components/src/multi-select/models/select-item-view\";\n\nimport {\n  AccessItemType,\n  AccessItemValue,\n  AccessItemView,\n  CollectionPermission,\n} from \"./access-selector.models\";\n\nexport enum PermissionMode {\n  /**\n   * No permission controls or column present. No permission values are emitted.\n   */\n  Hidden = \"hidden\",\n\n  /**\n   * No permission controls. Column rendered an if available on an item. No permission values are emitted\n   */\n  Readonly = \"readonly\",\n\n  /**\n   * Permission Controls and column present. Permission values are emitted.\n   */\n  Edit = \"edit\",\n}\n\n@Component({\n  selector: \"bit-access-selector\",\n  templateUrl: \"access-selector.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AccessSelectorComponent),\n      multi: true,\n    },\n  ],\n})\nexport class AccessSelectorComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  private notifyOnChange: (v: unknown) => void;\n  private notifyOnTouch: () => void;\n  private pauseChangeNotification: boolean;\n\n  /**\n   * The internal selection list that tracks the value of this form control / component.\n   * It's responsible for keeping items sorted and synced with the rendered form controls\n   * @protected\n   */\n  protected selectionList = new FormSelectionList<AccessItemView, AccessItemValue>((item) => {\n    const permissionControl = this.formBuilder.control(this.initialPermission);\n\n    const fg = this.formBuilder.group({\n      id: item.id,\n      type: item.type,\n      permission: permissionControl,\n    });\n\n    // Disable entire row form group if readonly\n    if (item.readonly) {\n      fg.disable();\n    }\n\n    // Disable permission control if accessAllItems is enabled\n    if (item.accessAllItems || this.permissionMode != PermissionMode.Edit) {\n      permissionControl.disable();\n    }\n\n    return fg;\n  }, this._itemComparator.bind(this));\n\n  /**\n   * Internal form group for this component.\n   * @protected\n   */\n  protected formGroup = this.formBuilder.group({\n    items: this.selectionList.formArray,\n  });\n\n  protected itemType = AccessItemType;\n  protected permissionList = [\n    { perm: CollectionPermission.View, labelId: \"canView\" },\n    { perm: CollectionPermission.ViewExceptPass, labelId: \"canViewExceptPass\" },\n    { perm: CollectionPermission.Edit, labelId: \"canEdit\" },\n    { perm: CollectionPermission.EditExceptPass, labelId: \"canEditExceptPass\" },\n  ];\n  protected initialPermission = CollectionPermission.View;\n\n  disabled: boolean;\n\n  /**\n   * List of all selectable items that. Sorted internally.\n   */\n  @Input()\n  get items(): AccessItemView[] {\n    return this.selectionList.allItems;\n  }\n\n  set items(val: AccessItemView[]) {\n    const selected = (this.selectionList.formArray.getRawValue() ?? []).concat(\n      val.filter((m) => m.readonly)\n    );\n    this.selectionList.populateItems(\n      val.map((m) => {\n        m.icon = m.icon ?? this.itemIcon(m); // Ensure an icon is set\n        return m;\n      }),\n      selected\n    );\n  }\n\n  /**\n   * Permission mode that controls if the permission form controls and column should be present.\n   */\n  @Input()\n  get permissionMode(): PermissionMode {\n    return this._permissionMode;\n  }\n\n  set permissionMode(value: PermissionMode) {\n    this._permissionMode = value;\n    // Toggle any internal permission controls\n    for (const control of this.selectionList.formArray.controls) {\n      if (value == PermissionMode.Edit) {\n        control.get(\"permission\").enable();\n      } else {\n        control.get(\"permission\").disable();\n      }\n    }\n  }\n  private _permissionMode: PermissionMode = PermissionMode.Hidden;\n\n  /**\n   * Column header for the selected items table\n   */\n  @Input() columnHeader: string;\n\n  /**\n   * Label used for the ng selector\n   */\n  @Input() selectorLabelText: string;\n\n  /**\n   * Helper text displayed under the ng selector\n   */\n  @Input() selectorHelpText: string;\n\n  /**\n   * Text that is shown in the table when no items are selected\n   */\n  @Input() emptySelectionText: string;\n\n  /**\n   * Flag for if the member roles column should be present\n   */\n  @Input() showMemberRoles: boolean;\n\n  /**\n   * Flag for if the group column should be present\n   */\n  @Input() showGroupColumn: boolean;\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly i18nService: I18nService\n  ) {}\n\n  /** Required for NG_VALUE_ACCESSOR */\n  registerOnChange(fn: any): void {\n    this.notifyOnChange = fn;\n  }\n\n  /** Required for NG_VALUE_ACCESSOR */\n  registerOnTouched(fn: any): void {\n    this.notifyOnTouch = fn;\n  }\n\n  /** Required for NG_VALUE_ACCESSOR */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n\n    // Keep the internal FormGroup in sync\n    if (this.disabled) {\n      this.formGroup.disable();\n    } else {\n      this.formGroup.enable();\n    }\n  }\n\n  /** Required for NG_VALUE_ACCESSOR */\n  writeValue(selectedItems: AccessItemValue[]): void {\n    // Modifying the selection list, mistakenly fires valueChanges in the\n    // internal form array, so we need to know to pause external notification\n    this.pauseChangeNotification = true;\n\n    // Always clear the internal selection list on a new value\n    this.selectionList.deselectAll();\n\n    // We need to also select any read only items to appear in the table\n    this.selectionList.selectItems(this.items.filter((m) => m.readonly).map((m) => m.id));\n\n    // If the new value is null, then we're done\n    if (selectedItems == null) {\n      this.pauseChangeNotification = false;\n      return;\n    }\n\n    // Unable to handle other value types, throw\n    if (!Array.isArray(selectedItems)) {\n      throw new Error(\"The access selector component only supports Array form values!\");\n    }\n\n    // Iterate and internally select each item\n    for (const value of selectedItems) {\n      this.selectionList.selectItem(value.id, value);\n    }\n\n    this.pauseChangeNotification = false;\n  }\n\n  ngOnInit() {\n    // Watch the internal formArray for changes and propagate them\n    this.selectionList.formArray.valueChanges.pipe(takeUntil(this.destroy$)).subscribe((v) => {\n      if (!this.notifyOnChange || this.pauseChangeNotification) {\n        return;\n      }\n      this.notifyOnChange(v);\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  protected handleBlur() {\n    if (!this.notifyOnTouch) {\n      return;\n    }\n\n    this.notifyOnTouch();\n  }\n\n  protected selectItems(items: SelectItemView[]) {\n    this.pauseChangeNotification = true;\n    this.selectionList.selectItems(items.map((i) => i.id));\n    this.pauseChangeNotification = false;\n    if (this.notifyOnChange != undefined) {\n      this.notifyOnChange(this.selectionList.formArray.value);\n    }\n  }\n\n  protected itemIcon(item: AccessItemView) {\n    switch (item.type) {\n      case AccessItemType.Collection:\n        return \"bwi-collection\";\n      case AccessItemType.Group:\n        return \"bwi-users\";\n      case AccessItemType.Member:\n        return \"bwi-user\";\n    }\n  }\n\n  protected permissionLabelId(perm: CollectionPermission) {\n    return this.permissionList.find((p) => p.perm == perm)?.labelId;\n  }\n\n  protected accessAllLabelId(item: AccessItemView) {\n    return item.type == AccessItemType.Group ? \"groupAccessAll\" : \"memberAccessAll\";\n  }\n\n  protected canEditItemPermission(item: AccessItemView) {\n    return this.permissionMode == PermissionMode.Edit && !item.readonly && !item.accessAllItems;\n  }\n\n  private _itemComparator(a: AccessItemView, b: AccessItemView) {\n    if (a.type != b.type) {\n      return a.type - b.type;\n    }\n    return this.i18nService.collator.compare(\n      a.listName + a.labelName + a.readonly,\n      b.listName + b.labelName + b.readonly\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { AccessSelectorComponent } from \"./access-selector.component\";\nimport { UserTypePipe } from \"./user-type.pipe\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [AccessSelectorComponent, UserTypePipe],\n  exports: [AccessSelectorComponent],\n})\nexport class AccessSelectorModule {}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"collectionAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n            appAutofocus\n            [disabled]=\"!this.canSave\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n            [disabled]=\"!this.canSave\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <ng-container *ngIf=\"accessGroups\">\n          <h3 class=\"mt-4 d-flex mb-0\">\n            {{ \"groupAccess\" | i18n }}\n            <div class=\"ml-auto\" *ngIf=\"groups && groups.length && this.canSave\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </h3>\n          <div *ngIf=\"!groups || !groups.length\">\n            {{ \"noGroupsInList\" | i18n }}\n          </div>\n          <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let g of groups; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"$any(g).checked\"\n                    name=\"Groups[{{ i }}].Checked\"\n                    [disabled]=\"g.accessAll || !this.canSave\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(g)\">\n                  {{ g.name }}\n                  <ng-container *ngIf=\"g.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter text-muted bwi-fw\"\n                      title=\"{{ 'groupAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"groupAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"$any(g).hidePasswords\"\n                    name=\"Groups[{{ i }}].HidePasswords\"\n                    [disabled]=\"!$any(g).checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"$any(g).readOnly\"\n                    name=\"Groups[{{ i }}].ReadOnly\"\n                    [disabled]=\"!$any(g).checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"this.canSave\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"this.canDelete\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { CollectionRequest } from \"@bitwarden/common/models/request/collection.request\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/group.response\";\n\n@Component({\n  selector: \"app-collection-add-edit\",\n  templateUrl: \"collection-add-edit.component.html\",\n})\nexport class CollectionAddEditComponent implements OnInit {\n  @Input() collectionId: string;\n  @Input() organizationId: string;\n  @Input() canSave: boolean;\n  @Input() canDelete: boolean;\n  @Output() onSavedCollection = new EventEmitter();\n  @Output() onDeletedCollection = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  accessGroups = false;\n  title: string;\n  name: string;\n  externalId: string;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  private orgKey: SymmetricCryptoKey;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    const organization = await this.organizationService.get(this.organizationId);\n    this.accessGroups = organization.useGroups;\n    this.editMode = this.loading = this.collectionId != null;\n    if (this.accessGroups) {\n      const groupsResponse = await this.apiService.getGroups(this.organizationId);\n      this.groups = groupsResponse.data\n        .map((r) => r)\n        .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    }\n    this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editCollection\");\n      try {\n        const collection = await this.apiService.getCollectionDetails(\n          this.organizationId,\n          this.collectionId\n        );\n        this.name = await this.cryptoService.decryptToUtf8(\n          new EncString(collection.name),\n          this.orgKey\n        );\n        this.externalId = collection.externalId;\n        if (collection.groups != null && this.groups.length > 0) {\n          collection.groups.forEach((s) => {\n            const group = this.groups.filter((g) => !g.accessAll && g.id === s.id);\n            if (group != null && group.length > 0) {\n              (group[0] as any).checked = true;\n              (group[0] as any).readOnly = s.readOnly;\n              (group[0] as any).hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addCollection\");\n    }\n\n    this.groups.forEach((g) => {\n      if (g.accessAll) {\n        (g as any).checked = true;\n      }\n    });\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    if (g.accessAll) {\n      return;\n    }\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n      (g as any).hidePasswords = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    if (this.orgKey == null) {\n      throw new Error(\"No encryption key for this organization.\");\n    }\n\n    const request = new CollectionRequest();\n    request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n    request.externalId = this.externalId;\n    request.groups = this.groups\n      .filter((g) => (g as any).checked && !g.accessAll)\n      .map(\n        (g) => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords)\n      );\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putCollection(\n          this.organizationId,\n          this.collectionId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.postCollection(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedCollectionId\" : \"createdCollectionId\", this.name)\n      );\n      this.onSavedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      \"app-collection-add-edit .modal-content\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", this.name)\n      );\n      this.onDeletedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAccessTitle\">\n          {{ \"userAccess\" | i18n }}\n          <small>{{ entityName }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading || !users\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <cdk-virtual-scroll-viewport\n        itemSize=\"46\"\n        minBufferPx=\"600\"\n        maxBufferPx=\"1200\"\n        [style]=\"scrollViewportStyle\"\n      >\n        <div class=\"modal-body\" *ngIf=\"!loading && users && searchedUsers\">\n          <div class=\"d-flex\">\n            <div class=\"mr-3\">\n              <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n              <input\n                type=\"search\"\n                class=\"form-control form-control-sm\"\n                id=\"search\"\n                placeholder=\"{{ 'search' | i18n }}\"\n                name=\"SearchText\"\n                [(ngModel)]=\"searchText\"\n              />\n            </div>\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: !showSelected }\"\n                (click)=\"filterSelected(false)\"\n              >\n                {{ \"all\" | i18n }}\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: showSelected }\"\n                (click)=\"filterSelected(true)\"\n              >\n                {{ \"selected\" | i18n }}\n                <span bitBadge badgeType=\"info\" *ngIf=\"selectedCount\">{{ selectedCount }}</span>\n              </button>\n            </div>\n          </div>\n          <ng-container *ngIf=\"!searchedUsers.length\">\n            <hr />\n            {{ \"noUsersInList\" | i18n }}\n          </ng-container>\n          <table class=\"table table-hover table-list mb-0\" [hidden]=\"!searchedUsers.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                <th>{{ \"userType\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"hidePasswords\" | i18n }}\n                </th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"readOnly\" | i18n }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *cdkVirtualFor=\"let u of searchedUsers\" class=\"\">\n                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.checked\"\n                    name=\"{{ u.id.substr(0, 8) }}_Checked\"\n                    [disabled]=\"entity === 'collection' && u.accessAll\"\n                    (change)=\"selectedChanged(u)\"\n                    appStopProp\n                  />\n                </td>\n                <td width=\"30\" (click)=\"check(u)\">\n                  <bit-avatar [text]=\"u | userName\" [id]=\"u.id\" size=\"small\"></bit-avatar>\n                </td>\n                <td>\n                  {{ u.email }}\n                  <span\n                    bitBadge\n                    badgeType=\"secondary\"\n                    *ngIf=\"u.status === organizationUserStatusType.Invited\"\n                    >{{ \"invited\" | i18n }}</span\n                  >\n                  <span\n                    bitBadge\n                    badgeType=\"warning\"\n                    *ngIf=\"u.status === organizationUserStatusType.Accepted\"\n                    >{{ \"accepted\" | i18n }}</span\n                  >\n                  <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n                </td>\n                <td *ngIf=\"entity === 'collection'\">\n                  <ng-container *ngIf=\"u.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter\"\n                      title=\"{{ 'userAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"userAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td>\n                  <span *ngIf=\"u.type === organizationUserType.Owner\">{{ \"owner\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Admin\">{{ \"admin\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Manager\">{{\n                    \"manager\" | i18n\n                  }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.User\">{{ \"user\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Custom\">{{ \"custom\" | i18n }}</span>\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.hidePasswords\"\n                    name=\"{{ u.id.substr(0, 8) }}_HidePasswords\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.readOnly\"\n                    name=\"{{ u.id.substr(0, 8) }}_ReadOnly\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </cdk-virtual-scroll-viewport>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/abstractions/organization-user/responses\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\n\n@Component({\n  selector: \"app-entity-users\",\n  templateUrl: \"entity-users.component.html\",\n  providers: [SearchPipe],\n})\nexport class EntityUsersComponent implements OnInit {\n  @Input() entity: \"group\" | \"collection\";\n  @Input() entityId: string;\n  @Input() entityName: string;\n  @Input() organizationId: string;\n  @Output() onEditedUsers = new EventEmitter();\n\n  organizationUserType = OrganizationUserType;\n  organizationUserStatusType = OrganizationUserStatusType;\n\n  showSelected = false;\n  loading = true;\n  formPromise: Promise<any>;\n  selectedCount = 0;\n  searchText: string;\n\n  private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n  constructor(\n    private search: SearchPipe,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationUserService: OrganizationUserService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadUsers();\n    this.loading = false;\n  }\n\n  get users() {\n    if (this.showSelected) {\n      return this.allUsers.filter((u) => (u as any).checked);\n    } else {\n      return this.allUsers;\n    }\n  }\n\n  get searchedUsers() {\n    return this.search.transform(this.users, this.searchText, \"name\", \"email\", \"id\");\n  }\n\n  get scrollViewportStyle() {\n    return `min-height: 120px; height: ${120 + this.searchedUsers.length * 46}px`;\n  }\n\n  async loadUsers() {\n    const users = await this.organizationUserService.getAllUsers(this.organizationId);\n    this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    if (this.entity === \"group\") {\n      const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => u.id === s);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n          }\n        });\n      }\n    } else if (this.entity === \"collection\") {\n      const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n            (user[0] as any).readOnly = s.readOnly;\n            (user[0] as any).hidePasswords = s.hidePasswords;\n          }\n        });\n      }\n    }\n\n    this.allUsers.forEach((u) => {\n      if (this.entity === \"collection\" && u.accessAll) {\n        (u as any).checked = true;\n      }\n      if ((u as any).checked) {\n        this.selectedCount++;\n      }\n    });\n  }\n\n  check(u: OrganizationUserUserDetailsResponse) {\n    if (this.entity === \"collection\" && u.accessAll) {\n      return;\n    }\n    (u as any).checked = !(u as any).checked;\n    this.selectedChanged(u);\n  }\n\n  selectedChanged(u: OrganizationUserUserDetailsResponse) {\n    if ((u as any).checked) {\n      this.selectedCount++;\n    } else {\n      if (this.entity === \"collection\") {\n        (u as any).readOnly = false;\n        (u as any).hidePasswords = false;\n      }\n      this.selectedCount--;\n    }\n  }\n\n  filterSelected(showSelected: boolean) {\n    this.showSelected = showSelected;\n  }\n\n  async submit() {\n    try {\n      if (this.entity === \"group\") {\n        const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n        this.formPromise = this.apiService.putGroupUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      } else {\n        const selections = this.users\n          .filter((u) => (u as any).checked && !u.accessAll)\n          .map(\n            (u) =>\n              new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords)\n          );\n        this.formPromise = this.apiService.putCollectionUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedUsers\"));\n      this.onEditedUsers.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<bit-simple-dialog>\n  <i\n    bit-dialog-icon\n    class=\"bwi bwi-business tw-text-5xl tw-text-primary-500\"\n    aria-hidden=\"true\"\n  ></i>\n  <span bitDialogTitle class=\"font-bold\">{{ \"upgradeOrganization\" | i18n }}</span>\n  <span bitDialogContent>\n    {{ data.dialogBodyText }}\n  </span>\n  <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n    <ng-container *ngIf=\"data.orgCanManageBilling\">\n      <button\n        bitButton\n        buttonType=\"primary\"\n        [routerLink]=\"['/organizations', data.orgId, 'billing', 'subscription']\"\n        [queryParams]=\"{ upgrade: true }\"\n        (click)=\"dialogRef.close()\"\n      >\n        {{ \"upgrade\" | i18n }}\n      </button>\n      <button bitButton buttonType=\"secondary\" (click)=\"dialogRef.close()\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </ng-container>\n\n    <ng-container *ngIf=\"!data.orgCanManageBilling\">\n      <button bitButton buttonType=\"primary\" (click)=\"dialogRef.close()\">\n        {{ \"ok\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</bit-simple-dialog>\n","import { DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\n\nexport interface OrgUpgradeDialogData {\n  orgId: string;\n  orgCanManageBilling: boolean;\n  dialogBodyText: string;\n}\n\n@Component({\n  selector: \"app-org-upgrade-dialog\",\n  templateUrl: \"org-upgrade-dialog.component.html\",\n})\nexport class OrgUpgradeDialogComponent {\n  constructor(\n    public dialogRef: DialogRef,\n    @Inject(DIALOG_DATA) public data: OrgUpgradeDialogData\n  ) {}\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"collections\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"this.canCreate\"\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"add()\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newCollection\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging()\n      ? pagedCollections\n      : (collections | search: searchText:'name':'id')) as searchedCollections\n  \"\n>\n  <p *ngIf=\"!searchedCollections.length\">{{ \"noCollectionsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of searchedCollections\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\">\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"users(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item text-danger\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canDelete(c)\"\n                (click)=\"delete(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collection.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { CollectionAddEditComponent } from \"./collection-add-edit.component\";\nimport { EntityUsersComponent } from \"./entity-users.component\";\nimport { OrgUpgradeDialogComponent } from \"./org-upgrade-dialog/org-upgrade-dialog.component\";\n\n@Component({\n  selector: \"app-org-manage-collections\",\n  templateUrl: \"collections.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CollectionsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organization: Organization;\n  canCreate = false;\n  organizationId: string;\n  collections: CollectionView[];\n  assignedCollections: CollectionView[];\n  pagedCollections: CollectionView[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedCollectionsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private collectionService: CollectionService,\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private dialogService: DialogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    this.canCreate = this.organization.canCreateNewCollections;\n\n    const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n      const collections = r.data\n        .filter((c) => c.organizationId === this.organizationId)\n        .map((d) => new Collection(new CollectionData(d as CollectionDetailsResponse)));\n      return await this.collectionService.decryptMany(collections);\n    };\n\n    if (this.organization.canViewAssignedCollections) {\n      const response = await this.apiService.getUserCollections();\n      this.assignedCollections = await decryptCollections(response);\n    }\n\n    if (this.organization.canViewAllCollections) {\n      const response = await this.apiService.getCollections(this.organizationId);\n      this.collections = await decryptCollections(response);\n    } else {\n      this.collections = this.assignedCollections;\n    }\n\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.collections || this.collections.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCollections.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n      pagedSize = this.pagedCollectionsCount;\n    }\n    if (this.collections.length > pagedLength) {\n      this.pagedCollections = this.pagedCollections.concat(\n        this.collections.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCollectionsCount = this.pagedCollections.length;\n    this.didScroll = this.pagedCollections.length > this.pageSize;\n  }\n\n  async edit(collection: CollectionView) {\n    const canCreate = collection == null && this.canCreate;\n    const canEdit = collection != null && this.canEdit(collection);\n    const canDelete = collection != null && this.canDelete(collection);\n\n    if (!(canCreate || canEdit || canDelete)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n      return;\n    }\n\n    if (\n      !collection &&\n      this.organization.planProductType === ProductType.Free &&\n      this.collections.length === this.organization.maxCollections\n    ) {\n      // Show org upgrade modal\n      const dialogBodyText = this.organization.canManageBilling\n        ? this.i18nService.t(\n            \"freeOrgMaxCollectionReachedManageBilling\",\n            this.organization.maxCollections.toString()\n          )\n        : this.i18nService.t(\n            \"freeOrgMaxCollectionReachedNoManageBilling\",\n            this.organization.maxCollections.toString()\n          );\n\n      this.dialogService.open(OrgUpgradeDialogComponent, {\n        data: {\n          orgId: this.organization.id,\n          dialogBodyText: dialogBodyText,\n          orgCanManageBilling: this.organization.canManageBilling,\n        },\n      });\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      CollectionAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.collectionId = collection != null ? collection.id : null;\n        comp.canSave = canCreate || canEdit;\n        comp.canDelete = canDelete;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedCollection.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedCollection.subscribe(() => {\n          modal.close();\n          this.removeCollection(collection);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(collection: CollectionView) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteCollection(this.organizationId, collection.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.removeCollection(collection);\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n    }\n  }\n\n  async users(collection: CollectionView) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"collection\";\n        comp.entityId = collection.id;\n        comp.entityName = collection.name;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onEditedUsers.subscribe(() => {\n          this.load();\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.collections && this.collections.length > this.pageSize;\n  }\n\n  canEdit(collection: CollectionView) {\n    if (this.organization.canEditAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canEditAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  canDelete(collection: CollectionView) {\n    if (this.organization.canDeleteAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canDeleteAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private removeCollection(collection: CollectionView) {\n    const index = this.collections.indexOf(collection);\n    if (index > -1) {\n      this.collections.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","import { SelectionReadOnlyRequest } from \"./selection-read-only.request\";\n\nexport class GroupRequest {\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: SelectionReadOnlyRequest[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"groupAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-2\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"groupAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"groupAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"$any(c).checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!$any(c).checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!$any(c).checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n              title=\"{{ 'loading' | i18n }}\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { GroupRequest } from \"@bitwarden/common/models/request/group.request\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collection.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-group-add-edit\",\n  templateUrl: \"group-add-edit.component.html\",\n})\nexport class GroupAddEditComponent implements OnInit {\n  @Input() groupId: string;\n  @Input() organizationId: string;\n  @Output() onSavedGroup = new EventEmitter();\n  @Output() onDeletedGroup = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  name: string;\n  externalId: string;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.groupId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editGroup\");\n      try {\n        const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n        this.access = group.accessAll ? \"all\" : \"selected\";\n        this.name = group.name;\n        this.externalId = group.externalId;\n        if (group.collections != null && this.collections != null) {\n          group.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addGroup\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  async submit() {\n    const request = new GroupRequest();\n    request.name = this.name;\n    request.externalId = this.externalId;\n    request.accessAll = this.access === \"all\";\n    if (!request.accessAll) {\n      request.collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n      } else {\n        this.formPromise = this.apiService.postGroup(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedGroupId\" : \"createdGroupId\", this.name)\n      );\n      this.onSavedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      \"app-group-add-edit .modal-content\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", this.name)\n      );\n      this.onDeletedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"groups\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newGroup\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedGroups : (groups | search: searchText:'name':'id')) as searchedGroups\n  \"\n>\n  <p *ngIf=\"!searchedGroups.length\">{{ \"noGroupsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedGroups.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let g of searchedGroups\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(g)\">{{ g.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\">\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/group.response\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\nimport { GroupAddEditComponent } from \"./group-add-edit.component\";\n\n@Component({\n  selector: \"app-org-groups\",\n  templateUrl: \"groups.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class GroupsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  groups: GroupResponse[];\n  pagedGroups: GroupResponse[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedGroupsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getGroups(this.organizationId);\n    const groups = response.data != null && response.data.length > 0 ? response.data : [];\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.groups || this.groups.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedGroups.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n      pagedSize = this.pagedGroupsCount;\n    }\n    if (this.groups.length > pagedLength) {\n      this.pagedGroups = this.pagedGroups.concat(\n        this.groups.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedGroupsCount = this.pagedGroups.length;\n    this.didScroll = this.pagedGroups.length > this.pageSize;\n  }\n\n  async edit(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      GroupAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.groupId = group != null ? group.id : null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedGroup.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedGroup.subscribe(() => {\n          modal.close();\n          this.removeGroup(group);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(group: GroupResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      group.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteGroup(this.organizationId, group.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", group.name)\n      );\n      this.removeGroup(group);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async users(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"group\";\n        comp.entityId = group.id;\n        comp.entityName = group.name;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onEditedUsers.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedGroups = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.groups && this.groups.length > this.pageSize;\n  }\n\n  private removeGroup(group: GroupResponse) {\n    const index = this.groups.indexOf(group);\n    if (index > -1) {\n      this.groups.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"organization\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"members\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageUsers\"\n          >\n            {{ \"members\" | i18n }}\n          </a>\n          <a\n            routerLink=\"collections\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"\n          >\n            {{ \"collections\" | i18n }}\n          </a>\n          <a\n            routerLink=\"groups\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageGroups\"\n          >\n            {{ \"groups\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  organization: Organization;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n    });\n  }\n}\n","export class OrganizationUserConfirmRequest {\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ bulkTitle }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error && isRevoking\">\n            {{ \"revokeUsersWarning\" | i18n }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ bulkTitle }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-restore-revoke\",\n  templateUrl: \"bulk-restore-revoke.component.html\",\n})\nexport class BulkRestoreRevokeComponent {\n  isRevoking: boolean;\n  organizationId: string;\n  users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    private organizationUserService: OrganizationUserService,\n    config: ModalConfig\n  ) {\n    this.isRevoking = config.data.isRevoking;\n    this.organizationId = config.data.organizationId;\n    this.users = config.data.users;\n  }\n\n  get bulkTitle() {\n    const titleKey = this.isRevoking ? \"revokeUsers\" : \"restoreUsers\";\n    return this.i18nService.t(titleKey);\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.performBulkUserAction();\n\n      const bulkMessage = this.isRevoking ? \"bulkRevokedMessage\" : \"bulkRestoredMessage\";\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(bulkMessage);\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async performBulkUserAction() {\n    const userIds = this.users.map((user) => user.id);\n    if (this.isRevoking) {\n      return await this.organizationUserService.revokeManyOrganizationUsers(\n        this.organizationId,\n        userIds\n      );\n    } else {\n      return await this.organizationUserService.restoreManyOrganizationUsers(\n        this.organizationId,\n        userIds\n      );\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"resetPasswordTitle\">\n          {{ \"resetPassword\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\"\n          >{{ \"resetPasswordLoggedOutWarning\" | i18n: loggedOutWarningName }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          enforcedPolicyMessage=\"{{ 'resetPasswordMasterPasswordPolicyInEffect' | i18n }}\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col form-group\">\n            <div class=\"d-flex\">\n              <label for=\"newPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"ml-auto d-flex\">\n                <a\n                  href=\"#\"\n                  class=\"d-block mr-2 bwi-icon-above-input\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                  (click)=\"generatePassword()\"\n                >\n                  <i class=\"bwi bwi-lg bwi-fw bwi-refresh\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n            </div>\n            <div class=\"input-group mb-1\">\n              <input\n                id=\"newPassword\"\n                class=\"form-control text-monospace\"\n                appAutofocus\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"NewPassword\"\n                [(ngModel)]=\"newPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                  (click)=\"copy(newPassword)\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n            <app-password-strength\n              [password]=\"newPassword\"\n              [email]=\"email\"\n              [showText]=\"true\"\n              (passwordStrengthResult)=\"getStrengthResult($event)\"\n            >\n            </app-password-strength>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport zxcvbn from \"zxcvbn\";\n\nimport { PasswordStrengthComponent } from \"@bitwarden/angular/shared/components/password-strength/password-strength.component\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  @Input() name: string;\n  @Input() email: string;\n  @Input() id: string;\n  @Input() organizationId: string;\n  @Output() onPasswordReset = new EventEmitter();\n  @ViewChild(PasswordStrengthComponent) passwordStrengthComponent: PasswordStrengthComponent;\n\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  newPassword: string = null;\n  showPassword = false;\n  passwordStrengthResult: zxcvbn.ZXCVBNResult;\n  formPromise: Promise<any>;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .masterPasswordPolicyOptions$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (enforcedPasswordPolicyOptions) =>\n          (this.enforcedPolicyOptions = enforcedPasswordPolicyOptions)\n      );\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get loggedOutWarningName() {\n    return this.name != null ? this.name : this.i18nService.t(\"thisUser\");\n  }\n\n  async generatePassword() {\n    const options = (await this.passwordGenerationService.getOptions())?.[0] ?? {};\n    this.newPassword = await this.passwordGenerationService.generatePassword(options);\n    this.passwordStrengthComponent.updatePasswordStrength(this.newPassword);\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"newPassword\").focus();\n  }\n\n  copy(value: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  async submit() {\n    // Validation\n    if (this.newPassword == null || this.newPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    if (this.newPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinlength\")\n      );\n      return false;\n    }\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.newPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    if (this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n    try {\n      this.formPromise = this.organizationUserService\n        .getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordDetailsError\"));\n          }\n\n          const kdfType = response.kdf;\n          const kdfIterations = response.kdfIterations;\n          const resetPasswordKey = response.resetPasswordKey;\n          const encryptedPrivateKey = response.encryptedPrivateKey;\n\n          // Decrypt Organization's encrypted Private Key with org key\n          const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n          const decPrivateKey = await this.cryptoService.decryptToBytes(\n            new EncString(encryptedPrivateKey),\n            orgSymKey\n          );\n\n          // Decrypt User's Reset Password Key to get EncKey\n          const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n          const userEncKey = new SymmetricCryptoKey(decValue);\n\n          // Create new key and hash new password\n          const newKey = await this.cryptoService.makeKey(\n            this.newPassword,\n            this.email.trim().toLowerCase(),\n            kdfType,\n            kdfIterations\n          );\n          const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n          // Create new encKey for the User\n          const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n          // Create request\n          const request = new OrganizationUserResetPasswordRequest();\n          request.key = newEncKey[1].encryptedString;\n          request.newMasterPasswordHash = newPasswordHash;\n\n          // Change user's password\n          return this.organizationUserService.putOrganizationUserResetPassword(\n            this.organizationId,\n            this.id,\n            request\n          );\n        });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"resetPasswordSuccess\")\n      );\n      this.onPasswordReset.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  getStrengthResult(result: zxcvbn.ZXCVBNResult) {\n    this.passwordStrengthResult = result;\n  }\n}\n","import { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { SelectionReadOnlyRequest } from \"../../../models/request/selection-read-only.request\";\n\nexport class OrganizationUserUpdateRequest {\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","import { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { SelectionReadOnlyRequest } from \"../../../models/request/selection-read-only.request\";\n\nexport class OrganizationUserInviteRequest {\n  emails: string[] = [];\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","<div class=\"form-group mb-0\">\n  <div class=\"form-check mt-1 form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [name]=\"pascalize(parentId)\"\n      [id]=\"parentId\"\n      [(ngModel)]=\"parentChecked\"\n      [indeterminate]=\"parentIndeterminate\"\n    />\n    <label class=\"form-check-label font-weight-normal\" [for]=\"parentId\">\n      {{ parentId | i18n }}\n    </label>\n  </div>\n  <div class=\"form-group form-group-child-check mb-0\">\n    <div class=\"form-check mt-1\" *ngFor=\"let c of checkboxes\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        [name]=\"pascalize(c.id)\"\n        [id]=\"c.id\"\n        [ngModel]=\"c.get()\"\n        (ngModelChange)=\"c.set($event)\"\n      />\n      <label class=\"form-check-label font-weight-normal\" [for]=\"c.id\">\n        {{ c.id | i18n }}\n      </label>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-nested-checkbox\",\n  templateUrl: \"nested-checkbox.component.html\",\n})\nexport class NestedCheckboxComponent {\n  @Input() parentId: string;\n  @Input() checkboxes: { id: string; get: () => boolean; set: (v: boolean) => void }[];\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  get parentIndeterminate() {\n    return !this.parentChecked && this.checkboxes.some((c) => c.get());\n  }\n\n  get parentChecked() {\n    return this.checkboxes.every((c) => c.get());\n  }\n\n  set parentChecked(value: boolean) {\n    this.checkboxes.forEach((c) => {\n      c.set(value);\n    });\n  }\n\n  pascalize(s: string) {\n    return Utils.camelToPascalCase(s);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n          <span bitBadge badgeType=\"secondary\" *ngIf=\"isRevoked\">{{ \"revoked\" | i18n }}</span>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/user-types-access-control/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeUser\"\n            [value]=\"organizationUserType.User\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeUser\">\n            {{ \"user\" | i18n }}\n            <small>{{ \"userDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeManager\"\n            [value]=\"organizationUserType.Manager\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeManager\">\n            {{ \"manager\" | i18n }}\n            <small>{{ \"managerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeAdmin\"\n            [value]=\"organizationUserType.Admin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeAdmin\">\n            {{ \"admin\" | i18n }}\n            <small>{{ \"adminDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeOwner\"\n            [value]=\"organizationUserType.Owner\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeOwner\">\n            {{ \"owner\" | i18n }}\n            <small>{{ \"ownerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeCustom\"\n            [value]=\"organizationUserType.Custom\"\n            [(ngModel)]=\"type\"\n            [attr.disabled]=\"!canUseCustomPermissions || null\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeCustom\">\n            {{ \"custom\" | i18n }}\n            <ng-container *ngIf=\"!canUseCustomPermissions; else enterprise\">\n              <small\n                >{{ \"customDescNonEnterpriseStart\" | i18n\n                }}<a href=\"https://bitwarden.com/contact/\" target=\"_blank\">{{\n                  \"customDescNonEnterpriseLink\" | i18n\n                }}</a\n                >{{ \"customDescNonEnterpriseEnd\" | i18n }}</small\n              >\n            </ng-container>\n            <ng-template #enterprise>\n              <small>{{ \"customDesc\" | i18n }}</small>\n            </ng-template>\n          </label>\n        </div>\n        <ng-container *ngIf=\"customUserTypeSelected\">\n          <h3 class=\"mt-4 d-flex\">\n            {{ \"permissions\" | i18n }}\n          </h3>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">{{ \"managerPermissions\" | i18n }}</label>\n                <hr class=\"my-0 mr-2\" />\n                <app-nested-checkbox\n                  parentId=\"manageAssignedCollections\"\n                  [checkboxes]=\"manageAssignedCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">{{ \"adminPermissions\" | i18n }}</label>\n                <hr class=\"my-0 mr-2\" />\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessEventLogs\"\n                      id=\"accessEventLogs\"\n                      [(ngModel)]=\"permissions.accessEventLogs\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\">\n                      {{ \"accessEventLogs\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessImportExport\"\n                      id=\"accessImportExport\"\n                      [(ngModel)]=\"permissions.accessImportExport\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\">\n                      {{ \"accessImportExport\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessReports\"\n                      id=\"accessReports\"\n                      [(ngModel)]=\"permissions.accessReports\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessReports\">\n                      {{ \"accessReports\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <app-nested-checkbox\n                  parentId=\"manageAllCollections\"\n                  [checkboxes]=\"manageAllCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageGroups\"\n                      id=\"manageGroups\"\n                      [(ngModel)]=\"permissions.manageGroups\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\">\n                      {{ \"manageGroups\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageSso\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.manageSso\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageSso\">\n                      {{ \"manageSso\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"managePolicies\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.managePolicies\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\">\n                      {{ \"managePolicies\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageUsers\"\n                      id=\"manageUsers\"\n                      [(ngModel)]=\"permissions.manageUsers\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\">\n                      {{ \"manageUsers\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageResetPassword\"\n                      id=\"manageResetPassword\"\n                      [(ngModel)]=\"permissions.manageResetPassword\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\">\n                      {{ \"manageResetPassword\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-3\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"userAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"userAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"$any(c).checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!$any(c).checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!$any(c).checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"restore()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"restoreAccess\" | i18n }}</span>\n          </button>\n          <button\n            type=\"button\"\n            (click)=\"revoke()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && !isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"revokeAccess\" | i18n }}</span>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport {\n  OrganizationUserInviteRequest,\n  OrganizationUserUpdateRequest,\n} from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissions.api\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collection.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Input() usesKeyConnector = false;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n  @Output() onRevokedUser = new EventEmitter();\n  @Output() onRestoredUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  isRevoked = false;\n  title: string;\n  emails: string;\n  type: OrganizationUserType = OrganizationUserType.User;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  organizationUserType = OrganizationUserType;\n  canUseCustomPermissions: boolean;\n\n  manageAllCollectionsCheckboxes = [\n    {\n      id: \"createNewCollections\",\n      get: () => this.permissions.createNewCollections,\n      set: (v: boolean) => (this.permissions.createNewCollections = v),\n    },\n    {\n      id: \"editAnyCollection\",\n      get: () => this.permissions.editAnyCollection,\n      set: (v: boolean) => (this.permissions.editAnyCollection = v),\n    },\n    {\n      id: \"deleteAnyCollection\",\n      get: () => this.permissions.deleteAnyCollection,\n      set: (v: boolean) => (this.permissions.deleteAnyCollection = v),\n    },\n  ];\n\n  manageAssignedCollectionsCheckboxes = [\n    {\n      id: \"editAssignedCollections\",\n      get: () => this.permissions.editAssignedCollections,\n      set: (v: boolean) => (this.permissions.editAssignedCollections = v),\n    },\n    {\n      id: \"deleteAssignedCollections\",\n      get: () => this.permissions.deleteAssignedCollections,\n      set: (v: boolean) => (this.permissions.deleteAssignedCollections = v),\n    },\n  ];\n\n  get customUserTypeSelected(): boolean {\n    return this.type === OrganizationUserType.Custom;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.organizationUserId != null;\n    const organization = this.organizationService.get(this.organizationId);\n    this.canUseCustomPermissions = organization.useCustomPermissions;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.organizationUserService.getOrganizationUser(\n          this.organizationId,\n          this.organizationUserId\n        );\n        this.access = user.accessAll ? \"all\" : \"selected\";\n        this.type = user.type;\n        this.isRevoked = user.status === OrganizationUserStatusType.Revoked;\n        if (user.type === OrganizationUserType.Custom) {\n          this.permissions = user.permissions;\n        }\n        if (user.collections != null && this.collections != null) {\n          user.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n    Object.assign(p, clearPermissions ? new PermissionsApi() : this.permissions);\n    return p;\n  }\n\n  handleDependentPermissions() {\n    // Manage Password Reset must have Manage Users enabled\n    if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n      this.permissions.manageUsers = true;\n      (document.getElementById(\"manageUsers\") as HTMLInputElement).checked = true;\n      this.platformUtilsService.showToast(\n        \"info\",\n        null,\n        this.i18nService.t(\"resetPasswordManageUsers\")\n      );\n    }\n  }\n\n  async submit() {\n    if (!this.canUseCustomPermissions && this.type === OrganizationUserType.Custom) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"customNonEnterpriseError\")\n      );\n      return;\n    }\n\n    let collections: SelectionReadOnlyRequest[] = null;\n    if (this.access !== \"all\") {\n      collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        this.updateUser(collections);\n      } else {\n        this.inviteUser(collections);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const message = this.usesKeyConnector\n      ? \"removeUserConfirmationKeyConnector\"\n      : \"removeOrgUserConfirmation\";\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(message),\n      this.i18nService.t(\"removeUserIdAccess\", this.name),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      \"app-user-add-edit .modal-content\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.organizationUserService.deleteOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async revoke() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeUserConfirmation\"),\n      this.i18nService.t(\"revokeUserId\", this.name),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\",\n      false,\n      \"app-user-add-edit .modal-content\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.organizationUserService.revokeOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.name)\n      );\n      this.isRevoked = true;\n      this.onRevokedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async restore() {\n    if (!this.editMode) {\n      return;\n    }\n\n    try {\n      this.formPromise = this.organizationUserService.restoreOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.name)\n      );\n      this.isRevoked = false;\n      this.onRestoredUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  updateUser(collections: SelectionReadOnlyRequest[]) {\n    const request = new OrganizationUserUpdateRequest();\n    request.accessAll = this.access === \"all\";\n    request.type = this.type;\n    request.collections = collections;\n    request.permissions = this.setRequestPermissions(\n      request.permissions ?? new PermissionsApi(),\n      request.type !== OrganizationUserType.Custom\n    );\n    this.formPromise = this.organizationUserService.putOrganizationUser(\n      this.organizationId,\n      this.organizationUserId,\n      request\n    );\n  }\n\n  inviteUser(collections: SelectionReadOnlyRequest[]) {\n    const request = new OrganizationUserInviteRequest();\n    request.emails = [...new Set(this.emails.trim().split(/\\s*,\\s*/))];\n    request.accessAll = this.access === \"all\";\n    request.type = this.type;\n    request.permissions = this.setRequestPermissions(\n      request.permissions ?? new PermissionsApi(),\n      request.type !== OrganizationUserType.Custom\n    );\n    request.collections = collections;\n    this.formPromise = this.organizationUserService.postOrganizationUserInvite(\n      this.organizationId,\n      request\n    );\n  }\n}\n","export class OrganizationUserUpdateGroupsRequest {\n  groupIds: string[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"groupAccessTitle\">\n          {{ \"groupAccess\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <p>{{ \"groupAccessUserDesc\" | i18n }}</p>\n        <div *ngIf=\"!groups || !groups.length\">\n          {{ \"noGroupsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n          <tbody>\n            <tr *ngFor=\"let g of groups; let i = index\">\n              <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"$any(g).checked\"\n                  name=\"Groups[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td (click)=\"check(g)\">\n                {{ g.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserUpdateGroupsRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/group.response\";\n\n@Component({\n  selector: \"app-user-groups\",\n  templateUrl: \"user-groups.component.html\",\n})\nexport class UserGroupsComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Output() onSavedUser = new EventEmitter();\n\n  loading = true;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    const groupsResponse = await this.apiService.getGroups(this.organizationId);\n    const groups = groupsResponse.data.map((r) => r);\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n\n    try {\n      const userGroups = await this.organizationUserService.getOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId\n      );\n      if (userGroups != null && this.groups != null) {\n        userGroups.forEach((ug) => {\n          const group = this.groups.filter((g) => g.id === ug);\n          if (group != null && group.length > 0) {\n            (group[0] as any).checked = true;\n          }\n        });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    const request = new OrganizationUserUpdateGroupsRequest();\n    request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\n\n    try {\n      this.formPromise = this.organizationUserService.putOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedGroupsForUser\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div\n  class=\"-tw-mt-2 tw-mb-2 tw-flex tw-flex-wrap tw-border-0 tw-border-b tw-border-solid tw-border-secondary-300 tw-pb-2.5\"\n>\n  <h1 class=\"tw-mt-2 tw-mb-0 tw-grow tw-pr-3\">{{ \"members\" | i18n }}</h1>\n  <div class=\"tw-mt-2 tw-flex tw-justify-start tw-space-x-3\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Revoked }\"\n        (click)=\"filter(userStatusType.Revoked)\"\n      >\n        {{ \"revoked\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"revokedCount\">{{ revokedCount }}</span>\n      </button>\n    </div>\n    <div class=\"tw-w-44\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkRestore()\">\n          <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n          {{ \"restoreAccess\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkRevoke()\">\n          <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n          {{ \"revokeAccess\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"usersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <bit-avatar [text]=\"u | userName\" [id]=\"u.userId\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Revoked\">{{\n              \"revoked\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"showEnrolledStatus(u)\">\n              <i\n                class=\"bwi bwi-key\"\n                title=\"{{ 'enrolledPasswordReset' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"enrolledPasswordReset\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.Owner\">{{ \"owner\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Admin\">{{ \"admin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Manager\">{{ \"manager\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.User\">{{ \"user\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"organization.useGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"organization.useEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"resetPassword(u)\"\n                  *ngIf=\"allowResetPassword(u)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n                  {{ \"resetPassword\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"restore(u)\"\n                  *ngIf=\"u.status === userStatusType.Revoked\"\n                >\n                  <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"restoreAccess\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"revoke(u)\"\n                  *ngIf=\"u.status !== userStatusType.Revoked\"\n                >\n                  <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"revokeAccess\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #groupsTemplate></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #resetPasswordTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { combineLatest, concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserConfirmRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport {\n  OrganizationUserBulkResponse,\n  OrganizationUserUserDetailsResponse,\n} from \"@bitwarden/common/abstractions/organization-user/responses\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organization-keys.request\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { BasePeopleComponent } from \"../../common/base.people.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent } from \"./bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent } from \"./bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"./entity-events.component\";\nimport { OrgUpgradeDialogComponent } from \"./org-upgrade-dialog/org-upgrade-dialog.component\";\nimport { ResetPasswordComponent } from \"./reset-password.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\nimport { UserGroupsComponent } from \"./user-groups.component\";\n\n@Component({\n  selector: \"app-org-people\",\n  templateUrl: \"people.component.html\",\n})\nexport class PeopleComponent\n  extends BasePeopleComponent<OrganizationUserUserDetailsResponse>\n  implements OnInit, OnDestroy\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n  @ViewChild(\"resetPasswordTemplate\", { read: ViewContainerRef, static: true })\n  resetPasswordModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = OrganizationUserType;\n  userStatusType = OrganizationUserStatusType;\n\n  organization: Organization;\n  status: OrganizationUserStatusType = null;\n  orgResetPasswordPolicyEnabled = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    searchService: SearchService,\n    validationService: ValidationService,\n    private policyService: PolicyService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    private syncService: SyncService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService,\n    private dialogService: DialogService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    combineLatest([this.route.params, this.route.queryParams, this.policyService.policies$])\n      .pipe(\n        concatMap(async ([params, qParams, policies]) => {\n          this.organization = await this.organizationService.get(params.organizationId);\n\n          // Backfill pub/priv key if necessary\n          if (\n            this.organization.canManageUsersPassword &&\n            !this.organization.hasPublicAndPrivateKeys\n          ) {\n            const orgShareKey = await this.cryptoService.getOrgKey(this.organization.id);\n            const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n            const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n            const response = await this.organizationApiService.updateKeys(\n              this.organization.id,\n              request\n            );\n            if (response != null) {\n              this.organization.hasPublicAndPrivateKeys =\n                response.publicKey != null && response.privateKey != null;\n              await this.syncService.fullSync(true); // Replace oganizations with new data\n            } else {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n          }\n\n          const resetPasswordPolicy = policies\n            .filter((policy) => policy.type === PolicyType.ResetPassword)\n            .find((p) => p.organizationId === this.organization.id);\n          this.orgResetPasswordPolicyEnabled = resetPasswordPolicy?.enabled;\n\n          await this.load();\n\n          this.searchText = qParams.search;\n          if (qParams.viewEvents != null) {\n            const user = this.users.filter((u) => u.id === qParams.viewEvents);\n            if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n              this.events(user[0]);\n            }\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    super.load();\n    await super.load();\n  }\n\n  getUsers(): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    return this.organizationUserService.getAllUsers(this.organization.id);\n  }\n\n  deleteUser(id: string): Promise<void> {\n    return this.organizationUserService.deleteOrganizationUser(this.organization.id, id);\n  }\n\n  revokeUser(id: string): Promise<void> {\n    return this.organizationUserService.revokeOrganizationUser(this.organization.id, id);\n  }\n\n  restoreUser(id: string): Promise<void> {\n    return this.organizationUserService.restoreOrganizationUser(this.organization.id, id);\n  }\n\n  reinviteUser(id: string): Promise<void> {\n    return this.organizationUserService.postOrganizationUserReinvite(this.organization.id, id);\n  }\n\n  async confirmUser(\n    user: OrganizationUserUserDetailsResponse,\n    publicKey: Uint8Array\n  ): Promise<void> {\n    const orgKey = await this.cryptoService.getOrgKey(this.organization.id);\n    const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n    const request = new OrganizationUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.organizationUserService.postOrganizationUserConfirm(\n      this.organization.id,\n      user.id,\n      request\n    );\n  }\n\n  allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    // Hierarchy check\n    let callingUserHasPermission = false;\n\n    switch (this.organization.type) {\n      case OrganizationUserType.Owner:\n        callingUserHasPermission = true;\n        break;\n      case OrganizationUserType.Admin:\n        callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n        break;\n      case OrganizationUserType.Custom:\n        callingUserHasPermission =\n          orgUser.type !== OrganizationUserType.Owner &&\n          orgUser.type !== OrganizationUserType.Admin;\n        break;\n    }\n\n    // Final\n    return (\n      this.organization.canManageUsersPassword &&\n      callingUserHasPermission &&\n      this.organization.useResetPassword &&\n      this.organization.hasPublicAndPrivateKeys &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled &&\n      orgUser.status === OrganizationUserStatusType.Confirmed\n    );\n  }\n\n  showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    return (\n      this.organization.useResetPassword &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled\n    );\n  }\n\n  async edit(user: OrganizationUserUserDetailsResponse) {\n    // Invite User: Add Flow\n    // Click on user email: Edit Flow\n\n    // User attempting to invite new users in a free org with max users\n    if (\n      !user &&\n      this.organization.planProductType === ProductType.Free &&\n      this.allUsers.length === this.organization.seats\n    ) {\n      // Show org upgrade modal\n\n      const dialogBodyText = this.organization.canManageBilling\n        ? this.i18nService.t(\n            \"freeOrgInvLimitReachedManageBilling\",\n            this.organization.seats.toString()\n          )\n        : this.i18nService.t(\n            \"freeOrgInvLimitReachedNoManageBilling\",\n            this.organization.seats.toString()\n          );\n\n      this.dialogService.open(OrgUpgradeDialogComponent, {\n        data: {\n          orgId: this.organization.id,\n          orgCanManageBilling: this.organization.canManageBilling,\n          dialogBodyText: dialogBodyText,\n        },\n      });\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organization.id;\n        comp.organizationUserId = user?.id || null;\n        comp.usesKeyConnector = user?.usesKeyConnector;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRevokedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRestoredUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  async groups(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserGroupsComponent,\n      this.groupsModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organization.id;\n        comp.organizationUserId = user != null ? user.id : null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.organizationId = this.organization.id;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkRevoke() {\n    await this.bulkRevokeOrRestore(true);\n  }\n\n  async bulkRestore() {\n    await this.bulkRevokeOrRestore(false);\n  }\n\n  async bulkRevokeOrRestore(isRevoking: boolean) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const ref = this.modalService.open(BulkRestoreRevokeComponent, {\n      allowMultipleModals: true,\n      data: {\n        organizationId: this.organization.id,\n        users: this.getCheckedUsers(),\n        isRevoking: isRevoking,\n      },\n    });\n\n    await ref.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === OrganizationUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const response = this.organizationUserService.postManyOrganizationUserReinvite(\n        this.organization.id,\n        filteredUsers.map((user) => user.id)\n      );\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.organizationId = this.organization.id;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async events(user: OrganizationUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.organizationId = this.organization.id;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async resetPassword(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      ResetPasswordComponent,\n      this.resetPasswordModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.email = user != null ? user.email : null;\n        comp.organizationId = this.organization.id;\n        comp.id = user != null ? user.id : null;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onPasswordReset.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  protected async removeUserConfirmationDialog(user: OrganizationUserUserDetailsResponse) {\n    const warningMessage = user.usesKeyConnector\n      ? this.i18nService.t(\"removeUserConfirmationKeyConnector\")\n      : this.i18nService.t(\"removeOrgUserConfirmation\");\n\n    return this.platformUtilsService.showDialog(\n      warningMessage,\n      this.i18nService.t(\"removeUserIdAccess\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  private async showBulkStatus(\n    users: OrganizationUserUserDetailsResponse[],\n    filteredUsers: OrganizationUserUserDetailsResponse[],\n    request: Promise<ListResponse<OrganizationUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { GetOrgNameFromIdPipe } from \"./get-organization-name.pipe\";\n\n@NgModule({\n  declarations: [GetOrgNameFromIdPipe],\n  exports: [GetOrgNameFromIdPipe],\n})\nexport class PipesModule {}\n","import { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\n\nexport class VaultService {\n  calculateSearchBarLocalizationString(vaultFilter: VaultFilter): string {\n    if (vaultFilter.status === \"favorites\") {\n      return \"searchFavorites\";\n    }\n    if (vaultFilter.status === \"trash\") {\n      return \"searchTrash\";\n    }\n    if (vaultFilter.cipherType != null) {\n      return \"searchType\";\n    }\n    if (vaultFilter.selectedFolderId != null && vaultFilter.selectedFolderId != \"none\") {\n      return \"searchFolder\";\n    }\n    if (vaultFilter.selectedCollection) {\n      return \"searchCollection\";\n    }\n    if (vaultFilter.selectedOrganizationId != null) {\n      return \"searchOrganization\";\n    }\n    if (vaultFilter.myVaultOnly) {\n      return \"searchMyVault\";\n    }\n\n    return \"searchVault\";\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\nimport { LooseComponentsModule } from \"../../shared/loose-components.module\";\nimport { VaultFilterModule } from \"../vault-filter/vault-filter.module\";\n\nimport { PipesModule } from \"./pipes/pipes.module\";\nimport { VaultService } from \"./vault.service\";\n\n@NgModule({\n  imports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  exports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  providers: [\n    {\n      provide: VaultService,\n      useClass: VaultService,\n    },\n  ],\n})\nexport class VaultSharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultFilterSharedModule } from \"../../../vault/vault-filter/shared/vault-filter-shared.module\";\n\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollection = false; // This is needed because of how the \"Unassigned\" collection works. It has a null id.\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollection = false;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.status === \"favorites\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.status === \"trash\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolder && this.selectedFolderId == null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.selectedFolder && this.selectedFolderId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.selectedFolderId;\n      }\n      if (this.selectedCollection && this.selectedCollectionId == null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.organizationId != null &&\n          (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n      }\n      if (this.selectedCollection && this.selectedCollectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.includes(this.selectedCollectionId);\n      }\n      if (this.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.selectedOrganizationId;\n      }\n      if (this.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n  protected componentName = \"\";\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const encBuf = await EncArrayBuffer.fromResponse(response);\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    // TODO: This should be removed but is needed since we re-use the same template\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"attachmentsTitle\">\n          {{ \"attachments\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n          <tbody>\n            <tr *ngFor=\"let a of cipher.attachments\">\n              <td class=\"table-list-icon\">\n                <i\n                  class=\"bwi bwi-fw bwi-lg bwi-file\"\n                  *ngIf=\"!$any(a).downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n                <i\n                  class=\"bwi bwi-spinner bwi-lg bwi-fw bwi-spin\"\n                  *ngIf=\"$any(a).downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </td>\n              <td class=\"wrap\">\n                <div class=\"d-flex\">\n                  <a href=\"#\" appStopClick (click)=\"download(a)\">{{ a.fileName }}</a>\n                  <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                    <a\n                      href=\"https://bitwarden.com/help/attachments/#fixing-old-attachments\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <i\n                        class=\"bwi bwi-exclamation-triangle text-warning\"\n                        title=\"{{ 'attachmentFixDesc' | i18n }}\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span class=\"sr-only\">{{ \"attachmentFixDesc\" | i18n }}</span></a\n                    >\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                      (click)=\"reupload(a)\"\n                      #reuploadBtn\n                      [appApiAction]=\"reuploadPromises[a.id]\"\n                      [disabled]=\"$any(reuploadBtn).loading\"\n                    >\n                      {{ \"fix\" | i18n }}\n                    </button>\n                  </div>\n                </div>\n                <small>{{ a.sizeName }}</small>\n              </td>\n              <td class=\"table-list-options\" *ngIf=\"!viewOnly\">\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'delete' | i18n }}\"\n                  (click)=\"delete(a)\"\n                  #deleteBtn\n                  [appApiAction]=\"deletePromises[a.id]\"\n                  [disabled]=\"$any(deleteBtn).loading\"\n                >\n                  <i\n                    class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                    [hidden]=\"$any(deleteBtn).loading\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <i\n                    class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                    [hidden]=\"!$any(deleteBtn).loading\"\n                    title=\"{{ 'loading' | i18n }}\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!viewOnly\">\n          <h3>{{ \"newAttachment\" | i18n }}</h3>\n          <label for=\"file\" class=\"sr-only\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n          <small class=\"form-text text-muted\">{{ \"maxFileSize\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  protected override componentName = \"app-vault-attachments\";\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.showFixOldAttachments(attachment)) {\n      await this.reuploadCipherAttachment(attachment, false);\n    }\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.cipher.organizationId == null;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"../../vault/attachments.component\";\n\n@Component({\n  selector: \"app-org-vault-attachments\",\n  templateUrl: \"../../vault/attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  organization: Organization;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      stateService,\n      platformUtilsService,\n      apiService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n      await super.reuploadCipherAttachment(attachment, true);\n    }\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(\n      this.cipherDomain,\n      file,\n      this.organization.canEditAnyCollection\n    );\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipherAttachment(attachmentId);\n    }\n    return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.organization.canEditAnyCollection;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"collectionsTitle\">\n          {{ \"collections\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"collectionsDesc\" | i18n }}</p>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"$any(c).checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCollectionsRequest } from \"@bitwarden/common/models/request/cipher-collections.request\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"../../vault/collections.component\";\n\n@Component({\n  selector: \"app-org-vault-collections\",\n  templateUrl: \"../../vault/collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    this.allowSelectNone = true;\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canViewAllCollections) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected loadCipherCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCipherCollections();\n    }\n    return this.collectionIds;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected saveCollections() {\n    if (this.organization.canEditAnyCollection) {\n      const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n      return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n    } else {\n      return super.saveCollections();\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\nimport { VaultFilterService } from \"../services/vault-filter.service\";\n\n@Directive()\nexport class VaultFilterComponent implements OnInit {\n  @Input() activeFilter: VaultFilter = new VaultFilter();\n  @Input() hideFolders = false;\n  @Input() hideCollections = false;\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Input() hideOrganizations = false;\n\n  @Output() onFilterChange = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter<never>();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  isLoaded = false;\n  collapsedFilterNodes: Set<string>;\n  organizations: Organization[];\n  activePersonalOwnershipPolicy: boolean;\n  activeSingleOrganizationPolicy: boolean;\n  collections: DynamicTreeNode<CollectionView>;\n  folders$: Observable<DynamicTreeNode<FolderView>>;\n\n  constructor(protected vaultFilterService: VaultFilterService) {}\n\n  get displayCollections() {\n    return this.collections?.fullList != null && this.collections.fullList.length > 0;\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.collapsedFilterNodes = await this.vaultFilterService.buildCollapsedFilterNodes();\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    if (this.organizations != null && this.organizations.length > 0) {\n      this.activePersonalOwnershipPolicy =\n        await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n      this.activeSingleOrganizationPolicy =\n        await this.vaultFilterService.checkForSingleOrganizationPolicy();\n    }\n    this.folders$ = await this.vaultFilterService.buildNestedFolders();\n    this.collections = await this.initCollections();\n    this.isLoaded = true;\n  }\n\n  // overwritten in web for organization vaults\n  async initCollections() {\n    return await this.vaultFilterService.buildCollections();\n  }\n\n  async toggleFilterNodeCollapseState(node: ITreeNodeObject) {\n    if (this.collapsedFilterNodes.has(node.id)) {\n      this.collapsedFilterNodes.delete(node.id);\n    } else {\n      this.collapsedFilterNodes.add(node.id);\n    }\n    await this.vaultFilterService.storeCollapsedFilterNodes(this.collapsedFilterNodes);\n  }\n\n  async applyFilter(filter: VaultFilter) {\n    if (filter.refreshCollectionsAndFolders) {\n      await this.reloadCollectionsAndFolders(filter);\n      filter = await this.pruneInvalidatedFilterSelections(filter);\n    }\n    this.onFilterChange.emit(filter);\n  }\n\n  async reloadCollectionsAndFolders(filter: VaultFilter) {\n    this.folders$ = await this.vaultFilterService.buildNestedFolders(filter.selectedOrganizationId);\n    this.collections = filter.myVaultOnly\n      ? null\n      : await this.vaultFilterService.buildCollections(filter.selectedOrganizationId);\n  }\n\n  async reloadOrganizations() {\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    this.activePersonalOwnershipPolicy =\n      await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n    this.activeSingleOrganizationPolicy =\n      await this.vaultFilterService.checkForSingleOrganizationPolicy();\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  protected async pruneInvalidatedFilterSelections(filter: VaultFilter): Promise<VaultFilter> {\n    filter = await this.pruneInvalidFolderSelection(filter);\n    filter = this.pruneInvalidCollectionSelection(filter);\n    return filter;\n  }\n\n  protected async pruneInvalidFolderSelection(filter: VaultFilter): Promise<VaultFilter> {\n    if (\n      filter.selectedFolder &&\n      !(await firstValueFrom(this.folders$))?.hasId(filter.selectedFolderId)\n    ) {\n      filter.selectedFolder = false;\n      filter.selectedFolderId = null;\n    }\n    return filter;\n  }\n\n  protected pruneInvalidCollectionSelection(filter: VaultFilter): VaultFilter {\n    if (\n      filter.myVaultOnly ||\n      (filter.selectedCollection &&\n        filter.selectedCollectionId != null &&\n        !this.collections?.hasId(filter.selectedCollectionId))\n    ) {\n      filter.selectedCollection = false;\n      filter.selectedCollectionId = null;\n    }\n    return filter;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class CollectionFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() collectionNodes: DynamicTreeNode<CollectionView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly collectionsGrouping: TopLevelTreeNode = {\n    id: \"collections\",\n    name: \"collections\",\n  };\n\n  get collections() {\n    return this.collectionNodes?.fullList;\n  }\n\n  get nestedCollections() {\n    return this.collectionNodes?.nestedList;\n  }\n\n  get show() {\n    return !this.hide && this.collections != null && this.collections.length > 0;\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  applyFilter(collection: CollectionView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedCollection = true;\n    this.activeFilter.selectedCollectionId = collection.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <div class=\"filter-heading\">\n    <button\n      (click)=\"toggleCollapse(collectionsGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(collectionsGrouping)\"\n      aria-controls=\"collection-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n      class=\"toggle-button\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(collectionsGrouping),\n          'bwi-angle-down': !isCollapsed(collectionsGrouping)\n        }\"\n        aria-hidden=\"true\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ collectionsGrouping.name | i18n }}</h3>\n  </div>\n  <ul id=\"collection-filters\" *ngIf=\"!isCollapsed(collectionsGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveCollections let-collections>\n      <li\n        *ngFor=\"let c of collections\"\n        [ngClass]=\"{\n          active: c.node.id === activeFilter.selectedCollectionId && activeFilter.selectedCollection\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            class=\"toggle-button\"\n            *ngIf=\"c.children.length\"\n            (click)=\"toggleCollapse(c.node)\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            [attr.aria-expanded]=\"!isCollapsed(c.node)\"\n            [attr.aria-controls]=\"c.node.name + '_children'\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(c.node),\n                'bwi-angle-down': !isCollapsed(c.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(c.node)\">\n            <i\n              *ngIf=\"c.children.length === 0\"\n              class=\"bwi bwi-collection bwi-fw\"\n              aria-hidden=\"true\"\n            ></i\n            >&nbsp;{{ c.node.name }}\n          </button>\n        </span>\n        <ul\n          [id]=\"c.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"c.children.length && !isCollapsed(c.node)\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: c.children }\"\n          >\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: nestedCollections }\"\n    >\n    </ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { CollectionFilterComponent as BaseCollectionFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/collection-filter.component\";\n\n@Component({\n  selector: \"app-collection-filter\",\n  templateUrl: \"collection-filter.component.html\",\n})\nexport class CollectionFilterComponent extends BaseCollectionFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/tree-node\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class FolderFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() folderNodes: DynamicTreeNode<FolderView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  get folders() {\n    return this.folderNodes?.fullList;\n  }\n\n  get nestedFolders() {\n    return this.folderNodes?.nestedList;\n  }\n\n  readonly foldersGrouping: TopLevelTreeNode = {\n    id: \"folders\",\n    name: \"folders\",\n  };\n\n  applyFilter(folder: FolderView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedFolder = true;\n    this.activeFilter.selectedFolderId = folder.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <div class=\"filter-heading\">\n    <button\n      class=\"toggle-button\"\n      (click)=\"toggleCollapse(foldersGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(foldersGrouping)\"\n      aria-controls=\"folder-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        aria-hidden=\"true\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(foldersGrouping),\n          'bwi-angle-down': !isCollapsed(foldersGrouping)\n        }\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ \"folders\" | i18n }}</h3>\n    <button\n      class=\"text-muted ml-auto add-button\"\n      (click)=\"addFolder()\"\n      appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <ul id=\"folder-filters\" *ngIf=\"!isCollapsed(foldersGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveFolders let-folders>\n      <li\n        *ngFor=\"let f of folders\"\n        [ngClass]=\"{\n          active: f.node.id === activeFilter.selectedFolderId && activeFilter.selectedFolder\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            *ngIf=\"f.children.length\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            (click)=\"toggleCollapse(f.node)\"\n            [attr.aria-expanded]=\"!isCollapsed(f.node)\"\n            [attr.aria-controls]=\"f.node.name + '_children'\"\n            class=\"toggle-button\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(f.node),\n                'bwi-angle-down': !isCollapsed(f.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(f.node)\">\n            <i *ngIf=\"f.children.length === 0\" class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i\n            >&nbsp;{{ f.node.name }}\n          </button>\n          <button\n            class=\"edit-button\"\n            (click)=\"editFolder(f.node)\"\n            appA11yTitle=\"{{ 'editFolder' | i18n }}\"\n            *ngIf=\"f.node.id\"\n          >\n            <i class=\"bwi bwi-pencil bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </span>\n        <ul\n          [id]=\"f.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"f.children.length && !isCollapsed(f.node)\"\n        >\n          <ng-container *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: f.children }\">\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: nestedFolders }\"\n    ></ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { FolderFilterComponent as BaseFolderFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/folder-filter.component\";\n\n@Component({\n  selector: \"app-folder-filter\",\n  templateUrl: \"folder-filter.component.html\",\n})\nexport class FolderFilterComponent extends BaseFolderFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherStatus } from \"../models/cipher-status.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class StatusFilterComponent {\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Input() activeFilter: VaultFilter;\n\n  get show() {\n    return !(this.hideFavorites && this.hideTrash);\n  }\n\n  applyFilter(cipherStatus: CipherStatus) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.status = cipherStatus;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <ul class=\"filter-options\">\n    <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.status === 'all' }\">\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('all')\">\n          <i class=\"bwi bwi-fw bwi-filter\" aria-hidden=\"true\"></i>&nbsp;{{ \"allItems\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideFavorites\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'favorites' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('favorites')\">\n          <i class=\"bwi bwi-fw bwi-star\" aria-hidden=\"true\"></i>&nbsp;{{ \"favorites\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideTrash\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'trash' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('trash')\">\n          <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>&nbsp;{{ \"trash\" | i18n }}\n        </button>\n      </span>\n    </li>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { StatusFilterComponent as BaseStatusFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/status-filter.component\";\n\n@Component({\n  selector: \"app-status-filter\",\n  templateUrl: \"status-filter.component.html\",\n})\nexport class StatusFilterComponent extends BaseStatusFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/tree-node\";\n\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class TypeFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() selectedCipherType: CipherType = null;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly typesNode: TopLevelTreeNode = {\n    id: \"types\",\n    name: \"types\",\n  };\n\n  cipherTypeEnum = CipherType; // used in the template\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.typesNode.id);\n  }\n\n  applyFilter(cipherType: CipherType) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.cipherType = cipherType;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.typesNode);\n  }\n}\n","<div class=\"filter-heading\">\n  <button\n    class=\"toggle-button\"\n    [attr.aria-expanded]=\"!isCollapsed\"\n    aria-controls=\"type-filters\"\n    (click)=\"toggleCollapse()\"\n    title=\"{{ 'toggleCollapse' | i18n }}\"\n  >\n    <i\n      class=\"bwi bwi-fw\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{\n        'bwi-angle-right': isCollapsed,\n        'bwi-angle-down': !isCollapsed\n      }\"\n    ></i>\n  </button>\n  <h3>&nbsp;{{ \"types\" | i18n }}</h3>\n</div>\n<ul id=\"type-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Login }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Login)\">\n        <i class=\"bwi bwi-fw bwi-globe\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeLogin\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Card }\">\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Card)\">\n        <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeCard\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Identity }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Identity)\">\n        <i class=\"bwi bwi-fw bwi-id-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeIdentity\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.SecureNote }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.SecureNote)\">\n        <i class=\"bwi bwi-fw bwi-sticky-note\" aria-hidden=\"true\"></i>&nbsp;{{\n          \"typeSecureNote\" | i18n\n        }}\n      </button>\n    </span>\n  </li>\n</ul>\n","import { Component } from \"@angular/core\";\n\nimport { TypeFilterComponent as BaseTypeFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/type-filter.component\";\n\n@Component({\n  selector: \"app-type-filter\",\n  templateUrl: \"type-filter.component.html\",\n})\nexport class TypeFilterComponent extends BaseTypeFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/tree-node\";\n\nimport { DisplayMode } from \"../models/display-mode\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class OrganizationFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() organizations: Organization[];\n  @Input() activeFilter: VaultFilter;\n  @Input() activePersonalOwnershipPolicy: boolean;\n  @Input() activeSingleOrganizationPolicy: boolean;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  get displayMode(): DisplayMode {\n    let displayMode: DisplayMode = \"organizationMember\";\n    if (this.organizations == null || this.organizations.length < 1) {\n      displayMode = \"noOrganizations\";\n    } else if (this.activePersonalOwnershipPolicy && !this.activeSingleOrganizationPolicy) {\n      displayMode = \"personalOwnershipPolicy\";\n    } else if (!this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationPolicy\";\n    } else if (this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationAndPersonalOwnershipPolicies\";\n    }\n\n    return displayMode;\n  }\n\n  get hasActiveFilter() {\n    return this.activeFilter.myVaultOnly || this.activeFilter.selectedOrganizationId != null;\n  }\n\n  readonly organizationGrouping: TopLevelTreeNode = {\n    id: \"vaults\",\n    name: \"allVaults\",\n  };\n\n  async applyOrganizationFilter(organization: Organization) {\n    this.activeFilter.selectedOrganizationId = organization.id;\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  async applyMyVaultFilter() {\n    this.activeFilter.selectedOrganizationId = null;\n    this.activeFilter.myVaultOnly = true;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  clearFilter() {\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.selectedOrganizationId = null;\n    this.applyFilter(new VaultFilter(this.activeFilter));\n  }\n\n  private applyFilter(filter: VaultFilter) {\n    this.onFilterChange.emit(filter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.organizationGrouping);\n  }\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.organizationGrouping.id);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-enroll-master-password-reset\",\n  templateUrl: \"enroll-master-password-reset.component.html\",\n})\nexport class EnrollMasterPasswordReset {\n  organization: Organization;\n\n  verification: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private modalRef: ModalRef,\n    config: ModalConfig,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    this.organization = config.data.organization;\n  }\n\n  async submit() {\n    let toastStringRef = \"withdrawPasswordResetSuccess\";\n\n    this.formPromise = this.userVerificationService\n      .buildRequest(this.verification, OrganizationUserResetPasswordEnrollmentRequest)\n      .then(async (request) => {\n        // Set variables\n        let keyString: string = null;\n\n        // Retrieve Public Key\n        const orgKeys = await this.organizationApiService.getKeys(this.organization.id);\n        if (orgKeys == null) {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n\n        const publicKey = Utils.fromB64ToArray(orgKeys.publicKey);\n\n        // RSA Encrypt user's encKey.key with organization public key\n        const encKey = await this.cryptoService.getEncKey();\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        keyString = encryptedKey.encryptedString;\n        toastStringRef = \"enrollPasswordResetSuccess\";\n\n        // Create request and execute enrollment\n        request.resetPasswordKey = keyString;\n        await this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n          this.organization.id,\n          this.organization.userId,\n          request\n        );\n\n        await this.syncService.fullSync(true);\n      });\n    try {\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(toastStringRef));\n      this.modalRef.close();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div\n  class=\"modal fade\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"enrollMasterPasswordResetTitle\"\n>\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"enrollMasterPasswordResetTitle\">\n          {{ \"enrollPasswordReset\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">\n          {{ \"resetPasswordEnrollmentWarning\" | i18n }}\n        </app-callout>\n        <app-user-verification [(ngModel)]=\"verification\" name=\"secret\"> </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"submit\" | i18n }}\n        </button>\n        <button\n          bitButton\n          buttonType=\"secondary\"\n          type=\"button\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span>\n            {{ \"cancel\" | i18n }}\n          </span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { AfterContentInit, Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-link-sso\",\n  templateUrl: \"link-sso.component.html\",\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n  @Input() organization: Organization;\n  returnUri = \"/settings/organizations\";\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    authService: AuthService,\n    router: Router,\n    route: ActivatedRoute,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    this.returnUri = \"/settings/organizations\";\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngAfterContentInit() {\n    this.identifier = this.organization.identifier;\n  }\n}\n","<a\n  class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main tw-no-underline hover:tw-bg-secondary-100 hover:tw-no-underline focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n  href=\"#\"\n  appStopClick\n  (click)=\"submit(returnUri, true)\"\n>\n  <i class=\"bwi bwi-fw bwi-link\" aria-hidden=\"true\"></i>\n  {{ \"linkSso\" | i18n }}\n</a>\n","<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted tw-m-2\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<div\n  *ngIf=\"loaded\"\n  class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\"\n  [appApiAction]=\"actionPromise\"\n>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && !organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n    {{ \"enrollPasswordReset\" | i18n }}\n  </button>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n    {{ \"withdrawPasswordReset\" | i18n }}\n  </button>\n  <ng-container *ngIf=\"organization.useSso && organization.identifier\">\n    <button\n      *ngIf=\"organization.ssoBound; else linkSso\"\n      class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n      (click)=\"unlinkSso(organization)\"\n    >\n      <i class=\"bwi bwi-fw bwi-chain-broken\" aria-hidden=\"true\"></i>\n      {{ \"unlinkSso\" | i18n }}\n    </button>\n    <ng-template #linkSso>\n      <app-link-sso [organization]=\"organization\"> </app-link-sso>\n    </ng-template>\n  </ng-container>\n  <button\n    class=\"text-danger tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"leave(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n    {{ \"leave\" | i18n }}\n  </button>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { map, Subject, takeUntil } from \"rxjs\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\nimport { EnrollMasterPasswordReset } from \"../../../organizations/users/enroll-master-password-reset.component\";\n\n@Component({\n  selector: \"app-organization-options\",\n  templateUrl: \"organization-options.component.html\",\n})\nexport class OrganizationOptionsComponent implements OnInit, OnDestroy {\n  actionPromise: Promise<void | boolean>;\n  policies: Policy[];\n  loaded = false;\n\n  @Input() organization: Organization;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private modalService: ModalService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService.policies$\n      .pipe(\n        map((policies) => policies.filter((policy) => policy.type === PolicyType.ResetPassword)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((policies) => {\n        this.policies = policies;\n        this.loaded = true;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  allowEnrollmentChanges(org: Organization): boolean {\n    if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n      const policy = this.policies.find((p) => p.organizationId === org.id);\n      if (policy != null && policy.enabled) {\n        return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n      }\n    }\n\n    return false;\n  }\n\n  showEnrolledStatus(org: Organization): boolean {\n    return (\n      org.useResetPassword &&\n      org.resetPasswordEnrolled &&\n      this.policies.some((p) => p.organizationId === org.id && p.enabled)\n    );\n  }\n\n  async unlinkSso(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"unlinkSsoConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, \"Unlinked SSO\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async leave(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.organizationApiService.leave(org.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async toggleResetPasswordEnrollment(org: Organization) {\n    if (!this.organization.resetPasswordEnrolled) {\n      this.modalService.open(EnrollMasterPasswordReset, {\n        allowMultipleModals: true,\n        data: {\n          organization: org,\n        },\n      });\n    } else {\n      // Remove reset password\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = \"ignored\";\n      request.resetPasswordKey = null;\n      this.actionPromise = this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n        this.organization.id,\n        this.organization.userId,\n        request\n      );\n      try {\n        await this.actionPromise;\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"withdrawPasswordResetSuccess\")\n        );\n        this.syncService.fullSync(true);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <ng-container [ngSwitch]=\"displayMode\">\n    <ng-container *ngSwitchCase=\"'noOrganizations'\">\n      <ul class=\"filter-options\">\n        <li class=\"filter-option active\">\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              [attr.aria-pressed]=\"activeFilter.myVaultOnly\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ 'myVault' | i18n }}\"\n            >\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'personalOwnershipPolicy'\">\n      <div class=\"filter-heading\">\n        <button\n          (click)=\"toggleCollapse()\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          class=\"toggle-button\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n          appA11yTitle=\"{{ 'vault' | i18n }}: {{ organizationGrouping.name | i18n }}\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              [ngClass]=\"{ 'disabled-organization': !organization.enabled }\"\n              (click)=\"applyOrganizationFilter(organization)\"\n              [attr.aria-pressed]=\"activeFilter.selectedOrganizationId === organization.id\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ organization.name }}\"\n            >\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <span class=\"ml-auto\">\n              <i\n                *ngIf=\"!organization.enabled\"\n                class=\"org-options bwi bwi-fw bwi-exclamation-triangle text-danger\"\n                attr.aria-label=\"{{ 'organizationIsDisabled' | i18n }}\"\n                appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n              ></i\n              ><button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </span>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'singleOrganizationAndPersonalOwnershipPolicies'\">\n      <div class=\"filter-heading\">\n        <button\n          class=\"filter-button active\"\n          [attr.aria-pressed]=\"activeFilter.selectedOrganizationId === organizations[0].id\"\n          appA11yTitle=\"{{ 'vault' | i18n }}: {{ organizations[0].name }}\"\n        >\n          <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n          {{ organizations[0].name }}\n        </button>\n        <span class=\"tw-ml-auto\">\n          <button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options\">\n            <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n          </button>\n          <bit-menu class=\"filter-organization-options\" #orgMenu>\n            <app-organization-options [organization]=\"organizations[0]\"></app-organization-options>\n          </bit-menu>\n        </span>\n      </div>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <div class=\"filter-heading\">\n        <button\n          class=\"toggle-button\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          (click)=\"toggleCollapse()\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n          appA11yTitle=\"{{ 'vault' | i18n }}: {{ organizationGrouping.name | i18n }}\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.myVaultOnly }\">\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              (click)=\"applyMyVaultFilter()\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ 'myVault' | i18n }}\"\n              [attr.aria-pressed]=\"activeFilter.myVaultOnly\"\n            >\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              [ngClass]=\"{ 'disabled-organization': !organization.enabled }\"\n              (click)=\"applyOrganizationFilter(organization)\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ organization.name }}\"\n            >\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <span class=\"ml-auto\">\n              <i\n                *ngIf=\"!organization.enabled\"\n                class=\"org-options bwi bwi-fw bwi-exclamation-triangle text-danger\"\n                appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n              ></i\n              ><button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </span>\n          </span>\n        </li>\n        <li class=\"filter-option\" *ngIf=\"!(displayMode === 'singleOrganizationPolicy')\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n  </ng-container>\n  <hr />\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationFilterComponent as BaseOrganizationFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/organization-filter.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-filter\",\n  templateUrl: \"organization-filter.component.html\",\n})\nexport class OrganizationFilterComponent extends BaseOrganizationFilterComponent {\n  displayText = \"allVaults\";\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {\n    super();\n  }\n\n  async applyOrganizationFilter(organization: Organization) {\n    if (organization.enabled) {\n      //proceed with default behaviour for enabled organizations\n      super.applyOrganizationFilter(organization);\n    } else {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n    }\n  }\n}\n","<div class=\"card vault-filters\">\n  <div class=\"container loading-spinner\" *ngIf=\"!isLoaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <div *ngIf=\"isLoaded\">\n    <div class=\"card-header d-flex\">\n      {{ \"filters\" | i18n }}\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/searching-vault/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"card-body\">\n      <input\n        type=\"search\"\n        placeholder=\"{{ (searchPlaceholder | i18n) || ('searchVault' | i18n) }}\"\n        id=\"search\"\n        class=\"form-control\"\n        [(ngModel)]=\"searchText\"\n        (input)=\"searchTextChanged()\"\n        autocomplete=\"off\"\n        appAutofocus\n      />\n      <app-organization-filter\n        [hide]=\"hideOrganizations\"\n        [activeFilter]=\"activeFilter\"\n        [collapsedFilterNodes]=\"collapsedFilterNodes\"\n        [organizations]=\"organizations\"\n        [activePersonalOwnershipPolicy]=\"activePersonalOwnershipPolicy\"\n        [activeSingleOrganizationPolicy]=\"activeSingleOrganizationPolicy\"\n        (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n        (onFilterChange)=\"applyFilter($event)\"\n      ></app-organization-filter>\n      <div class=\"filter\">\n        <app-status-filter\n          [hideFavorites]=\"hideFavorites\"\n          [hideTrash]=\"hideTrash\"\n          [activeFilter]=\"activeFilter\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-status-filter>\n      </div>\n      <div class=\"filter\">\n        <app-type-filter\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-type-filter>\n      </div>\n      <div class=\"filter\">\n        <app-folder-filter\n          [hide]=\"hideFolders\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [folderNodes]=\"folders$ | async\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n          (onAddFolder)=\"addFolder()\"\n          (onEditFolder)=\"editFolder($event)\"\n        ></app-folder-filter>\n      </div>\n      <div class=\"filter\">\n        <app-collection-filter\n          [hide]=\"hideCollections\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [collectionNodes]=\"collections\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-collection-filter>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/vault-filter.component\";\n\nimport { VaultFilterService } from \"./shared/vault-filter.service\";\n\n@Component({\n  selector: \"./app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  @Output() onSearchTextChanged = new EventEmitter<string>();\n\n  searchPlaceholder: string;\n  searchText = \"\";\n\n  constructor(protected vaultFilterService: VaultFilterService) {\n    // This empty constructor is required to provide the web vaultFilterService subclass to super()\n    // TODO: refactor this to use proper dependency injection\n    super(vaultFilterService);\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.vaultFilterService.collapsedFilterNodes$.subscribe((nodes) => {\n      this.collapsedFilterNodes = nodes;\n    });\n  }\n\n  searchTextChanged() {\n    this.onSearchTextChanged.emit(this.searchText);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"../../../vault/vault-filter/vault-filter.component\";\n\n@Component({\n  selector: \"app-organization-vault-filter\",\n  templateUrl: \"../../../vault/vault-filter/vault-filter.component.html\",\n})\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  hideOrganizations = true;\n  hideFavorites = true;\n  hideFolders = true;\n\n  organization: Organization;\n\n  async initCollections() {\n    if (this.organization.canEditAnyCollection) {\n      return await this.vaultFilterService.buildAdminCollections(this.organization.id);\n    }\n    return await this.vaultFilterService.buildCollections(this.organization.id);\n  }\n\n  async reloadCollectionsAndFolders() {\n    this.collections = await this.initCollections();\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Directive()\nexport class VaultItemsComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n  organization: Organization;\n  accessEvents = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { AvatarUpdateService } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-org-badge\",\n  templateUrl: \"organization-name-badge.component.html\",\n})\nexport class OrganizationNameBadgeComponent implements OnInit {\n  @Input() organizationName: string;\n  @Input() profileName: string;\n\n  @Output() onOrganizationClicked = new EventEmitter<string>();\n\n  color: string;\n  textColor: string;\n  isMe: boolean;\n\n  constructor(\n    private i18nService: I18nService,\n    private avatarService: AvatarUpdateService,\n    private tokenService: TokenService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (this.organizationName == null || this.organizationName === \"\") {\n      this.organizationName = this.i18nService.t(\"me\");\n      this.isMe = true;\n    }\n    if (this.isMe) {\n      this.color = await this.avatarService.loadColorFromState();\n      if (this.color == null) {\n        const userName =\n          (await this.tokenService.getName()) ?? (await this.tokenService.getEmail());\n        this.color = Utils.stringToColor(userName.toUpperCase());\n      }\n    } else {\n      this.color = Utils.stringToColor(this.organizationName);\n    }\n    this.textColor = Utils.pickTextColorBasedOnBgColor(this.color, 135, true) + \"!important\";\n  }\n\n  emitOnOrganizationClicked() {\n    this.onOrganizationClicked.emit();\n  }\n}\n","<button\n  bitBadge\n  [style.color]=\"textColor\"\n  [style.background-color]=\"color\"\n  appA11yTitle=\"{{ organizationName }}\"\n  (click)=\"emitOnOrganizationClicked()\"\n>\n  {{ organizationName | ellipsis: 13 }}\n</button>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Pipe({\n  name: \"orgNameFromId\",\n  pure: true,\n})\nexport class GetOrgNameFromIdPipe implements PipeTransform {\n  transform(value: string, organizations: Organization[]) {\n    const orgName = organizations.find((o) => o.id === value)?.name;\n    return orgName;\n  }\n}\n","<ng-container *ngIf=\"isPaging() ? pagedCiphers : ciphers as filteredCiphers\">\n  <table\n    class=\"table table-hover table-list table-ciphers\"\n    *ngIf=\"filteredCiphers.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of filteredCiphers\">\n        <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\">\n          <input type=\"checkbox\" [(ngModel)]=\"$any(c).checked\" appStopProp />\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"table-list-icon\">\n          <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\">\n          <a\n            appStopProp\n            [routerLink]=\"[]\"\n            [queryParams]=\"{ itemId: c.id }\"\n            queryParamsHandling=\"merge\"\n            title=\"{{ 'editItem' | i18n }}\"\n            >{{ c.name }}</a\n          >\n          <ng-container *ngIf=\"c.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip\"\n              appStopProp\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            <ng-container *ngIf=\"showFixOldAttachments(c)\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-warning\"\n                appStopProp\n                title=\"{{ 'attachmentsNeedFix' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachmentsNeedFix\" | i18n }}</span>\n            </ng-container>\n          </ng-container>\n          <br />\n          <small appStopProp>{{ c.subTitle }}</small>\n        </td>\n        <td *ngIf=\"organizations.length > 0 && !organization\" class=\"tw-w-28\">\n          <app-org-badge\n            organizationName=\"{{ c.organizationId | orgNameFromId: organizations }}\"\n            profileName=\"{{ profileName }}\"\n            (onOrganizationClicked)=\"onOrganizationClicked(c.organizationId)\"\n          >\n          </app-org-badge>\n        </td>\n        <td class=\"table-list-options\">\n          <button\n            [bitMenuTriggerFor]=\"cipherOptions\"\n            class=\"tw-border-none tw-bg-transparent tw-text-main\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          >\n            <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <bit-menu #cipherOptions>\n            <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n              <button bitMenuItem (click)=\"copy(c, c.login.username, 'username', 'Username')\">\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyUsername\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.password, 'password', 'Password')\"\n                *ngIf=\"c.viewPassword\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyPassword\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\"\n                *ngIf=\"displayTotpCopyButton(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyVerificationCode\" | i18n }}\n              </button>\n              <button bitMenuItem *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\">\n                <i class=\"bwi bwi-fw bwi-share-square\" aria-hidden=\"true\"></i>\n                {{ \"launch\" | i18n }}\n              </button>\n            </ng-container>\n            <button bitMenuItem (click)=\"attachments(c)\">\n              <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n              {{ \"attachments\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n              (click)=\"clone(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-files\" aria-hidden=\"true\"></i>\n              {{ \"clone\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"!organization && !c.organizationId && !c.isDeleted\"\n              (click)=\"share(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n              {{ \"moveToOrganization\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && !c.isDeleted\" (click)=\"collections(c)\">\n              <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n              {{ \"collections\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\">\n              <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n              {{ \"eventLogs\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"restore(c)\" *ngIf=\"c.isDeleted\">\n              <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n              {{ \"restore\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"delete(c)\">\n              <span class=\"tw-text-danger\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ (c.isDeleted ? \"permanentlyDelete\" : \"delete\") | i18n }}\n              </span>\n            </button>\n          </bit-menu>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\">\n    <ng-container *ngIf=\"!loaded\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n      <bit-icon [icon]=\"noItemIcon\" aria-hidden=\"true\"></bit-icon>\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n        <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\n\nimport { VaultItemsComponent as BaseVaultItemsComponent } from \"@bitwarden/angular/components/vault-items.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { Icons } from \"@bitwarden/components\";\n\nconst MaxCheckedCount = 500;\n\n@Component({\n  selector: \"app-vault-items\",\n  templateUrl: \"vault-items.component.html\",\n})\nexport class VaultItemsComponent extends BaseVaultItemsComponent implements OnDestroy {\n  @Input() showAddNew = true;\n  @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n  @Output() onShareClicked = new EventEmitter<CipherView>();\n  @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n  @Output() onCloneClicked = new EventEmitter<CipherView>();\n  @Output() onOrganzationBadgeClicked = new EventEmitter<string>();\n\n  pagedCiphers: CipherView[] = [];\n  pageSize = 200;\n  cipherType = CipherType;\n  actionPromise: Promise<any>;\n  userHasPremiumAccess = false;\n  organizations: Organization[] = [];\n  profileName: string;\n  noItemIcon = Icons.Search;\n\n  private didScroll = false;\n  private pagedCiphersCount = 0;\n  private refreshing = false;\n\n  constructor(\n    searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cipherService: CipherService,\n    protected eventCollectionService: EventCollectionService,\n    protected totpService: TotpService,\n    protected stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private tokenService: TokenService\n  ) {\n    super(searchService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  // load() is called after the page loads and the first sync has completed.\n  // Do not use ngOnInit() for anything that requires sync data.\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    await super.load(filter, deleted);\n    this.profileName = await this.tokenService.getName();\n    this.organizations = await this.organizationService.getAll();\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  loadMore() {\n    if (this.ciphers.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCiphers.length;\n    let pagedSize = this.pageSize;\n    if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n      pagedSize = this.pagedCiphersCount;\n    }\n    if (this.ciphers.length > pagedLength) {\n      this.pagedCiphers = this.pagedCiphers.concat(\n        this.ciphers.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCiphersCount = this.pagedCiphers.length;\n    this.didScroll = this.pagedCiphers.length > this.pageSize;\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter, this.deleted);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.ciphers.length > this.pageSize;\n  }\n\n  async resetPaging() {\n    this.pagedCiphers = [];\n    this.loadMore();\n  }\n\n  async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n    this.resetPaging();\n  }\n\n  launch(uri: string) {\n    this.platformUtilsService.launchUri(uri);\n  }\n\n  async attachments(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onAttachmentsClicked.emit(c);\n  }\n\n  async share(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onShareClicked.emit(c);\n  }\n\n  collections(c: CipherView) {\n    this.onCollectionsClicked.emit(c);\n  }\n\n  async clone(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onCloneClicked.emit(c);\n  }\n\n  async delete(c: CipherView): Promise<boolean> {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    if (this.actionPromise != null) {\n      return;\n    }\n    const permanent = c.isDeleted;\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        permanent ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(permanent ? \"permanentlyDeleteItem\" : \"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.deleteCipher(c.id, permanent);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(permanent ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(c: CipherView): Promise<boolean> {\n    if (this.actionPromise != null || !c.isDeleted) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.cipherService.restoreWithServer(c.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.repromptCipher(cipher))\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledHiddenFieldVisible,\n        cipher.id\n      );\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventCollectionService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n    const selectCount =\n      select && this.ciphers.length > MaxCheckedCount ? MaxCheckedCount : this.ciphers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkCipher(this.ciphers[i], select);\n    }\n  }\n\n  checkCipher(c: CipherView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  getSelected(): CipherView[] {\n    if (this.ciphers == null) {\n      return [];\n    }\n    return this.ciphers.filter((c) => !!(c as any).checked);\n  }\n\n  getSelectedIds(): string[] {\n    return this.getSelected().map((c) => c.id);\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (await this.repromptCipher(cipher)) {\n      super.selectCipher(cipher);\n    }\n  }\n\n  onOrganizationClicked(organizationId: string) {\n    this.onOrganzationBadgeClicked.emit(organizationId);\n  }\n\n  events(c: CipherView) {\n    // TODO: This should be removed but is needed since we reuse the same template\n  }\n\n  protected deleteCipher(id: string, permanent: boolean) {\n    return permanent\n      ? this.cipherService.deleteWithServer(id)\n      : this.cipherService.softDeleteWithServer(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return c.hasOldAttachments && c.organizationId == null;\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { VaultItemsComponent as BaseVaultItemsComponent } from \"../../vault/vault-items.component\";\n\n@Component({\n  selector: \"app-org-vault-items\",\n  templateUrl: \"../../vault/vault-items.component.html\",\n})\nexport class VaultItemsComponent extends BaseVaultItemsComponent {\n  @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n  protected allCiphers: CipherView[] = [];\n\n  constructor(\n    searchService: SearchService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cipherService: CipherService,\n    eventCollectionService: EventCollectionService,\n    totpService: TotpService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    stateService: StateService,\n    organizationService: OrganizationService,\n    tokenService: TokenService,\n    private apiService: ApiService\n  ) {\n    super(\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cipherService,\n      eventCollectionService,\n      totpService,\n      stateService,\n      passwordRepromptService,\n      logService,\n      organizationService,\n      tokenService\n    );\n  }\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    if (this.organization.canEditAnyCollection) {\n      this.accessEvents = this.organization.useEvents;\n      this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    } else {\n      this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(\n        (c) => c.organizationId === this.organization.id\n      );\n    }\n    await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    if (this.organization.canViewAllCollections) {\n      await super.applyFilter(filter);\n    } else {\n      const f = (c: CipherView) =>\n        c.organizationId === this.organization.id && (filter == null || filter(c));\n      await super.applyFilter(f);\n    }\n  }\n\n  async search(timeout: number = null) {\n    await super.search(timeout, this.allCiphers);\n  }\n\n  events(c: CipherView) {\n    this.onEventsClicked.emit(c);\n  }\n\n  protected deleteCipher(id: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher(id, this.deleted);\n    }\n    return this.deleted\n      ? this.apiService.deleteCipherAdmin(id)\n      : this.apiService.putDeleteCipherAdmin(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return this.organization.canEditAnyCollection && c.hasOldAttachments;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherBulkDeleteRequest } from \"@bitwarden/common/models/request/cipher-bulk-delete.request\";\n\n@Component({\n  selector: \"app-vault-bulk-delete\",\n  templateUrl: \"bulk-delete.component.html\",\n})\nexport class BulkDeleteComponent {\n  @Input() cipherIds: string[] = [];\n  @Input() permanent = false;\n  @Input() organization: Organization;\n  @Output() onDeleted = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async submit() {\n    if (!this.organization || !this.organization.canEditAnyCollection) {\n      await this.deleteCiphers();\n    } else {\n      await this.deleteCiphersAdmin();\n    }\n\n    await this.formPromise;\n\n    this.onDeleted.emit();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(this.permanent ? \"permanentlyDeletedItems\" : \"deletedItems\")\n    );\n  }\n\n  private async deleteCiphers() {\n    if (this.permanent) {\n      this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n    } else {\n      this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n    }\n  }\n\n  private async deleteCiphersAdmin() {\n    const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n    if (this.permanent) {\n      this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n    } else {\n      this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteSelectedTitle\">\n          {{ (permanent ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{\n          (permanent ? \"permanentlyDeleteSelectedItemsDesc\" : \"deleteSelectedItemsDesc\")\n            | i18n: cipherIds.length\n        }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-danger btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (permanent ? \"permanentlyDelete\" : \"delete\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"moveSelectedTitle\">\n          {{ \"moveSelected\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveSelectedItemsDesc\" | i18n: cipherIds.length }}</p>\n        <div class=\"form-group\">\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\">\n            <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\n@Component({\n  selector: \"app-vault-bulk-move\",\n  templateUrl: \"bulk-move.component.html\",\n})\nexport class BulkMoveComponent implements OnInit {\n  @Input() cipherIds: string[] = [];\n  @Output() onMoved = new EventEmitter();\n\n  folderId: string = null;\n  folders$: Observable<FolderView[]>;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService\n  ) {}\n\n  async ngOnInit() {\n    this.folders$ = this.folderService.folderViews$;\n    this.folderId = (await firstValueFrom(this.folders$))[0].id;\n  }\n\n  async submit() {\n    this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n    await this.formPromise;\n    this.onMoved.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"movedItems\"));\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-bulk-restore\",\n  templateUrl: \"bulk-restore.component.html\",\n})\nexport class BulkRestoreComponent {\n  @Input() cipherIds: string[] = [];\n  @Output() onRestored = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async submit() {\n    this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n    await this.formPromise;\n    this.onRestored.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItems\"));\n  }\n}\n","type CheckableBase = {\n  checked?: boolean;\n};\n\nexport type Checkable<T> = T & CheckableBase;\n\nexport function isChecked(item: CheckableBase): boolean {\n  return !!item.checked;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"restoreSelectedTitle\">\n          {{ \"restoreSelected\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"restoreSelectedItemsDesc\" | i18n: cipherIds.length }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"restore\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"moveSelectedToOrgTitle\">\n          {{ \"moveSelectedToOrg\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveManyToOrgDesc\" | i18n }}</p>\n        <p>\n          {{\n            \"moveSelectedItemsCountDesc\"\n              | i18n: this.ciphers.length:shareableCiphers.length:nonShareableCount\n          }}\n        </p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"$any(c).checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\n\n@Component({\n  selector: \"app-vault-bulk-share\",\n  templateUrl: \"bulk-share.component.html\",\n})\nexport class BulkShareComponent implements OnInit {\n  @Input() ciphers: CipherView[] = [];\n  @Input() organizationId: string;\n  @Output() onShared = new EventEmitter();\n\n  nonShareableCount = 0;\n  collections: Checkable<CollectionView>[] = [];\n  organizations: Organization[] = [];\n  shareableCiphers: CipherView[] = [];\n  formPromise: Promise<void>;\n\n  private writeableCollections: CollectionView[] = [];\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.shareableCiphers = this.ciphers.filter(\n      (c) => !c.hasOldAttachments && c.organizationId == null\n    );\n    this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n    this.organizations = await this.organizationService.getAll();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  filterCollections() {\n    this.selectAll(false);\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit() {\n    const checkedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    try {\n      this.formPromise = this.cipherService.shareManyWithServer(\n        this.shareableCiphers,\n        this.organizationId,\n        checkedCollectionIds\n      );\n      await this.formPromise;\n      this.onShared.emit();\n      const orgName =\n        this.organizations.find((o) => o.id === this.organizationId)?.name ??\n        this.i18nService.t(\"organization\");\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"movedItemsToOrg\", orgName)\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  check(c: Checkable<CollectionView>, select?: boolean) {\n    c.checked = select == null ? !c.checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n\n  get canSave() {\n    if (\n      this.shareableCiphers != null &&\n      this.shareableCiphers.length > 0 &&\n      this.collections != null\n    ) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"dropdown mr-2\" appListDropdown>\n  <button\n    class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n    type=\"button\"\n    id=\"bulkActionsButton\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n    appA11yTitle=\"{{ 'options' | i18n }}\"\n  >\n    <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n  </button>\n  <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkMove()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i>\n      {{ \"moveSelected\" | i18n }}\n    </button>\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkShare()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n      {{ \"moveSelectedToOrg\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\">\n      <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n      {{ \"restoreSelected\" | i18n }}\n    </button>\n    <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\n      <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n      {{ (deleted ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n    </button>\n    <div class=\"dropdown-divider\"></div>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n      <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n      {{ \"selectAll\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n      <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n      {{ \"unselectAll\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-template #bulkDeleteTemplate></ng-template>\n<ng-template #bulkRestoreTemplate></ng-template>\n<ng-template #bulkMoveTemplate></ng-template>\n<ng-template #bulkShareTemplate></ng-template>\n","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BulkDeleteComponent } from \"./bulk-delete.component\";\nimport { BulkMoveComponent } from \"./bulk-move.component\";\nimport { BulkRestoreComponent } from \"./bulk-restore.component\";\nimport { BulkShareComponent } from \"./bulk-share.component\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\n\n@Component({\n  selector: \"app-vault-bulk-actions\",\n  templateUrl: \"bulk-actions.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class BulkActionsComponent {\n  @Input() vaultItemsComponent: VaultItemsComponent;\n  @Input() deleted: boolean;\n  @Input() organization: Organization;\n\n  @ViewChild(\"bulkDeleteTemplate\", { read: ViewContainerRef, static: true })\n  bulkDeleteModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRestoreTemplate\", { read: ViewContainerRef, static: true })\n  bulkRestoreModalRef: ViewContainerRef;\n  @ViewChild(\"bulkMoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkMoveModalRef: ViewContainerRef;\n  @ViewChild(\"bulkShareTemplate\", { read: ViewContainerRef, static: true })\n  bulkShareModalRef: ViewContainerRef;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async bulkDelete() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.vaultItemsComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkDeleteComponent,\n      this.bulkDeleteModalRef,\n      (comp) => {\n        comp.permanent = this.deleted;\n        comp.cipherIds = selectedIds;\n        comp.organization = this.organization;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeleted.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkRestore() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.vaultItemsComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRestoreComponent,\n      this.bulkRestoreModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestored.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkShare() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedCiphers = this.vaultItemsComponent.getSelected();\n    if (selectedCiphers.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkShareComponent,\n      this.bulkShareModalRef,\n      (comp) => {\n        comp.ciphers = selectedCiphers;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onShared.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkMove() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.vaultItemsComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkMoveComponent,\n      this.bulkMoveModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onMoved.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  selectAll(select: boolean) {\n    this.vaultItemsComponent.selectAll(select);\n  }\n\n  private async promptPassword() {\n    const selectedCiphers = this.vaultItemsComponent.getSelected();\n    const notProtected = !selectedCiphers.find(\n      (cipher) => cipher.reprompt !== CipherRepromptType.None\n    );\n\n    return notProtected || (await this.passwordRepromptService.showPasswordPrompt());\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-organization-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-organization-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"vaultItemsComponent.actionPromise\">\n            <ng-container *ngIf=\"$any(actionSpinner).loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [vaultItemsComponent]=\"vaultItemsComponent\"\n            [deleted]=\"deleted\"\n            [organization]=\"organization\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm ml-auto\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!deleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"bwi bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-org-vault-items\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onEventsClicked)=\"viewEvents($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-org-vault-items>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { VaultService } from \"../../vault/shared/vault.service\";\nimport { EntityEventsComponent } from \"../manage/entity-events.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\n\nconst BroadcasterSubscriptionId = \"OrgVaultComponent\";\n\n@Component({\n  selector: \"app-org-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true })\n  vaultFilterComponent: VaultFilterComponent;\n  @ViewChild(VaultItemsComponent, { static: true }) vaultItemsComponent: VaultItemsComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n\n  organization: Organization;\n  collectionId: string = null;\n  type: CipherType = null;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  // This is a hack to avoid redundant api calls that fetch OrganizationVaultFilterComponent collections\n  // When it makes sense to do so we should leverage some other communication method for change events that isn't directly tied to the query param for organizationId\n  // i.e. exposing the VaultFiltersService to the OrganizationSwitcherComponent to make relevant updates from a change event instead of just depending on the router\n  firstLoaded = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private messagingService: MessagingService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  ngOnInit() {\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params: any) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.vaultFilterComponent.organization = this.organization;\n      this.vaultItemsComponent.organization = this.organization;\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.vaultItemsComponent.searchText = this.vaultFilterComponent.searchText = qParams.search;\n        if (!this.organization.canViewAllCollections) {\n          await this.syncService.fullSync(false);\n          this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n              switch (message.command) {\n                case \"syncCompleted\":\n                  if (message.successfully) {\n                    await Promise.all([\n                      this.vaultFilterComponent.reloadCollectionsAndFolders(),\n                      this.vaultItemsComponent.refresh(),\n                    ]);\n                    this.changeDetectorRef.detectChanges();\n                  }\n                  break;\n              }\n            });\n          });\n        }\n\n        if (this.firstLoaded) {\n          await this.vaultFilterComponent.reloadCollectionsAndFolders();\n        }\n        this.firstLoaded = true;\n\n        await this.vaultItemsComponent.reload();\n\n        if (qParams.viewEvents != null) {\n          const cipher = this.vaultItemsComponent.ciphers.filter(\n            (c) => c.id === qParams.viewEvents\n          );\n          if (cipher.length > 0) {\n            this.viewEvents(cipher[0]);\n          }\n        }\n\n        /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n        this.route.queryParams.subscribe(async (params) => {\n          const cipherId = getCipherIdFromParams(params);\n          if (cipherId) {\n            if (\n              // Handle users with implicit collection access since they use the admin endpoint\n              this.organization.canEditAnyCollection ||\n              (await this.cipherService.get(cipherId)) != null\n            ) {\n              this.editCipherId(cipherId);\n            } else {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorOccurred\"),\n                this.i18nService.t(\"unknownCipher\")\n              );\n              this.router.navigate([], {\n                queryParams: { cipherId: null, itemId: null },\n                queryParamsHandling: \"merge\",\n              });\n            }\n          }\n        });\n      });\n    });\n  }\n\n  get deleted(): boolean {\n    return this.activeFilter.status === \"trash\";\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.vaultItemsComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n\n    // Hack to avoid calling cipherService.getAllFromApiForOrganization every time the vault filter changes.\n    // Call VaultItemsComponent.applyFilter directly instead of going through VaultItemsComponent.reload, which\n    // reloads all the ciphers unnecessarily. Will be fixed properly by EC-14.\n    this.vaultItemsComponent.loaded = false;\n    this.vaultItemsComponent.deleted = vaultFilter.status === \"trash\" || false;\n    await this.vaultItemsComponent.applyFilter(this.activeFilter.buildFilter());\n    this.vaultItemsComponent.loaded = true;\n    // End hack\n\n    this.vaultFilterComponent.searchPlaceholder =\n      this.vaultService.calculateSearchBarLocalizationString(this.activeFilter);\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.vaultItemsComponent.searchText = searchText;\n    this.vaultItemsComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n      this.messagingService.send(\"upgradeOrganization\", { organizationId: cipher.organizationId });\n      return;\n    }\n\n    let madeAttachmentChanges = false;\n\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.vaultItemsComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        if (this.organization.canEditAnyCollection) {\n          comp.collectionIds = cipher.collectionIds;\n          comp.collections = this.vaultFilterComponent.collections.fullList.filter(\n            (c) => !c.readOnly && c.id != null\n          );\n        }\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.organizationId = this.organization.id;\n    component.type = this.type;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    if (this.collectionId != null) {\n      component.collectionIds = [this.collectionId];\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipherId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n    component.organizationId = this.organization.id;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n    // in the add-edit componenet\n    component.collectionIds = cipher.collectionIds;\n  }\n\n  async viewEvents(cipher: CipherView) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = cipher.name;\n      comp.organizationId = this.organization.id;\n      comp.entityId = cipher.id;\n      comp.showUser = true;\n      comp.entity = \"cipher\";\n    });\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        type: this.activeFilter.cipherType,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.deleted ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { OrganizationBadgeModule } from \"../../vault/organization-badge/organization-badge.module\";\nimport { VaultSharedModule } from \"../../vault/shared/vault-shared.module\";\n\nimport { VaultFilterModule } from \"./vault-filter/vault-filter.module\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule, VaultFilterModule, OrganizationBadgeModule],\n  declarations: [VaultComponent, VaultItemsComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport {\n  canAccessGroupsTab,\n  canAccessManageTab,\n  canAccessMembersTab,\n  canAccessOrgAdmin,\n  canManageCollections,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"./guards/org-permissions.guard\";\nimport { OrganizationRedirectGuard } from \"./guards/org-redirect.guard\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { CollectionsComponent } from \"./manage/collections.component\";\nimport { GroupsComponent } from \"./manage/groups.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \":organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    data: {\n      organizationPermissions: canAccessOrgAdmin,\n    },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"vault\" },\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      {\n        path: \"settings\",\n        loadChildren: () => import(\"./settings\").then((m) => m.OrganizationSettingsModule),\n      },\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessManageTab,\n        },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            canActivate: [OrganizationRedirectGuard],\n            data: {\n              autoRedirectCallback: getManageRoute,\n            },\n            children: [], // This is required to make the auto redirect work\n          },\n          {\n            path: \"collections\",\n            component: CollectionsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"collections\",\n              organizationPermissions: canManageCollections,\n            },\n          },\n          {\n            path: \"groups\",\n            component: GroupsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"groups\",\n              organizationPermissions: canAccessGroupsTab,\n            },\n          },\n          {\n            path: \"members\",\n            component: PeopleComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"members\",\n              organizationPermissions: canAccessMembersTab,\n            },\n          },\n        ],\n      },\n      {\n        path: \"reporting\",\n        loadChildren: () =>\n          import(\"./reporting/organization-reporting.module\").then(\n            (m) => m.OrganizationReportingModule\n          ),\n      },\n      {\n        path: \"billing\",\n        loadChildren: () =>\n          import(\"./billing/organization-billing.module\").then((m) => m.OrganizationBillingModule),\n      },\n    ],\n  },\n];\n\nfunction getManageRoute(organization: Organization): string {\n  if (organization.canManageUsers) {\n    return \"members\";\n  }\n  if (organization.canViewAssignedCollections || organization.canViewAllCollections) {\n    return \"collections\";\n  }\n  if (organization.canManageGroups) {\n    return \"groups\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { SearchInputComponent } from \"./components/search-input/search-input.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [SearchInputComponent],\n  exports: [SharedModule, SearchInputComponent],\n})\nexport class SharedOrganizationModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { AccessSelectorModule } from \"./components/access-selector\";\nimport { OrgUpgradeDialogComponent } from \"./manage/org-upgrade-dialog/org-upgrade-dialog.component\";\nimport { OrganizationsRoutingModule } from \"./organization-routing.module\";\nimport { SharedOrganizationModule } from \"./shared\";\n\n@NgModule({\n  imports: [SharedOrganizationModule, AccessSelectorModule, OrganizationsRoutingModule],\n  declarations: [OrgUpgradeDialogComponent],\n})\nexport class OrganizationModule {}\n","export enum PlanSponsorshipType {\n  FamiliesForEnterprise = 0,\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"../../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-family-sponsorship\",\n  templateUrl: \"accept-family-sponsorship.component.html\",\n})\nexport class AcceptFamilySponsorshipComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/setup/families-for-enterprise\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    if (!qParams.register) {\n      this.router.navigate([\"/login\"], { queryParams: { email: qParams.email } });\n    } else {\n      this.router.navigate([\"/register\"], { queryParams: { email: qParams.email } });\n    }\n  }\n}\n","import { PlanSponsorshipType } from \"../../../enums/planSponsorshipType\";\n\nexport class OrganizationSponsorshipRedeemRequest {\n  planSponsorshipType: PlanSponsorshipType;\n  sponsoredOrganizationId: string;\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"sponsoredFamiliesOffer\" | i18n }}</h1>\n  </div>\n  <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\">\n    <span>{{ \"badToken\" | i18n }}</span>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"!loading && !badToken\"\n  >\n    <p>\n      <span>{{ \"acceptBitwardenFamiliesHelp\" | i18n }}</span>\n    </p>\n    <div class=\"form-group col-6\">\n      <label for=\"availableSponsorshipOrg\">{{ \"sponsoredFamiliesSelectOffer\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedFamilyOrganizationId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\" disabled>-- {{ \"select\" | i18n }} --</option>\n        <option value=\"createNew\">{{ \"newFamiliesOrganization\" | i18n }}</option>\n        <option *ngFor=\"let o of existingFamilyOrganizations$ | async\" [ngValue]=\"o.id\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div *ngIf=\"showNewOrganization\" class=\"col-12\">\n      <app-organization-plans></app-organization-plans>\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\">\n      <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"acceptOffer\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n","import { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Observable, Subject } from \"rxjs\";\nimport { first, map, takeUntil } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSponsorshipRedeemRequest } from \"@bitwarden/common/models/request/organization/organization-sponsorship-redeem.request\";\n\nimport { DeleteOrganizationComponent } from \"../../organizations/settings\";\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"families-for-enterprise-setup\",\n  templateUrl: \"families-for-enterprise-setup.component.html\",\n})\nexport class FamiliesForEnterpriseSetupComponent implements OnInit, OnDestroy {\n  @ViewChild(OrganizationPlansComponent, { static: false })\n  set organizationPlansComponent(value: OrganizationPlansComponent) {\n    if (!value) {\n      return;\n    }\n\n    value.plan = PlanType.FamiliesAnnually;\n    value.product = ProductType.Families;\n    value.acceptingSponsorship = true;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n  }\n\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  loading = true;\n  badToken = false;\n  formPromise: Promise<any>;\n\n  token: string;\n  existingFamilyOrganizations: Organization[];\n  existingFamilyOrganizations$: Observable<Organization[]>;\n\n  showNewOrganization = false;\n  _organizationPlansComponent: OrganizationPlansComponent;\n  _selectedFamilyOrganizationId = \"\";\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService,\n    private organizationService: OrganizationService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.token == null;\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"sponsoredFamiliesAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.token = qParams.token;\n\n      await this.syncService.fullSync(true);\n      this.badToken = !(await this.apiService.postPreValidateSponsorshipToken(this.token));\n      this.loading = false;\n    });\n\n    this.existingFamilyOrganizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.planProductType === ProductType.Families))\n    );\n\n    this.existingFamilyOrganizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (orgs.length === 0) {\n        this.selectedFamilyOrganizationId = \"createNew\";\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  get selectedFamilyOrganizationId() {\n    return this._selectedFamilyOrganizationId;\n  }\n\n  set selectedFamilyOrganizationId(value: string) {\n    this._selectedFamilyOrganizationId = value;\n    this.showNewOrganization = value === \"createNew\";\n  }\n\n  private async doSubmit(organizationId: string) {\n    try {\n      const request = new OrganizationSponsorshipRedeemRequest();\n      request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n      request.sponsoredOrganizationId = organizationId;\n\n      await this.apiService.postRedeemSponsorship(this.token, request);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"sponsoredFamiliesOfferRedeemed\")\n      );\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      if (this.showNewOrganization) {\n        await this.modalService.openViewRef(\n          DeleteOrganizationComponent,\n          this.deleteModalRef,\n          (comp) => {\n            comp.organizationId = organizationId;\n            comp.deleteOrganizationRequestType = \"InvalidFamiliesForEnterprise\";\n            // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n            comp.onSuccess.subscribe(() => {\n              this.router.navigate([\"/\"]);\n            });\n          }\n        );\n      }\n      this.validationService.showError(this.i18nService.t(\"sponsorshipTokenHasExpired\"));\n    }\n  }\n\n  private async onOrganizationCreateSuccess(value: any) {\n    // Use newly created organization id\n    await this.doSubmit(value.organizationId);\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccess } from \"../domain/send-access\";\n\nimport { SendFileView } from \"./send-file.view\";\nimport { SendTextView } from \"./send-text.view\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccessResponse } from \"../response/send-access.response\";\nimport { SendAccessView } from \"../view/send-access.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SendFile } from \"./send-file\";\nimport { SendText } from \"./send-text\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-12\">\n      <h1 class=\"lead text-center mb-4\">Bitwarden Send</h1>\n    </div>\n    <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\">\n      <p>{{ \"sendCreatorIdentifier\" | i18n: creatorIdentifier }}</p>\n    </div>\n    <div class=\"col-8\" *ngIf=\"hideEmail\">\n      <app-callout type=\"warning\" title=\"{{ 'warning' | i18n }}\">\n        {{ \"viewSendHiddenEmailWarning\" | i18n }}\n        <a href=\"https://bitwarden.com/help/receive-send/\" target=\"_blank\">{{\n          \"learnMore\" | i18n\n        }}</a\n        >.\n      </app-callout>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-5\">\n      <div class=\"card d-block\">\n        <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\n          <p>{{ \"sendProtectedPassword\" | i18n }}</p>\n          <p>{{ \"sendProtectedPasswordDontKnow\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"password\" | i18n }}</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"Password\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"password\"\n              required\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && unavailable\">\n          {{ \"sendAccessUnavailable\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && error\">\n          {{ \"unexpectedError\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\n          <p class=\"text-center\">\n            <b>{{ send.name }}</b>\n          </p>\n          <hr />\n          <!-- Text -->\n          <ng-container *ngIf=\"send.type === sendType.Text\">\n            <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{\n              \"sendHiddenByDefault\" | i18n\n            }}</app-callout>\n            <div class=\"form-group\">\n              <textarea\n                id=\"text\"\n                rows=\"8\"\n                name=\"Text\"\n                [ngModel]=\"sendText\"\n                class=\"form-control\"\n                readonly\n              ></textarea>\n            </div>\n            <button\n              class=\"btn btn-block btn-link\"\n              type=\"button\"\n              (click)=\"toggleText()\"\n              *ngIf=\"send.text.hidden\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showText, 'bwi-eye-slash': showText }\"\n              ></i>\n              {{ \"toggleVisibility\" | i18n }}\n            </button>\n            <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\n              <i class=\"bwi bwi-copy\" aria-hidden=\"true\"></i> {{ \"copyValue\" | i18n }}\n            </button>\n          </ng-container>\n          <!-- File -->\n          <ng-container *ngIf=\"send.type === sendType.File\">\n            <p>{{ send.file.fileName }}</p>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              (click)=\"download()\"\n              *ngIf=\"!downloading\"\n            >\n              <i class=\"bwi bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"downloadFile\" | i18n }} ({{ send.file.sizeName }})\n            </button>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              *ngIf=\"downloading\"\n              disabled=\"true\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </ng-container>\n          <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">\n            Expires: {{ expirationDate | date: \"medium\" }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 text-center mt-5 text-muted\">\n      <p class=\"mb-0\">\n        {{ \"sendAccessTaglineProductDesc\" | i18n }}<br />\n        {{ \"sendAccessTaglineLearnMore\" | i18n }}\n        <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\"\n          >Bitwarden Send</a\n        >\n        {{ \"sendAccessTaglineOr\" | i18n }}\n        <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{\n          \"sendAccessTaglineSignUp\" | i18n\n        }}</a>\n        {{ \"sendAccessTaglineTryToday\" | i18n }}\n      </p>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SEND_KDF_ITERATIONS } from \"@bitwarden/common/enums/kdfType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { SendAccess } from \"@bitwarden/common/models/domain/send-access\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { SendAccessRequest } from \"@bitwarden/common/models/request/send-access.request\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { SendAccessResponse } from \"@bitwarden/common/models/response/send-access.response\";\nimport { SendAccessView } from \"@bitwarden/common/models/view/send-access.view\";\n\n@Component({\n  selector: \"app-send-access\",\n  templateUrl: \"access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccessComponent implements OnInit {\n  send: SendAccessView;\n  sendType = SendType;\n  downloading = false;\n  loading = true;\n  passwordRequired = false;\n  formPromise: Promise<SendAccessResponse>;\n  password: string;\n  showText = false;\n  unavailable = false;\n  error = false;\n  hideEmail = false;\n\n  private id: string;\n  private key: string;\n  private decKey: SymmetricCryptoKey;\n  private accessRequest: SendAccessRequest;\n\n  constructor(\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private fileDownloadService: FileDownloadService\n  ) {}\n\n  get sendText() {\n    if (this.send == null || this.send.text == null) {\n      return null;\n    }\n    return this.showText ? this.send.text.text : this.send.text.maskedText;\n  }\n\n  get expirationDate() {\n    if (this.send == null || this.send.expirationDate == null) {\n      return null;\n    }\n    return this.send.expirationDate;\n  }\n\n  get creatorIdentifier() {\n    if (this.send == null || this.send.creatorIdentifier == null) {\n      return null;\n    }\n    return this.send.creatorIdentifier;\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.id = params.sendId;\n      this.key = params.key;\n      if (this.key == null || this.id == null) {\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async download() {\n    if (this.send == null || this.decKey == null) {\n      return;\n    }\n\n    if (this.downloading) {\n      return;\n    }\n\n    const downloadData = await this.apiService.getSendFileDownloadData(\n      this.send,\n      this.accessRequest\n    );\n\n    if (Utils.isNullOrWhitespace(downloadData.url)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingSendFile\"));\n      return;\n    }\n\n    this.downloading = true;\n    const response = await fetch(new Request(downloadData.url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      this.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, this.decKey);\n      this.fileDownloadService.download({\n        fileName: this.send.file.fileName,\n        blobData: decBuf,\n        downloadMethod: \"save\",\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    this.downloading = false;\n  }\n\n  copyText() {\n    this.platformUtilsService.copyToClipboard(this.send.text.text);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendTypeText\"))\n    );\n  }\n\n  toggleText() {\n    this.showText = !this.showText;\n  }\n\n  async load() {\n    this.unavailable = false;\n    this.error = false;\n    this.hideEmail = false;\n    const keyArray = Utils.fromUrlB64ToArray(this.key);\n    this.accessRequest = new SendAccessRequest();\n    if (this.password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        this.password,\n        keyArray,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n    }\n    try {\n      let sendResponse: SendAccessResponse = null;\n      if (this.loading) {\n        sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n      } else {\n        this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n        sendResponse = await this.formPromise;\n      }\n      this.passwordRequired = false;\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(keyArray);\n      this.send = await sendAccess.decrypt(this.decKey);\n      this.showText = this.send.text != null ? !this.send.text.hidden : true;\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          this.passwordRequired = true;\n        } else if (e.statusCode === 404) {\n          this.unavailable = true;\n        } else {\n          this.error = true;\n        }\n      }\n    }\n    this.loading = false;\n    this.hideEmail =\n      this.creatorIdentifier == null &&\n      !this.passwordRequired &&\n      !this.loading &&\n      !this.unavailable;\n  }\n}\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class SendComponent implements OnInit, OnDestroy {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new UntypedFormGroup({\n    selectedDeletionDatePreset: new UntypedFormControl(),\n    selectedExpirationDatePreset: new UntypedFormControl(),\n    defaultDeletionDateTime: new UntypedFormControl(),\n    defaultExpirationDateTime: new UntypedFormControl(),\n    fallbackDeletionDate: new UntypedFormControl(),\n    fallbackDeletionTime: new UntypedFormControl(),\n    fallbackExpirationDate: new UntypedFormControl(),\n    fallbackExpirationTime: new UntypedFormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as UntypedFormControl;\n  }\n\n  get selectedExpirationDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as UntypedFormControl;\n  }\n\n  get defaultDeletionDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as UntypedFormControl;\n  }\n\n  get defaultExpirationDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as UntypedFormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/send-file.view\";\nimport { SendTextView } from \"@bitwarden/common/models/view/send-text.view\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  protected componentName = \"\";\n  private sendLinkBaseUrl: string;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SendOptions, (p) => p.data.disableHideEmail)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableHideEmail = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        await this.handleCopyLinkToClipboard();\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n      );\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n  private async handleCopyLinkToClipboard() {\n    const copySuccess = await this.copyLinkToClipboard(this.link);\n    if (copySuccess ?? true) {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n      );\n    } else {\n      await this.platformUtilsService.showDialog(\n        this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n        null,\n        this.i18nService.t(\"ok\"),\n        null,\n        \"success\",\n        null\n      );\n      await this.copyLinkToClipboard(this.link);\n    }\n  }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\">\n  <div class=\"col-6 form-group\">\n    <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n    <ng-template #deletionDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <ng-container *ngSwitchCase=\"'firefox'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <input\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              type=\"time\"\n              name=\"DeletionTimeDate\"\n              formControlName=\"fallbackDeletionTime\"\n              required\n              placeholder=\"HH:MM AM/PM\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'safari'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <select\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              [required]=\"!editMode\"\n              formControlName=\"fallbackDeletionTime\"\n              name=\"SafariDeletionTime\"\n            >\n              <option\n                *ngFor=\"let o of safariDeletionTimePresetOptions\"\n                [ngValue]=\"o.twentyFourHour\"\n              >\n                {{ o.twelveHour }}\n              </option>\n            </select>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"deletionDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"DeletionDate\"\n            formControlName=\"defaultDeletionDateTime\"\n            required\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"deletionDate\"\n        name=\"SelectedDeletionDatePreset\"\n        formControlName=\"selectedDeletionDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"deletionDateDesc\" | i18n }}</div>\n  </div>\n  <div class=\"col-6 form-group\">\n    <div class=\"d-flex\">\n      <label for=\"expirationDate\">{{ \"expirationDate\" | i18n }}</label>\n      <a\n        href=\"#\"\n        appStopClick\n        (click)=\"clearExpiration()\"\n        class=\"ml-auto\"\n        *ngIf=\"editMode && !disabled\"\n      >\n        {{ \"clear\" | i18n }}\n      </a>\n    </div>\n    <ng-template #expirationDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n        <!-- non-default cases are not showing up -->\n        <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            [required]=\"!editMode\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"expirationDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"ExpirationDate\"\n            formControlName=\"defaultExpirationDateTime\"\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"expirationDate\"\n        name=\"SelectedExpirationDatePreset\"\n        formControlName=\"selectedExpirationDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"expirationDateDesc\" | i18n }}</div>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"sendAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"send\">\n        <app-callout *ngIf=\"disableSend\">\n          <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n        </app-callout>\n        <app-callout *ngIf=\"!disableSend && disableHideEmail\">\n          <span>{{ \"sendOptionsPolicyInEffect\" | i18n }}</span>\n          <ul class=\"mb-0\">\n            <li>{{ \"sendDisableHideEmailInEffect\" | i18n }}</li>\n          </ul>\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"send.name\"\n              required\n              [readOnly]=\"disableSend\"\n            />\n            <small class=\"form-text text-muted\">{{ \"sendNameDesc\" | i18n }}</small>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!editMode\">\n          <div class=\"col-6 form-group\">\n            <label>{{ \"whatTypeOfSend\" | i18n }}</label>\n            <div class=\"form-check\" *ngFor=\"let o of typeOptions\">\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                [(ngModel)]=\"send.type\"\n                name=\"Type_{{ o.value }}\"\n                id=\"type_{{ o.value }}\"\n                [value]=\"o.value\"\n                (change)=\"typeChanged()\"\n                [checked]=\"send.type === o.value\"\n              />\n              <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n                {{ o.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <!-- Text -->\n        <ng-container *ngIf=\"send.type === sendType.Text\">\n          <div class=\"form-group\">\n            <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n            <textarea\n              id=\"text\"\n              name=\"Text.Text\"\n              rows=\"6\"\n              [(ngModel)]=\"send.text.text\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <small class=\"form-text text-muted\">{{ \"sendTextDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.text.hidden\"\n                id=\"text-hidden\"\n                name=\"Text.Hidden\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"text-hidden\">{{\n                \"textHiddenByDefault\" | i18n\n              }}</label>\n            </div>\n          </div>\n        </ng-container>\n        <!-- File -->\n        <ng-container *ngIf=\"send.type === sendType.File\">\n          <div class=\"form-group\">\n            <div *ngIf=\"editMode\">\n              <strong class=\"d-block\">{{ \"file\" | i18n }}</strong>\n              {{ send.file.fileName }} ({{ send.file.sizeName }})\n            </div>\n            <div *ngIf=\"!editMode\">\n              <label for=\"file\">{{ \"file\" | i18n }}</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n                name=\"file\"\n                required\n                [disabled]=\"disableSend\"\n              />\n              <small class=\"form-text text-muted\"\n                >{{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}</small\n              >\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-5\">{{ \"share\" | i18n }}</h3>\n        <div class=\"form-group\" *ngIf=\"link\">\n          <label for=\"link\">{{ \"sendLinkLabel\" | i18n }}</label>\n          <input type=\"text\" readonly id=\"link\" name=\"Link\" [ngModel]=\"link\" class=\"form-control\" />\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [(ngModel)]=\"copyLink\"\n              id=\"copy-link\"\n              name=\"CopyLink\"\n            />\n            <label class=\"form-check-label\" for=\"copy-link\">{{\n              \"copySendLinkOnSave\" | i18n\n            }}</label>\n          </div>\n        </div>\n        <div\n          id=\"options-header\"\n          class=\"section-header d-flex flex-row align-items-center mt-5\"\n          (click)=\"toggleOptions()\"\n        >\n          <h3 class=\"mb-0 mr-2\">\n            <button appStopClick class=\"header-expandable\">\n              <i\n                class=\"bwi\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-angle-right': !showOptions, 'bwi-angle-down': showOptions }\"\n              ></i>\n              {{ \"options\" | i18n }}\n            </button>\n          </h3>\n        </div>\n        <div id=\"options\" [hidden]=\"!showOptions\">\n          <app-send-efflux-dates\n            [initialDeletionDate]=\"send.deletionDate\"\n            [initialExpirationDate]=\"send.expirationDate\"\n            [editMode]=\"editMode\"\n            [disabled]=\"disableSend\"\n            (datesChanged)=\"setDates($event)\"\n          >\n          </app-send-efflux-dates>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"maxAccessCount\">{{ \"maxAccessCount\" | i18n }}</label>\n              <input\n                id=\"maxAccessCount\"\n                class=\"form-control\"\n                type=\"number\"\n                name=\"MaxAccessCount\"\n                [(ngModel)]=\"send.maxAccessCount\"\n                min=\"1\"\n                [readOnly]=\"disableSend\"\n              />\n              <div class=\"form-text text-muted small\">{{ \"maxAccessCountDesc\" | i18n }}</div>\n            </div>\n            <div class=\"col-6 form-group\" *ngIf=\"editMode\">\n              <label for=\"accessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n              <input\n                id=\"accessCount\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"AccessCount\"\n                readonly\n                [(ngModel)]=\"send.accessCount\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"password\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Password\"\n                  [(ngModel)]=\"password\"\n                  [readOnly]=\"disableSend\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePasswordVisible()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-text text-muted small\">{{ \"sendPasswordDesc\" | i18n }}</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <div class=\"form-text text-muted small\">{{ \"sendNotesDesc\" | i18n }}</div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.hideEmail\"\n                id=\"hideEmail\"\n                name=\"HideEmail\"\n                [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"hideEmail\">\n                {{ \"hideEmail\" | i18n }}\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.disabled\"\n                id=\"disabled\"\n                name=\"Disabled\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"disabled\">{{ \"disableThisSend\" | i18n }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [ngClass]=\"{ loading: form.loading }\"\n          [disabled]=\"form.loading || disableSend\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"send\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  override componentName = \"app-send-add-edit\";\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n    // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n    return new Promise((resolve) => {\n      window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-3 groupings\">\n      <div class=\"card vault-filters\">\n        <div class=\"card-header d-flex\">\n          {{ \"filters\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <input\n            type=\"search\"\n            placeholder=\"{{ searchPlaceholder || ('searchSends' | i18n) }}\"\n            id=\"search\"\n            class=\"form-control\"\n            [(ngModel)]=\"searchText\"\n            (input)=\"searchTextChanged()\"\n            autocomplete=\"off\"\n            appAutofocus\n          />\n          <div class=\"filter\">\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedAll }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectAll()\">\n                    <i class=\"bwi bwi-fw bwi-filter\"></i>{{ \"allSends\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"filter\">\n            <div class=\"filter-heading\">\n              <h3>{{ \"types\" | i18n }}</h3>\n            </div>\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.Text }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectType(sendType.Text)\">\n                    <i class=\"bwi bwi-fw bwi-file-text\"></i>{{ \"sendTypeText\" | i18n }}\n                  </button>\n                </span>\n              </li>\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.File }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectType(sendType.File)\">\n                    <i class=\"bwi bwi-fw bwi-file\"></i>{{ \"sendTypeFile\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"send\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"actionPromise\">\n            <ng-container *ngIf=\"$any(actionSpinner).loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addSend()\"\n            [disabled]=\"disableSend\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <!--Listing Table-->\n      <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\n        <tbody>\n          <tr *ngFor=\"let s of filteredSends\">\n            <td class=\"table-list-icon\">\n              <div class=\"icon\" aria-hidden=\"true\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type == sendType.File\"></i>\n                <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type == sendType.Text\"></i>\n              </div>\n            </td>\n            <td class=\"reduced-lh wrap\">\n              <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{ s.name }}</a>\n              <ng-container *ngIf=\"s.disabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle\"\n                  appStopProp\n                  title=\"{{ 'disabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.password\">\n                <i\n                  class=\"bwi bwi-key\"\n                  appStopProp\n                  title=\"{{ 'password' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"password\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.maxAccessCountReached\">\n                <i\n                  class=\"bwi bwi-ban\"\n                  appStopProp\n                  title=\"{{ 'maxAccessCountReached' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.expired\">\n                <i\n                  class=\"bwi bwi-clock\"\n                  appStopProp\n                  title=\"{{ 'expired' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.pendingDelete\">\n                <i\n                  class=\"bwi bwi-trash\"\n                  appStopProp\n                  title=\"{{ 'pendingDeletion' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n              </ng-container>\n              <br />\n              <small appStopProp>{{ s.deletionDate | date: \"medium\" }}</small>\n            </td>\n            <td class=\"table-list-options\">\n              <button\n                [bitMenuTriggerFor]=\"sendOptions\"\n                class=\"tw-border-none tw-bg-transparent tw-text-main\"\n                type=\"button\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu #sendOptions>\n                <button bitMenuItem (click)=\"copy(s)\">\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copySendLink\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"removePassword\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"delete(s)\">\n                  <span class=\"tw-text-danger\">\n                    <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                    {{ \"delete\" | i18n }}\n                  </span>\n                </button>\n              </bit-menu>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\n        <ng-container *ngIf=\"!loaded\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n          <bit-icon [icon]=\"noItemIcon\" aria-hidden=\"true\"></bit-icon>\n          <p>{{ \"noSendsInList\" | i18n }}</p>\n          <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\">\n            <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #sendAddEdit></ng-template>\n","import { Component, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\nimport { Icons } from \"@bitwarden/components\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\n\nconst BroadcasterSubscriptionId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send\",\n  templateUrl: \"send.component.html\",\n})\nexport class SendComponent extends BaseSendComponent {\n  @ViewChild(\"sendAddEdit\", { read: ViewContainerRef, static: true })\n  sendAddEditModalRef: ViewContainerRef;\n  noItemIcon = Icons.Search;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    searchService: SearchService,\n    policyService: PolicyService,\n    private modalService: ModalService,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n\n    // Broadcaster subscription - load if sync completes in the background\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n\n    const component = await this.editSend(null);\n    component.type = this.type;\n  }\n\n  async editSend(send: SendView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.sendAddEditModalRef,\n      (comp) => {\n        comp.sendId = send == null ? null : send.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-deauthorize-sessions\",\n  templateUrl: \"deauthorize-sessions.component.html\",\n})\nexport class DeauthorizeSessionsComponent {\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postSecurityStamp(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"sessionsDeauthorized\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deAuthTitle\">{{ \"deauthorizeSessions\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deauthorizeSessionsDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deauthorizeSessionsWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deauthorizeSessions\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { AccountApiService } from \"@bitwarden/common/abstractions/account/account-api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-delete-account\",\n  templateUrl: \"delete-account.component.html\",\n})\nexport class DeleteAccountComponent {\n  formPromise: Promise<void>;\n\n  deleteForm = this.formBuilder.group({\n    verification: undefined as Verification | undefined,\n  });\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private formBuilder: FormBuilder,\n    private accountApiService: AccountApiService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const verification = this.deleteForm.get(\"verification\").value;\n      this.formPromise = this.accountApiService.deleteAccount(verification);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      [formGroup]=\"deleteForm\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteAccountTitle\">{{ \"deleteAccount\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deleteAccountDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n        <app-user-verification ngDefaultControl formControlName=\"verification\" name=\"verification\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteAccount\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n  newEmail: string;\n  masterPasswordHash: string;\n}\n","import { EmailTokenRequest } from \"./email-token.request\";\n\nexport class EmailRequest extends EmailTokenRequest {\n  newMasterPasswordHash: string;\n  token: string;\n  key: string;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\">\n    {{ \"changeEmailTwoFactorWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          [readonly]=\"tokenSent\"\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newEmail\">{{ \"newEmail\" | i18n }}</label>\n        <input\n          id=\"newEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"NewEmail\"\n          [(ngModel)]=\"newEmail\"\n          required\n          [readonly]=\"tokenSent\"\n          inputmode=\"email\"\n          appInputVerbatim=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"tokenSent\">\n    <hr />\n    <p>{{ \"changeEmailDesc\" | i18n: newEmail }}</p>\n    <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"token\">{{ \"code\" | i18n }}</label>\n          <input\n            id=\"token\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Token\"\n            [(ngModel)]=\"token\"\n            required\n            appInputVerbatim\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span *ngIf=\"!tokenSent\">{{ \"continue\" | i18n }}</span>\n    <span *ngIf=\"tokenSent\">{{ \"changeEmail\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { EmailTokenRequest } from \"@bitwarden/common/models/request/email-token.request\";\nimport { EmailRequest } from \"@bitwarden/common/models/request/email.request\";\n\n@Component({\n  selector: \"app-change-email\",\n  templateUrl: \"change-email.component.html\",\n})\nexport class ChangeEmailComponent implements OnInit {\n  masterPassword: string;\n  newEmail: string;\n  token: string;\n  tokenSent = false;\n  showTwoFactorEmailWarning = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n    this.showTwoFactorEmailWarning = twoFactorProviders.data.some(\n      (p) => p.type === TwoFactorProviderType.Email && p.enabled\n    );\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    this.newEmail = this.newEmail.trim().toLowerCase();\n    if (!this.tokenSent) {\n      const request = new EmailTokenRequest();\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      try {\n        this.formPromise = this.apiService.postEmailToken(request);\n        await this.formPromise;\n        this.tokenSent = true;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const request = new EmailRequest();\n      request.token = this.token;\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.newEmail,\n        kdf,\n        kdfIterations\n      );\n      request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        newKey\n      );\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n      request.key = newEncKey[1].encryptedString;\n      try {\n        this.formPromise = this.apiService.postEmail(request);\n        await this.formPromise;\n        this.reset();\n        this.platformUtilsService.showToast(\n          \"success\",\n          this.i18nService.t(\"emailChanged\"),\n          this.i18nService.t(\"logBackIn\")\n        );\n        this.messagingService.send(\"logout\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n\n  reset() {\n    this.token = this.newEmail = this.masterPassword = null;\n    this.tokenSent = false;\n  }\n}\n","export class UpdateProfileRequest {\n  name: string;\n  masterPasswordHint: string;\n  culture = \"en-US\"; // deprecated\n\n  constructor(name: string, masterPasswordHint: string) {\n    this.name = name;\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\n@Component({\n  selector: \"selectable-avatar\",\n  template: `<span\n    [title]=\"title\"\n    (click)=\"onFire()\"\n    (keyup.enter)=\"onFire()\"\n    tabindex=\"0\"\n    [ngClass]=\"classList\"\n  >\n    <bit-avatar\n      appStopClick\n      [text]=\"text\"\n      size=\"xlarge\"\n      [text]=\"text\"\n      [color]=\"color\"\n      [border]=\"false\"\n      [id]=\"id\"\n      [border]=\"border\"\n      [title]=\"title\"\n    >\n    </bit-avatar>\n  </span>`,\n})\nexport class SelectableAvatarComponent {\n  @Input() id: string;\n  @Input() text: string;\n  @Input() title: string;\n  @Input() color: string;\n  @Input() border = false;\n  @Input() selected = false;\n  @Output() select = new EventEmitter<string>();\n\n  onFire() {\n    this.select.emit(this.color);\n  }\n\n  get classList() {\n    return [\"tw-rounded-full tw-inline-block\"]\n      .concat([\"tw-cursor-pointer\", \"tw-outline\", \"tw-outline-solid\", \"tw-outline-offset-1\"])\n      .concat(\n        this.selected\n          ? [\"tw-outline-[3px]\", \"tw-outline-primary-500\"]\n          : [\n              \"tw-outline-0\",\n              \"hover:tw-outline-1\",\n              \"hover:tw-outline-primary-300\",\n              \"focus:tw-outline-2\",\n              \"focus:tw-outline-primary-500\",\n            ]\n      );\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"customizeTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable tw-w-[600px] tw-max-w-none\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"customizeTitle\">{{ \"customizeAvatar\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <p class=\"tw-text-lg\">{{ \"pickAnAvatarColor\" | i18n }}</p>\n        <div class=\"tw-flex tw-flex-wrap tw-justify-center tw-gap-8 tw-gap-y-8\">\n          <ng-container *ngFor=\"let c of defaultColorPalette\">\n            <selectable-avatar\n              appStopClick\n              (select)=\"setSelection(c.color)\"\n              [selected]=\"c.selected\"\n              [title]=\"c.name\"\n              text=\"{{ profile | userName }}\"\n              [color]=\"c.color\"\n              [border]=\"true\"\n            >\n            </selectable-avatar>\n          </ng-container>\n          <span>\n            <span\n              [tabIndex]=\"0\"\n              (keyup.enter)=\"showCustomPicker()\"\n              (click)=\"showCustomPicker()\"\n              title=\"{{ 'customColor' | i18n }}\"\n              [ngClass]=\"{\n                '!tw-outline-[3px] tw-outline-primary-500 hover:tw-outline-[3px] hover:tw-outline-primary-500':\n                  customColorSelected\n              }\"\n              class=\"tw-outline-solid tw-bg-white tw-relative tw-inline-block tw-flex tw-h-24 tw-w-24 tw-cursor-pointer tw-place-content-center tw-content-center tw-justify-center tw-rounded-full tw-border tw-border-solid tw-border-secondary-500 tw-outline tw-outline-0 tw-outline-offset-1 hover:tw-outline-1 hover:tw-outline-primary-300 focus:tw-outline-2 focus:tw-outline-primary-500\"\n              [style.background-color]=\"customColor$ | async\"\n            >\n              <i\n                [style.color]=\"customTextColor$ | async\"\n                class=\"bwi bwi-pencil tw-m-auto tw-text-3xl\"\n              ></i>\n              <input\n                tabindex=\"-1\"\n                class=\"tw-absolute tw-right-0 tw-bottom-0 tw-h-px tw-w-px tw-border-none tw-bg-transparent tw-opacity-0\"\n                #colorPicker\n                type=\"color\"\n                [ngModel]=\"customColor$ | async\"\n                (ngModelChange)=\"customColor$.next($event)\"\n              />\n            </span>\n          </span>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { BehaviorSubject, debounceTime, Subject, takeUntil } from \"rxjs\";\n\nimport { AvatarUpdateService } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profile.response\";\n\n@Component({\n  selector: \"app-change-avatar\",\n  templateUrl: \"change-avatar.component.html\",\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ChangeAvatarComponent implements OnInit, OnDestroy {\n  @Input() profile: ProfileResponse;\n\n  @Output() changeColor: EventEmitter<string | null> = new EventEmitter();\n  @Output() onSaved = new EventEmitter();\n\n  @ViewChild(\"colorPicker\") colorPickerElement: ElementRef<HTMLElement>;\n\n  loading = false;\n  error: string;\n  defaultColorPalette: NamedAvatarColor[] = [\n    { name: \"brightBlue\", color: \"#16cbfc\" },\n    { name: \"green\", color: \"#94cc4b\" },\n    { name: \"orange\", color: \"#ffb520\" },\n    { name: \"lavender\", color: \"#e5beed\" },\n    { name: \"yellow\", color: \"#fcff41\" },\n    { name: \"indigo\", color: \"#acbdf7\" },\n    { name: \"teal\", color: \"#8ecdc5\" },\n    { name: \"salmon\", color: \"#ffa3a3\" },\n    { name: \"pink\", color: \"#ffa2d4\" },\n  ];\n  customColorSelected = false;\n  currentSelection: string;\n\n  protected customColor$ = new BehaviorSubject<string | null>(null);\n  protected customTextColor$ = new BehaviorSubject<string>(\"#000000\");\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private accountUpdateService: AvatarUpdateService\n  ) {}\n\n  async ngOnInit() {\n    //localize the default colors\n    this.defaultColorPalette.forEach((c) => (c.name = this.i18nService.t(c.name)));\n\n    this.customColor$\n      .pipe(debounceTime(200), takeUntil(this.destroy$))\n      .subscribe((color: string | null) => {\n        if (color == null) {\n          return;\n        }\n        this.customTextColor$.next(Utils.pickTextColorBasedOnBgColor(color));\n        this.customColorSelected = true;\n        this.currentSelection = color;\n      });\n\n    this.setSelection(await this.accountUpdateService.loadColorFromState());\n  }\n\n  async showCustomPicker() {\n    this.customColorSelected = true;\n    this.colorPickerElement.nativeElement.click();\n    this.setSelection(this.customColor$.value);\n  }\n\n  async generateAvatarColor() {\n    Utils.stringToColor(this.profile.name.toString());\n  }\n\n  async submit() {\n    try {\n      if (Utils.validateHexColor(this.currentSelection) || this.currentSelection == null) {\n        await this.accountUpdateService.pushUpdate(this.currentSelection);\n        this.changeColor.emit(this.currentSelection);\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"avatarUpdated\"));\n      } else {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  async ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async setSelection(color: string | null) {\n    this.defaultColorPalette.filter((x) => x.selected).forEach((c) => (c.selected = false));\n\n    if (color == null) {\n      return;\n    }\n\n    color = color.toLowerCase();\n\n    this.customColorSelected = false;\n    //Allow for toggle\n    if (this.currentSelection === color) {\n      this.currentSelection = null;\n    } else {\n      const selectedColorIndex = this.defaultColorPalette.findIndex((c) => c.color === color);\n      if (selectedColorIndex !== -1) {\n        this.defaultColorPalette[selectedColorIndex].selected = true;\n        this.currentSelection = color;\n      } else {\n        this.customColor$.next(color);\n      }\n    }\n  }\n}\n\nexport class NamedAvatarColor {\n  name: string;\n  color: string;\n  selected? = false;\n}\n","<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"profile && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Email\"\n          [(ngModel)]=\"profile.email\"\n          readonly\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"mb-3\">\n        <dynamic-avatar text=\"{{ profile | userName }}\" [size]=\"'large'\"> </dynamic-avatar>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary tw-ml-3.5\"\n          appStopClick\n          appStopProp\n          (click)=\"openChangeAvatar()\"\n        >\n          <i class=\"bwi bwi-lg bwi-pencil-square\" aria-hidden=\"true\"></i>\n          Customize\n        </button>\n      </div>\n      <hr />\n      <p *ngIf=\"fingerprint\">\n        {{ \"yourAccountsFingerprint\" | i18n }}:\n        <a\n          href=\"https://bitwarden.com/help/fingerprint-phrase/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i></a\n        ><br />\n        <code>{{ fingerprint }}</code>\n      </p>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<ng-template #avatarModalTemplate></ng-template>\n","import { ViewChild, ViewContainerRef, Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UpdateProfileRequest } from \"@bitwarden/common/models/request/update-profile.request\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profile.response\";\n\nimport { ChangeAvatarComponent } from \"./change-avatar.component\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"profile.component.html\",\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n  loading = true;\n  profile: ProfileResponse;\n  fingerprint: string;\n\n  formPromise: Promise<any>;\n  @ViewChild(\"avatarModalTemplate\", { read: ViewContainerRef, static: true })\n  avatarModalRef: ViewContainerRef;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    this.profile = await this.apiService.getProfile();\n    this.loading = false;\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    if (fingerprint != null) {\n      this.fingerprint = fingerprint.join(\"-\");\n    }\n  }\n\n  async ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async openChangeAvatar() {\n    const modalOpened = await this.modalService.openViewRef(\n      ChangeAvatarComponent,\n      this.avatarModalRef,\n      (modal) => {\n        modal.profile = this.profile;\n        modal.changeColor.pipe(takeUntil(this.destroy$)).subscribe(() => {\n          modalOpened[0].close();\n        });\n      }\n    );\n  }\n\n  async submit() {\n    try {\n      const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n      this.formPromise = this.apiService.putProfile(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"accountUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myAccount\" | i18n }}</h1>\n</div>\n<app-profile></app-profile>\n<ng-container *ngIf=\"showChangeEmail\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeEmail\" | i18n }}</h1>\n  </div>\n  <app-change-email></app-change-email>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button bitButton buttonType=\"danger\" (click)=\"deauthorizeSessions()\">\n      {{ \"deauthorizeSessions\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"deleteAccount()\">\n      {{ \"deleteAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { DeauthorizeSessionsComponent } from \"./deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./delete-account.component\";\nimport { PurgeVaultComponent } from \"./purge-vault.component\";\n\n@Component({\n  selector: \"app-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deauthorizeSessionsTemplate\", { read: ViewContainerRef, static: true })\n  deauthModalRef: ViewContainerRef;\n  @ViewChild(\"purgeVaultTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"deleteAccountTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  showChangeEmail = true;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeEmail = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async deauthorizeSessions() {\n    await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n  }\n\n  async deleteAccount() {\n    await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.plan === \"families\") {\n        this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n        this.orgPlansComponent.product = ProductType.Families;\n      } else if (qParams.plan === \"teams\") {\n        this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n        this.orgPlansComponent.product = ProductType.Teams;\n      } else if (qParams.plan === \"enterprise\") {\n        this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n        this.orgPlansComponent.product = ProductType.Enterprise;\n      }\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"page-header\">\n        <h1>{{ \"newOrganization\" | i18n }}</h1>\n      </div>\n      <p>{{ \"newOrganizationDesc\" | i18n }}</p>\n      <app-organization-plans></app-organization-plans>\n    </div>\n  </div>\n</div>\n","export class UpdateDomainsRequest {\n  equivalentDomains: string[][];\n  excludedGlobalEquivalentDomains: number[];\n}\n","<div class=\"page-header\">\n  <h1>{{ \"domainRules\" | i18n }}</h1>\n</div>\n<p>{{ \"domainRulesDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <h2>{{ \"customEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n      <div class=\"flex-fill\">\n        <label for=\"customDomain_{{ i }}\" class=\"sr-only\">{{\n          \"customDomainX\" | i18n: i + 1\n        }}</label>\n        <textarea\n          class=\"form-control\"\n          name=\"CustomDomain[{{ i }}]\"\n          id=\"customDomain_{{ i }}\"\n          [(ngModel)]=\"custom[i]\"\n          placeholder=\"{{ 'ex' | i18n }} google.com, gmail.com\"\n          required\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-link text-danger ml-2\"\n        (click)=\"remove(i)\"\n        appA11yTitle=\"{{ 'remove' | i18n }}\"\n      >\n        <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomDomain\" | i18n }}\n    </button>\n    <small class=\"text-muted d-block mb-3\">{{ \"newCustomDomainDesc\" | i18n }}</small>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <h2 class=\"spaced-header\">{{ \"globalEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n    <tbody>\n      <tr *ngFor=\"let d of global\">\n        <td [ngClass]=\"{ 'table-list-strike': d.excluded }\">{{ d.domains }}</td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"!d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                {{ \"exclude\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-plus\" aria-hidden=\"true\"></i>\n                {{ \"include\" | i18n }}\n              </a>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                <i class=\"bwi bwi-fw bwi-cut\" aria-hidden=\"true\"></i>\n                {{ \"customize\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UpdateDomainsRequest } from \"@bitwarden/common/models/request/update-domains.request\";\n\n@Component({\n  selector: \"app-domain-rules\",\n  templateUrl: \"domain-rules.component.html\",\n})\nexport class DomainRulesComponent implements OnInit {\n  loading = true;\n  custom: string[] = [];\n  global: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const response = await this.apiService.getSettingsDomains();\n    this.loading = false;\n    if (response.equivalentDomains != null) {\n      this.custom = response.equivalentDomains.map((d) => d.join(\", \"));\n    }\n    if (response.globalEquivalentDomains != null) {\n      this.global = response.globalEquivalentDomains.map((d) => {\n        return {\n          domains: d.domains.join(\", \"),\n          excluded: d.excluded,\n          key: d.type,\n        };\n      });\n    }\n  }\n\n  toggleExcluded(globalDomain: any) {\n    globalDomain.excluded = !globalDomain.excluded;\n  }\n\n  customize(globalDomain: any) {\n    globalDomain.excluded = true;\n    this.custom.push(globalDomain.domains);\n  }\n\n  remove(index: number) {\n    this.custom.splice(index, 1);\n  }\n\n  add() {\n    this.custom.push(\"\");\n  }\n\n  async submit() {\n    const request = new UpdateDomainsRequest();\n    request.excludedGlobalEquivalentDomains = this.global\n      .filter((d) => d.excluded)\n      .map((d) => d.key);\n    if (request.excludedGlobalEquivalentDomains.length === 0) {\n      request.excludedGlobalEquivalentDomains = null;\n    }\n    request.equivalentDomains = this.custom\n      .filter((d) => d != null && d.trim() !== \"\")\n      .map((d) => d.split(\",\").map((d2) => d2.trim()));\n    if (request.equivalentDomains.length === 0) {\n      request.equivalentDomains = null;\n    }\n\n    try {\n      this.formPromise = this.apiService.putSettingsDomains(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"domainsUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  indexTrackBy(index: number, obj: any): any {\n    return index;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\n\n@Component({\n  selector: \"emergency-access-attachments\",\n  templateUrl: \"../vault/attachments.component.html\",\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = true;\n  canAccessAttachments = true;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async init() {\n    // Do nothing since cipher is already decoded\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return false;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../vault/add-edit.component.html\",\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  viewOnly = true;\n  protected override componentName = \"app-org-vault-add-edit\";\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    messagingService: MessagingService,\n    eventCollectionService: EventCollectionService,\n    policyService: PolicyService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async load() {\n    this.title = this.i18nService.t(\"viewItem\");\n  }\n\n  protected async loadCipher() {\n    return Promise.resolve(this.originalCipher);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"vault\" | i18n }}</h1>\n</div>\n<div class=\"mt-4\">\n  <ng-container *ngIf=\"ciphers.length\">\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\">\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\">\n                  <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                  {{ \"attachments\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #attachments></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { EmergencyAccessViewResponse } from \"@bitwarden/common/models/response/emergency-access.response\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { EmergencyAccessAttachmentsComponent } from \"./emergency-access-attachments.component\";\nimport { EmergencyAddEditComponent } from \"./emergency-add-edit.component\";\n\n@Component({\n  selector: \"emergency-access-view\",\n  templateUrl: \"emergency-access-view.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessViewComponent implements OnInit {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n\n  id: string;\n  ciphers: CipherView[] = [];\n  loaded = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private modalService: ModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.params.subscribe((qParams) => {\n      if (qParams.id == null) {\n        return this.router.navigate([\"settings/emergency-access\"]);\n      }\n\n      this.id = qParams.id;\n\n      this.load();\n    });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    // eslint-disable-next-line\n    const [_, childComponent] = await this.modalService.openViewRef(\n      EmergencyAddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.cipher = cipher;\n      }\n    );\n\n    return childComponent;\n  }\n\n  async load() {\n    const response = await this.apiService.postEmergencyAccessView(this.id);\n    this.ciphers = await this.getAllCiphers(response);\n    this.loaded = true;\n  }\n\n  async viewAttachments(cipher: CipherView) {\n    await this.modalService.openViewRef(\n      EmergencyAccessAttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipher = cipher;\n        comp.emergencyAccessId = this.id;\n      }\n    );\n  }\n\n  protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n    const ciphers = response.ciphers;\n\n    const decCiphers: CipherView[] = [];\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    const promises: any[] = [];\n    ciphers.forEach((cipherResponse) => {\n      const cipherData = new CipherData(cipherResponse);\n      const cipher = new Cipher(cipherData);\n      promises.push(cipher.decrypt(oldEncKey).then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n    return decCiphers;\n  }\n}\n","export enum EmergencyAccessStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  RecoveryInitiated = 3,\n  RecoveryApproved = 4,\n}\n","export enum EmergencyAccessType {\n  View = 0,\n  Takeover = 1,\n}\n","export class EmergencyAccessConfirmRequest {\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessInviteRequest {\n  email: string;\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessUpdateRequest {\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n  keyEncrypted?: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          <app-premium-badge *ngIf=\"readOnly\"></app-premium-badge>\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteEmergencyContactDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"email\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n            />\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userAccess\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/emergency-access/#user-access\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeView\"\n            [value]=\"emergencyAccessType.View\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeView\">\n            {{ \"view\" | i18n }}\n            <small>{{ \"viewDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeTakeover\"\n            [value]=\"emergencyAccessType.Takeover\"\n            [(ngModel)]=\"type\"\n            [disabled]=\"readOnly\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeTakeover\">\n            {{ \"takeover\" | i18n }}\n            <small>{{ \"takeoverDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-group col-6 mt-4\">\n          <label for=\"waitTime\">{{ \"waitTime\" | i18n }}</label>\n          <select\n            id=\"waitTime\"\n            name=\"waitTime\"\n            [(ngModel)]=\"waitTime\"\n            class=\"form-control\"\n            [disabled]=\"readOnly\"\n          >\n            <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n          <small class=\"text-muted\">{{ \"waitTimeDesc\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          buttonType=\"primary\"\n          bitButton\n          [loading]=\"loading || form.loading\"\n          [disabled]=\"readOnly\"\n        >\n          {{ \"save\" | i18n }}\n        </button>\n        <button bitButton buttonType=\"secondary\" type=\"button\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            bitButton\n            buttonType=\"danger\"\n            type=\"button\"\n            (click)=\"delete()\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { EmergencyAccessInviteRequest } from \"@bitwarden/common/models/request/emergency-access-invite.request\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergency-access-update.request\";\n\n@Component({\n  selector: \"emergency-access-add-edit\",\n  templateUrl: \"emergency-access-add-edit.component.html\",\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() emergencyAccessId: string;\n  @Output() onSaved = new EventEmitter();\n  @Output() onDeleted = new EventEmitter();\n\n  loading = true;\n  readOnly = false;\n  editMode = false;\n  title: string;\n  email: string;\n  type: EmergencyAccessType = EmergencyAccessType.View;\n\n  formPromise: Promise<any>;\n\n  emergencyAccessType = EmergencyAccessType;\n  waitTimes: { name: string; value: number }[];\n  waitTime: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.emergencyAccessId != null;\n\n    this.waitTimes = [\n      { name: this.i18nService.t(\"oneDay\"), value: 1 },\n      { name: this.i18nService.t(\"days\", \"2\"), value: 2 },\n      { name: this.i18nService.t(\"days\", \"7\"), value: 7 },\n      { name: this.i18nService.t(\"days\", \"14\"), value: 14 },\n      { name: this.i18nService.t(\"days\", \"30\"), value: 30 },\n      { name: this.i18nService.t(\"days\", \"90\"), value: 90 },\n    ];\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editEmergencyContact\");\n      try {\n        const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n        this.type = emergencyAccess.type;\n        this.waitTime = emergencyAccess.waitTimeDays;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteEmergencyContact\");\n      this.waitTime = this.waitTimes[2].value;\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new EmergencyAccessUpdateRequest();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n      } else {\n        const request = new EmergencyAccessInviteRequest();\n        request.email = this.email.trim();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n      }\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSaved.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    this.onDeleted.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"emergency-access-confirm\",\n  templateUrl: \"emergency-access-confirm.component.html\",\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() emergencyAccessId: string;\n  @Input() formPromise: Promise<any>;\n  @Output() onConfirmed = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n\n  constructor(\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n      if (publicKeyResponse != null) {\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    try {\n      this.onConfirmed.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class EmergencyAccessPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ \"takeover\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                name=\"NewMasterPasswordHash\"\n                class=\"form-control mb-1\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <app-password-strength\n                [password]=\"masterPassword\"\n                [email]=\"email\"\n                [showText]=\"true\"\n                (passwordStrengthResult)=\"getStrengthResult($event)\"\n              >\n              </app-password-strength>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"password\"\n                name=\"MasterPasswordRetype\"\n                class=\"form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { takeUntil } from \"rxjs\";\n\nimport { ChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { EmergencyAccessPasswordRequest } from \"@bitwarden/common/models/request/emergency-access-password.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\n@Component({\n  selector: \"emergency-access-takeover\",\n  templateUrl: \"emergency-access-takeover.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessTakeoverComponent\n  extends ChangePasswordComponent\n  implements OnInit, OnDestroy\n{\n  @Output() onDone = new EventEmitter();\n  @Input() emergencyAccessId: string;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() kdf: KdfType;\n  @Input() kdfIterations: number;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n    if (response.data != null && response.data.length > 0) {\n      const policies = response.data.map(\n        (policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse))\n      );\n\n      this.policyService\n        .masterPasswordPolicyOptions$(policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPolicyOptions) => (this.enforcedPolicyOptions = enforcedPolicyOptions));\n    }\n  }\n\n  // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(\n      this.emergencyAccessId\n    );\n\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    if (oldEncKey == null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"unexpectedError\")\n      );\n      return;\n    }\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      takeoverResponse.kdf,\n      takeoverResponse.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n    const request = new EmergencyAccessPasswordRequest();\n    request.newMasterPasswordHash = masterPasswordHash;\n    request.key = encKey[1].encryptedString;\n\n    this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n    try {\n      this.onDone.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"emergencyAccess\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"emergencyAccessDesc\" | i18n }}\n  <a href=\"https://bitwarden.com/help/emergency-access/\" target=\"_blank\" rel=\"noopener\">\n    {{ \"learnMore\" | i18n }}.\n  </a>\n</p>\n\n<p *ngIf=\"isOrganizationOwner\">\n  <b>{{ \"warning\" | i18n }}:</b> {{ \"emergencyAccessOwnerWarning\" | i18n }}\n</p>\n\n<div class=\"page-header d-flex\">\n  <h2>\n    {{ \"trustedEmergencyContacts\" | i18n }}\n    <app-premium-badge></app-premium-badge>\n  </h2>\n  <div class=\"ml-auto d-flex\">\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      type=\"button\"\n      (click)=\"invite()\"\n      [disabled]=\"!canAccessPremium\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-plus bwi-fw\"></i>\n      {{ \"addEmergencyContact\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of trustedContacts; let i = index\">\n      <td width=\"30\">\n        <bit-avatar [text]=\"c | userName\" [id]=\"c.granteeId\" size=\"small\"></bit-avatar>\n      </td>\n      <td>\n        <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.email }}</a>\n        <span\n          bitBadge\n          badgeType=\"secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{\n          \"emergencyAccessRecoveryApproved\" | i18n\n        }}</span>\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"trustedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #trustedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n            (click)=\"reinvite(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"resendInvitation\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n            (click)=\"confirm(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"confirm\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n            (click)=\"approve(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"approve\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryInitiated ||\n              c.status === emergencyAccessStatusType.RecoveryApproved\n            \"\n            (click)=\"reject(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"reject\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!trustedContacts || !trustedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noTrustedContacts\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<div class=\"page-header spaced-header\">\n  <h2>{{ \"designatedEmergencyContacts\" | i18n }}</h2>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of grantedContacts; let i = index\">\n      <td width=\"30\">\n        <bit-avatar [text]=\"c | userName\" [id]=\"c.grantorId\" size=\"small\"></bit-avatar>\n      </td>\n      <td>\n        <span>{{ c.email }}</span>\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{\n          \"invited\" | i18n\n        }}</span>\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"grantedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #grantedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"\n            (click)=\"requestAccess(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"requestAccess\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.Takeover\n            \"\n            (click)=\"takeover(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n            {{ \"takeover\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.View\n            \"\n            [routerLink]=\"c.id\"\n          >\n            <i class=\"bwi bwi-fw bwi-eye\" aria-hidden=\"true\"></i>\n            {{ \"view\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!grantedContacts || !grantedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noGrantedAccess\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<ng-template #addEdit></ng-template>\n<ng-template #takeoverTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EmergencyAccessConfirmRequest } from \"@bitwarden/common/models/request/emergency-access-confirm.request\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n} from \"@bitwarden/common/models/response/emergency-access.response\";\n\nimport { EmergencyAccessAddEditComponent } from \"./emergency-access-add-edit.component\";\nimport { EmergencyAccessConfirmComponent } from \"./emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./emergency-access-takeover.component\";\n\n@Component({\n  selector: \"emergency-access\",\n  templateUrl: \"emergency-access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"takeoverTemplate\", { read: ViewContainerRef, static: true })\n  takeoverModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  loaded = false;\n  canAccessPremium: boolean;\n  trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n  grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n  emergencyAccessType = EmergencyAccessType;\n  emergencyAccessStatusType = EmergencyAccessStatusType;\n  actionPromise: Promise<any>;\n  isOrganizationOwner: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const orgs = await this.organizationService.getAll();\n    this.isOrganizationOwner = orgs.some((o) => o.isOwner);\n    this.load();\n  }\n\n  async load() {\n    this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n    this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    this.loaded = true;\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  async edit(details: EmergencyAccessGranteeDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.emergencyAccessId = details?.id;\n        comp.readOnly = !this.canAccessPremium;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSaved.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeleted.subscribe(() => {\n          modal.close();\n          this.remove(details);\n        });\n      }\n    );\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n    if (this.actionPromise != null) {\n      return;\n    }\n    this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n    await this.actionPromise;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenReinvited\", contact.email)\n    );\n    this.actionPromise = null;\n  }\n\n  async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n    function updateUser() {\n      contact.status = EmergencyAccessStatusType.Confirmed;\n    }\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n    if (autoConfirm == null || !autoConfirm) {\n      const [modal] = await this.modalService.openViewRef(\n        EmergencyAccessConfirmComponent,\n        this.confirmModalRef,\n        (comp) => {\n          comp.name = this.userNamePipe.transform(contact);\n          comp.emergencyAccessId = contact.id;\n          comp.userId = contact?.granteeId;\n          // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n          comp.onConfirmed.subscribe(async () => {\n            modal.close();\n\n            comp.formPromise = this.doConfirmation(contact);\n            await comp.formPromise;\n\n            updateUser();\n            this.platformUtilsService.showToast(\n              \"success\",\n              null,\n              this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n            );\n          });\n        }\n      );\n      return;\n    }\n\n    this.actionPromise = this.doConfirmation(contact);\n    await this.actionPromise;\n    updateUser();\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n    );\n    this.actionPromise = null;\n  }\n\n  async remove(\n    details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse\n  ) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteEmergencyAccess(details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(details))\n      );\n\n      if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n        this.removeGrantee(details);\n      } else {\n        this.removeGrantor(details);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"requestAccessConfirmation\", details.waitTimeDays.toString()),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"requestAccess\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessInitiate(details.id);\n\n    details.status = EmergencyAccessStatusType.RecoveryInitiated;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"requestSent\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async approve(details: EmergencyAccessGranteeDetailsResponse) {\n    const type = this.i18nService.t(\n      details.type === EmergencyAccessType.View ? \"view\" : \"takeover\"\n    );\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"approveAccessConfirmation\", this.userNamePipe.transform(details), type),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"approve\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessApprove(details.id);\n    details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyApproved\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async reject(details: EmergencyAccessGranteeDetailsResponse) {\n    await this.apiService.postEmergencyAccessReject(details.id);\n    details.status = EmergencyAccessStatusType.Confirmed;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyRejected\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessTakeoverComponent,\n      this.takeoverModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.email = details.email;\n        comp.emergencyAccessId = details != null ? details.id : null;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDone.subscribe(() => {\n          modal.close();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"passwordResetFor\", this.userNamePipe.transform(details))\n          );\n        });\n      }\n    );\n  }\n\n  private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n    const index = this.trustedContacts.indexOf(details);\n    if (index > -1) {\n      this.trustedContacts.splice(index, 1);\n    }\n  }\n\n  private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n    const index = this.grantedContacts.indexOf(details);\n    if (index > -1) {\n      this.grantedContacts.splice(index, 1);\n    }\n  }\n\n  // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n  private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n    const encKey = await this.cryptoService.getEncKey();\n    const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n    const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n    try {\n      this.logService.debug(\n        \"User's fingerprint: \" +\n          (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join(\"-\")\n      );\n    } catch {\n      // Ignore errors since it's just a debug message\n    }\n\n    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n    const request = new EmergencyAccessConfirmRequest();\n    request.key = encryptedKey.encryptedString;\n    await this.apiService.postEmergencyAccessConfirm(details.id, request);\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\nimport { combineLatestWith, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent\n  implements ControlValueAccessor, Validator, OnInit, OnDestroy\n{\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.MaximumVaultTimeout)\n      .pipe(combineLatestWith(this.policyService.policies$), takeUntil(this.destroy$))\n      .subscribe(([policyAppliesToActiveUser, policies]) => {\n        if (policyAppliesToActiveUser) {\n          const vaultTimeoutPolicy = policies.find(\n            (policy) => policy.type === PolicyType.MaximumVaultTimeout && policy.enabled\n          );\n\n          this.vaultTimeoutPolicy = vaultTimeoutPolicy;\n          this.applyVaultTimeoutPolicy();\n        }\n      });\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.value.custom.hours * 60 + this.form.value.custom.minutes;\n  }\n\n  private applyVaultTimeoutPolicy() {\n    this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n    this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n    this.vaultTimeouts = this.vaultTimeouts.filter(\n      (t) =>\n        t.value <= this.vaultTimeoutPolicy.data.minutes &&\n        (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n        t.value != null\n    );\n    this.validatorChange();\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n    <small class=\"form-text text-muted\">{{ \"vaultTimeoutDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\">\n    <label for=\"customVaultTimeout\">{{ \"customVaultTimeout\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n\n    <small *ngIf=\"!exceedsMinimumTimout\" class=\"tw-text-danger\">\n      <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i> {{ \"vaultCustomTimeoutMinimum\" | i18n }}\n    </small>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<div class=\"page-header\">\n  <h1>{{ \"preferences\" | i18n }}</h1>\n</div>\n<p>{{ \"preferencesDesc\" | i18n }}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>{{ \"vaultTimeoutAction\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLock\"\n        value=\"lock\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n        {{ \"lock\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLockDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLogOut\"\n        value=\"logOut\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n        (ngModelChange)=\"vaultTimeoutActionChanged($event)\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n        {{ \"logOut\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLogOutDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <div class=\"d-flex\">\n          <label for=\"locale\">{{ \"language\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/localization/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n          <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"languageDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFavicons\"\n        name=\"enableFavicons\"\n        [(ngModel)]=\"enableFavicons\"\n      />\n      <label class=\"form-check-label\" for=\"enableFavicons\">\n        {{ \"enableFavicon\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/website-icons/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"faviconDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFullWidth\"\n        name=\"enableFullWidth\"\n        [(ngModel)]=\"enableFullWidth\"\n      />\n      <label class=\"form-check-label\" for=\"enableFullWidth\">\n        {{ \"enableFullWidth\" | i18n }}\n      </label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableFullWidthDesc\" | i18n }}</small>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n        <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\">\n          <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"themeDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormControl } from \"@angular/forms\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-preferences\",\n  templateUrl: \"preferences.component.html\",\n})\nexport class PreferencesComponent implements OnInit {\n  vaultTimeoutAction = \"lock\";\n  enableFavicons: boolean;\n  enableFullWidth: boolean;\n  theme: ThemeType;\n  locale: string;\n  vaultTimeouts: { name: string; value: number }[];\n  localeOptions: any[];\n  themeOptions: any[];\n\n  vaultTimeout: UntypedFormControl = new UntypedFormControl(null);\n\n  private startingLocale: string;\n  private startingTheme: ThemeType;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private themingService: AbstractThemingService\n  ) {\n    this.vaultTimeouts = [\n      { name: i18nService.t(\"oneMinute\"), value: 1 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: i18nService.t(\"oneHour\"), value: 60 },\n      { name: i18nService.t(\"fourHours\"), value: 240 },\n      { name: i18nService.t(\"onRefresh\"), value: -1 },\n    ];\n    if (this.platformUtilsService.isDev()) {\n      this.vaultTimeouts.push({ name: i18nService.t(\"never\"), value: null });\n    }\n\n    const localeOptions: any[] = [];\n    i18nService.supportedTranslationLocales.forEach((locale) => {\n      let name = locale;\n      if (i18nService.localeNames.has(locale)) {\n        name += \" - \" + i18nService.localeNames.get(locale);\n      }\n      localeOptions.push({ name: name, value: locale });\n    });\n    localeOptions.sort(Utils.getSortFunction(i18nService, \"name\"));\n    localeOptions.splice(0, 0, { name: i18nService.t(\"default\"), value: null });\n    this.localeOptions = localeOptions;\n    this.themeOptions = [\n      { name: i18nService.t(\"themeLight\"), value: ThemeType.Light },\n      { name: i18nService.t(\"themeDark\"), value: ThemeType.Dark },\n      { name: i18nService.t(\"themeSystem\"), value: ThemeType.System },\n    ];\n  }\n\n  async ngOnInit() {\n    this.vaultTimeout.setValue(await this.vaultTimeoutSettingsService.getVaultTimeout());\n    this.vaultTimeoutAction = await this.stateService.getVaultTimeoutAction();\n    this.enableFavicons = !(await this.stateService.getDisableFavicon());\n    this.enableFullWidth = await this.stateService.getEnableFullWidth();\n\n    this.locale = (await this.stateService.getLocale()) ?? null;\n    this.startingLocale = this.locale;\n\n    this.theme = await this.stateService.getTheme();\n    this.startingTheme = this.theme;\n  }\n\n  async submit() {\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutRangeError\")\n      );\n      return;\n    }\n\n    await this.vaultTimeoutSettingsService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    await this.stateService.setDisableFavicon(!this.enableFavicons);\n    await this.stateService.setEnableFullWidth(this.enableFullWidth);\n    this.messagingService.send(\"setFullWidth\");\n    if (this.theme !== this.startingTheme) {\n      await this.themingService.updateConfiguredTheme(this.theme);\n      this.startingTheme = this.theme;\n    }\n    await this.stateService.setLocale(this.locale);\n    if (this.locale !== this.startingLocale) {\n      window.location.reload();\n    } else {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"preferencesUpdated\")\n      );\n    }\n  }\n\n  async vaultTimeoutActionChanged(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutAction = \"lock\";\n        return;\n      }\n    }\n    this.vaultTimeoutAction = newValue;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nimport { FolderRequest } from \"./folder.request\";\n\nexport class FolderWithIdRequest extends FolderRequest {\n  id: string;\n\n  constructor(folder: Folder) {\n    super(folder);\n    this.id = folder.id;\n  }\n}\n","import { Send } from \"../domain/send\";\n\nimport { SendRequest } from \"./send.request\";\n\nexport class SendWithIdRequest extends SendRequest {\n  id: string;\n\n  constructor(send: Send) {\n    super(send);\n    this.id = send.id;\n  }\n}\n","import { CipherWithIdRequest } from \"./cipher-with-id.request\";\nimport { FolderWithIdRequest } from \"./folder-with-id.request\";\nimport { SendWithIdRequest } from \"./send-with-id.request\";\n\nexport class UpdateKeyRequest {\n  ciphers: CipherWithIdRequest[] = [];\n  folders: FolderWithIdRequest[] = [];\n  sends: SendWithIdRequest[] = [];\n  masterPasswordHash: string;\n  privateKey: string;\n  key: string;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"changeMasterPassword\" | i18n }}</h1>\n</div>\n\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<app-callout\n  type=\"info\"\n  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n  *ngIf=\"enforcedPolicyOptions\"\n>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n        <input\n          id=\"currentMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"currentMasterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n        <input\n          id=\"newMasterPassword\"\n          type=\"password\"\n          name=\"NewMasterPasswordHash\"\n          class=\"form-control mb-1\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n        <app-password-strength\n          [password]=\"masterPassword\"\n          [email]=\"email\"\n          [showText]=\"true\"\n          (passwordStrengthResult)=\"getStrengthResult($event)\"\n        >\n        </app-password-strength>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n        <input\n          id=\"masterPasswordRetype\"\n          type=\"password\"\n          name=\"MasterPasswordRetype\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPasswordRetype\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"masterPasswordHint\">{{ \"masterPassHintLabel\" | i18n }}</label>\n    <input\n      id=\"masterPasswordHint\"\n      class=\"form-control\"\n      maxlength=\"50\"\n      type=\"text\"\n      name=\"MasterPasswordHint\"\n      [(ngModel)]=\"masterPasswordHint\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"rotateEncKey\"\n        name=\"RotateEncKey\"\n        [(ngModel)]=\"rotateEncKey\"\n        (change)=\"rotateEncKeyClicked()\"\n      />\n      <label class=\"form-check-label\" for=\"rotateEncKey\">\n        {{ \"rotateAccountEncKey\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"changeMasterPassword\" | i18n }}\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipher-with-id.request\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergency-access-update.request\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folder-with-id.request\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/password.request\";\nimport { SendWithIdRequest } from \"@bitwarden/common/models/request/send-with-id.request\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/update-key.request\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"change-password.component.html\",\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n  rotateEncKey = false;\n  currentMasterPassword: string;\n  masterPasswordHint: string;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private syncService: SyncService,\n    private apiService: ApiService,\n    private sendService: SendService,\n    private organizationService: OrganizationService,\n    private keyConnectorService: KeyConnectorService,\n    private router: Router,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      this.router.navigate([\"/settings/security/two-factor\"]);\n    }\n\n    this.masterPasswordHint = (await this.apiService.getProfile()).masterPasswordHint;\n    await super.ngOnInit();\n  }\n\n  async rotateEncKeyClicked() {\n    if (this.rotateEncKey) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      let hasOldAttachments = false;\n      if (ciphers != null) {\n        for (let i = 0; i < ciphers.length; i++) {\n          if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n            hasOldAttachments = true;\n            break;\n          }\n        }\n      }\n\n      if (hasOldAttachments) {\n        const learnMore = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"oldAttachmentsNeedFixDesc\"),\n          null,\n          this.i18nService.t(\"learnMore\"),\n          this.i18nService.t(\"close\"),\n          \"warning\"\n        );\n        if (learnMore) {\n          this.platformUtilsService.launchUri(\n            \"https://bitwarden.com/help/attachments/#add-storage-space\"\n          );\n        }\n        this.rotateEncKey = false;\n        return;\n      }\n\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateEncryptionKeyWarning\") +\n          \" \" +\n          this.i18nService.t(\"updateEncryptionKeyExportWarning\") +\n          \" \" +\n          this.i18nService.t(\"rotateEncKeyConfirmation\"),\n        this.i18nService.t(\"rotateEncKeyTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        this.rotateEncKey = false;\n      }\n    }\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    await super.submit();\n  }\n\n  async setupSubmitActions() {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    if (this.rotateEncKey) {\n      await this.syncService.fullSync(true);\n    }\n\n    return super.setupSubmitActions();\n  }\n\n  async performSubmitActions(\n    newMasterPasswordHash: string,\n    newKey: SymmetricCryptoKey,\n    newEncKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const request = new PasswordRequest();\n    request.masterPasswordHash = await this.cryptoService.hashPassword(\n      this.currentMasterPassword,\n      null\n    );\n    request.masterPasswordHint = this.masterPasswordHint;\n    request.newMasterPasswordHash = newMasterPasswordHash;\n    request.key = newEncKey[1].encryptedString;\n\n    try {\n      if (this.rotateEncKey) {\n        this.formPromise = this.apiService.postPassword(request).then(() => {\n          return this.updateKey(newKey, request.newMasterPasswordHash);\n        });\n      } else {\n        this.formPromise = this.apiService.postPassword(request);\n      }\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = masterPasswordHash;\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    const sends = await this.sendService.getAll();\n    await Promise.all(\n      sends.map(async (send) => {\n        const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n        send.key = (await this.cryptoService.encrypt(cryptoKey, encKey[0])) ?? send.key;\n        request.sends.push(new SendWithIdRequest(send));\n      })\n    );\n\n    await this.apiService.postAccountKey(request);\n\n    await this.updateEmergencyAccesses(encKey[0]);\n\n    await this.updateAllResetPasswordKeys(encKey[0], masterPasswordHash);\n  }\n\n  private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n    const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n    const allowedStatuses = [\n      EmergencyAccessStatusType.Confirmed,\n      EmergencyAccessStatusType.RecoveryInitiated,\n      EmergencyAccessStatusType.RecoveryApproved,\n    ];\n\n    const filteredAccesses = emergencyAccess.data.filter((d) => allowedStatuses.includes(d.status));\n\n    for (const details of filteredAccesses) {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      const updateRequest = new EmergencyAccessUpdateRequest();\n      updateRequest.type = details.type;\n      updateRequest.waitTimeDays = details.waitTimeDays;\n      updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n      await this.apiService.putEmergencyAccess(details.id, updateRequest);\n    }\n  }\n\n  private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey, masterPasswordHash: string) {\n    const orgs = await this.organizationService.getAll();\n\n    for (const org of orgs) {\n      // If not already enrolled, skip\n      if (!org.resetPasswordEnrolled) {\n        continue;\n      }\n\n      // Retrieve public key\n      const response = await this.organizationApiService.getKeys(org.id);\n      const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n      // Re-enroll - encrpyt user's encKey.key with organization public key\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Create/Execute request\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = masterPasswordHash;\n      request.resetPasswordKey = encryptedKey.encryptedString;\n\n      await this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n        org.id,\n        org.userId,\n        request\n      );\n    }\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { PasswordRequest } from \"./password.request\";\n\nexport class KdfRequest extends PasswordRequest {\n  kdf: KdfType;\n  kdfIterations: number;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"encKeySettings\" | i18n }}</h1>\n</div>\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"kdfMasterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"kdfMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdf\">{{ \"kdfAlgorithm\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://en.wikipedia.org/wiki/Key_derivation_function\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\n          <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://bitwarden.com/help/what-encryption-is-used/#pbkdf2\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <input\n          id=\"kdfIterations\"\n          type=\"number\"\n          min=\"5000\"\n          max=\"2000000\"\n          name=\"KdfIterations\"\n          class=\"form-control\"\n          [(ngModel)]=\"kdfIterations\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"small form-text text-muted\">\n          <p>{{ \"kdfIterationsDesc\" | i18n: (recommendedKdfIterations | number) }}</p>\n          <strong>{{ \"warning\" | i18n }}</strong\n          >: {{ \"kdfIterationsWarning\" | i18n: (50000 | number) }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"changeKdf\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { KdfRequest } from \"@bitwarden/common/models/request/kdf.request\";\n\n@Component({\n  selector: \"app-change-kdf\",\n  templateUrl: \"change-kdf.component.html\",\n})\nexport class ChangeKdfComponent implements OnInit {\n  masterPassword: string;\n  kdfIterations: number;\n  kdf = KdfType.PBKDF2_SHA256;\n  kdfOptions: any[] = [];\n  formPromise: Promise<any>;\n  recommendedKdfIterations = DEFAULT_KDF_ITERATIONS;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.kdfOptions = [{ name: \"PBKDF2 SHA-256\", value: KdfType.PBKDF2_SHA256 }];\n  }\n\n  async ngOnInit() {\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    const request = new KdfRequest();\n    request.kdf = this.kdf;\n    request.kdfIterations = this.kdfIterations;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n    const email = await this.stateService.getEmail();\n    const newKey = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email,\n      this.kdf,\n      this.kdfIterations\n    );\n    request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      newKey\n    );\n    const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n    request.key = newEncKey[1].encryptedString;\n    try {\n      this.formPromise = this.apiService.postAccountKdf(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"encKeySettingsChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<app-change-kdf *ngIf=\"showChangeKdf\"></app-change-kdf>\n<div\n  [ngClass]=\"{ 'tabbed-header': !showChangeKdf, 'secondary-header': showChangeKdf }\"\n  class=\"border-0 mb-0\"\n>\n  <h1>{{ \"apiKey\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"userApiKeyDesc\" | i18n }}\n</p>\n<button bitButton buttonType=\"secondary\" (click)=\"viewUserApiKey()\">\n  {{ \"viewApiKey\" | i18n }}\n</button>\n<button bitButton buttonType=\"secondary\" (click)=\"rotateUserApiKey()\">\n  {{ \"rotateApiKey\" | i18n }}\n</button>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ApiKeyComponent } from \"./api-key.component\";\n\n@Component({\n  selector: \"app-security-keys\",\n  templateUrl: \"security-keys.component.html\",\n})\nexport class SecurityKeysComponent implements OnInit {\n  @ViewChild(\"viewUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  viewUserApiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateUserApiKeyModalRef: ViewContainerRef;\n\n  showChangeKdf = true;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeKdf = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async viewUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"userApiKeyDesc\";\n    });\n  }\n\n  async rotateUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.isRotation = true;\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\">\n  <ul class=\"nav nav-tabs\">\n    <ng-container *ngIf=\"showChangePassword\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"change-password\" routerLinkActive=\"active\">\n          {{ \"masterPassword\" | i18n }}\n        </a>\n      </li>\n    </ng-container>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"two-factor\" routerLinkActive=\"active\">\n        {{ \"twoStepLogin\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"security-keys\" routerLinkActive=\"active\">\n        {{ \"keys\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\n\n@Component({\n  selector: \"app-security\",\n  templateUrl: \"security.component.html\",\n})\nexport class SecurityComponent {\n  showChangePassword = true;\n\n  constructor(private keyConnectorService: KeyConnectorService) {}\n\n  async ngOnInit() {\n    this.showChangePassword = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ChangePasswordComponent } from \"./change-password.component\";\nimport { SecurityKeysComponent } from \"./security-keys.component\";\nimport { SecurityComponent } from \"./security.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SecurityComponent,\n    data: { titleId: \"security\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"change-password\" },\n      {\n        path: \"change-password\",\n        component: ChangePasswordComponent,\n        data: { titleId: \"masterPassword\" },\n      },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"security-keys\",\n        component: SecurityKeysComponent,\n        data: { titleId: \"keys\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SecurityRoutingModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"accountSettings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a routerLink=\"security\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"security\" | i18n }}\n          </a>\n          <a routerLink=\"preferences\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"preferences\" | i18n }}\n          </a>\n          <a\n            routerLink=\"subscription\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!hideSubscription\"\n          >\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"domainRules\" | i18n }}\n          </a>\n          <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"emergencyAccess\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sponsored-families\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"hasFamilySponsorshipAvailable\"\n          >\n            {{ \"sponsoredFamilies\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { StateService } from \"../core\";\n\nconst BroadcasterSubscriptionId = \"SettingsComponent\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  premium: boolean;\n  selfHosted: boolean;\n  hasFamilySponsorshipAvailable: boolean;\n  hideSubscription: boolean;\n\n  constructor(\n    private tokenService: TokenService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"purchasedPremium\":\n            await this.load();\n            break;\n          default:\n        }\n      });\n    });\n\n    this.selfHosted = await this.platformUtilsService.isSelfHost();\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.premium = await this.stateService.getHasPremiumPersonally();\n    this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();\n    const hasPremiumFromOrg = await this.stateService.getHasPremiumFromOrganization();\n    let billing = null;\n    if (!this.selfHosted) {\n      billing = await this.apiService.getUserBillingHistory();\n    }\n    this.hideSubscription =\n      !this.premium && hasPremiumFromOrg && (this.selfHosted || billing?.hasNoHistory);\n  }\n}\n","import { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\n\nexport function notAllowedValueAsync(\n  valueGetter: () => Promise<string>,\n  caseInsensitive = false\n): AsyncValidatorFn {\n  return async (control: AbstractControl): Promise<ValidationErrors | null> => {\n    let notAllowedValue = await valueGetter();\n    let controlValue = control.value;\n    if (caseInsensitive) {\n      notAllowedValue = notAllowedValue.toLowerCase();\n      controlValue = controlValue.toLowerCase();\n    }\n\n    if (controlValue === notAllowedValue) {\n      return {\n        notAllowedValue: true,\n      };\n    }\n  };\n}\n","<td>\n  {{ sponsoringOrg.familySponsorshipFriendlyName }}\n</td>\n<td>{{ sponsoringOrg.name }}</td>\n<td>\n  <span [ngClass]=\"statusClass\">{{ statusMessage }}</span>\n</td>\n<td class=\"table-action-right\">\n  <div class=\"dropdown\" appListDropdown>\n    <button\n      *ngIf=\"!sponsoringOrg.familySponsorshipToDelete\"\n      class=\"btn btn-outline-secondary dropdown-toggle\"\n      type=\"button\"\n      id=\"dropdownMenuButton\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n      appA11yTitle=\"{{ 'options' | i18n }}\"\n    >\n      <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n      <button\n        #resendEmailBtn\n        *ngIf=\"!isSelfHosted && !sponsoringOrg.familySponsorshipValidUntil\"\n        [appApiAction]=\"resendEmailPromise\"\n        class=\"dropdown-item btn-submit\"\n        [disabled]=\"$any(resendEmailBtn).loading\"\n        (click)=\"resendEmail()\"\n        [attr.aria-label]=\"'resendEmailLabel' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"resendEmail\" | i18n }}</span>\n      </button>\n      <button\n        #revokeSponsorshipBtn\n        [appApiAction]=\"revokeSponsorshipPromise\"\n        class=\"dropdown-item text-danger btn-submit\"\n        [disabled]=\"$any(revokeSponsorshipBtn).loading\"\n        (click)=\"revokeSponsorship()\"\n        [attr.aria-label]=\"'revokeAccount' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"remove\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</td>\n","import { formatDate } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output, OnInit } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"[sponsoring-org-row]\",\n  templateUrl: \"sponsoring-org-row.component.html\",\n})\nexport class SponsoringOrgRowComponent implements OnInit {\n  @Input() sponsoringOrg: Organization = null;\n  @Input() isSelfHosted = false;\n\n  @Output() sponsorshipRemoved = new EventEmitter();\n\n  statusMessage = \"loading\";\n  statusClass: \"text-success\" | \"text-danger\" = \"text-success\";\n\n  revokeSponsorshipPromise: Promise<any>;\n  resendEmailPromise: Promise<any>;\n\n  private locale = \"\";\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.locale = await firstValueFrom(this.i18nService.locale$);\n\n    this.setStatus(\n      this.isSelfHosted,\n      this.sponsoringOrg.familySponsorshipToDelete,\n      this.sponsoringOrg.familySponsorshipValidUntil,\n      this.sponsoringOrg.familySponsorshipLastSyncDate\n    );\n  }\n\n  async revokeSponsorship() {\n    try {\n      this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n      await this.revokeSponsorshipPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.revokeSponsorshipPromise = null;\n  }\n\n  async resendEmail() {\n    this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n    await this.resendEmailPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailSent\"));\n    this.resendEmailPromise = null;\n  }\n\n  get isSentAwaitingSync() {\n    return this.isSelfHosted && !this.sponsoringOrg.familySponsorshipLastSyncDate;\n  }\n\n  private async doRevokeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeSponsorshipConfirmation\"),\n      `${this.i18nService.t(\"remove\")} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reclaimedFreePlan\"));\n    this.sponsorshipRemoved.emit();\n  }\n\n  private setStatus(\n    selfHosted: boolean,\n    toDelete?: boolean,\n    validUntil?: Date,\n    lastSyncDate?: Date\n  ) {\n    /*\n     * Possible Statuses:\n     * Requested (self-hosted only)\n     * Sent\n     * Active\n     * RequestRevoke\n     * RevokeWhenExpired\n     */\n\n    if (toDelete && validUntil) {\n      // They want to delete but there is a valid until date which means there is an active sponsorship\n      this.statusMessage = this.i18nService.t(\n        \"revokeWhenExpired\",\n        formatDate(validUntil, \"MM/dd/yyyy\", this.locale)\n      );\n      this.statusClass = \"text-danger\";\n    } else if (toDelete) {\n      // They want to delete and we don't have a valid until date so we can\n      // this should only happen on a self-hosted install\n      this.statusMessage = this.i18nService.t(\"requestRemoved\");\n      this.statusClass = \"text-danger\";\n    } else if (validUntil) {\n      // They don't want to delete and they have a valid until date\n      // that means they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"active\");\n      this.statusClass = \"text-success\";\n    } else if (selfHosted && lastSyncDate) {\n      // We are on a self-hosted install and it has been synced but we have not gotten\n      // a valid until date so we can't know if they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else if (!selfHosted) {\n      // We are in cloud and all other status checks have been false therefore we have\n      // sent the request but it hasn't been accepted yet\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else {\n      // We are on a self-hosted install and we have not synced yet\n      this.statusMessage = this.i18nService.t(\"requested\");\n      this.statusClass = \"text-success\";\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"sponsoredFamilies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading\">\n  <p>\n    {{ \"sponsoredFamiliesEligible\" | i18n }}\n  </p>\n  <div>\n    {{ \"sponsoredFamiliesInclude\" | i18n }}:\n    <ul class=\"inset-list\">\n      <li>{{ \"sponsoredFamiliesPremiumAccess\" | i18n }}</li>\n      <li>{{ \"sponsoredFamiliesSharedCollections\" | i18n }}</li>\n    </ul>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    [formGroup]=\"sponsorshipForm\"\n    ngNativeValidate\n    *ngIf=\"anyOrgsAvailable$ | async\"\n  >\n    <div class=\"form-group col-7\">\n      <label for=\"availableSponsorshipOrg\">{{ \"familiesSponsoringOrgSelect\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        formControlName=\"selectedSponsorshipOrgId\"\n        class=\"form-control\"\n        required\n      >\n        <option disabled=\"true\" value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option *ngFor=\"let o of availableSponsorshipOrgs$ | async\" [ngValue]=\"o.id\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div class=\"form-group col-7\">\n      <label for=\"sponsorshipEmail\">{{ \"sponsoredFamiliesEmail\" | i18n }}:</label>\n      <input\n        id=\"sponsorshipEmail\"\n        class=\"form-control\"\n        inputmode=\"email\"\n        formControlName=\"sponsorshipEmail\"\n        name=\"sponsorshipEmail\"\n        required\n        [attr.aria-invalid]=\"sponsorshipEmailControl.invalid\"\n      />\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.notAllowedValue\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"cannotSponsorSelf\" | i18n }}\n      </small>\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.email\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"invalidEmail\" | i18n }}\n      </small>\n    </div>\n    <div class=\"form-group col-7\">\n      <button class=\"btn btn-primary btn-submit mt-2\" type=\"submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"redeem\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n  <ng-container *ngIf=\"anyActiveSponsorships$ | async\">\n    <div class=\"border-bottom\">\n      <table class=\"table table-hover table-list\">\n        <thead>\n          <tr>\n            <th>{{ \"recipient\" | i18n }}</th>\n            <th>{{ \"sponsoringOrg\" | i18n }}</th>\n            <th>{{ \"status\" | i18n }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let o of activeSponsorshipOrgs$ | async\">\n            <tr\n              sponsoring-org-row\n              [sponsoringOrg]=\"o\"\n              [isSelfHosted]=\"isSelfHosted\"\n              (sponsorshipRemoved)=\"forceReload()\"\n            ></tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <small>{{ \"sponsoredFamiliesLeaveCopy\" | i18n }}</small>\n  </ng-container>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { notAllowedValueAsync } from \"@bitwarden/angular/validators/notAllowedValueAsync.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\ninterface RequestSponsorshipForm {\n  selectedSponsorshipOrgId: FormControl<string>;\n  sponsorshipEmail: FormControl<string>;\n}\n\n@Component({\n  selector: \"app-sponsored-families\",\n  templateUrl: \"sponsored-families.component.html\",\n})\nexport class SponsoredFamiliesComponent implements OnInit, OnDestroy {\n  loading = false;\n\n  availableSponsorshipOrgs$: Observable<Organization[]>;\n  activeSponsorshipOrgs$: Observable<Organization[]>;\n  anyOrgsAvailable$: Observable<boolean>;\n  anyActiveSponsorships$: Observable<boolean>;\n\n  // Conditional display properties\n  formPromise: Promise<void>;\n\n  sponsorshipForm: FormGroup<RequestSponsorshipForm>;\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    private stateService: StateService\n  ) {\n    this.sponsorshipForm = this.formBuilder.group<RequestSponsorshipForm>({\n      selectedSponsorshipOrgId: new FormControl(\"\", {\n        validators: [Validators.required],\n      }),\n      sponsorshipEmail: new FormControl(\"\", {\n        validators: [Validators.email],\n        asyncValidators: [\n          notAllowedValueAsync(async () => await this.stateService.getEmail(), true),\n        ],\n        updateOn: \"blur\",\n      }),\n    });\n  }\n\n  async ngOnInit() {\n    this.availableSponsorshipOrgs$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.familySponsorshipAvailable))\n    );\n\n    this.availableSponsorshipOrgs$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (orgs.length === 1) {\n        this.sponsorshipForm.patchValue({\n          selectedSponsorshipOrgId: orgs[0].id,\n        });\n      }\n    });\n\n    this.anyOrgsAvailable$ = this.availableSponsorshipOrgs$.pipe(map((orgs) => orgs.length > 0));\n\n    this.activeSponsorshipOrgs$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.familySponsorshipFriendlyName !== null))\n    );\n\n    this.anyActiveSponsorships$ = this.activeSponsorshipOrgs$.pipe(map((orgs) => orgs.length > 0));\n\n    this.loading = false;\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async submit() {\n    this.formPromise = this.apiService.postCreateSponsorship(\n      this.sponsorshipForm.value.selectedSponsorshipOrgId,\n      {\n        sponsoredEmail: this.sponsorshipForm.value.sponsorshipEmail,\n        planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n        friendlyName: this.sponsorshipForm.value.sponsorshipEmail,\n      }\n    );\n\n    await this.formPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"sponsorshipCreated\"));\n    this.formPromise = null;\n    this.resetForm();\n    await this.forceReload();\n  }\n\n  async forceReload() {\n    this.loading = true;\n    await this.syncService.fullSync(true);\n    this.loading = false;\n  }\n\n  get sponsorshipEmailControl() {\n    return this.sponsorshipForm.controls.sponsorshipEmail;\n  }\n\n  private async resetForm() {\n    this.sponsorshipForm.reset();\n  }\n\n  get isSelfHosted(): boolean {\n    return this.platformUtilsService.isSelfHost();\n  }\n}\n","<div class=\"d-flex tabbed-header\">\n  <h1>\n    {{ \"billingHistory\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <app-billing-history [billing]=\"billing\"></app-billing-history>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billing-history.response\";\n\n@Component({\n  selector: \"app-billing-history-view\",\n  templateUrl: \"billing-history-view.component.html\",\n})\nexport class BillingHistoryViewComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  billing: BillingHistoryResponse;\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n      return;\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingHistory();\n    this.loading = false;\n  }\n}\n","<div *ngIf=\"selfHosted\" class=\"page-header\">\n  <h1>{{ \"subscription\" | i18n }}</h1>\n</div>\n<div *ngIf=\"!selfHosted\" class=\"tabbed-header\">\n  <h1>{{ \"goPremium\" | i18n }}</h1>\n</div>\n<bit-callout\n  type=\"info\"\n  *ngIf=\"canAccessPremium\"\n  title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n  icon=\"bwi bwi-star-f\"\n>\n  {{ \"alreadyPremiumFromOrg\" | i18n }}\n</bit-callout>\n<bit-callout type=\"success\">\n  <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n  <ul class=\"bwi-ul\">\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpStorage\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTwoStep\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpEmergency\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpReports\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTotp\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpSupport\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpFuture\" | i18n }}\n    </li>\n  </ul>\n  <p class=\"text-lg\" [ngClass]=\"{ 'mb-0': !selfHosted }\">\n    {{ \"premiumPriceWithFamilyPlan\" | i18n: (premiumPrice | currency: \"$\"):familyPlanMaxUserCount }}\n    <a routerLink=\"/create-organization\" [queryParams]=\"{ plan: 'families' }\">{{\n      \"bitwardenFamiliesPlan\" | i18n\n    }}</a>\n  </p>\n  <a\n    bitButton\n    href=\"https://vault.bitwarden.com/#/settings/premium\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    buttonType=\"secondary\"\n    *ngIf=\"selfHosted\"\n  >\n    {{ \"purchasePremium\" | i18n }}\n  </a>\n</bit-callout>\n<ng-container *ngIf=\"selfHosted\">\n  <p>{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n      {{ \"submit\" | i18n }}\n    </button>\n  </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n  <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n      <input\n        id=\"additionalStorage\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"AdditionalStorageGb\"\n        [(ngModel)]=\"additionalStorage\"\n        min=\"0\"\n        max=\"99\"\n        step=\"1\"\n        placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n      />\n      <small class=\"text-muted form-text\">{{\n        \"additionalStorageIntervalDesc\"\n          | i18n: \"1 GB\":(storageGbPrice | currency: \"$\"):(\"year\" | i18n)\n      }}</small>\n    </div>\n  </div>\n  <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n  {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n  {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n  {{ storageGbPrice | currency: \"$\" }} =\n  {{ additionalStorageTotal | currency: \"$\" }}\n  <hr class=\"my-3\" />\n  <h2 class=\"spaced-header mb-4\">{{ \"paymentInformation\" | i18n }}</h2>\n  <app-payment [hideBank]=\"true\"></app-payment>\n  <app-tax-info></app-tax-info>\n  <div id=\"price\" class=\"my-4\">\n    <div class=\"text-muted text-sm\">\n      {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n      <br />\n      <ng-container>\n        {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n      </ng-container>\n    </div>\n    <hr class=\"my-1 col-3 ml-0\" />\n    <p class=\"text-lg\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n  </div>\n  <small class=\"text-muted font-italic\">{{ \"paymentChargedAnnually\" | i18n }}</small>\n  <button type=\"submit\" bitButton [loading]=\"form.loading\">\n    {{ \"submit\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium = false;\n  selfHosted = false;\n  premiumPrice = 10;\n  familyPlanMaxUserCount = 6;\n  storageGbPrice = 4;\n  additionalStorage = 0;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const premiumPersonally = await this.stateService.getHasPremiumPersonally();\n    if (premiumPersonally) {\n      this.router.navigate([\"/settings/subscription/user-subscription\"]);\n      return;\n    }\n  }\n\n  async submit() {\n    let files: FileList = null;\n    if (this.selfHosted) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n    }\n\n    try {\n      if (this.selfHosted) {\n        if (!this.tokenService.getEmailVerified()) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            this.i18nService.t(\"errorOccurred\"),\n            this.i18nService.t(\"verifyEmailFirst\")\n          );\n          return;\n        }\n\n        const fd = new FormData();\n        fd.append(\"license\", files[0]);\n        this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n          return this.finalizePremium();\n        });\n      } else {\n        this.formPromise = this.paymentComponent\n          .createPaymentToken()\n          .then((result) => {\n            const fd = new FormData();\n            fd.append(\"paymentMethodType\", result[1].toString());\n            if (result[0] != null) {\n              fd.append(\"paymentToken\", result[0]);\n            }\n            fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n            fd.append(\"country\", this.taxInfoComponent.taxInfo.country);\n            fd.append(\"postalCode\", this.taxInfoComponent.taxInfo.postalCode);\n            return this.apiService.postPremium(fd);\n          })\n          .then((paymentResponse) => {\n            if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n              return this.paymentComponent.handleStripeCardPayment(\n                paymentResponse.paymentIntentClientSecret,\n                () => this.finalizePremium()\n              );\n            } else {\n              return this.finalizePremium();\n            }\n          });\n      }\n      await this.formPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"premiumUpdated\"));\n    this.messagingService.send(\"purchasedPremium\");\n    this.router.navigate([\"/settings/subscription/user-subscription\"]);\n  }\n\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null\n      ? (this.taxInfoComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\" *ngIf=\"!selfHosted\">\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [routerLink]=\"subscriptionRoute\" routerLinkActive=\"active\">\n        {{ \"subscription\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"payment-method\" routerLinkActive=\"active\">\n        {{ \"paymentMethod\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"billing-history\" routerLinkActive=\"active\">\n        {{ \"billingHistory\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-subscription\",\n  templateUrl: \"subscription.component.html\",\n})\nexport class SubscriptionComponent {\n  hasPremium: boolean;\n  selfHosted: boolean;\n\n  constructor(\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.hasPremium = await this.stateService.getHasPremiumPersonally();\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  get subscriptionRoute(): string {\n    return this.hasPremium ? \"user-subscription\" : \"premium\";\n  }\n}\n","<div\n  [ngClass]=\"{\n    'page-header': selfHosted,\n    'tabbed-header': !selfHosted\n  }\"\n>\n  <h1>\n    {{ title }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</bit-callout\n  >\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      bitButton\n      type=\"button\"\n      buttonType=\"secondary\"\n      #reinstateBtn\n      class=\"btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"$any(reinstateBtn).loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </bit-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"row\" *ngIf=\"!selfHosted\">\n    <div class=\"col-4\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"text-capitalize\">{{ (subscription && subscription.status) || \"-\" }}</span>\n          <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (nextInvoice.date | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"col-8\" *ngIf=\"subscription\">\n      <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n      <table class=\"table\">\n        <tbody>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        href=\"https://vault.bitwarden.com/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        >\n        </app-update-license>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"d-flex\">\n      <button\n        bitButton\n        type=\"button\"\n        buttonType=\"secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        bitButton\n        #cancelBtn\n        type=\"button\"\n        buttonType=\"danger\"\n        class=\"btn-submit tw-ml-auto\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"$any(cancelBtn).loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            bitButton\n            type=\"button\"\n            buttonType=\"secondary\"\n            class=\"tw-ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"4\"\n          [add]=\"adjustStorageAdd\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SubscriptionResponse } from \"@bitwarden/common/models/response/subscription.response\";\n\n@Component({\n  selector: \"app-user-subscription\",\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService,\n    private fileDownloadService: FileDownloadService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.stateService.getHasPremiumPersonally()) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      this.router.navigate([\"/settings/subscription/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postCancelPremium();\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.fileDownloadService.download({\n      fileName: \"bitwarden_premium_license.json\",\n      blobData: licenseString,\n    });\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(load: boolean) {\n    this.showUpdateLicense = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  adjustStorage(add: boolean) {\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(add ? \"addStorage\" : \"removeStorage\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get usingInAppPurchase() {\n    return this.sub != null ? this.sub.usingInAppPurchase : false;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.selfHosted ? \"subscription\" : \"premiumMembership\");\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { BillingHistoryViewComponent } from \"./billing-history-view.component\";\nimport { PaymentMethodComponent } from \"./payment-method.component\";\nimport { PremiumComponent } from \"./premium.component\";\nimport { SubscriptionComponent } from \"./subscription.component\";\nimport { UserSubscriptionComponent } from \"./user-subscription.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SubscriptionComponent,\n    data: { titleId: \"subscription\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"premium\" },\n      {\n        path: \"user-subscription\",\n        component: UserSubscriptionComponent,\n        data: { titleId: \"premiumMembership\" },\n      },\n      {\n        path: \"premium\",\n        component: PremiumComponent,\n        data: { titleId: \"goPremium\" },\n      },\n      {\n        path: \"payment-method\",\n        component: PaymentMethodComponent,\n        data: { titleId: \"paymentMethod\" },\n      },\n      {\n        path: \"billing-history\",\n        component: BillingHistoryViewComponent,\n        data: { titleId: \"billingHistory\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubscriptionRoutingModule {}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/password-generator-policy-options\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.initForwardOptions();\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n\n  private async initForwardOptions() {\n    this.forwardOptions = [\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"DuckDuckGo\", value: \"duckduckgo\" },\n      { name: \"Fastmail\", value: \"fastmail\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n    ];\n\n    this.usernameOptions = await this.usernameGenerationService.getOptions();\n    if (\n      this.usernameOptions.forwardedService == null ||\n      this.usernameOptions.forwardedService === \"\"\n    ) {\n      this.forwardOptions.push({ name: \"\", value: null });\n    }\n\n    this.forwardOptions = this.forwardOptions.sort((a, b) => a.name.localeCompare(b.name));\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generated-password-history\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"passHistoryTitle\">{{ \"passwordHistory\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"history.length\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n            <div class=\"tw-min-w-0\">\n              <bit-color-password\n                [password]=\"h.password\"\n                class=\"tw-block tw-font-mono\"\n                appSelectCopy\n              ></bit-color-password>\n              <small class=\"text-muted\">{{ h.date | date: \"medium\" }}</small>\n            </div>\n            <div class=\"ml-auto\">\n              <button\n                class=\"btn btn-link\"\n                appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                (click)=\"copy(h.password)\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!history.length\">\n        {{ \"noPasswordsInList\" | i18n }}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"clear()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'clear' | i18n }}\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"generator\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n  {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n</app-callout>\n<div class=\"card card-generated bg-light my-4\">\n  <div class=\"card-body\">\n    <bit-color-password\n      [password]=\"type === 'password' ? password : username\"\n      appSelectCopy\n    ></bit-color-password>\n  </div>\n</div>\n<div class=\"form-group\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n  <label id=\"typeHeading\" class=\"d-block\">{{ \"whatWouldYouLikeToGenerate\" | i18n }}</label>\n  <div class=\"form-check form-check-inline\" *ngFor=\"let o of typeOptions\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      [(ngModel)]=\"type\"\n      name=\"Type\"\n      id=\"type_{{ o.value }}\"\n      [value]=\"o.value\"\n      (change)=\"typeChanged()\"\n      [checked]=\"type === o.value\"\n    />\n    <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n      {{ o.name }}\n    </label>\n  </div>\n</div>\n<ng-container *ngIf=\"type === 'password'\">\n  <div aria-labelledby=\"passwordTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <label id=\"passwordTypeHeading\" class=\"d-block\">{{ \"passwordType\" | i18n }}</label>\n    <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"passwordOptions.type\"\n        name=\"PasswordType\"\n        id=\"passwordType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"savePasswordOptions()\"\n        [checked]=\"passwordOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"passwordType_{{ o.value }}\">\n        {{ o.name }}\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"passwordOptions.type === 'passphrase'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n        <input\n          id=\"num-words\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"3\"\n          max=\"20\"\n          [(ngModel)]=\"passwordOptions.numWords\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n        <input\n          id=\"word-separator\"\n          class=\"form-control\"\n          type=\"text\"\n          maxlength=\"1\"\n          [(ngModel)]=\"passwordOptions.wordSeparator\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"capitalize\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.capitalize\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n        />\n        <label for=\"capitalize\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"include-number\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.includeNumber\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n        />\n        <label for=\"include-number\" class=\"form-check-label\">{{ \"includeNumber\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"length\">{{ \"length\" | i18n }}</label>\n        <input\n          id=\"length\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"5\"\n          max=\"128\"\n          [(ngModel)]=\"passwordOptions.length\"\n          (blur)=\"savePasswordOptions()\"\n          (change)=\"lengthChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n        <input\n          id=\"min-number\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minNumber\"\n          (change)=\"minNumberChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n        <input\n          id=\"min-special\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minSpecial\"\n          (change)=\"minSpecialChanged()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"uppercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.uppercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useUppercase\"\n          attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n        />\n        <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"lowercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.lowercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useLowercase\"\n          attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n        />\n        <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"numbers\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.number\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useNumbers\"\n          attr.aria-label=\"{{ 'numbers' | i18n }}\"\n        />\n        <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"special\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.special\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useSpecial\"\n          attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n        />\n        <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"ambiguous\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"avoidAmbiguous\"\n        />\n        <label for=\"ambiguous\" class=\"form-check-label\">{{ \"ambiguous\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"d-flex\">\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n        {{ \"regeneratePassword\" | i18n }}\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n        {{ \"copyPassword\" | i18n }}\n      </button>\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"history()\"\n        appA11yTitle=\"{{ 'passwordHistory' | i18n }}\"\n      >\n        <i class=\"bwi bwi-clock bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'username'\">\n  <div aria-labelledby=\"usernameTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <div class=\"d-block\">\n      <label id=\"usernameTypeHeading\">{{ \"usernameType\" | i18n }}</label>\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/generator/#username-types\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"form-check\" *ngFor=\"let o of usernameTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"usernameOptions.type\"\n        name=\"UsernameType\"\n        id=\"usernameType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"saveUsernameOptions()\"\n        [checked]=\"usernameOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"usernameType_{{ o.value }}\">\n        {{ o.name }}\n        <div class=\"small text-muted\">{{ o.desc }}</div>\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'forwarded'\">\n    <div class=\"form-group\" role=\"listbox\">\n      <label class=\"d-block\">{{ \"service\" | i18n }}</label>\n      <select\n        id=\"ForwardTypeDropdown\"\n        name=\"ForwardType\"\n        [(ngModel)]=\"usernameOptions.forwardedService\"\n        (change)=\"saveUsernameOptions()\"\n        class=\"form-control w-auto\"\n      >\n        <option *ngFor=\"let o of forwardOptions\" [ngValue]=\"o.value\" role=\"option\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n      <div class=\"form-group col-4\">\n        <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"simplelogin-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'duckduckgo'\">\n      <div class=\"form-group col-4\">\n        <label for=\"duckduckgo-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"duckduckgo-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          name=\"DuckDuckGoApiKey\"\n          [(ngModel)]=\"usernameOptions.forwardedDuckDuckGoToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"anonaddy-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n        <input\n          id=\"anonaddy-domain\"\n          class=\"form-control\"\n          type=\"text\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n      <div class=\"form-group col-4\">\n        <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"firefox-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'fastmail'\">\n      <div class=\"form-group col-4\">\n        <label for=\"fastmail-apiToken\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"fastmail-apiToken\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFastmailApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n    <div class=\"form-group col-4\">\n      <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n      <input\n        id=\"subaddress-email\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.subaddressEmail\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'catchall'\">\n    <div class=\"form-group col-4\">\n      <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n      <input\n        id=\"catchall-domain\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.catchallDomain\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'word'\">\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            id=\"capitalizeUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n          <label for=\"capitalizeUsername\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n        </div>\n        <div class=\"form-check\">\n          <input\n            id=\"includeNumberUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n          <label for=\"includeNumberUsername\" class=\"form-check-label\">{{\n            \"includeNumber\" | i18n\n          }}</label>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <div #form [appApiAction]=\"usernameGeneratingPromise\">\n    <button\n      type=\"button\"\n      class=\"btn btn-submit btn-primary\"\n      (click)=\"$any(form).loading ? false : regenerate()\"\n      [attr.aria-disabled]=\"$any(form).loading ? 'true' : null\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"regenerateUsername\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n      {{ \"copyUsername\" | i18n }}\n    </button>\n  </div>\n</ng-container>\n<ng-template #historyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./password-generator-history.component\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  @ViewChild(\"historyTemplate\", { read: ViewContainerRef, static: true })\n  historyModalRef: ViewContainerRef;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    route: ActivatedRoute,\n    private modalService: ModalService\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n    if (platformUtilsService.isSelfHost()) {\n      // Cannot use Firefox Relay on self hosted web vaults due to CORS issues with Firefox Relay API\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"firefoxrelay\"),\n        1\n      );\n      // Also cannot use Duck Duck Go on self hosted web vaults due to CORS issues\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"duckduckgo\"),\n        1\n      );\n    }\n  }\n\n  async history() {\n    await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n  }\n\n  lengthChanged() {\n    document.getElementById(\"length\").focus();\n  }\n\n  minNumberChanged() {\n    document.getElementById(\"min-number\").focus();\n  }\n\n  minSpecialChanged() {\n    document.getElementById(\"min-special\").focus();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent implements OnInit {\n  canAccessPremium = false;\n\n  constructor(private stateService: StateService, private messagingService: MessagingService) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card mb-4\">\n        <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"generator\" | i18n }}\n          </a>\n          <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"importData\" | i18n }}\n          </a>\n          <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"exportVault\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipher-with-id.request\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folder-with-id.request\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/update-key.request\";\n\n@Component({\n  selector: \"app-update-key\",\n  templateUrl: \"update-key.component.html\",\n})\nexport class UpdateKeyComponent {\n  masterPassword: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (hasEncKey) {\n      return;\n    }\n\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeRequest().then((request) => {\n        return this.apiService.postAccountKey(request);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 }\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async makeRequest(): Promise<UpdateKeyRequest> {\n    const key = await this.cryptoService.getKey();\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n    await this.syncService.fullSync(true);\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    return request;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"updateEncKeyTitle\">{{ \"updateEncryptionKey\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"updateEncryptionKeyShortDesc\" | i18n }} {{ \"updateEncryptionKeyDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <app-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</app-callout>\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appAutofocus\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"updateEncryptionKey\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  protected componentName = \"\";\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"folderAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"folder.name\"\n          required\n          appAutofocus\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  protected override componentName = \"app-folder-add-edit\";\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport {\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\n\n@Directive()\nexport class ShareComponent implements OnInit, OnDestroy {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<void>;\n  cipher: CipherView;\n  collections: Checkable<CollectionView>[] = [];\n  organizations$: Observable<Organization[]>;\n\n  protected writeableCollections: Checkable<CollectionView>[] = [];\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => {\n        return orgs\n          .filter(\n            (o) =>\n              o.enabled && o.status === OrganizationUserStatusType.Confirmed && isNotProviderUser(o)\n          )\n          .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n      })\n    );\n\n    this.organizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (this.organizationId == null && orgs.length > 0) {\n        this.organizationId = orgs[0].id;\n      }\n    });\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => (c.checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgs = await firstValueFrom(this.organizations$);\n    const orgName =\n      orgs.find((o) => o.id === this.organizationId)?.name ?? this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"shareTitle\">\n          {{ \"moveToOrganization\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <ng-container *ngIf=\"organizations$ | async as organizations\">\n        <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n          {{ \"noOrganizationsList\" | i18n }}\n        </div>\n        <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n          <p>{{ \"moveToOrgDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n            <select\n              id=\"organization\"\n              name=\"OrganizationId\"\n              [(ngModel)]=\"organizationId\"\n              class=\"form-control\"\n              (change)=\"filterCollections()\"\n            >\n              <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"d-flex\">\n            <h3>{{ \"collections\" | i18n }}</h3>\n            <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </div>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n                <td class=\"table-list-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td>\n                  {{ c.name }}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-submit manual\"\n            [disabled]=\"form.loading || !canSave\"\n            [ngClass]=\"{ loading: form.loading }\"\n            *ngIf=\"organizations && organizations.length\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <a\n            href=\"#\"\n            routerLink=\"/create-organization\"\n            class=\"btn btn-primary\"\n            *ngIf=\"!organizations || !organizations.length\"\n          >\n            {{ \"newOrganization\" | i18n }}\n          </a>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"cancel\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"verify-email.component.html\",\n})\nexport class VerifyEmailComponent {\n  actionPromise: Promise<unknown>;\n\n  @Output() onVerified = new EventEmitter<boolean>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private tokenService: TokenService\n  ) {}\n\n  async verifyEmail(): Promise<void> {\n    await this.apiService.refreshIdentityToken();\n    if (await this.tokenService.getEmailVerified()) {\n      this.onVerified.emit(true);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n      return;\n    }\n\n    await this.apiService.postAccountVerifyEmail();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"checkInboxForVerification\")\n    );\n  }\n\n  send = async () => {\n    await this.verifyEmail();\n  };\n}\n","<div class=\"tw-rounded tw-border tw-border-solid tw-border-warning-500 tw-bg-background\">\n  <div class=\"tw-bg-warning-500 tw-px-5 tw-py-2.5 tw-font-bold tw-uppercase tw-text-contrast\">\n    <i class=\"bwi bwi-envelope bwi-fw\" aria-hidden=\"true\"></i> {{ \"verifyEmail\" | i18n }}\n  </div>\n  <div class=\"tw-p-5\">\n    <p>{{ \"verifyEmailDesc\" | i18n }}</p>\n    <button id=\"sendBtn\" bitButton type=\"button\" block [bitAction]=\"send\">\n      {{ \"sendEmail\" | i18n }}\n    </button>\n  </div>\n</div>\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onAddFolder)=\"addFolder()\"\n              (onEditFolder)=\"editFolder($event.id)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div [ngClass]=\"{ 'col-6': isShowingCards, 'col-9': !isShowingCards }\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"vaultItemsComponent.actionPromise\">\n            <ng-container *ngIf=\"$any(actionSpinner).loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [vaultItemsComponent]=\"vaultItemsComponent\"\n            [deleted]=\"activeFilter.status === 'trash'\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addCipher()\"\n            *ngIf=\"activeFilter.status !== 'trash'\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout\n        type=\"warning\"\n        *ngIf=\"activeFilter.status === 'trash'\"\n        icon=\"bwi-exclamation-triangle\"\n      >\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-vault-items\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onShareClicked)=\"shareCipher($event)\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n        (onOrganzationBadgeClicked)=\"applyOrganizationFilter($event)\"\n      >\n      </app-vault-items>\n    </div>\n    <div class=\"col-3\">\n      <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateKeyTitle\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateEncryptionKeyShortDesc\" | i18n }}</p>\n          <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n            {{ \"updateEncryptionKey\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-verify-email\n        *ngIf=\"showVerifyEmail\"\n        class=\"d-block mb-4\"\n        (onVerified)=\"emailVerified($event)\"\n      ></app-verify-email>\n\n      <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateBrowser\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateBrowserDesc\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            target=\"_blank\"\n            href=\"https://browser-update.org/update-browser.html\"\n            rel=\"noopener\"\n          >\n            {{ \"updateBrowser\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n        <div class=\"card-header bg-success text-white\">\n          <i class=\"bwi bwi-star-f bwi-fw\" aria-hidden=\"true\"></i> {{ \"goPremium\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            routerLink=\"/settings/subscription/premium\"\n          >\n            {{ \"goPremium\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { FolderAddEditComponent } from \"./folder-add-edit.component\";\nimport { ShareComponent } from \"./share.component\";\nimport { VaultService } from \"./shared/vault.service\";\nimport { VaultFilterService } from \"./vault-filter/shared/vault-filter.service\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\n\nconst BroadcasterSubscriptionId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true }) filterComponent: VaultFilterComponent;\n  @ViewChild(VaultItemsComponent, { static: true }) vaultItemsComponent: VaultItemsComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"folderAddEdit\", { read: ViewContainerRef, static: true })\n  folderAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"share\", { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"updateKeyTemplate\", { read: ViewContainerRef, static: true })\n  updateKeyModalRef: ViewContainerRef;\n\n  folderId: string = null;\n  myVaultOnly = false;\n  showVerifyEmail = false;\n  showBrowserOutdated = false;\n  showUpdateKey = false;\n  showPremiumCallout = false;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  constructor(\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private tokenService: TokenService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n    this.showBrowserOutdated = window.navigator.userAgent.indexOf(\"MSIE\") !== -1;\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      await this.syncService.fullSync(false);\n      const canAccessPremium = await this.stateService.getCanAccessPremium();\n      this.showPremiumCallout =\n        !this.showVerifyEmail && !canAccessPremium && !this.platformUtilsService.isSelfHost();\n\n      this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n      this.filterComponent.reloadOrganizations();\n      this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n\n      const cipherId = getCipherIdFromParams(params);\n\n      if (cipherId) {\n        const cipherView = new CipherView();\n        cipherView.id = cipherId;\n        if (params.action === \"clone\") {\n          await this.cloneCipher(cipherView);\n        } else if (params.action === \"edit\") {\n          await this.editCipher(cipherView);\n        }\n      }\n      await this.vaultItemsComponent.reload();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.subscribe(async (params) => {\n        const cipherId = getCipherIdFromParams(params);\n        if (cipherId) {\n          if ((await this.cipherService.get(cipherId)) != null) {\n            this.editCipherId(cipherId);\n          } else {\n            this.platformUtilsService.showToast(\n              \"error\",\n              this.i18nService.t(\"errorOccurred\"),\n              this.i18nService.t(\"unknownCipher\")\n            );\n            this.router.navigate([], {\n              queryParams: { itemId: null, cipherId: null },\n              queryParamsHandling: \"merge\",\n            });\n          }\n        }\n      });\n\n      this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n        this.ngZone.run(async () => {\n          switch (message.command) {\n            case \"syncCompleted\":\n              if (message.successfully) {\n                await Promise.all([\n                  this.filterComponent.reloadCollectionsAndFolders(this.activeFilter),\n                  this.filterComponent.reloadOrganizations(),\n                  this.vaultItemsComponent.load(this.vaultItemsComponent.filter),\n                ]);\n                this.changeDetectorRef.detectChanges();\n              }\n              break;\n          }\n        });\n      });\n    });\n  }\n\n  get isShowingCards() {\n    return (\n      this.showBrowserOutdated ||\n      this.showPremiumCallout ||\n      this.showUpdateKey ||\n      this.showVerifyEmail\n    );\n  }\n\n  emailVerified(verified: boolean) {\n    this.showVerifyEmail = !verified;\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.vaultItemsComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n    await this.vaultItemsComponent.reload(\n      this.activeFilter.buildFilter(),\n      vaultFilter.status === \"trash\"\n    );\n    this.filterComponent.searchPlaceholder = this.vaultService.calculateSearchBarLocalizationString(\n      this.activeFilter\n    );\n    this.go();\n  }\n\n  async applyOrganizationFilter(orgId: string) {\n    if (orgId == null) {\n      this.activeFilter.resetOrganization();\n      this.activeFilter.myVaultOnly = true;\n    } else {\n      this.activeFilter.selectedOrganizationId = orgId;\n    }\n    await this.vaultFilterService.ensureVaultFiltersAreExpanded();\n    await this.applyVaultFilter(this.activeFilter);\n  }\n\n  filterSearchText(searchText: string) {\n    this.vaultItemsComponent.searchText = searchText;\n    this.vaultItemsComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (cipher.organizationId == null && !canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    } else if (cipher.organizationId != null) {\n      const org = await this.organizationService.get(cipher.organizationId);\n      if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n        this.messagingService.send(\"upgradeOrganization\", {\n          organizationId: cipher.organizationId,\n        });\n        return;\n      }\n    }\n\n    let madeAttachmentChanges = false;\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onReuploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.vaultItemsComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async shareCipher(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      ShareComponent,\n      this.shareModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSharedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addFolder() {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async editFolder(folderId: string) {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = folderId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.type = this.activeFilter.cipherType;\n    component.folderId = this.folderId === \"none\" ? null : this.folderId;\n    if (this.activeFilter.selectedCollectionId != null) {\n      const collection = this.filterComponent.collections.fullList.filter(\n        (c) => c.id === this.activeFilter.selectedCollectionId\n      );\n      if (collection.length > 0) {\n        component.organizationId = collection[0].organizationId;\n        component.collectionIds = [this.activeFilter.selectedCollectionId];\n      }\n    }\n    if (this.activeFilter.selectedFolderId && this.activeFilter.selectedFolder) {\n      component.folderId = this.activeFilter.selectedFolderId;\n    }\n    if (this.activeFilter.selectedOrganizationId) {\n      component.organizationId = this.activeFilter.selectedOrganizationId;\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(id: string) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n  }\n\n  async updateKey() {\n    await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        favorites: this.activeFilter.status === \"favorites\" ? true : null,\n        type: this.activeFilter.cipherType,\n        folderId: this.activeFilter.selectedFolderId,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.activeFilter.status === \"trash\" ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { OrganizationBadgeModule } from \"./organization-badge/organization-badge.module\";\nimport { VaultSharedModule } from \"./shared/vault-shared.module\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule, OrganizationBadgeModule],\n  declarations: [VaultComponent, VaultItemsComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { flagEnabled, Flags } from \"../utils/flags\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginWithDeviceComponent } from \"./accounts/login/login-with-device.component\";\nimport { LoginComponent } from \"./accounts/login/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TrialInitiationComponent } from \"./accounts/trial-initiation/trial-initiation.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\nimport { HomeGuard } from \"./guards/home.guard\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { OrganizationModule } from \"./organizations/organization.module\";\nimport { AcceptFamilySponsorshipComponent } from \"./organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ReportsModule } from \"./reports\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { PreferencesComponent } from \"./settings/preferences.component\";\nimport { SecurityRoutingModule } from \"./settings/security-routing.module\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { SubscriptionRoutingModule } from \"./settings/subscription-routing.module\";\nimport { GeneratorComponent } from \"./tools/generator.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    data: { doNotSaveUrl: true },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        children: [], // Children lets us have an empty component.\n        canActivate: [HomeGuard], // Redirects either to vault, login or lock page.\n      },\n      { path: \"login\", component: LoginComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"login-with-device\",\n        component: LoginWithDeviceComponent,\n        data: { titleId: \"loginWithDevice\" },\n      },\n      { path: \"2fa\", component: TwoFactorComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"register\",\n        component: TrialInitiationComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"createAccount\" },\n      },\n      {\n        path: \"trial\",\n        redirectTo: \"register\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"sso\",\n        component: SsoComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"enterpriseSingleSignOn\" },\n      },\n      {\n        path: \"set-password\",\n        component: SetPasswordComponent,\n        data: { titleId: \"setMasterPassword\" },\n      },\n      {\n        path: \"hint\",\n        component: HintComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"passwordHint\" },\n      },\n      {\n        path: \"lock\",\n        component: LockComponent,\n        canActivate: [LockGuard],\n      },\n      { path: \"verify-email\", component: VerifyEmailTokenComponent },\n      {\n        path: \"accept-organization\",\n        component: AcceptOrganizationComponent,\n        data: { titleId: \"joinOrganization\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-emergency\",\n        component: AcceptEmergencyComponent,\n        data: { titleId: \"acceptEmergency\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-families-for-enterprise\",\n        component: AcceptFamilySponsorshipComponent,\n        data: { titleId: \"acceptFamilySponsorship\", doNotSaveUrl: false },\n      },\n      { path: \"recover\", pathMatch: \"full\", redirectTo: \"recover-2fa\" },\n      {\n        path: \"recover-2fa\",\n        component: RecoverTwoFactorComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"recoverAccountTwoStep\" },\n      },\n      {\n        path: \"recover-delete\",\n        component: RecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"verify-recover-delete\",\n        component: VerifyRecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"send/:sendId/:key\",\n        component: AccessComponent,\n        data: { title: \"Bitwarden Send\" },\n      },\n      {\n        path: \"update-temp-password\",\n        component: UpdateTempPasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updateTempPassword\" },\n      },\n      {\n        path: \"update-password\",\n        component: UpdatePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updatePassword\" },\n      },\n      {\n        path: \"remove-password\",\n        component: RemovePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"removeMasterPassword\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    component: UserLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      { path: \"sends\", component: SendComponent, data: { title: \"Send\" } },\n      {\n        path: \"create-organization\",\n        component: CreateOrganizationComponent,\n        data: { titleId: \"newOrganization\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myAccount\" } },\n          {\n            path: \"preferences\",\n            component: PreferencesComponent,\n            data: { titleId: \"preferences\" },\n          },\n          {\n            path: \"security\",\n            loadChildren: () => SecurityRoutingModule,\n          },\n          {\n            path: \"domain-rules\",\n            component: DomainRulesComponent,\n            data: { titleId: \"domainRules\" },\n          },\n          {\n            path: \"subscription\",\n            loadChildren: () => SubscriptionRoutingModule,\n          },\n          {\n            path: \"emergency-access\",\n            children: [\n              {\n                path: \"\",\n                component: EmergencyAccessComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n              {\n                path: \":id\",\n                component: EmergencyAccessViewComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n            ],\n          },\n          {\n            path: \"sponsored-families\",\n            component: SponsoredFamiliesComponent,\n            data: { titleId: \"sponsoredFamilies\" },\n          },\n        ],\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [AuthGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"generator\" },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/import-export.module\").then(\n                (m) => m.ImportExportModule\n              ),\n          },\n          {\n            path: \"generator\",\n            component: GeneratorComponent,\n            data: { titleId: \"generator\" },\n          },\n        ],\n      },\n      {\n        path: \"reports\",\n        loadChildren: () => ReportsModule,\n      },\n      { path: \"setup/families-for-enterprise\", component: FamiliesForEnterpriseSetupComponent },\n    ],\n  },\n  {\n    path: \"organizations\",\n    loadChildren: () => OrganizationModule,\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      paramsInheritanceStrategy: \"always\",\n      // enableTracing: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class OssRoutingModule {}\n\nexport function buildFlaggedRoute(flagName: keyof Flags, route: Route): Route {\n  return flagEnabled(flagName)\n    ? route\n    : {\n        path: route.path,\n        redirectTo: \"/\",\n      };\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HasPremiumGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    if (!userHasPremium) {\n      this.messagingService.send(\"premiumRequired\");\n    }\n\n    // Prevent trapping the user on the login page, since that's an awful UX flow\n    if (!userHasPremium && this.router.url === \"/login\") {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    return userHasPremium;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"dataBreachReport\" | i18n }}</h1>\n</div>\n<p>{{ \"breachDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"username\">{{ \"username\" | i18n }}</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        name=\"Username\"\n        class=\"form-control\"\n        [(ngModel)]=\"username\"\n        required\n      />\n      <small class=\"form-text text-muted\">{{ \"breachCheckUsernameEmail\" | i18n }}</small>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"checkBreaches\" | i18n }}\n  </button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n  <p *ngIf=\"error\">{{ \"reportError\" | i18n }}...</p>\n  <ng-container *ngIf=\"!error\">\n    <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!breachedAccounts.length\">\n      {{ \"breachUsernameNotFound\" | i18n: checkedUsername }}\n    </app-callout>\n    <app-callout type=\"danger\" title=\"{{ 'breachFound' | i18n }}\" *ngIf=\"breachedAccounts.length\">\n      {{ \"breachUsernameFound\" | i18n: checkedUsername:breachedAccounts.length }}\n    </app-callout>\n    <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n      <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n        <div class=\"row\">\n          <div class=\"col-2 text-center\">\n            <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\" />\n          </div>\n          <div class=\"col-7\">\n            <h3 class=\"text-lg\">{{ a.title }}</h3>\n            <p [innerHTML]=\"a.description\"></p>\n            <p class=\"mb-1\">{{ \"compromisedData\" | i18n }}:</p>\n            <ul>\n              <li *ngFor=\"let d of a.dataClasses\">{{ d }}</li>\n            </ul>\n          </div>\n          <div class=\"col-3\">\n            <dl>\n              <dt>{{ \"website\" | i18n }}</dt>\n              <dd>{{ a.domain }}</dd>\n              <dt>{{ \"affectedUsers\" | i18n }}</dt>\n              <dd>{{ a.pwnCount | number }}</dd>\n              <dt>{{ \"breachOccurred\" | i18n }}</dt>\n              <dd>{{ a.breachDate | date: \"mediumDate\" }}</dd>\n              <dt>{{ \"breachReported\" | i18n }}</dt>\n              <dd>{{ a.addedDate | date: \"mediumDate\" }}</dd>\n            </dl>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { BreachAccountResponse } from \"@bitwarden/common/models/response/breach-account.response\";\n\n@Component({\n  selector: \"app-breach-report\",\n  templateUrl: \"breach-report.component.html\",\n})\nexport class BreachReportComponent implements OnInit {\n  error = false;\n  username: string;\n  checkedUsername: string;\n  breachedAccounts: BreachAccountResponse[] = [];\n  formPromise: Promise<BreachAccountResponse[]>;\n\n  constructor(private auditService: AuditService, private stateService: StateService) {}\n\n  async ngOnInit() {\n    this.username = await this.stateService.getEmail();\n  }\n\n  async submit() {\n    this.error = false;\n    this.username = this.username.toLowerCase();\n    try {\n      this.formPromise = this.auditService.breachedAccounts(this.username);\n      this.breachedAccounts = await this.formPromise;\n    } catch {\n      this.error = true;\n    }\n    this.checkedUsername = this.username;\n  }\n}\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportBreach = svgIcon`\n  <svg width=\"58\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.569 74H13.007a7 7 0 0 1-7-7V31.077a7 7 0 0 1 7-7h19.101a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.912V67a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.576 69.055H18.015a7 7 0 0 1-7-7V26.132a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.911v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M50 63.698H23.439a7 7 0 0 1-7-7V20.775a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.575A7 7 0 0 1 57 28.35v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.648 13.599v3.95a8 8 0 0 0 8 8h4.518\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M23.533 37.736H49.49M23.533 46.802H49.49M23.533 42.269H49.49M23.533 55.456H49.49M23.533 50.923H49.49\" />\n    <path d=\"M1 16.483C1 7.944 8.013 1 16.69 1c8.678 0 15.691 6.944 15.691 15.483 0 8.54-7.013 15.484-15.69 15.484C8.012 31.967 1 25.023 1 16.484Z\" fill=\"#518FFF\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m16.562 7.979.1 11.538\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <ellipse rx=\"1.252\" ry=\"1.236\" transform=\"rotate(-.479 2802.219 -1964.476) skewX(.012)\" fill=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportExposedPasswords = svgIcon`\n  <svg width=\"101\" height=\"77\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.374 50.192a26.42 26.42 0 0 0 9.111 1.608c14.34 0 25.965-11.372 25.965-25.4 0-.337-.007-.673-.02-1.008h25.299v34.85H32.374v-10.05Z\" fill=\"currentColor\" />\n    <path d=\"M15.805 26.4c0 14.028 11.625 25.4 25.965 25.4s25.964-11.372 25.964-25.4C67.734 12.372 56.11 1 41.77 1 27.43 1 15.805 12.372 15.805 26.4Z\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M27.914 47.849a1 1 0 0 0-2 0h2Zm68.288-26.792a2.12 2.12 0 0 1 2.14 2.11h2c0-2.253-1.83-4.11-4.14-4.11v2Zm2.14 2.11v40.552h2V23.167h-2Zm0 40.552c0 1.172-.958 2.11-2.14 2.11v2c2.25 0 4.14-1.798 4.14-4.11h-2Zm-2.14 2.11H30.054v2h66.148v-2Zm-66.148 0a2.12 2.12 0 0 1-2.14-2.11h-2a4.12 4.12 0 0 0 4.14 4.11v-2Zm-2.14-2.11V47.85h-2v15.87h2Zm39.254-42.662h29.034v-2H67.168v2Z\" fill=\"#fff\" />\n    <path d=\"M67.203 25.56h25.64v34.85H32.487V50.011\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M47.343 76h31.571\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M57.557 66.83V76M67.771 66.83V76\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"m20.995 42.873-3.972 3.972-14.61 14.61a3.413 3.413 0 0 0 0 4.826v0a3.413 3.413 0 0 0 4.827 0l14.61-14.61 3.972-3.972\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M86.037 32.488H71.845M86.037 37.81H76.28M71.845 37.81h-6.652M86.037 43.132h-6.209M74.95 43.132H61.2M86.037 48.454H71.845M66.967 48.454h-7.54M86.037 53.776H66.08M61.201 53.776h-11.53M44.793 53.776h-7.096\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <rect width=\"40.801\" height=\"9.757\" rx=\"4\" transform=\"matrix(-1 0 0 1 61.201 14.748)\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M16.852 33.375h28.375a4 4 0 0 1 4 4v1.757a4 4 0 0 1-4 4H22.174M66.523 33.375h-3.539a4 4 0 0 0-4 4v3.761c0 1.102.894 1.996 1.996 1.996v0\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportInactiveTwoFactor = svgIcon`\n  <svg width=\"42\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" d=\"M1 13.121h39.595v48.758H1z\" />\n    <rect x=\"1\" y=\"1\" width=\"39.595\" height=\"73\" rx=\"8\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M12.344 8.091h16.907M18.907 67.424h3.025M31.503 32.515c-2.047-4.337-6.717-7.061-11.73-6.414a11.356 11.356 0 0 0-9.125 7.126M10.816 42.016c2.047 4.337 6.718 7.062 11.73 6.414 4.346-.562 7.8-3.51 9.213-7.358\" />\n    <path d=\"m33.584 29.293-1.295 4.625-4.625-1.295M8.523 44.725l1.441-4.581 4.582 1.441\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportReusedPasswords = svgIcon`\n  <svg width=\"102\" height=\"102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M57.983 15.06a35.664 35.664 0 0 1 14.531 6.27c16.164 11.78 19.585 34.613 7.643 51a37.227 37.227 0 0 1-6.81 7.138m-32.842 6.697a35.708 35.708 0 0 1-11.239-5.495c-16.163-11.78-19.585-34.613-7.642-51a37.55 37.55 0 0 1 3.295-3.929\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M93.909 64.598H7.72c-.708 0-1.275-.662-1.275-1.49V40.273c0-.828.567-1.49 1.275-1.49H93.91c.708 0 1.275.663 1.275 1.49v22.837c.047.827-.567 1.49-1.275 1.49Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M21.532 52.186v-5.965M21.532 52.187l5.748-1.844M21.532 52.186l3.524 4.881M21.531 52.186l-3.47 4.881M21.532 52.187l-5.694-1.844M40.944 52.186v-5.965M40.944 52.187l5.694-1.844M40.944 52.187l3.525 4.88M40.944 52.187l-3.525 4.88M40.944 52.187l-5.694-1.844M54.849 57.337h11.294M74.21 57.337h11.295M41.75 83l.71 4.75-4.75.71M58.664 18.66 56 14.665 59.996 12\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportUnsecuredWebsites = svgIcon`\n  <svg width=\"113\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1.71 12.983h110.362v55.11a6 6 0 0 1-6 6H7.711a6 6 0 0 1-6-6v-55.11Z\" fill=\"currentColor\" />\n    <rect x=\"1\" y=\"1.073\" width=\"110.5\" height=\"73.454\" rx=\"9\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M89.48 8.048V7.47M96.363 8.048V7.47M103.246 8.048V7.47\" stroke=\"#fff\" stroke-width=\"4\" stroke-linecap=\"round\" />\n    <path d=\"M0 12.983h111.217\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m93.236 44.384-18.42-11.026 2.93 21.266 5.582-5.237 4.27 6.46 2.98-1.971-4.26-6.446 6.918-3.046Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <rect width=\"96.673\" height=\"6.886\" rx=\"3.443\" transform=\"matrix(-1 0 0 1 104.373 18.721)\" stroke=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportWeakPasswords = svgIcon`\n  <svg width=\"78\" height=\"78\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M66.493 64.415V77H9.979V64.324M9.979 44.065V32.106h56.514v12.148\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M75.44 64.852H2.085c-.603 0-1.085-.555-1.085-1.25V44.448c0-.694.482-1.25 1.085-1.25H75.44c.603 0 1.085.556 1.085 1.25v19.156c.04.694-.482 1.25-1.085 1.25Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M13.84 54.56v-5.077M13.84 54.56l4.893-1.57M13.84 54.56l3 4.153M13.84 54.56l-2.954 4.153M13.84 54.56l-4.846-1.57M30.363 54.56v-5.077M30.363 54.56l4.846-1.57M30.363 54.56l3 4.153M30.363 54.56l-3 4.153M30.363 54.56l-4.846-1.57M42.197 59.042h9.506M58.57 59.042h9.507\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M20.863 31.364c-.274-5.285 0-15.817 1.093-18.863 1.276-3.554 6.233-10.826 15.856-11.482 4.83-.273 15.2 2.296 18.043 14.763\" stroke=\"#fff\" stroke-width=\"2\" />\n  </svg>\n`;\n","import { ReportBreach } from \"./icons/report-breach.icon\";\nimport { ReportExposedPasswords } from \"./icons/report-exposed-passwords.icon\";\nimport { ReportInactiveTwoFactor } from \"./icons/report-inactive-two-factor.icon\";\nimport { ReportReusedPasswords } from \"./icons/report-reused-passwords.icon\";\nimport { ReportUnsecuredWebsites } from \"./icons/report-unsecured-websites.icon\";\nimport { ReportWeakPasswords } from \"./icons/report-weak-passwords.icon\";\nimport { ReportEntry } from \"./shared\";\n\nexport enum ReportType {\n  ExposedPasswords = \"exposedPasswords\",\n  ReusedPasswords = \"reusedPasswords\",\n  WeakPasswords = \"weakPasswords\",\n  UnsecuredWebsites = \"unsecuredWebsites\",\n  Inactive2fa = \"inactive2fa\",\n  DataBreach = \"dataBreach\",\n}\n\ntype ReportWithoutVariant = Omit<ReportEntry, \"variant\">;\n\nexport const reports: Record<ReportType, ReportWithoutVariant> = {\n  [ReportType.ExposedPasswords]: {\n    title: \"exposedPasswordsReport\",\n    description: \"exposedPasswordsReportDesc\",\n    route: \"exposed-passwords-report\",\n    icon: ReportExposedPasswords,\n  },\n  [ReportType.ReusedPasswords]: {\n    title: \"reusedPasswordsReport\",\n    description: \"reusedPasswordsReportDesc\",\n    route: \"reused-passwords-report\",\n    icon: ReportReusedPasswords,\n  },\n  [ReportType.WeakPasswords]: {\n    title: \"weakPasswordsReport\",\n    description: \"weakPasswordsReportDesc\",\n    route: \"weak-passwords-report\",\n    icon: ReportWeakPasswords,\n  },\n  [ReportType.UnsecuredWebsites]: {\n    title: \"unsecuredWebsitesReport\",\n    description: \"unsecuredWebsitesReportDesc\",\n    route: \"unsecured-websites-report\",\n    icon: ReportUnsecuredWebsites,\n  },\n  [ReportType.Inactive2fa]: {\n    title: \"inactive2faReport\",\n    description: \"inactive2faReportDesc\",\n    route: \"inactive-two-factor-report\",\n    icon: ReportInactiveTwoFactor,\n  },\n  [ReportType.DataBreach]: {\n    title: \"dataBreachReport\",\n    description: \"breachDesc\",\n    route: \"breach-report\",\n    icon: ReportBreach,\n  },\n};\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared/shared.module\";\n\nimport { ReportCardComponent } from \"./report-card/report-card.component\";\nimport { ReportListComponent } from \"./report-list/report-list.component\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule],\n  declarations: [ReportCardComponent, ReportListComponent],\n  exports: [ReportCardComponent, ReportListComponent],\n})\nexport class ReportsSharedModule {}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { reports, ReportType } from \"../reports\";\nimport { ReportEntry, ReportVariant } from \"../shared\";\n\n@Component({\n  selector: \"app-reports-home\",\n  templateUrl: \"reports-home.component.html\",\n})\nexport class ReportsHomeComponent implements OnInit {\n  reports: ReportEntry[];\n\n  constructor(private stateService: StateService) {}\n\n  async ngOnInit(): Promise<void> {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    const reportRequiresPremium = userHasPremium\n      ? ReportVariant.Enabled\n      : ReportVariant.RequiresPremium;\n\n    this.reports = [\n      {\n        ...reports[ReportType.ExposedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.ReusedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.WeakPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.UnsecuredWebsites],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.Inactive2fa],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.DataBreach],\n        variant: ReportVariant.Enabled,\n      },\n    ];\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"reports\" | i18n }}</h1>\n</div>\n\n<p>{{ \"reportsDesc\" | i18n }}</p>\n\n<app-report-list [reports]=\"reports\"></app-report-list>\n","<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n\n  <div class=\"row mt-4\">\n    <div class=\"col\">\n      <a bitButton routerLink=\"./\" *ngIf=\"!homepage\">\n        <i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i>\n        {{ \"backToReports\" | i18n }}\n      </a>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-reports-layout\",\n  templateUrl: \"reports-layout.component.html\",\n})\nexport class ReportsLayoutComponent implements OnDestroy {\n  homepage = true;\n  subscription: Subscription;\n\n  constructor(router: Router) {\n    this.subscription = router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n      .subscribe((event) => {\n        this.homepage = (event as NavigationEnd).url == \"/reports\";\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\n\nimport { HasPremiumGuard } from \"../shared/guards/has-premium.guard\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportsLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: \"\", pathMatch: \"full\", component: ReportsHomeComponent, data: { homepage: true } },\n      {\n        path: \"breach-report\",\n        component: BreachReportComponent,\n        data: { titleId: \"dataBreachReport\" },\n      },\n      {\n        path: \"reused-passwords-report\",\n        component: ReusedPasswordsReportComponent,\n        data: { titleId: \"reusedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"unsecured-websites-report\",\n        component: UnsecuredWebsitesReportComponent,\n        data: { titleId: \"unsecuredWebsitesReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"weak-passwords-report\",\n        component: WeakPasswordsReportComponent,\n        data: { titleId: \"weakPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"exposed-passwords-report\",\n        component: ExposedPasswordsReportComponent,\n        data: { titleId: \"exposedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"inactive-two-factor-report\",\n        component: InactiveTwoFactorReportComponent,\n        data: { titleId: \"inactive2faReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportsRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\nimport { ReportsRoutingModule } from \"./reports-routing.module\";\nimport { ReportsSharedModule } from \"./shared\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule, ReportsSharedModule, ReportsRoutingModule],\n  declarations: [\n    BreachReportComponent,\n    ExposedPasswordsReportComponent,\n    InactiveTwoFactorReportComponent,\n    ReportsLayoutComponent,\n    ReportsHomeComponent,\n    ReusedPasswordsReportComponent,\n    UnsecuredWebsitesReportComponent,\n    WeakPasswordsReportComponent,\n    WeakPasswordsReportComponent,\n  ],\n})\nexport class ReportsModule {}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { AddEditComponent as OrgAddEditComponent } from \"../../organizations/vault/add-edit.component\";\nimport { AddEditComponent } from \"../../vault/add-edit.component\";\n\n@Directive()\nexport class CipherReportComponent {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n\n  loading = false;\n  hasLoaded = false;\n  ciphers: CipherView[] = [];\n  organization: Organization;\n\n  constructor(\n    private modalService: ModalService,\n    protected messagingService: MessagingService,\n    public requiresPaid: boolean,\n    protected passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async load() {\n    this.loading = true;\n    await this.setCiphers();\n    this.loading = false;\n    this.hasLoaded = true;\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (!(await this.repromptCipher(cipher))) {\n      return;\n    }\n\n    const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      type,\n      this.cipherAddEditModalRef,\n      (comp: OrgAddEditComponent | AddEditComponent) => {\n        if (this.organization != null) {\n          (comp as OrgAddEditComponent).organization = this.organization;\n          comp.organizationId = this.organization.id;\n        }\n\n        comp.cipherId = cipher == null ? null : cipher.id;\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  protected async checkAccess(): Promise<boolean> {\n    if (this.organization != null) {\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      if (this.requiresPaid && !this.organization.useTotp) {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected async setCiphers() {\n    this.ciphers = [];\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"loading\" (click)=\"load()\">\n  {{ \"checkExposedPasswords\" | i18n }}\n</button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  exposedPasswordMap = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, passwordRepromptService);\n  }\n\n  ngOnInit() {\n    this.checkAccess();\n  }\n\n  async load() {\n    if (await this.checkAccess()) {\n      super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const exposedPasswordCiphers: CipherView[] = [];\n    const promises: Promise<void>[] = [];\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n        if (exposedCount > 0) {\n          exposedPasswordCiphers.push(c);\n          this.exposedPasswordMap.set(c.id, exposedCount);\n        }\n      });\n      promises.push(promise);\n    });\n    await Promise.all(promises);\n    this.ciphers = exposedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              bitBadge\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n  services = new Map<string, string>();\n  cipherDocs = new Map<string, string>();\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    private logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    try {\n      await this.load2fa();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (this.services.size > 0) {\n      const allCiphers = await this.getAllCiphers();\n      const inactive2faCiphers: CipherView[] = [];\n      const promises: Promise<void>[] = [];\n      const docs = new Map<string, string>();\n      allCiphers.forEach((c) => {\n        if (\n          c.type !== CipherType.Login ||\n          (c.login.totp != null && c.login.totp !== \"\") ||\n          !c.login.hasUris ||\n          c.isDeleted\n        ) {\n          return;\n        }\n        for (let i = 0; i < c.login.uris.length; i++) {\n          const u = c.login.uris[i];\n          if (u.uri != null && u.uri !== \"\") {\n            const uri = u.uri.replace(\"www.\", \"\");\n            const domain = Utils.getDomain(uri);\n            if (domain != null && this.services.has(domain)) {\n              if (this.services.get(domain) != null) {\n                docs.set(c.id, this.services.get(domain));\n              }\n              inactive2faCiphers.push(c);\n            }\n          }\n        }\n      });\n      await Promise.all(promises);\n      this.ciphers = inactive2faCiphers;\n      this.cipherDocs = docs;\n    }\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  private async load2fa() {\n    if (this.services.size > 0) {\n      return;\n    }\n    const response = await fetch(new Request(\"https://api.2fa.directory/v3/totp.json\"));\n    if (response.status !== 200) {\n      throw new Error();\n    }\n    const responseJson = await response.json();\n    for (const service of responseJson) {\n      const serviceData = service[1];\n      if (serviceData.domain == null) {\n        continue;\n      }\n      if (serviceData.documentation == null) {\n        continue;\n      }\n      if (serviceData[\"additional-domains\"] != null) {\n        for (const additionalDomain of serviceData[\"additional-domains\"]) {\n          this.services.set(additionalDomain, serviceData.documentation);\n        }\n      }\n      this.services.set(serviceData.domain, serviceData.documentation);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordUseMap: Map<string, number>;\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const ciphersWithPasswords: CipherView[] = [];\n    this.passwordUseMap = new Map<string, number>();\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      ciphersWithPasswords.push(c);\n      if (this.passwordUseMap.has(c.login.password)) {\n        this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n      } else {\n        this.passwordUseMap.set(c.login.password, 1);\n      }\n    });\n    const reusedPasswordCiphers = ciphersWithPasswords.filter(\n      (c) =>\n        this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1\n    );\n    this.ciphers = reusedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from an organization view\n    return true;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const unsecuredCiphers = allCiphers.filter((c) => {\n      if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n        return false;\n      }\n      return c.login.uris.some((u) => u.uri != null && u.uri.indexOf(\"http://\") === 0);\n    });\n    this.ciphers = unsecuredCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge [badgeType]=\"passwordStrengthMap.get(c.id)[1]\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { BadgeTypes } from \"@bitwarden/components\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordStrengthMap = new Map<string, [string, BadgeTypes]>();\n\n  private passwordStrengthCache = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const weakPasswordCiphers: CipherView[] = [];\n    const isUserNameNotEmpty = (c: CipherView): boolean => {\n      return c.login.username != null && c.login.username.trim() !== \"\";\n    };\n    const getCacheKey = (c: CipherView): string => {\n      return c.login.password + \"_____\" + (isUserNameNotEmpty(c) ? c.login.username : \"\");\n    };\n\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const hasUserName = isUserNameNotEmpty(c);\n      const cacheKey = getCacheKey(c);\n      if (!this.passwordStrengthCache.has(cacheKey)) {\n        let userInput: string[] = [];\n        if (hasUserName) {\n          const atPosition = c.login.username.indexOf(\"@\");\n          if (atPosition > -1) {\n            userInput = userInput\n              .concat(\n                c.login.username\n                  .substr(0, atPosition)\n                  .trim()\n                  .toLowerCase()\n                  .split(/[^A-Za-z0-9]/)\n              )\n              .filter((i) => i.length >= 3);\n          } else {\n            userInput = c.login.username\n              .trim()\n              .toLowerCase()\n              .split(/[^A-Za-z0-9]/)\n              .filter((i) => i.length >= 3);\n          }\n        }\n        const result = this.passwordGenerationService.passwordStrength(\n          c.login.password,\n          userInput.length > 0 ? userInput : null\n        );\n        this.passwordStrengthCache.set(cacheKey, result.score);\n      }\n      const score = this.passwordStrengthCache.get(cacheKey);\n      if (score != null && score <= 2) {\n        this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n        weakPasswordCiphers.push(c);\n      }\n    });\n    weakPasswordCiphers.sort((a, b) => {\n      return (\n        this.passwordStrengthCache.get(getCacheKey(a)) -\n        this.passwordStrengthCache.get(getCacheKey(b))\n      );\n    });\n    this.ciphers = weakPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n\n  private scoreKey(score: number): [string, BadgeTypes] {\n    switch (score) {\n      case 4:\n        return [\"strong\", \"success\"];\n      case 3:\n        return [\"good\", \"primary\"];\n      case 2:\n        return [\"weak\", \"warning\"];\n      default:\n        return [\"veryWeak\", \"danger\"];\n    }\n  }\n}\n","export enum ReportVariant {\n  Enabled = \"Enabled\",\n  RequiresPremium = \"RequiresPremium\",\n  RequiresUpgrade = \"RequiresUpgrade\",\n}\n","<a\n  class=\"tw-block tw-h-full tw-max-w-72 tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 !tw-text-main tw-transition-all hover:tw-scale-105 hover:tw-no-underline focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2\"\n  [routerLink]=\"route\"\n>\n  <div class=\"tw-relative\">\n    <div\n      class=\"tw-flex tw-h-28 tw-bg-background-alt2 tw-text-center tw-text-primary-300\"\n      [ngClass]=\"{ 'tw-grayscale': disabled }\"\n    >\n      <div class=\"tw-m-auto\"><bit-icon [icon]=\"icon\" aria-hidden=\"true\"></bit-icon></div>\n    </div>\n    <div class=\"tw-p-5\" [ngClass]=\"{ 'tw-grayscale': disabled }\">\n      <h3 class=\"tw-mb-4 tw-text-xl tw-font-bold\">{{ title }}</h3>\n      <p class=\"tw-mb-0\">{{ description }}</p>\n    </div>\n    <span\n      bitBadge\n      badgeType=\"success\"\n      class=\"tw-absolute tw-left-2 tw-top-2 tw-leading-none\"\n      *ngIf=\"disabled\"\n    >\n      <ng-container *ngIf=\"requiresPremium\">{{ \"premium\" | i18n }}</ng-container>\n      <ng-container *ngIf=\"!requiresPremium\">{{ \"upgrade\" | i18n }}</ng-container>\n    </span>\n  </div>\n</a>\n","import { Component, Input } from \"@angular/core\";\n\nimport { Icon } from \"@bitwarden/components\";\n\nimport { ReportVariant } from \"../models/report-variant\";\n\n@Component({\n  selector: \"app-report-card\",\n  templateUrl: \"report-card.component.html\",\n})\nexport class ReportCardComponent {\n  @Input() title: string;\n  @Input() description: string;\n  @Input() route: string;\n  @Input() icon: Icon;\n  @Input() variant: ReportVariant;\n\n  protected get disabled() {\n    return this.variant != ReportVariant.Enabled;\n  }\n\n  protected get requiresPremium() {\n    return this.variant == ReportVariant.RequiresPremium;\n  }\n}\n","<div class=\"tw-inline-grid tw-grid-cols-3 tw-gap-4\">\n  <div *ngFor=\"let report of reports\">\n    <app-report-card\n      [title]=\"report.title | i18n\"\n      [description]=\"report.description | i18n\"\n      [route]=\"report.route\"\n      [variant]=\"report.variant\"\n      [icon]=\"report.icon\"\n    ></app-report-card>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportEntry } from \"../models/report-entry\";\n\n@Component({\n  selector: \"app-report-list\",\n  templateUrl: \"report-list.component.html\",\n})\nexport class ReportListComponent {\n  @Input() reports: ReportEntry[];\n}\n","export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StroageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency: \"$\" }} = {{ adjustedStorageTotal | currency: \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StorageRequest } from \"@bitwarden/common/models/request/storage.request\";\nimport { PaymentResponse } from \"@bitwarden/common/models/response/payment.response\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<PaymentResponse | void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.organizationApiService.updateStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"apiKeyTitle\">{{ apiKeyTitle | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ apiKeyDescription | i18n }}</p>\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n\n        <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{ apiKeyWarning | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          title=\"{{ 'oauth2ClientCredentials' | i18n }}\"\n          icon=\"bwi bwi-key\"\n          *ngIf=\"clientSecret\"\n        >\n          <p class=\"mb-1\">\n            <strong>client_id:</strong><br />\n            <code>{{ clientId }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>client_secret:</strong><br />\n            <code>{{ clientSecret }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>scope:</strong><br />\n            <code>{{ scope }}</code>\n          </p>\n          <p class=\"mb-0\">\n            <strong>grant_type:</strong><br />\n            <code>{{ grantType }}</code>\n          </p>\n        </app-callout>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (isRotation ? \"rotateApiKey\" : \"viewApiKey\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/api-key.response\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-api-key\",\n  templateUrl: \"api-key.component.html\",\n})\nexport class ApiKeyComponent {\n  keyType: string;\n  isRotation: boolean;\n  postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  entityId: string;\n  scope: string;\n  grantType: string;\n  apiKeyTitle: string;\n  apiKeyWarning: string;\n  apiKeyDescription: string;\n\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientId: string;\n  clientSecret: string;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.postKey(this.entityId, request));\n      const response = await this.formPromise;\n      this.clientSecret = response.apiKey;\n      this.clientId = `${this.keyType}.${this.entityId}`;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export enum TransactionType {\n  Charge = 0,\n  Credit = 1,\n  PromotionalCredit = 2,\n  ReferralCredit = 3,\n  Refund = 4,\n}\n","<h2 class=\"mt-3\">{{ \"invoices\" | i18n }}</h2>\n<p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n<table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n  <tbody>\n    <tr *ngFor=\"let i of invoices\">\n      <td>{{ i.date | date: \"mediumDate\" }}</td>\n      <td>\n        <a\n          href=\"{{ i.pdfUrl }}\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          class=\"mr-2\"\n          appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n        >\n          <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n        ></a>\n        <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n          {{ \"invoiceNumber\" | i18n: i.number }}</a\n        >\n      </td>\n      <td>{{ i.amount | currency: \"$\" }}</td>\n      <td>\n        <span *ngIf=\"i.paid\">\n          <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"paid\" | i18n }}\n        </span>\n        <span *ngIf=\"!i.paid\">\n          <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n          {{ \"unpaid\" | i18n }}\n        </span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n<p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n<table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n  <tbody>\n    <tr *ngFor=\"let t of transactions\">\n      <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n      <td>\n        <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n          {{ \"chargeNoun\" | i18n }}\n        </span>\n        <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n      </td>\n      <td>\n        <i\n          class=\"bwi bwi-fw\"\n          *ngIf=\"t.paymentMethodType\"\n          aria-hidden=\"true\"\n          [ngClass]=\"paymentMethodClasses(t.paymentMethodType)\"\n        ></i>\n        {{ t.details }}\n      </td>\n      <td\n        [ngClass]=\"{ 'text-strike': t.refunded }\"\n        title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n      >\n        {{ t.amount | currency: \"$\" }}\n      </td>\n    </tr>\n  </tbody>\n</table>\n<small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n","import { Component, Input } from \"@angular/core\";\n\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billing-history.response\";\n\n@Component({\n  selector: \"app-billing-history\",\n  templateUrl: \"billing-history.component.html\",\n})\nexport class BillingHistoryComponent {\n  @Input()\n  billing: BillingHistoryResponse;\n\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n\n  paymentMethodClasses(type: PaymentMethodType) {\n    switch (type) {\n      case PaymentMethodType.Card:\n        return [\"bwi-credit-card\"];\n      case PaymentMethodType.BankAccount:\n      case PaymentMethodType.WireTransfer:\n        return [\"bwi-bank\"];\n      case PaymentMethodType.BitPay:\n        return [\"bwi-bitcoin text-warning\"];\n      case PaymentMethodType.PayPal:\n        return [\"bwi-paypal text-primary\"];\n      default:\n        return [];\n    }\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationCreateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  planType: PlanType;\n  key: string;\n  keys: OrganizationKeysRequest;\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n  additionalSeats: number;\n  maxAutoscaleSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  collectionName: string;\n  taxIdNumber: string;\n  billingAddressLine1: string;\n  billingAddressLine2: string;\n  billingAddressCity: string;\n  billingAddressState: string;\n  billingAddressPostalCode: string;\n  billingAddressCountry: string;\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpgradeRequest {\n  businessName: string;\n  planType: PlanType;\n  additionalSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  billingAddressCountry: string;\n  billingAddressPostalCode: string;\n  keys: OrganizationKeysRequest;\n}\n","import { OrganizationCreateRequest } from \"../organization-create.request\";\n\nexport class ProviderOrganizationCreateRequest {\n  constructor(\n    public clientOwnerEmail: string,\n    public organizationCreateRequest: OrganizationCreateRequest\n  ) {}\n}\n","<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n  <p>{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_organization_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form\n  #form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n  *ngIf=\"!loading && !selfHosted && this.plans\"\n  class=\"tw-pt-6\"\n>\n  <app-org-info\n    (changedBusinessOwned)=\"changedOwnedBusiness()\"\n    [formGroup]=\"formGroup\"\n    [createOrganization]=\"createOrganization\"\n    [isProvider]=\"!!providerId\"\n    [acceptingSponsorship]=\"acceptingSponsorship\"\n  ></app-org-info>\n  <h2 class=\"mt-5\">{{ \"chooseYourPlan\" | i18n }}</h2>\n  <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"product\"\n      id=\"product{{ selectableProduct.product }}\"\n      [value]=\"selectableProduct.product\"\n      formControlName=\"product\"\n      (change)=\"changedProduct()\"\n    />\n    <label class=\"form-check-label\" for=\"product{{ selectableProduct.product }}\">\n      {{ selectableProduct.nameLocalizationKey | i18n }}\n      <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n: \"1\" }}</small>\n      <ng-container\n        *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"\n      >\n        <small>• {{ \"includeAllTeamsFeatures\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSso\">• {{ \"includeSsoAuthentication\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasPolicies\"\n          >• {{ \"includeEnterprisePolicies\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-container>\n      <ng-template #fullFeatureList>\n        <small *ngIf=\"selectableProduct.product == productTypes.Free\"\n          >• {{ \"limitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxUsers\">• {{ \"addShareUnlimitedUsers\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.maxCollections\"\n          >• {{ \"limitedCollections\" | i18n: selectableProduct.maxCollections }}</small\n        >\n        <small *ngIf=\"selectableProduct.maxAdditionalSeats\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxAdditionalSeats }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxCollections\"\n          >• {{ \"createUnlimitedCollections\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.baseStorageGb\"\n          >• {{ \"gbEncryptedFileStorage\" | i18n: selectableProduct.baseStorageGb + \"GB\" }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasGroups\">• {{ \"controlAccessWithGroups\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasApi\">• {{ \"trackAuditLogs\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasDirectory\"\n          >• {{ \"syncUsersFromDirectory\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.usersGetPremium\">• {{ \"usersGetPremium\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.product != productTypes.Free\"\n          >• {{ \"priorityCustomerSupport\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-template>\n      <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n        <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\">\n          {{ selectableProduct.basePrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }},\n          {{ \"includesXUsers\" | i18n: selectableProduct.baseSeats }}\n          <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n            {{ (\"additionalUsers\" | i18n).toLowerCase() }}\n            {{ selectableProduct.seatPrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </ng-container>\n        </ng-container>\n      </span>\n      <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n        {{ \"costPerUser\" | i18n: (selectableProduct.seatPrice / 12 | currency: \"$\") }} /{{\n          \"month\" | i18n\n        }}\n      </span>\n      <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{ \"freeForever\" | i18n }}</span>\n    </label>\n  </div>\n  <div *ngIf=\"formGroup.controls['product'].value !== productTypes.Free\">\n    <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n      <h2 class=\"mt-5\">{{ \"users\" | i18n }}</h2>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <label for=\"additionalSeats\">{{ \"userSeats\" | i18n }}</label>\n          <input\n            id=\"additionalSeats\"\n            class=\"form-control\"\n            type=\"number\"\n            name=\"additionalSeats\"\n            formControlName=\"additionalSeats\"\n            placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n            required\n          />\n          <small class=\"text-muted form-text\">{{ \"userSeatsHowManyDesc\" | i18n }}</small>\n        </div>\n      </div>\n    </ng-container>\n    <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalSeats\">{{ \"additionalUserSeats\" | i18n }}</label>\n        <input\n          id=\"additionalSeats\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalSeats\"\n          formControlName=\"additionalSeats\"\n          placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"userSeatsAdditionalDesc\"\n            | i18n: selectedPlan.baseSeats:(seatPriceMonthly(selectedPlan) | currency: \"$\")\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n        <input\n          id=\"additionalStorage\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalStorageGb\"\n          formControlName=\"additionalStorage\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"additionalStorageIntervalDesc\"\n            | i18n\n              : \"1 GB\"\n              : (additionalStoragePriceMonthly(selectedPlan) | currency: \"$\")\n              : (\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n        <div class=\"form-check\">\n          <input\n            id=\"premiumAccess\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"premiumAccessAddon\"\n            formControlName=\"premiumAccessAddon\"\n          />\n          <label for=\"premiumAccess\" class=\"form-check-label bold\">{{\n            \"premiumAccess\" | i18n\n          }}</label>\n        </div>\n        <small class=\"text-muted form-text\">{{\n          \"premiumAccessDesc\" | i18n: (3.33 | currency: \"$\"):(\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n    <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"plan\"\n        id=\"interval{{ selectablePlan.type }}\"\n        [value]=\"selectablePlan.type\"\n        formControlName=\"plan\"\n      />\n      <label class=\"form-check-label\" for=\"interval{{ selectablePlan.type }}\">\n        <ng-container *ngIf=\"selectablePlan.isAnnual\">\n          {{ \"annually\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\">\n              <span style=\"text-decoration: line-through\">{{\n                selectablePlan.basePrice | currency: \"$\"\n              }}</span>\n              {{ \"freeWithSponsorship\" | i18n }}\n            </ng-container>\n            <ng-template #notAcceptingSponsorship>\n              {{ selectablePlan.basePrice | currency: \"$\" }}\n              /{{ \"year\" | i18n }}\n            </ng-template>\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"year\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"year\" | i18n }}\n          </small>\n        </ng-container>\n        <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n          {{ \"monthly\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ selectablePlan.basePrice | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n        </ng-container>\n      </label>\n    </div>\n    <hr class=\"my-3\" />\n    <h2 class=\"spaced-header mb-4\">\n      {{ (createOrganization ? \"paymentInformation\" : \"billingInformation\") | i18n }}\n    </h2>\n    <small class=\"text-muted font-italic mb-3 d-block\">\n      {{ paymentDesc }}\n    </small>\n    <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    <div id=\"price\" class=\"my-4\">\n      <div class=\"text-muted text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"my-1 col-3 ml-0\" />\n      <p class=\"text-lg\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{\n          selectedPlanInterval | i18n\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"!createOrganization\">\n      <app-payment [showMethods]=\"false\"></app-payment>\n    </ng-container>\n  </div>\n  <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\n    <app-callout [type]=\"'error'\">{{ \"singleOrgBlockCreateMessage\" | i18n }}</app-callout>\n  </div>\n  <div class=\"mt-4\">\n    <button\n      type=\"submit\"\n      buttonType=\"primary\"\n      bitButton\n      [loading]=\"form.loading\"\n      [disabled]=\"!formGroup.valid\"\n    >\n      {{ \"submit\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { OrganizationCreateRequest } from \"@bitwarden/common/models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organization-keys.request\";\nimport { OrganizationUpgradeRequest } from \"@bitwarden/common/models/request/organization-upgrade.request\";\nimport { ProviderOrganizationCreateRequest } from \"@bitwarden/common/models/request/provider/provider-organization-create.request\";\nimport { PlanResponse } from \"@bitwarden/common/models/response/plan.response\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\ninterface OnSuccessArgs {\n  organizationId: string;\n}\n\n@Component({\n  selector: \"app-organization-plans\",\n  templateUrl: \"organization-plans.component.html\",\n})\nexport class OrganizationPlansComponent implements OnInit, OnDestroy {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n  @Input() organizationId: string;\n  @Input() showFree = true;\n  @Input() showCancel = false;\n  @Input() acceptingSponsorship = false;\n  @Input()\n  get product(): ProductType {\n    return this._product;\n  }\n  set product(product: ProductType) {\n    this._product = product;\n    this.formGroup?.controls?.product?.setValue(product);\n  }\n  private _product = ProductType.Free;\n\n  @Input()\n  get plan(): PlanType {\n    return this._plan;\n  }\n  set plan(plan: PlanType) {\n    this._plan = plan;\n    this.formGroup?.controls?.plan?.setValue(plan);\n  }\n  private _plan = PlanType.Free;\n  @Input() providerId: string;\n  @Output() onSuccess = new EventEmitter<OnSuccessArgs>();\n  @Output() onCanceled = new EventEmitter<void>();\n  @Output() onTrialBillingSuccess = new EventEmitter();\n\n  loading = true;\n  selfHosted = false;\n  productTypes = ProductType;\n  formPromise: Promise<string>;\n  singleOrgPolicyBlock = false;\n  isInTrialFlow = false;\n  discount = 0;\n\n  formGroup = this.formBuilder.group({\n    name: [\"\"],\n    billingEmail: [\"\", [Validators.email]],\n    businessOwned: [false],\n    premiumAccessAddon: [false],\n    additionalStorage: [0, [Validators.min(0), Validators.max(99)]],\n    additionalSeats: [0, [Validators.min(0), Validators.max(100000)]],\n    clientOwnerEmail: [\"\", [Validators.email]],\n    businessName: [\"\"],\n    plan: [this.plan],\n    product: [this.product],\n  });\n\n  plans: PlanResponse[];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private messagingService: MessagingService,\n    private formBuilder: UntypedFormBuilder,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    if (!this.selfHosted) {\n      const plans = await this.apiService.getPlans();\n      this.plans = plans.data;\n      if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n        this.formGroup.controls.businessOwned.setValue(true);\n      }\n    }\n\n    if (this.providerId) {\n      this.formGroup.controls.businessOwned.setValue(true);\n      this.changedOwnedBusiness();\n    }\n\n    if (!this.createOrganization || this.acceptingSponsorship) {\n      this.formGroup.controls.product.setValue(ProductType.Families);\n      this.changedProduct();\n    }\n\n    if (this.createOrganization) {\n      this.formGroup.controls.name.addValidators([Validators.required, Validators.maxLength(50)]);\n      this.formGroup.controls.billingEmail.addValidators(Validators.required);\n    }\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SingleOrg)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.singleOrgPolicyBlock = policyAppliesToActiveUser;\n      });\n\n    this.loading = false;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get createOrganization() {\n    return this.organizationId == null;\n  }\n\n  get selectedPlan() {\n    return this.plans.find((plan) => plan.type === this.formGroup.controls.plan.value);\n  }\n\n  get selectedPlanInterval() {\n    return this.selectedPlan.isAnnual ? \"year\" : \"month\";\n  }\n\n  get selectableProducts() {\n    let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n    if (this.formGroup.controls.businessOwned.value) {\n      validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n    }\n\n    if (!this.showFree) {\n      validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n    }\n\n    validPlans = validPlans.filter(\n      (plan) =>\n        !plan.legacyYear &&\n        !plan.disabled &&\n        (plan.isAnnual || plan.product === this.productTypes.Free)\n    );\n\n    if (this.acceptingSponsorship) {\n      const familyPlan = this.plans.find((plan) => plan.type === PlanType.FamiliesAnnually);\n      this.discount = familyPlan.basePrice;\n      validPlans = [familyPlan];\n    }\n\n    return validPlans;\n  }\n\n  get selectablePlans() {\n    return this.plans?.filter(\n      (plan) =>\n        !plan.legacyYear && !plan.disabled && plan.product === this.formGroup.controls.product.value\n    );\n  }\n\n  additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.additionalStoragePricePerGb;\n    }\n    return selectedPlan.additionalStoragePricePerGb / 12;\n  }\n\n  seatPriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.seatPrice;\n    }\n    return selectedPlan.seatPrice / 12;\n  }\n\n  additionalStorageTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalStorageOption) {\n      return 0;\n    }\n\n    return (\n      plan.additionalStoragePricePerGb *\n      Math.abs(this.formGroup.controls.additionalStorage.value || 0)\n    );\n  }\n\n  seatTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalSeatsOption) {\n      return 0;\n    }\n\n    return plan.seatPrice * Math.abs(this.formGroup.controls.additionalSeats.value || 0);\n  }\n\n  get subtotal() {\n    let subTotal = this.selectedPlan.basePrice;\n    if (\n      this.selectedPlan.hasAdditionalSeatsOption &&\n      this.formGroup.controls.additionalSeats.value\n    ) {\n      subTotal += this.seatTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasAdditionalStorageOption &&\n      this.formGroup.controls.additionalStorage.value\n    ) {\n      subTotal += this.additionalStorageTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasPremiumAccessOption &&\n      this.formGroup.controls.premiumAccessAddon.value\n    ) {\n      subTotal += this.selectedPlan.premiumAccessOptionPrice;\n    }\n    return subTotal - this.discount;\n  }\n\n  get freeTrial() {\n    return this.selectedPlan.trialPeriodDays != null;\n  }\n\n  get taxCharges() {\n    return this.taxComponent != null && this.taxComponent.taxRate != null\n      ? (this.taxComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total() {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  get paymentDesc() {\n    if (this.acceptingSponsorship) {\n      return this.i18nService.t(\"paymentSponsored\");\n    } else if (this.freeTrial && this.createOrganization) {\n      return this.i18nService.t(\"paymentChargedWithTrial\");\n    } else {\n      return this.i18nService.t(\"paymentCharged\", this.i18nService.t(this.selectedPlanInterval));\n    }\n  }\n\n  changedProduct() {\n    this.formGroup.controls.plan.setValue(this.selectablePlans[0].type);\n    if (!this.selectedPlan.hasPremiumAccessOption) {\n      this.formGroup.controls.premiumAccessAddon.setValue(false);\n    }\n    if (!this.selectedPlan.hasAdditionalStorageOption) {\n      this.formGroup.controls.additionalStorage.setValue(0);\n    }\n    if (!this.selectedPlan.hasAdditionalSeatsOption) {\n      this.formGroup.controls.additionalSeats.setValue(0);\n    } else if (\n      !this.formGroup.controls.additionalSeats.value &&\n      !this.selectedPlan.baseSeats &&\n      this.selectedPlan.hasAdditionalSeatsOption\n    ) {\n      this.formGroup.controls.additionalSeats.setValue(1);\n    }\n  }\n\n  changedOwnedBusiness() {\n    if (!this.formGroup.controls.businessOwned.value || this.selectedPlan.canBeUsedByBusiness) {\n      return;\n    }\n    this.formGroup.controls.product.setValue(ProductType.Teams);\n    this.formGroup.controls.plan.setValue(PlanType.TeamsAnnually);\n    this.changedProduct();\n  }\n\n  changedCountry() {\n    this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== \"US\";\n    // Bank Account payments are only available for US customers\n    if (\n      this.paymentComponent.hideBank &&\n      this.paymentComponent.method === PaymentMethodType.BankAccount\n    ) {\n      this.paymentComponent.method = PaymentMethodType.Card;\n      this.paymentComponent.changeMethod();\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  async submit() {\n    if (this.singleOrgPolicyBlock) {\n      return;\n    }\n\n    try {\n      const doSubmit = async (): Promise<string> => {\n        let orgId: string = null;\n        if (this.createOrganization) {\n          const shareKey = await this.cryptoService.makeShareKey();\n          const key = shareKey[0].encryptedString;\n          const collection = await this.cryptoService.encrypt(\n            this.i18nService.t(\"defaultCollection\"),\n            shareKey[1]\n          );\n          const collectionCt = collection.encryptedString;\n          const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n          if (this.selfHosted) {\n            orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n          } else {\n            orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            this.i18nService.t(\"organizationCreated\"),\n            this.i18nService.t(\"organizationReadyToGo\")\n          );\n        } else {\n          orgId = await this.updateOrganization(orgId);\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"organizationUpgraded\")\n          );\n        }\n\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n\n        if (!this.acceptingSponsorship && !this.isInTrialFlow) {\n          this.router.navigate([\"/organizations/\" + orgId]);\n        }\n\n        if (this.isInTrialFlow) {\n          this.onTrialBillingSuccess.emit({\n            orgId: orgId,\n            subLabelText: this.billingSubLabelText(),\n          });\n        }\n\n        return orgId;\n      };\n\n      this.formPromise = doSubmit();\n      const organizationId = await this.formPromise;\n      this.onSuccess.emit({ organizationId: organizationId });\n      this.messagingService.send(\"organizationCreated\", organizationId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async updateOrganization(orgId: string) {\n    const request = new OrganizationUpgradeRequest();\n    request.businessName = this.formGroup.controls.businessOwned.value\n      ? this.formGroup.controls.businessName.value\n      : null;\n    request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n    request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n    request.premiumAccessAddon =\n      this.selectedPlan.hasPremiumAccessOption && this.formGroup.controls.premiumAccessAddon.value;\n    request.planType = this.selectedPlan.type;\n    request.billingAddressCountry = this.taxComponent.taxInfo.country;\n    request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n    // Retrieve org info to backfill pub/priv key if necessary\n    const org = await this.organizationService.get(this.organizationId);\n    if (!org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    const result = await this.organizationApiService.upgrade(this.organizationId, request);\n    if (!result.success && result.paymentIntentClientSecret != null) {\n      await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n    }\n    return this.organizationId;\n  }\n\n  private async createCloudHosted(\n    key: string,\n    collectionCt: string,\n    orgKeys: [string, EncString],\n    orgKey: SymmetricCryptoKey\n  ) {\n    const request = new OrganizationCreateRequest();\n    request.key = key;\n    request.collectionName = collectionCt;\n    request.name = this.formGroup.controls.name.value;\n    request.billingEmail = this.formGroup.controls.billingEmail.value;\n    request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n    if (this.selectedPlan.type === PlanType.Free) {\n      request.planType = PlanType.Free;\n    } else {\n      const tokenResult = await this.paymentComponent.createPaymentToken();\n\n      request.paymentToken = tokenResult[0];\n      request.paymentMethodType = tokenResult[1];\n      request.businessName = this.formGroup.controls.businessOwned.value\n        ? this.formGroup.controls.businessName.value\n        : null;\n      request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n      request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n      request.premiumAccessAddon =\n        this.selectedPlan.hasPremiumAccessOption &&\n        this.formGroup.controls.premiumAccessAddon.value;\n      request.planType = this.selectedPlan.type;\n      request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n      request.billingAddressCountry = this.taxComponent.taxInfo.country;\n      if (this.taxComponent.taxInfo.includeTaxId) {\n        request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n        request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n        request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n        request.billingAddressCity = this.taxComponent.taxInfo.city;\n        request.billingAddressState = this.taxComponent.taxInfo.state;\n      }\n    }\n\n    if (this.providerId) {\n      const providerRequest = new ProviderOrganizationCreateRequest(\n        this.formGroup.controls.clientOwnerEmail.value,\n        request\n      );\n      const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n      providerRequest.organizationCreateRequest.key = (\n        await this.cryptoService.encrypt(orgKey.key, providerKey)\n      ).encryptedString;\n      const orgId = (\n        await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)\n      ).organizationId;\n\n      return orgId;\n    } else {\n      return (await this.organizationApiService.create(request)).id;\n    }\n  }\n\n  private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      throw new Error(this.i18nService.t(\"selectFile\"));\n    }\n\n    const fd = new FormData();\n    fd.append(\"license\", files[0]);\n    fd.append(\"key\", key);\n    fd.append(\"collectionName\", collectionCt);\n    const response = await this.organizationApiService.createLicense(fd);\n    const orgId = response.id;\n\n    await this.apiService.refreshIdentityToken();\n\n    // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n    const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    await this.organizationApiService.updateKeys(orgId, request);\n\n    return orgId;\n  }\n\n  private billingSubLabelText(): string {\n    const selectedPlan = this.selectedPlan;\n    const price = selectedPlan.basePrice === 0 ? selectedPlan.seatPrice : selectedPlan.basePrice;\n    let text = \"\";\n\n    if (selectedPlan.isAnnual) {\n      text += `${this.i18nService.t(\"annual\")} ($${price}/${this.i18nService.t(\"yr\")})`;\n    } else {\n      text += `${this.i18nService.t(\"monthly\")} ($${price}/${this.i18nService.t(\"monthAbbr\")})`;\n    }\n\n    return text;\n  }\n}\n","export class VerifyBankRequest {\n  amount1: number;\n  amount2: number;\n}\n","export class BitPayInvoiceRequest {\n  userId: string;\n  organizationId: string;\n  credit: boolean;\n  amount: number;\n  returnUrl: string;\n  name: string;\n  email: string;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"addCredit\" | i18n }}</h3>\n    <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-paypal\"\n          [value]=\"paymentMethodType.PayPal\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-paypal\">\n          <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n        >\n      </div>\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-bitcoin\"\n          [value]=\"paymentMethodType.BitPay\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n          <i class=\"bwi bwi-fw bwi-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <label for=\"creditAmount\">{{ \"amount\" | i18n }}</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n            <input\n              id=\"creditAmount\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"CreditAmount\"\n              [(ngModel)]=\"creditAmount\"\n              (blur)=\"formatAmount()\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      <small class=\"form-text text-muted\">{{ \"creditDelayed\" | i18n }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n<form #ppButtonForm action=\"{{ ppButtonFormAction }}\" method=\"post\" target=\"_top\">\n  <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n  <input type=\"hidden\" name=\"business\" value=\"{{ ppButtonBusinessId }}\" />\n  <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n  <input type=\"hidden\" name=\"no_note\" value=\"1\" />\n  <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n  <input type=\"hidden\" name=\"rm\" value=\"1\" />\n  <input type=\"hidden\" name=\"return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"cancel_return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n  <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\" />\n  <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\" />\n  <input type=\"hidden\" name=\"amount\" value=\"{{ creditAmount }}\" />\n  <input type=\"hidden\" name=\"custom\" value=\"{{ ppButtonCustomField }}\" />\n  <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\" />\n  <input type=\"hidden\" name=\"item_number\" value=\"{{ subject }}\" />\n</form>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PayPalConfig } from \"@bitwarden/common/abstractions/environment.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BitPayInvoiceRequest } from \"@bitwarden/common/models/request/bit-pay-invoice.request\";\n\n@Component({\n  selector: \"app-add-credit\",\n  templateUrl: \"add-credit.component.html\",\n})\nexport class AddCreditComponent implements OnInit {\n  @Input() creditAmount: string;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.PayPal;\n  @Input() organizationId: string;\n  @Output() onAdded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(\"ppButtonForm\", { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n  paymentMethodType = PaymentMethodType;\n  ppButtonFormAction: string;\n  ppButtonBusinessId: string;\n  ppButtonCustomField: string;\n  ppLoading = false;\n  subject: string;\n  returnUrl: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private name: string;\n  private email: string;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n    this.ppButtonFormAction = payPalConfig.buttonAction;\n    this.ppButtonBusinessId = payPalConfig.businessId;\n  }\n\n  async ngOnInit() {\n    if (this.organizationId != null) {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"20.00\";\n      }\n      this.ppButtonCustomField = \"organization_id:\" + this.organizationId;\n      const org = await this.organizationService.get(this.organizationId);\n      if (org != null) {\n        this.subject = org.name;\n        this.name = org.name;\n      }\n    } else {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"10.00\";\n      }\n      this.userId = await this.stateService.getUserId();\n      this.subject = await this.stateService.getEmail();\n      this.email = this.subject;\n      this.ppButtonCustomField = \"user_id:\" + this.userId;\n    }\n    this.ppButtonCustomField += \",account_credit:1\";\n    this.returnUrl = window.location.href;\n  }\n\n  async submit() {\n    if (this.creditAmount == null || this.creditAmount === \"\") {\n      return;\n    }\n\n    if (this.method === PaymentMethodType.PayPal) {\n      this.ppButtonFormRef.nativeElement.submit();\n      this.ppLoading = true;\n      return;\n    }\n    if (this.method === PaymentMethodType.BitPay) {\n      try {\n        const req = new BitPayInvoiceRequest();\n        req.email = this.email;\n        req.name = this.name;\n        req.credit = true;\n        req.amount = this.creditAmountNumber;\n        req.organizationId = this.organizationId;\n        req.userId = this.userId;\n        req.returnUrl = this.returnUrl;\n        this.formPromise = this.apiService.postBitPayInvoice(req);\n        const bitPayUrl: string = await this.formPromise;\n        this.platformUtilsService.launchUri(bitPayUrl);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      return;\n    }\n    try {\n      this.onAdded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  formatAmount() {\n    try {\n      if (this.creditAmount != null && this.creditAmount !== \"\") {\n        const floatAmount = Math.abs(parseFloat(this.creditAmount));\n        if (floatAmount > 0) {\n          this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n            .toFixed(2)\n            .toString();\n          return;\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.creditAmount = \"\";\n  }\n\n  get creditAmountNumber(): number {\n    if (this.creditAmount != null && this.creditAmount !== \"\") {\n      try {\n        return parseFloat(this.creditAmount);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return null;\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\n\nimport { OrganizationTaxInfoUpdateRequest } from \"./organization-tax-info-update.request\";\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n}\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PaymentRequest } from \"@bitwarden/common/models/request/payment.request\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-adjust-payment\",\n  templateUrl: \"adjust-payment.component.html\",\n})\nexport class AdjustPaymentComponent {\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n  @Input() currentType?: PaymentMethodType;\n  @Input() organizationId: string;\n  @Output() onAdjusted = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  paymentMethodType = PaymentMethodType;\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new PaymentRequest();\n      this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n        request.paymentToken = result[0];\n        request.paymentMethodType = result[1];\n        request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n        request.country = this.taxInfoComponent.taxInfo.country;\n        if (this.organizationId == null) {\n          return this.apiService.postAccountPayment(request);\n        } else {\n          request.taxId = this.taxInfoComponent.taxInfo.taxId;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          request.line1 = this.taxInfoComponent.taxInfo.line1;\n          request.line2 = this.taxInfoComponent.taxInfo.line2;\n          request.city = this.taxInfoComponent.taxInfo.city;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          return this.organizationApiService.updatePayment(this.organizationId, request);\n        }\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedPaymentMethod\")\n      );\n      this.onAdjusted.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  changeCountry() {\n    if (this.taxInfoComponent.taxInfo.country === \"US\") {\n      this.paymentComponent.hideBank = !this.organizationId;\n    } else {\n      this.paymentComponent.hideBank = true;\n      if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n        this.paymentComponent.method = PaymentMethodType.Card;\n        this.paymentComponent.changeMethod();\n      }\n    }\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">\n      {{ (currentType != null ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n    </h3>\n    <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"d-flex\" [ngClass]=\"headerClass\">\n  <h1>\n    {{ \"paymentMethod\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\">\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    [organizationId]=\"organizationId\"\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <app-callout\n      type=\"warning\"\n      title=\"{{ 'verifyBankAccount' | i18n }}\"\n      *ngIf=\"\n        forOrganization &&\n        paymentSource.type === paymentMethodType.BankAccount &&\n        paymentSource.needsVerification\n      \"\n    >\n      <p>{{ \"verifyBankAccountDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}</p>\n      <form\n        #verifyForm\n        class=\"form-inline\"\n        (ngSubmit)=\"verifyBank()\"\n        [formGroup]=\"verifyBankForm\"\n        [appApiAction]=\"verifyBankPromise\"\n        ngNativeValidate\n      >\n        <bit-form-field class=\"tw-mr-2 tw-w-40\">\n          <bit-label>{{ \"amountX\" | i18n: \"1\" }}</bit-label>\n          <input bitInput type=\"number\" step=\"1\" placeholder=\"xx\" formControlName=\"amount1\" />\n          <span bitPrefix>$0.</span>\n        </bit-form-field>\n        <bit-form-field class=\"tw-mr-2 tw-w-40\">\n          <bit-label>{{ \"amountX\" | i18n: \"2\" }}</bit-label>\n          <input bitInput type=\"number\" step=\"1\" placeholder=\"xx\" formControlName=\"amount2\" />\n          <span bitPrefix>$0.</span>\n        </bit-form-field>\n        <button\n          bitButton\n          buttonType=\"primary\"\n          type=\"submit\"\n          class=\"btn-submit\"\n          [disabled]=\"verifyForm.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"verifyBankAccount\" | i18n }}</span>\n        </button>\n      </form>\n    </app-callout>\n    <p>\n      <i class=\"bwi bwi-fw\" [ngClass]=\"paymentSourceClasses\"></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button bitButton buttonType=\"secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\">\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [organizationId]=\"organizationId\"\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n  <ng-container *ngIf=\"forOrganization\">\n    <h2 class=\"spaced-header\">{{ \"taxInformation\" | i18n }}</h2>\n    <p>{{ \"taxInformationDesc\" | i18n }}</p>\n    <div *ngIf=\"!org || loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </div>\n    <form\n      *ngIf=\"org && !loading\"\n      #formTax\n      (ngSubmit)=\"submitTaxInfo()\"\n      [appApiAction]=\"taxFormPromise\"\n      ngNativeValidate\n    >\n      <app-tax-info></app-tax-info>\n      <button\n        bitButton\n        buttonType=\"primary\"\n        type=\"submit\"\n        class=\"btn-submit\"\n        [disabled]=\"formTax.loading\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"save\" | i18n }}</span>\n      </button>\n    </form>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { VerifyBankRequest } from \"@bitwarden/common/models/request/verify-bank.request\";\nimport { BillingPaymentResponse } from \"@bitwarden/common/models/response/billing-payment.response\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organization.response\";\n\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-payment-method\",\n  templateUrl: \"payment-method.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PaymentMethodComponent implements OnInit {\n  @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingPaymentResponse;\n  org: OrganizationResponse;\n  paymentMethodType = PaymentMethodType;\n  organizationId: string;\n\n  verifyBankPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  verifyBankForm = this.formBuilder.group({\n    amount1: new FormControl<number>(null, [\n      Validators.required,\n      Validators.max(99),\n      Validators.min(0),\n    ]),\n    amount2: new FormControl<number>(null, [\n      Validators.required,\n      Validators.max(99),\n      Validators.min(0),\n    ]),\n  });\n\n  constructor(\n    protected apiService: ApiService,\n    protected organizationApiService: OrganizationApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private logService: LogService,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      if (params.organizationId) {\n        this.organizationId = params.organizationId;\n      } else if (this.platformUtilsService.isSelfHost()) {\n        this.router.navigate([\"/settings/subscription\"]);\n        return;\n      }\n\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n\n    if (this.forOrganization) {\n      const billingPromise = this.organizationApiService.getBilling(this.organizationId);\n      const orgPromise = this.organizationApiService.get(this.organizationId);\n\n      [this.billing, this.org] = await Promise.all([billingPromise, orgPromise]);\n    } else {\n      this.billing = await this.apiService.getUserBillingPayment();\n    }\n\n    this.loading = false;\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  async verifyBank() {\n    if (this.loading || !this.forOrganization) {\n      return;\n    }\n\n    try {\n      const request = new VerifyBankRequest();\n      request.amount1 = this.verifyBankForm.value.amount1;\n      request.amount2 = this.verifyBankForm.value.amount2;\n      this.verifyBankPromise = this.organizationApiService.verifyBank(this.organizationId, request);\n      await this.verifyBankPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"verifiedBankAccount\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submitTaxInfo() {\n    this.taxFormPromise = this.taxInfo.submitTaxInfo();\n    await this.taxFormPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"taxInfoUpdated\"));\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get forOrganization() {\n    return this.organizationId != null;\n  }\n\n  get headerClass() {\n    return this.forOrganization ? [\"page-header\"] : [\"tabbed-header\"];\n  }\n\n  get paymentSourceClasses() {\n    if (this.paymentSource == null) {\n      return [];\n    }\n    switch (this.paymentSource.type) {\n      case PaymentMethodType.Card:\n        return [\"bwi-credit-card\"];\n      case PaymentMethodType.BankAccount:\n        return [\"bwi-bank\"];\n      case PaymentMethodType.Check:\n        return [\"bwi-money\"];\n      case PaymentMethodType.AppleInApp:\n        return [\"bwi-apple text-muted\"];\n      case PaymentMethodType.GoogleInApp:\n        return [\"bwi-google text-muted\"];\n      case PaymentMethodType.PayPal:\n        return [\"bwi-paypal text-primary\"];\n      default:\n        return [];\n    }\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n  <div class=\"form-check form-check-inline mr-4\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-card\"\n      [value]=\"paymentMethodType.Card\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-card\">\n      <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i> {{ \"creditCard\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-bank\"\n      [value]=\"paymentMethodType.BankAccount\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-bank\">\n      <i class=\"bwi bwi-fw bwi-bank\" aria-hidden=\"true\"></i> {{ \"bankAccount\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-paypal\"\n      [value]=\"paymentMethodType.PayPal\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-paypal\">\n      <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-credit\"\n      [value]=\"paymentMethodType.Credit\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-credit\">\n      <i class=\"bwi bwi-fw bwi-dollar\" aria-hidden=\"true\"></i> {{ \"accountCredit\" | i18n }}</label\n    >\n  </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n  <div class=\"row\">\n    <div [ngClass]=\"trialFlow ? 'col-5' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-number-element\">{{ \"number\" | i18n }}</label>\n      <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div *ngIf=\"!trialFlow\" class=\"form-group col-8 d-flex align-items-end\">\n      <img\n        src=\"../../images/cards.png\"\n        alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n        width=\"323\"\n        height=\"32\"\n      />\n    </div>\n    <div [ngClass]=\"trialFlow ? 'col-3' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-expiry-element\">{{ \"expiration\" | i18n }}</label>\n      <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-4\">\n      <div class=\"d-flex\">\n        <label for=\"stripe-card-cvc-element\">\n          {{ \"securityCode\" | i18n }}\n        </label>\n        <a\n          href=\"https://www.cvvnumber.com/cvv.html\"\n          tabindex=\"-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"ml-auto\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n  <app-callout type=\"warning\" title=\"{{ 'verifyBankAccount' | i18n }}\">\n    {{ \"verifyBankAccountInitialDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"routing_number\">{{ \"routingNumber\" | i18n }}</label>\n      <input\n        id=\"routing_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"routing_number\"\n        [(ngModel)]=\"bank.routing_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_number\">{{ \"accountNumber\" | i18n }}</label>\n      <input\n        id=\"account_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_number\"\n        [(ngModel)]=\"bank.account_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_name\">{{ \"accountHolderName\" | i18n }}</label>\n      <input\n        id=\"account_holder_name\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_holder_name\"\n        [(ngModel)]=\"bank.account_holder_name\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_type\">{{ \"bankAccountType\" | i18n }}</label>\n      <select\n        id=\"account_holder_type\"\n        class=\"form-control\"\n        name=\"account_holder_type\"\n        [(ngModel)]=\"bank.account_holder_type\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option value=\"company\">{{ \"bankAccountTypeCompany\" | i18n }}</option>\n        <option value=\"individual\">{{ \"bankAccountTypeIndividual\" | i18n }}</option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n  <div class=\"mb-3\">\n    <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n    <small class=\"text-muted\">{{ \"paypalClickSubmit\" | i18n }}</small>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n  <app-callout type=\"note\">\n    {{ \"makeSureEnoughCredit\" | i18n }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\n\n@Component({\n  selector: \"app-payment\",\n  templateUrl: \"payment.component.html\",\n})\nexport class PaymentComponent implements OnInit, OnDestroy {\n  @Input() showMethods = true;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.Card;\n  @Input() hideBank = false;\n  @Input() hidePaypal = false;\n  @Input() hideCredit = false;\n  @Input() trialFlow = false;\n\n  private destroy$ = new Subject<void>();\n\n  bank: any = {\n    routing_number: null,\n    account_number: null,\n    account_holder_name: null,\n    account_holder_type: \"\",\n    currency: \"USD\",\n    country: \"US\",\n  };\n\n  paymentMethodType = PaymentMethodType;\n\n  private btScript: HTMLScriptElement;\n  private btInstance: any = null;\n  private stripeScript: HTMLScriptElement;\n  private stripe: any = null;\n  private stripeElements: any = null;\n  private stripeCardNumberElement: any = null;\n  private stripeCardExpiryElement: any = null;\n  private stripeCardCvcElement: any = null;\n  private StripeElementStyle: any;\n  private StripeElementClasses: any;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private themingService: AbstractThemingService\n  ) {\n    this.stripeScript = window.document.createElement(\"script\");\n    this.stripeScript.src = \"https://js.stripe.com/v3/\";\n    this.stripeScript.async = true;\n    this.stripeScript.onload = () => {\n      this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n      this.stripeElements = this.stripe.elements();\n      this.setStripeElement();\n    };\n    this.btScript = window.document.createElement(\"script\");\n    this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n    this.btScript.async = true;\n    this.StripeElementStyle = {\n      base: {\n        color: null,\n        fontFamily:\n          '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n          '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: \"14px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: null,\n        },\n      },\n      invalid: {\n        color: null,\n      },\n    };\n    this.StripeElementClasses = {\n      focus: \"is-focused\",\n      empty: \"is-empty\",\n      invalid: \"is-invalid\",\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.showOptions) {\n      this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n      this.hideBank = this.method !== PaymentMethodType.BankAccount;\n      this.hideCredit = this.method !== PaymentMethodType.Credit;\n    }\n    this.subscribeToTheme();\n    window.document.head.appendChild(this.stripeScript);\n    if (!this.hidePaypal) {\n      window.document.head.appendChild(this.btScript);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    window.document.head.removeChild(this.stripeScript);\n    window.setTimeout(() => {\n      Array.from(window.document.querySelectorAll(\"iframe\")).forEach((el) => {\n        if (el.src != null && el.src.indexOf(\"stripe\") > -1) {\n          try {\n            window.document.body.removeChild(el);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      });\n    }, 500);\n    if (!this.hidePaypal) {\n      window.document.head.removeChild(this.btScript);\n      window.setTimeout(() => {\n        Array.from(window.document.head.querySelectorAll(\"script\")).forEach((el) => {\n          if (el.src != null && el.src.indexOf(\"paypal\") > -1) {\n            try {\n              window.document.head.removeChild(el);\n            } catch (e) {\n              this.logService.error(e);\n            }\n          }\n        });\n        const btStylesheet = window.document.head.querySelector(\"#braintree-dropin-stylesheet\");\n        if (btStylesheet != null) {\n          try {\n            window.document.head.removeChild(btStylesheet);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      }, 500);\n    }\n  }\n\n  changeMethod() {\n    this.btInstance = null;\n\n    if (this.method === PaymentMethodType.PayPal) {\n      window.setTimeout(() => {\n        (window as any).braintree.dropin.create(\n          {\n            authorization: process.env.BRAINTREE_KEY,\n            container: \"#bt-dropin-container\",\n            paymentOptionPriority: [\"paypal\"],\n            paypal: {\n              flow: \"vault\",\n              buttonStyle: {\n                label: \"pay\",\n                size: \"medium\",\n                shape: \"pill\",\n                color: \"blue\",\n                tagline: \"false\",\n              },\n            },\n          },\n          (createErr: any, instance: any) => {\n            if (createErr != null) {\n              // eslint-disable-next-line\n              console.error(createErr);\n              return;\n            }\n            this.btInstance = instance;\n          }\n        );\n      }, 250);\n    } else {\n      this.setStripeElement();\n    }\n  }\n\n  createPaymentToken(): Promise<[string, PaymentMethodType]> {\n    return new Promise((resolve, reject) => {\n      if (this.method === PaymentMethodType.Credit) {\n        resolve([null, this.method]);\n      } else if (this.method === PaymentMethodType.PayPal) {\n        this.btInstance\n          .requestPaymentMethod()\n          .then((payload: any) => {\n            resolve([payload.nonce, this.method]);\n          })\n          .catch((err: any) => {\n            reject(err.message);\n          });\n      } else if (\n        this.method === PaymentMethodType.Card ||\n        this.method === PaymentMethodType.BankAccount\n      ) {\n        if (this.method === PaymentMethodType.Card) {\n          this.apiService\n            .postSetupPayment()\n            .then((clientSecret) =>\n              this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n            )\n            .then((result: any) => {\n              if (result.error) {\n                reject(result.error.message);\n              } else if (result.setupIntent && result.setupIntent.status === \"succeeded\") {\n                resolve([result.setupIntent.payment_method, this.method]);\n              } else {\n                reject();\n              }\n            });\n        } else {\n          this.stripe.createToken(\"bank_account\", this.bank).then((result: any) => {\n            if (result.error) {\n              reject(result.error.message);\n            } else if (result.token && result.token.id != null) {\n              resolve([result.token.id, this.method]);\n            } else {\n              reject();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.showMethods && this.stripeCardNumberElement == null) {\n        reject();\n        return;\n      }\n      const handleCardPayment = () =>\n        this.showMethods\n          ? this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n          : this.stripe.handleCardSetup(clientSecret);\n      return handleCardPayment().then(async (result: any) => {\n        if (result.error) {\n          reject(result.error.message);\n        } else if (result.paymentIntent && result.paymentIntent.status === \"succeeded\") {\n          if (successCallback != null) {\n            await successCallback();\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  private setStripeElement() {\n    window.setTimeout(() => {\n      if (this.showMethods && this.method === PaymentMethodType.Card) {\n        if (this.stripeCardNumberElement == null) {\n          this.stripeCardNumberElement = this.stripeElements.create(\"cardNumber\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        if (this.stripeCardExpiryElement == null) {\n          this.stripeCardExpiryElement = this.stripeElements.create(\"cardExpiry\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n          });\n        }\n        if (this.stripeCardCvcElement == null) {\n          this.stripeCardCvcElement = this.stripeElements.create(\"cardCvc\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        this.stripeCardNumberElement.mount(\"#stripe-card-number-element\");\n        this.stripeCardExpiryElement.mount(\"#stripe-card-expiry-element\");\n        this.stripeCardCvcElement.mount(\"#stripe-card-cvc-element\");\n      }\n    }, 50);\n  }\n\n  private subscribeToTheme() {\n    this.themingService.theme$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      const style = getComputedStyle(document.documentElement);\n      this.StripeElementStyle.base.color = `rgb(${style.getPropertyValue(\"--color-text-main\")})`;\n      this.StripeElementStyle.base[\"::placeholder\"].color = `rgb(${style.getPropertyValue(\n        \"--color-text-muted\"\n      )})`;\n      this.StripeElementStyle.invalid.color = `rgb(${style.getPropertyValue(\"--color-text-main\")})`;\n      this.StripeElementStyle.invalid.borderColor = `rgb(${style.getPropertyValue(\n        \"--color-danger-500\"\n      )})`;\n    });\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-purge-vault\",\n  templateUrl: \"purge-vault.component.html\",\n})\nexport class PurgeVaultComponent {\n  @Input() organizationId?: string = null;\n\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private router: Router,\n    private logService: LogService,\n    private syncService: SyncService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postPurgeCiphers(request, this.organizationId));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"vaultPurged\"));\n      this.syncService.fullSync(true);\n      if (this.organizationId != null) {\n        this.router.navigate([\"organizations\", this.organizationId, \"vault\"]);\n      } else {\n        this.router.navigate([\"vault\"]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"purgeVaultTitle\">{{ \"purgeVault\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ (organizationId ? \"purgeOrgVaultDesc\" : \"purgeVaultDesc\") | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"purgeVaultWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"purgeVault\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"row\">\n  <div [ngClass]=\"trialFlow ? 'col-7' : 'col-6'\">\n    <div class=\"form-group\">\n      <label for=\"addressCountry\">{{ \"country\" | i18n }}</label>\n      <select\n        id=\"addressCountry\"\n        class=\"form-control\"\n        [(ngModel)]=\"taxInfo.country\"\n        required\n        name=\"addressCountry\"\n        autocomplete=\"country\"\n        (change)=\"changeCountry()\"\n      >\n        <option value=\"\">-- Select --</option>\n        <option value=\"US\">United States</option>\n        <option value=\"CN\">China</option>\n        <option value=\"FR\">France</option>\n        <option value=\"DE\">Germany</option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"GB\">United Kingdom</option>\n        <option value=\"AU\">Australia</option>\n        <option value=\"IN\">India</option>\n        <option value=\"-\" disabled></option>\n        <option value=\"AF\">Afghanistan</option>\n        <option value=\"AX\">Åland Islands</option>\n        <option value=\"AL\">Albania</option>\n        <option value=\"DZ\">Algeria</option>\n        <option value=\"AS\">American Samoa</option>\n        <option value=\"AD\">Andorra</option>\n        <option value=\"AO\">Angola</option>\n        <option value=\"AI\">Anguilla</option>\n        <option value=\"AQ\">Antarctica</option>\n        <option value=\"AG\">Antigua and Barbuda</option>\n        <option value=\"AR\">Argentina</option>\n        <option value=\"AM\">Armenia</option>\n        <option value=\"AW\">Aruba</option>\n        <option value=\"AT\">Austria</option>\n        <option value=\"AZ\">Azerbaijan</option>\n        <option value=\"BS\">Bahamas</option>\n        <option value=\"BH\">Bahrain</option>\n        <option value=\"BD\">Bangladesh</option>\n        <option value=\"BB\">Barbados</option>\n        <option value=\"BY\">Belarus</option>\n        <option value=\"BE\">Belgium</option>\n        <option value=\"BZ\">Belize</option>\n        <option value=\"BJ\">Benin</option>\n        <option value=\"BM\">Bermuda</option>\n        <option value=\"BT\">Bhutan</option>\n        <option value=\"BO\">Bolivia, Plurinational State of</option>\n        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n        <option value=\"BA\">Bosnia and Herzegovina</option>\n        <option value=\"BW\">Botswana</option>\n        <option value=\"BV\">Bouvet Island</option>\n        <option value=\"BR\">Brazil</option>\n        <option value=\"IO\">British Indian Ocean Territory</option>\n        <option value=\"BN\">Brunei Darussalam</option>\n        <option value=\"BG\">Bulgaria</option>\n        <option value=\"BF\">Burkina Faso</option>\n        <option value=\"BI\">Burundi</option>\n        <option value=\"KH\">Cambodia</option>\n        <option value=\"CM\">Cameroon</option>\n        <option value=\"CV\">Cape Verde</option>\n        <option value=\"KY\">Cayman Islands</option>\n        <option value=\"CF\">Central African Republic</option>\n        <option value=\"TD\">Chad</option>\n        <option value=\"CL\">Chile</option>\n        <option value=\"CX\">Christmas Island</option>\n        <option value=\"CC\">Cocos (Keeling) Islands</option>\n        <option value=\"CO\">Colombia</option>\n        <option value=\"KM\">Comoros</option>\n        <option value=\"CG\">Congo</option>\n        <option value=\"CD\">Congo, the Democratic Republic of the</option>\n        <option value=\"CK\">Cook Islands</option>\n        <option value=\"CR\">Costa Rica</option>\n        <option value=\"CI\">Côte d'Ivoire</option>\n        <option value=\"HR\">Croatia</option>\n        <option value=\"CU\">Cuba</option>\n        <option value=\"CW\">Curaçao</option>\n        <option value=\"CY\">Cyprus</option>\n        <option value=\"CZ\">Czech Republic</option>\n        <option value=\"DK\">Denmark</option>\n        <option value=\"DJ\">Djibouti</option>\n        <option value=\"DM\">Dominica</option>\n        <option value=\"DO\">Dominican Republic</option>\n        <option value=\"EC\">Ecuador</option>\n        <option value=\"EG\">Egypt</option>\n        <option value=\"SV\">El Salvador</option>\n        <option value=\"GQ\">Equatorial Guinea</option>\n        <option value=\"ER\">Eritrea</option>\n        <option value=\"EE\">Estonia</option>\n        <option value=\"ET\">Ethiopia</option>\n        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n        <option value=\"FO\">Faroe Islands</option>\n        <option value=\"FJ\">Fiji</option>\n        <option value=\"FI\">Finland</option>\n        <option value=\"GF\">French Guiana</option>\n        <option value=\"PF\">French Polynesia</option>\n        <option value=\"TF\">French Southern Territories</option>\n        <option value=\"GA\">Gabon</option>\n        <option value=\"GM\">Gambia</option>\n        <option value=\"GE\">Georgia</option>\n        <option value=\"GH\">Ghana</option>\n        <option value=\"GI\">Gibraltar</option>\n        <option value=\"GR\">Greece</option>\n        <option value=\"GL\">Greenland</option>\n        <option value=\"GD\">Grenada</option>\n        <option value=\"GP\">Guadeloupe</option>\n        <option value=\"GU\">Guam</option>\n        <option value=\"GT\">Guatemala</option>\n        <option value=\"GG\">Guernsey</option>\n        <option value=\"GN\">Guinea</option>\n        <option value=\"GW\">Guinea-Bissau</option>\n        <option value=\"GY\">Guyana</option>\n        <option value=\"HT\">Haiti</option>\n        <option value=\"HM\">Heard Island and McDonald Islands</option>\n        <option value=\"VA\">Holy See (Vatican City State)</option>\n        <option value=\"HN\">Honduras</option>\n        <option value=\"HK\">Hong Kong</option>\n        <option value=\"HU\">Hungary</option>\n        <option value=\"IS\">Iceland</option>\n        <option value=\"ID\">Indonesia</option>\n        <option value=\"IR\">Iran, Islamic Republic of</option>\n        <option value=\"IQ\">Iraq</option>\n        <option value=\"IE\">Ireland</option>\n        <option value=\"IM\">Isle of Man</option>\n        <option value=\"IL\">Israel</option>\n        <option value=\"IT\">Italy</option>\n        <option value=\"JM\">Jamaica</option>\n        <option value=\"JP\">Japan</option>\n        <option value=\"JE\">Jersey</option>\n        <option value=\"JO\">Jordan</option>\n        <option value=\"KZ\">Kazakhstan</option>\n        <option value=\"KE\">Kenya</option>\n        <option value=\"KI\">Kiribati</option>\n        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n        <option value=\"KR\">Korea, Republic of</option>\n        <option value=\"KW\">Kuwait</option>\n        <option value=\"KG\">Kyrgyzstan</option>\n        <option value=\"LA\">Lao People's Democratic Republic</option>\n        <option value=\"LV\">Latvia</option>\n        <option value=\"LB\">Lebanon</option>\n        <option value=\"LS\">Lesotho</option>\n        <option value=\"LR\">Liberia</option>\n        <option value=\"LY\">Libya</option>\n        <option value=\"LI\">Liechtenstein</option>\n        <option value=\"LT\">Lithuania</option>\n        <option value=\"LU\">Luxembourg</option>\n        <option value=\"MO\">Macao</option>\n        <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n        <option value=\"MG\">Madagascar</option>\n        <option value=\"MW\">Malawi</option>\n        <option value=\"MY\">Malaysia</option>\n        <option value=\"MV\">Maldives</option>\n        <option value=\"ML\">Mali</option>\n        <option value=\"MT\">Malta</option>\n        <option value=\"MH\">Marshall Islands</option>\n        <option value=\"MQ\">Martinique</option>\n        <option value=\"MR\">Mauritania</option>\n        <option value=\"MU\">Mauritius</option>\n        <option value=\"YT\">Mayotte</option>\n        <option value=\"MX\">Mexico</option>\n        <option value=\"FM\">Micronesia, Federated States of</option>\n        <option value=\"MD\">Moldova, Republic of</option>\n        <option value=\"MC\">Monaco</option>\n        <option value=\"MN\">Mongolia</option>\n        <option value=\"ME\">Montenegro</option>\n        <option value=\"MS\">Montserrat</option>\n        <option value=\"MA\">Morocco</option>\n        <option value=\"MZ\">Mozambique</option>\n        <option value=\"MM\">Myanmar</option>\n        <option value=\"NA\">Namibia</option>\n        <option value=\"NR\">Nauru</option>\n        <option value=\"NP\">Nepal</option>\n        <option value=\"NL\">Netherlands</option>\n        <option value=\"NC\">New Caledonia</option>\n        <option value=\"NZ\">New Zealand</option>\n        <option value=\"NI\">Nicaragua</option>\n        <option value=\"NE\">Niger</option>\n        <option value=\"NG\">Nigeria</option>\n        <option value=\"NU\">Niue</option>\n        <option value=\"NF\">Norfolk Island</option>\n        <option value=\"MP\">Northern Mariana Islands</option>\n        <option value=\"NO\">Norway</option>\n        <option value=\"OM\">Oman</option>\n        <option value=\"PK\">Pakistan</option>\n        <option value=\"PW\">Palau</option>\n        <option value=\"PS\">Palestinian Territory, Occupied</option>\n        <option value=\"PA\">Panama</option>\n        <option value=\"PG\">Papua New Guinea</option>\n        <option value=\"PY\">Paraguay</option>\n        <option value=\"PE\">Peru</option>\n        <option value=\"PH\">Philippines</option>\n        <option value=\"PN\">Pitcairn</option>\n        <option value=\"PL\">Poland</option>\n        <option value=\"PT\">Portugal</option>\n        <option value=\"PR\">Puerto Rico</option>\n        <option value=\"QA\">Qatar</option>\n        <option value=\"RE\">Réunion</option>\n        <option value=\"RO\">Romania</option>\n        <option value=\"RU\">Russian Federation</option>\n        <option value=\"RW\">Rwanda</option>\n        <option value=\"BL\">Saint Barthélemy</option>\n        <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n        <option value=\"KN\">Saint Kitts and Nevis</option>\n        <option value=\"LC\">Saint Lucia</option>\n        <option value=\"MF\">Saint Martin (French part)</option>\n        <option value=\"PM\">Saint Pierre and Miquelon</option>\n        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n        <option value=\"WS\">Samoa</option>\n        <option value=\"SM\">San Marino</option>\n        <option value=\"ST\">Sao Tome and Principe</option>\n        <option value=\"SA\">Saudi Arabia</option>\n        <option value=\"SN\">Senegal</option>\n        <option value=\"RS\">Serbia</option>\n        <option value=\"SC\">Seychelles</option>\n        <option value=\"SL\">Sierra Leone</option>\n        <option value=\"SG\">Singapore</option>\n        <option value=\"SX\">Sint Maarten (Dutch part)</option>\n        <option value=\"SK\">Slovakia</option>\n        <option value=\"SI\">Slovenia</option>\n        <option value=\"SB\">Solomon Islands</option>\n        <option value=\"SO\">Somalia</option>\n        <option value=\"ZA\">South Africa</option>\n        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n        <option value=\"SS\">South Sudan</option>\n        <option value=\"ES\">Spain</option>\n        <option value=\"LK\">Sri Lanka</option>\n        <option value=\"SD\">Sudan</option>\n        <option value=\"SR\">Suriname</option>\n        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n        <option value=\"SZ\">Swaziland</option>\n        <option value=\"SE\">Sweden</option>\n        <option value=\"CH\">Switzerland</option>\n        <option value=\"SY\">Syrian Arab Republic</option>\n        <option value=\"TW\">Taiwan</option>\n        <option value=\"TJ\">Tajikistan</option>\n        <option value=\"TZ\">Tanzania, United Republic of</option>\n        <option value=\"TH\">Thailand</option>\n        <option value=\"TL\">Timor-Leste</option>\n        <option value=\"TG\">Togo</option>\n        <option value=\"TK\">Tokelau</option>\n        <option value=\"TO\">Tonga</option>\n        <option value=\"TT\">Trinidad and Tobago</option>\n        <option value=\"TN\">Tunisia</option>\n        <option value=\"TR\">Turkey</option>\n        <option value=\"TM\">Turkmenistan</option>\n        <option value=\"TC\">Turks and Caicos Islands</option>\n        <option value=\"TV\">Tuvalu</option>\n        <option value=\"UG\">Uganda</option>\n        <option value=\"UA\">Ukraine</option>\n        <option value=\"AE\">United Arab Emirates</option>\n        <option value=\"UM\">United States Minor Outlying Islands</option>\n        <option value=\"UY\">Uruguay</option>\n        <option value=\"UZ\">Uzbekistan</option>\n        <option value=\"VU\">Vanuatu</option>\n        <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n        <option value=\"VN\">Viet Nam</option>\n        <option value=\"VG\">Virgin Islands, British</option>\n        <option value=\"VI\">Virgin Islands, U.S.</option>\n        <option value=\"WF\">Wallis and Futuna</option>\n        <option value=\"EH\">Western Sahara</option>\n        <option value=\"YE\">Yemen</option>\n        <option value=\"ZM\">Zambia</option>\n        <option value=\"ZW\">Zimbabwe</option>\n      </select>\n    </div>\n  </div>\n  <div [ngClass]=\"trialFlow ? 'col-5' : 'col-3'\">\n    <div class=\"form-group\">\n      <label for=\"addressPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n      <input\n        id=\"addressPostalCode\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressPostalCode\"\n        [(ngModel)]=\"taxInfo.postalCode\"\n        [required]=\"taxInfo.country === 'US'\"\n        autocomplete=\"postal-code\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n    <div class=\"form-group form-check\">\n      <input\n        class=\"form-check-input\"\n        id=\"addressIncludeTaxId\"\n        name=\"addressIncludeTaxId\"\n        type=\"checkbox\"\n        [(ngModel)]=\"taxInfo.includeTaxId\"\n      />\n      <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{ \"includeVAT\" | i18n }}</label>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"taxId\">{{ \"taxIdNumber\" | i18n }}</label>\n      <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\" />\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine1\">{{ \"address1\" | i18n }}</label>\n      <input\n        id=\"addressLine1\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine1\"\n        [(ngModel)]=\"taxInfo.line1\"\n        autocomplete=\"address-line1\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine2\">{{ \"address2\" | i18n }}</label>\n      <input\n        id=\"addressLine2\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine2\"\n        [(ngModel)]=\"taxInfo.line2\"\n        autocomplete=\"address-line2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCity\">{{ \"cityTown\" | i18n }}</label>\n      <input\n        id=\"addressCity\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressCity\"\n        [(ngModel)]=\"taxInfo.city\"\n        autocomplete=\"address-level2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressState\">{{ \"stateProvince\" | i18n }}</label>\n      <input\n        id=\"addressState\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressState\"\n        [(ngModel)]=\"taxInfo.state\"\n        autocomplete=\"address-level1\"\n      />\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationTaxInfoUpdateRequest } from \"@bitwarden/common/models/request/organization-tax-info-update.request\";\nimport { TaxInfoUpdateRequest } from \"@bitwarden/common/models/request/tax-info-update.request\";\nimport { TaxInfoResponse } from \"@bitwarden/common/models/response/tax-info.response\";\nimport { TaxRateResponse } from \"@bitwarden/common/models/response/tax-rate.response\";\n\ntype TaxInfoView = Omit<TaxInfoResponse, \"taxIdType\"> & {\n  includeTaxId: boolean;\n  [key: string]: unknown;\n};\n\n@Component({\n  selector: \"app-tax-info\",\n  templateUrl: \"tax-info.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TaxInfoComponent {\n  @Input() trialFlow = false;\n  @Output() onCountryChanged = new EventEmitter();\n\n  loading = true;\n  organizationId: string;\n  taxInfo: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  taxRates: TaxRateResponse[];\n\n  private pristine: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      if (this.organizationId) {\n        try {\n          const taxInfo = await this.organizationApiService.getTaxInfo(this.organizationId);\n          if (taxInfo) {\n            this.taxInfo.taxId = taxInfo.taxId;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.line1 = taxInfo.line1;\n            this.taxInfo.line2 = taxInfo.line2;\n            this.taxInfo.city = taxInfo.city;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n            this.taxInfo.includeTaxId =\n              this.taxInfo.country !== \"US\" &&\n              (!!taxInfo.taxId ||\n                !!taxInfo.line1 ||\n                !!taxInfo.line2 ||\n                !!taxInfo.city ||\n                !!taxInfo.state);\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      } else {\n        try {\n          const taxInfo = await this.apiService.getTaxInfo();\n          if (taxInfo) {\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.pristine = Object.assign({}, this.taxInfo);\n      // If not the default (US) then trigger onCountryChanged\n      if (this.taxInfo.country !== \"US\") {\n        this.onCountryChanged.emit();\n      }\n    });\n\n    try {\n      const taxRates = await this.apiService.getTaxRates();\n      if (taxRates) {\n        this.taxRates = taxRates.data;\n      }\n    } catch (e) {\n      this.logService.error(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  get taxRate() {\n    if (this.taxRates != null) {\n      const localTaxRate = this.taxRates.find(\n        (x) => x.country === this.taxInfo.country && x.postalCode === this.taxInfo.postalCode\n      );\n      return localTaxRate?.rate ?? null;\n    }\n  }\n\n  getTaxInfoRequest(): TaxInfoUpdateRequest {\n    if (this.organizationId) {\n      const request = new OrganizationTaxInfoUpdateRequest();\n      request.taxId = this.taxInfo.taxId;\n      request.state = this.taxInfo.state;\n      request.line1 = this.taxInfo.line1;\n      request.line2 = this.taxInfo.line2;\n      request.city = this.taxInfo.city;\n      request.state = this.taxInfo.state;\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    } else {\n      const request = new TaxInfoUpdateRequest();\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    }\n  }\n\n  submitTaxInfo(): Promise<any> {\n    if (!this.hasChanged()) {\n      return new Promise<void>((resolve) => {\n        resolve();\n      });\n    }\n    const request = this.getTaxInfoRequest();\n    return this.organizationId\n      ? this.organizationApiService.updateTaxInfo(\n          this.organizationId,\n          request as OrganizationTaxInfoUpdateRequest\n        )\n      : this.apiService.putTaxInfo(request);\n  }\n\n  changeCountry() {\n    if (this.taxInfo.country === \"US\") {\n      this.taxInfo.includeTaxId = false;\n      this.taxInfo.taxId = null;\n      this.taxInfo.line1 = null;\n      this.taxInfo.line2 = null;\n      this.taxInfo.city = null;\n      this.taxInfo.state = null;\n    }\n    this.onCountryChanged.emit();\n  }\n\n  private hasChanged(): boolean {\n    for (const key in this.taxInfo) {\n      // eslint-disable-next-line\n      if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n  type: TwoFactorProviderType;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { TwoFactorProviderRequest } from \"@bitwarden/common/models/request/two-factor-provider.request\";\nimport { AuthResponseBase } from \"@bitwarden/common/types/authResponse\";\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n  @Output() onUpdated = new EventEmitter<boolean>();\n\n  type: TwoFactorProviderType;\n  organizationId: string;\n  twoFactorProviderType = TwoFactorProviderType;\n  enabled = false;\n  authed = false;\n\n  protected hashedSecret: string;\n  protected verificationType: VerificationType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected userVerificationService: UserVerificationService\n  ) {}\n\n  protected auth(authResponse: AuthResponseBase) {\n    this.hashedSecret = authResponse.secret;\n    this.verificationType = authResponse.verificationType;\n    this.authed = true;\n  }\n\n  protected async enable(enableFunction: () => Promise<void>) {\n    try {\n      await enableFunction();\n      this.onUpdated.emit(true);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async disable(promise: Promise<unknown>) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepDisableDesc\"),\n      this.i18nService.t(\"disable\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const request = await this.buildRequestModel(TwoFactorProviderRequest);\n      request.type = this.type;\n      if (this.organizationId != null) {\n        promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n      } else {\n        promise = this.apiService.putTwoFactorDisable(request);\n      }\n      await promise;\n      this.enabled = false;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"twoStepDisabled\"));\n      this.onUpdated.emit(false);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async buildRequestModel<T extends SecretVerificationRequest>(\n    requestClass: new () => T\n  ) {\n    return this.userVerificationService.buildRequest(\n      {\n        secret: this.hashedSecret,\n        type: this.verificationType,\n      },\n      requestClass,\n      true\n    );\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n  integrationKey: string;\n  secretKey: string;\n  host: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faDuoTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>Duo</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <strong>{{ \"twoFactorDuoIntegrationKey\" | i18n }}:</strong> {{ ikey }}\n            <br />\n            <strong>{{ \"twoFactorDuoSecretKey\" | i18n }}:</strong> {{ skey }}\n            <br />\n            <strong>{{ \"twoFactorDuoApiHostname\" | i18n }}:</strong> {{ host }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <p>{{ \"twoFactorDuoDesc\" | i18n }}</p>\n            <div class=\"form-group\">\n              <label for=\"ikey\">{{ \"twoFactorDuoIntegrationKey\" | i18n }}</label>\n              <input\n                id=\"ikey\"\n                type=\"text\"\n                name=\"IntegrationKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"ikey\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"skey\">{{ \"twoFactorDuoSecretKey\" | i18n }}</label>\n              <input\n                id=\"skey\"\n                type=\"password\"\n                name=\"SecretKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"skey\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"host\">{{ \"twoFactorDuoApiHostname\" | i18n }}</label>\n              <input\n                id=\"host\"\n                type=\"text\"\n                name=\"Host\"\n                class=\"form-control\"\n                [(ngModel)]=\"host\"\n                placeholder=\"{{ 'ex' | i18n }} api-xxxxxxxx.duosecurity.com\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorDuoRequest } from \"@bitwarden/common/models/request/update-two-factor-duo.request\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/models/response/two-factor-duo.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-duo\",\n  templateUrl: \"two-factor-duo.component.html\",\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Duo;\n  ikey: string;\n  skey: string;\n  host: string;\n  formPromise: Promise<TwoFactorDuoResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorDuoResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n    request.integrationKey = this.ikey;\n    request.secretKey = this.skey;\n    request.host = this.host;\n\n    return super.enable(async () => {\n      if (this.organizationId != null) {\n        this.formPromise = this.apiService.putTwoFactorOrganizationDuo(\n          this.organizationId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.putTwoFactorDuo(request);\n      }\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private processResponse(response: TwoFactorDuoResponse) {\n    this.ikey = response.integrationKey;\n    this.skey = response.secretKey;\n    this.host = response.host;\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n  token: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"authenticatorAppTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorDesc\" | i18n }}</p>\n            <p>\n              <strong>1. {{ \"twoStepAuthenticatorDownloadApp\" | i18n }}</strong>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              <p>{{ \"twoStepLoginProviderEnabled\" | i18n }}</p>\n              {{ \"twoStepAuthenticatorReaddDesc\" | i18n }}\n            </app-callout>\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorNeedApp\" | i18n }}</p>\n          </ng-container>\n          <ul class=\"bwi-ul\">\n            <li>\n              <i class=\"bwi bwi-li bwi-apple\"></i>{{ \"iosDevices\" | i18n }}:\n              <a\n                href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-android\"></i>{{ \"androidDevices\" | i18n }}:\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.authy.authy\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-windows\"></i>{{ \"windowsDevices\" | i18n }}:\n              <a\n                href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Microsoft Authenticator</a\n              >\n            </li>\n          </ul>\n          <p>{{ \"twoStepAuthenticatorAppsRecommended\" | i18n }}</p>\n          <p *ngIf=\"!enabled\">\n            <strong>2. {{ \"twoStepAuthenticatorScanCode\" | i18n }}</strong>\n          </p>\n          <hr *ngIf=\"enabled\" />\n          <p class=\"text-center\" [ngClass]=\"{ 'mb-0': enabled }\">\n            <canvas id=\"qr\"></canvas><br />\n            <code appA11yTitle=\"{{ 'key' | i18n }}\">{{ key }}</code>\n          </p>\n          <ng-container *ngIf=\"!enabled\">\n            <label for=\"token\">3. {{ \"twoStepAuthenticatorEnterCode\" | i18n }}</label>\n            <input\n              id=\"token\"\n              type=\"text\"\n              name=\"Token\"\n              class=\"form-control\"\n              [(ngModel)]=\"token\"\n              required\n              appInputVerbatim\n            />\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"@bitwarden/common/models/request/update-two-factor-authenticator.request\";\nimport { TwoFactorAuthenticatorResponse } from \"@bitwarden/common/models/response/two-factor-authenticator.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n// NOTE: There are additional options available but these are just the ones we are current using.\n// See: https://github.com/neocotic/qrious#examples\ninterface QRiousOptions {\n  element: HTMLElement;\n  value: string;\n  size: number;\n}\n\ndeclare global {\n  interface Window {\n    QRious: new (options: QRiousOptions) => unknown;\n  }\n}\n\n@Component({\n  selector: \"app-two-factor-authenticator\",\n  templateUrl: \"two-factor-authenticator.component.html\",\n})\nexport class TwoFactorAuthenticatorComponent\n  extends TwoFactorBaseComponent\n  implements OnInit, OnDestroy\n{\n  type = TwoFactorProviderType.Authenticator;\n  key: string;\n  token: string;\n  formPromise: Promise<TwoFactorAuthenticatorResponse>;\n\n  private qrScript: HTMLScriptElement;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    userVerificationService: UserVerificationService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n    this.qrScript = window.document.createElement(\"script\");\n    this.qrScript.src = \"scripts/qrious.min.js\";\n    this.qrScript.async = true;\n  }\n\n  ngOnInit() {\n    window.document.body.appendChild(this.qrScript);\n  }\n\n  ngOnDestroy() {\n    window.document.body.removeChild(this.qrScript);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorAuthenticatorResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n    request.token = this.token;\n    request.key = this.key;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorAuthenticatorResponse) {\n    this.token = null;\n    this.enabled = response.enabled;\n    this.key = response.key;\n    const email = await this.stateService.getEmail();\n    window.setTimeout(() => {\n      new window.QRious({\n        element: document.getElementById(\"qr\"),\n        value:\n          \"otpauth://totp/Bitwarden:\" +\n          encodeURIComponent(email) +\n          \"?secret=\" +\n          encodeURIComponent(this.key) +\n          \"&issuer=Bitwarden\",\n        size: 160,\n      });\n    }, 100);\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n  token: string;\n  email: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faEmailTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"emailTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <strong>{{ \"email\" | i18n }}:</strong> {{ email }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <p class=\"d-flex\">\n              <span class=\"mr-3\">{{ \"twoFactorEmailDesc\" | i18n }}</span>\n              <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\" />\n            </p>\n            <div class=\"form-group\">\n              <label for=\"email\">1. {{ \"twoFactorEmailEnterEmail\" | i18n }}</label>\n              <input\n                id=\"email\"\n                type=\"text\"\n                name=\"Email\"\n                class=\"form-control\"\n                [(ngModel)]=\"email\"\n                required\n                inputmode=\"email\"\n                appInputVerbatim=\"false\"\n              />\n            </div>\n            <div class=\"mb-3 d-flex\">\n              <button\n                #sendBtn\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\"\n                (click)=\"sendEmail()\"\n                [appApiAction]=\"emailPromise\"\n                [disabled]=\"$any(sendBtn).loading\"\n              >\n                <i\n                  class=\"bwi bwi-spinner bwi-spin\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span>{{ \"sendEmail\" | i18n }}</span>\n              </button>\n              <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                {{ \"verificationCodeEmailSent\" | i18n: sentEmail }}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"token\">2. {{ \"twoFactorEmailEnterCode\" | i18n }}</label>\n              <input\n                id=\"token\"\n                type=\"text\"\n                name=\"Token\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/two-factor-email.request\";\nimport { UpdateTwoFactorEmailRequest } from \"@bitwarden/common/models/request/update-two-factor-email.request\";\nimport { TwoFactorEmailResponse } from \"@bitwarden/common/models/response/two-factor-email.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-email\",\n  templateUrl: \"two-factor-email.component.html\",\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Email;\n  email: string;\n  token: string;\n  sentEmail: string;\n  formPromise: Promise<TwoFactorEmailResponse>;\n  emailPromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorEmailResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  async sendEmail() {\n    try {\n      const request = await this.buildRequestModel(TwoFactorEmailRequest);\n      request.email = this.email;\n      this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n      await this.emailPromise;\n      this.sentEmail = this.email;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n    request.email = this.email;\n    request.token = this.token;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorEmail(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorEmailResponse) {\n    this.token = null;\n    this.email = response.email;\n    this.enabled = response.enabled;\n    if (!this.enabled && (this.email == null || this.email === \"\")) {\n      this.email = await this.stateService.getEmail();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faRecoveryTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"recoveryCodeTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\">\n      </app-two-factor-verify>\n      <ng-container *ngIf=\"authed\">\n        <div class=\"modal-body text-center\">\n          <ng-container *ngIf=\"code\">\n            <p>{{ \"twoFactorRecoveryYourCode\" | i18n }}:</p>\n            <code class=\"text-lg\">{{ code }}</code>\n          </ng-container>\n          <ng-container *ngIf=\"!code\">\n            {{ \"twoFactorRecoveryNoCode\" | i18n }}\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">\n            {{ \"printCode\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorRecoverResponse } from \"@bitwarden/common/models/response/two-factor-recover.response\";\n\n@Component({\n  selector: \"app-two-factor-recovery\",\n  templateUrl: \"two-factor-recovery.component.html\",\n})\nexport class TwoFactorRecoveryComponent {\n  type = -1;\n  code: string;\n  authed: boolean;\n  twoFactorProviderType = TwoFactorProviderType;\n\n  constructor(private i18nService: I18nService) {}\n\n  auth(authResponse: any) {\n    this.authed = true;\n    this.processResponse(authResponse.response);\n  }\n\n  print() {\n    const w = window.open();\n    w.document.write(\n      '<div style=\"font-size: 18px; text-align: center;\">' +\n        \"<p>\" +\n        this.i18nService.t(\"twoFactorRecoveryYourCode\") +\n        \":</p>\" +\n        \"<code style=\\\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\\\">\" +\n        this.code +\n        \"</code></div>\" +\n        '<p style=\"text-align: center;\">' +\n        new Date() +\n        \"</p>\"\n    );\n    w.onafterprint = () => w.close();\n    w.print();\n  }\n\n  private formatString(s: string) {\n    if (s == null) {\n      return null;\n    }\n    return s\n      .replace(/(.{4})/g, \"$1 \")\n      .trim()\n      .toUpperCase();\n  }\n\n  private processResponse(response: TwoFactorRecoverResponse) {\n    this.code = this.formatString(response.code);\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n  deviceResponse: PublicKeyCredential;\n  name: string;\n  id: number;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faU2fTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"webAuthnTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorWebAuthnWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorWebAuthnSupportWeb\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\" />\n          <ul class=\"bwi-ul\">\n            <li\n              *ngFor=\"let k of keys; let i = index\"\n              #removeKeyBtn\n              [appApiAction]=\"k.removePromise\"\n            >\n              <i class=\"bwi bwi-li bwi-key\"></i>\n              <strong *ngIf=\"!k.configured || !k.name\">{{ \"webAuthnkeyX\" | i18n: i + 1 }}</strong>\n              <strong *ngIf=\"k.configured && k.name\">{{ k.name }}</strong>\n              <ng-container *ngIf=\"k.configured && !$any(removeKeyBtn).loading\">\n                <ng-container *ngIf=\"k.migrated\">\n                  <span>{{ \"webAuthnMigrated\" | i18n }}</span>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                <i\n                  class=\"bwi bwi-spin bwi-spinner text-muted bwi-fw\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  *ngIf=\"$any(removeKeyBtn).loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                -\n                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{ \"remove\" | i18n }}</a>\n              </ng-container>\n            </li>\n          </ul>\n          <hr />\n          <p>{{ \"twoFactorWebAuthnAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorU2fGiveName\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fPlugInReadKey\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fSaveForm\" | i18n }}</li>\n          </ol>\n          <div class=\"row\">\n            <div class=\"form-group col-6\">\n              <label for=\"name\">{{ \"name\" | i18n }}</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"Name\"\n                class=\"form-control\"\n                [(ngModel)]=\"name\"\n                [disabled]=\"!keyIdAvailable\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            (click)=\"readKey()\"\n            class=\"btn btn-outline-secondary mr-2\"\n            [disabled]=\"$any(readKeyBtn).loading || webAuthnListening || !keyIdAvailable\"\n            #readKeyBtn\n            [appApiAction]=\"challengePromise\"\n          >\n            {{ \"readKey\" | i18n }}\n          </button>\n          <ng-container *ngIf=\"$any(readKeyBtn).loading\">\n            <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n          </ng-container>\n          <ng-container *ngIf=\"!$any(readKeyBtn).loading\">\n            <ng-container *ngIf=\"webAuthnListening\">\n              <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fWaiting\" | i18n }}...\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnResponse\">\n              <i class=\"bwi bwi-check-circle text-success\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fClickSave\" | i18n }}\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnError\">\n              <i class=\"bwi bwi-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fProblemReadingTryAgain\" | i18n }}\n            </ng-container>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"form.loading || !webAuthnResponse\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              *ngIf=\"form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!form.loading\">{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [disabled]=\"$any(disableBtn).loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"@bitwarden/common/models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"@bitwarden/common/models/request/update-two-factor-web-authn.request\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"@bitwarden/common/models/response/two-factor-web-authn.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  id: number;\n  name: string;\n  configured: boolean;\n  migrated?: boolean;\n  removePromise: Promise<TwoFactorWebAuthnResponse> | null;\n}\n\n@Component({\n  selector: \"app-two-factor-webauthn\",\n  templateUrl: \"two-factor-webauthn.component.html\",\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.WebAuthn;\n  name: string;\n  keys: Key[];\n  keyIdAvailable: number = null;\n  keysConfiguredCount = 0;\n  webAuthnError: boolean;\n  webAuthnListening: boolean;\n  webAuthnResponse: PublicKeyCredential;\n  challengePromise: Promise<ChallengeResponse>;\n  formPromise: Promise<TwoFactorWebAuthnResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorWebAuthnResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n      // Should never happen.\n      return Promise.reject();\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n    request.deviceResponse = this.webAuthnResponse;\n    request.id = this.keyIdAvailable;\n    request.name = this.name;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  disable() {\n    return super.disable(this.formPromise);\n  }\n\n  async remove(key: Key) {\n    if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n      return;\n    }\n    const name = key.name != null ? key.name : this.i18nService.t(\"webAuthnkeyX\", key.id as any);\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeU2fConfirmation\"),\n      name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n    request.id = key.id;\n    try {\n      key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n      const response = await key.removePromise;\n      key.removePromise = null;\n      await this.processResponse(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async readKey() {\n    if (this.keyIdAvailable == null) {\n      return;\n    }\n    const request = await this.buildRequestModel(SecretVerificationRequest);\n    try {\n      this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n      const challenge = await this.challengePromise;\n      this.readDevice(challenge);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private readDevice(webAuthnChallenge: ChallengeResponse) {\n    // eslint-disable-next-line\n    console.log(\"listening for key...\");\n    this.resetWebAuthn(true);\n\n    navigator.credentials\n      .create({\n        publicKey: webAuthnChallenge,\n      })\n      .then((data: PublicKeyCredential) => {\n        this.ngZone.run(() => {\n          this.webAuthnListening = false;\n          this.webAuthnResponse = data;\n        });\n      })\n      .catch((err) => {\n        // eslint-disable-next-line\n        console.error(err);\n        this.resetWebAuthn(false);\n        // TODO: Should we display the actual error?\n        this.webAuthnError = true;\n      });\n  }\n\n  private resetWebAuthn(listening = false) {\n    this.webAuthnResponse = null;\n    this.webAuthnError = false;\n    this.webAuthnListening = listening;\n  }\n\n  private processResponse(response: TwoFactorWebAuthnResponse) {\n    this.resetWebAuthn();\n    this.keys = [];\n    this.keyIdAvailable = null;\n    this.name = null;\n    this.keysConfiguredCount = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (response.keys != null) {\n        const key = response.keys.filter((k) => k.id === i);\n        if (key.length > 0) {\n          this.keysConfiguredCount++;\n          this.keys.push({\n            id: i,\n            name: key[0].name,\n            configured: true,\n            migrated: key[0].migrated,\n            removePromise: null,\n          });\n          continue;\n        }\n      }\n      this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n      if (this.keyIdAvailable == null) {\n        this.keyIdAvailable = i;\n      }\n    }\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>YubiKey</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorYubikeyWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorYubikeySupportUsb\" | i18n }}</li>\n              <li>{{ \"twoFactorYubikeySupportMobile\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\" />\n          <p>{{ \"twoFactorYubikeyAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorYubikeyPlugIn\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySelectKey\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeyTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySaveForm\" | i18n }}</li>\n          </ol>\n          <hr />\n          <div class=\"row\">\n            <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n              <label for=\"key{{ i + 1 }}\">{{ \"yubikeyX\" | i18n: i + 1 }}</label>\n              <input\n                id=\"key{{ i + 1 }}\"\n                type=\"password\"\n                name=\"Key{{ i + 1 }}\"\n                class=\"form-control\"\n                [(ngModel)]=\"k.key\"\n                *ngIf=\"!k.existingKey\"\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                <span class=\"mr-2\">{{ k.existingKey }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link text-danger ml-auto\"\n                  (click)=\"remove(k)\"\n                  appA11yTitle=\"{{ 'remove' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <strong class=\"d-block mb-2\">{{ \"nfcSupport\" | i18n }}</strong>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\" />\n            <label class=\"form-check-label\" for=\"nfc\">{{\n              \"twoFactorYubikeySupportsNfc\" | i18n\n            }}</label>\n          </div>\n          <small class=\"form-text text-muted\">{{ \"twoFactorYubikeySupportsNfcDesc\" | i18n }}</small>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"$any(disableBtn).loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"@bitwarden/common/models/request/update-two-factor-yubio-otp.request\";\nimport { TwoFactorYubiKeyResponse } from \"@bitwarden/common/models/response/two-factor-yubi-key.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  key: string;\n  existingKey: string;\n}\n\n@Component({\n  selector: \"app-two-factor-yubikey\",\n  templateUrl: \"two-factor-yubikey.component.html\",\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Yubikey;\n  keys: Key[];\n  nfc = false;\n\n  formPromise: Promise<TwoFactorYubiKeyResponse>;\n  disablePromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorYubiKeyResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n    request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n    request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n    request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n    request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n    request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n    request.nfc = this.nfc;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"yubikeysUpdated\"));\n    });\n  }\n\n  disable() {\n    return super.disable(this.disablePromise);\n  }\n\n  remove(key: Key) {\n    key.existingKey = null;\n    key.key = null;\n  }\n\n  private processResponse(response: TwoFactorYubiKeyResponse) {\n    this.enabled = response.enabled;\n    this.keys = [\n      { key: response.key1, existingKey: this.padRight(response.key1) },\n      { key: response.key2, existingKey: this.padRight(response.key2) },\n      { key: response.key3, existingKey: this.padRight(response.key3) },\n      { key: response.key4, existingKey: this.padRight(response.key4) },\n      { key: response.key5, existingKey: this.padRight(response.key5) },\n    ];\n    this.nfc = response.nfc || !response.enabled;\n  }\n\n  private padRight(str: string, character = \"•\", size = 44) {\n    if (str == null || character == null || str.length >= size) {\n      return str;\n    }\n    const max = (size - str.length) / character.length;\n    for (let i = 0; i < max; i++) {\n      str += character;\n    }\n    return str;\n  }\n}\n","import { Component, OnDestroy, OnInit, Type, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { TwoFactorAuthenticatorComponent } from \"./two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./two-factor-recovery.component\";\nimport { TwoFactorWebAuthnComponent } from \"./two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./two-factor-yubikey.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent implements OnInit, OnDestroy {\n  @ViewChild(\"recoveryTemplate\", { read: ViewContainerRef, static: true })\n  recoveryModalRef: ViewContainerRef;\n  @ViewChild(\"authenticatorTemplate\", { read: ViewContainerRef, static: true })\n  authenticatorModalRef: ViewContainerRef;\n  @ViewChild(\"yubikeyTemplate\", { read: ViewContainerRef, static: true })\n  yubikeyModalRef: ViewContainerRef;\n  @ViewChild(\"duoTemplate\", { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n  @ViewChild(\"emailTemplate\", { read: ViewContainerRef, static: true })\n  emailModalRef: ViewContainerRef;\n  @ViewChild(\"webAuthnTemplate\", { read: ViewContainerRef, static: true })\n  webAuthnModalRef: ViewContainerRef;\n\n  organizationId: string;\n  providers: any[] = [];\n  canAccessPremium: boolean;\n  showPolicyWarning = false;\n  loading = true;\n  modal: ModalRef;\n  formPromise: Promise<any>;\n\n  private destroy$ = new Subject<void>();\n  private twoFactorAuthPolicyAppliesToActiveUser: boolean;\n\n  constructor(\n    protected apiService: ApiService,\n    protected modalService: ModalService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n\n    for (const key in TwoFactorProviders) {\n      // eslint-disable-next-line\n      if (!TwoFactorProviders.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const p = (TwoFactorProviders as any)[key];\n      if (this.filterProvider(p.type)) {\n        continue;\n      }\n\n      this.providers.push({\n        type: p.type,\n        name: p.name,\n        description: p.description,\n        enabled: false,\n        premium: p.premium,\n        sort: p.sort,\n      });\n    }\n\n    this.providers.sort((a: any, b: any) => a.sort - b.sort);\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.TwoFactorAuthentication)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.twoFactorAuthPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    this.loading = true;\n    const providerList = await this.getTwoFactorProviders();\n    providerList.data.forEach((p) => {\n      this.providers.forEach((p2) => {\n        if (p.type === p2.type) {\n          p2.enabled = p.enabled;\n        }\n      });\n    });\n    this.evaluatePolicies();\n    this.loading = false;\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.Authenticator: {\n        const authComp = await this.openModal(\n          this.authenticatorModalRef,\n          TwoFactorAuthenticatorComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        authComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Yubikey: {\n        const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        yubiComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Duo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Duo);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Email: {\n        const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        emailComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Email);\n        });\n        break;\n      }\n      case TwoFactorProviderType.WebAuthn: {\n        const webAuthnComp = await this.openModal(\n          this.webAuthnModalRef,\n          TwoFactorWebAuthnComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  recoveryCode() {\n    this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorProviders();\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type === TwoFactorProviderType.OrganizationDuo;\n  }\n\n  protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n    const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n    this.modal = modal;\n\n    return childComponent;\n  }\n\n  protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n    if (!enabled && this.modal != null) {\n      this.modal.close();\n    }\n    this.providers.forEach((p) => {\n      if (p.type === type) {\n        p.enabled = enabled;\n      }\n    });\n    this.evaluatePolicies();\n  }\n\n  private async evaluatePolicies() {\n    if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n      this.showPolicyWarning = this.twoFactorAuthPolicyAppliesToActiveUser;\n    } else {\n      this.showPolicyWarning = false;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\nimport { TwoFactorResponse } from \"@bitwarden/common/types/twoFactorResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-two-factor-verify\",\n  templateUrl: \"two-factor-verify.component.html\",\n})\nexport class TwoFactorVerifyComponent {\n  @Input() type: TwoFactorProviderType;\n  @Input() organizationId: string;\n  @Output() onAuthed = new EventEmitter<AuthResponse<TwoFactorResponse>>();\n\n  secret: Verification;\n  formPromise: Promise<TwoFactorResponse>;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async submit() {\n    let hashedSecret: string;\n\n    try {\n      this.formPromise = this.userVerificationService.buildRequest(this.secret).then((request) => {\n        hashedSecret =\n          this.secret.type === VerificationType.MasterPassword\n            ? request.masterPasswordHash\n            : request.otp;\n        return this.apiCall(request);\n      });\n\n      const response = await this.formPromise;\n      this.onAuthed.emit({\n        response: response,\n        secret: hashedSecret,\n        verificationType: this.secret.type,\n      });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n    switch (this.type) {\n      case -1 as TwoFactorProviderType:\n        return this.apiService.getTwoFactorRecover(request);\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        if (this.organizationId != null) {\n          return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n        } else {\n          return this.apiService.getTwoFactorDuo(request);\n        }\n      case TwoFactorProviderType.Email:\n        return this.apiService.getTwoFactorEmail(request);\n      case TwoFactorProviderType.WebAuthn:\n        return this.apiService.getTwoFactorWebAuthn(request);\n      case TwoFactorProviderType.Authenticator:\n        return this.apiService.getTwoFactorAuthenticator(request);\n      case TwoFactorProviderType.Yubikey:\n        return this.apiService.getTwoFactorYubiKey(request);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"modal-body\">\n    <p>{{ \"twoStepLoginAuthDesc\" | i18n }}</p>\n    <app-user-verification [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\">\n    </app-user-verification>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"continue\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n      {{ \"close\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<void | unknown> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.organizationApiService.updateLicense(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedLicense\"));\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { NgModule } from \"@angular/core\";\n\nimport { AcceptEmergencyComponent } from \"../accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"../accounts/accept-organization.component\";\nimport { HintComponent } from \"../accounts/hint.component\";\nimport { LockComponent } from \"../accounts/lock.component\";\nimport { RecoverDeleteComponent } from \"../accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"../accounts/recover-two-factor.component\";\nimport { RegisterFormModule } from \"../accounts/register-form/register-form.module\";\nimport { RemovePasswordComponent } from \"../accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"../accounts/set-password.component\";\nimport { SsoComponent } from \"../accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"../accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"../accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"../accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"../accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"../accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"../accounts/verify-recover-delete.component\";\nimport { DynamicAvatarComponent } from \"../components/dynamic-avatar.component\";\nimport { NestedCheckboxComponent } from \"../components/nested-checkbox.component\";\nimport { OrganizationSwitcherComponent } from \"../components/organization-switcher.component\";\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\nimport { PremiumBadgeComponent } from \"../components/premium-badge.component\";\nimport { SelectableAvatarComponent } from \"../components/selectable-avatar.component\";\nimport { UserVerificationPromptComponent } from \"../components/user-verification-prompt.component\";\nimport { UserVerificationComponent } from \"../components/user-verification.component\";\nimport { FooterComponent } from \"../layouts/footer.component\";\nimport { FrontendLayoutComponent } from \"../layouts/frontend-layout.component\";\nimport { NavbarComponent } from \"../layouts/navbar.component\";\nimport { ProductSwitcherModule } from \"../layouts/product-switcher/product-switcher.module\";\nimport { UserLayoutComponent } from \"../layouts/user-layout.component\";\nimport { OrganizationCreateModule } from \"../organizations/create/organization-create.module\";\nimport { OrganizationLayoutComponent } from \"../organizations/layouts/organization-layout.component\";\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from \"../organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from \"../organizations/manage/bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent as OrgBulkRestoreRevokeComponent } from \"../organizations/manage/bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent as OrgBulkStatusComponent } from \"../organizations/manage/bulk/bulk-status.component\";\nimport { CollectionAddEditComponent as OrgCollectionAddEditComponent } from \"../organizations/manage/collection-add-edit.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"../organizations/manage/collections.component\";\nimport { EntityEventsComponent as OrgEntityEventsComponent } from \"../organizations/manage/entity-events.component\";\nimport { EventsComponent as OrgEventsComponent } from \"../organizations/manage/events.component\";\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from \"../organizations/manage/group-add-edit.component\";\nimport { GroupsComponent as OrgGroupsComponent } from \"../organizations/manage/groups.component\";\nimport { ManageComponent as OrgManageComponent } from \"../organizations/manage/manage.component\";\nimport { PeopleComponent as OrgPeopleComponent } from \"../organizations/manage/people.component\";\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from \"../organizations/manage/reset-password.component\";\nimport { UserAddEditComponent as OrgUserAddEditComponent } from \"../organizations/manage/user-add-edit.component\";\nimport { UserConfirmComponent as OrgUserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\nimport { UserGroupsComponent as OrgUserGroupsComponent } from \"../organizations/manage/user-groups.component\";\nimport { AcceptFamilySponsorshipComponent } from \"../organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"../organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"../organizations/tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"../organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"../organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"../organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"../organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"../organizations/tools/weak-passwords-report.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"../organizations/vault/add-edit.component\";\nimport { AttachmentsComponent as OrgAttachmentsComponent } from \"../organizations/vault/attachments.component\";\nimport { CollectionsComponent as OrgCollectionsComponent } from \"../organizations/vault/collections.component\";\nimport { ProvidersComponent } from \"../providers/providers.component\";\nimport { AccessComponent } from \"../send/access.component\";\nimport { AddEditComponent as SendAddEditComponent } from \"../send/add-edit.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"../send/efflux-dates.component\";\nimport { SendComponent } from \"../send/send.component\";\nimport { AccountComponent } from \"../settings/account.component\";\nimport { AddCreditComponent } from \"../settings/add-credit.component\";\nimport { AdjustPaymentComponent } from \"../settings/adjust-payment.component\";\nimport { AdjustStorageComponent } from \"../settings/adjust-storage.component\";\nimport { ApiKeyComponent } from \"../settings/api-key.component\";\nimport { BillingHistoryViewComponent } from \"../settings/billing-history-view.component\";\nimport { BillingHistoryComponent } from \"../settings/billing-history.component\";\nimport { BillingSyncKeyComponent } from \"../settings/billing-sync-key.component\";\nimport { ChangeAvatarComponent } from \"../settings/change-avatar.component\";\nimport { ChangeEmailComponent } from \"../settings/change-email.component\";\nimport { ChangeKdfComponent } from \"../settings/change-kdf.component\";\nimport { ChangePasswordComponent } from \"../settings/change-password.component\";\nimport { CreateOrganizationComponent } from \"../settings/create-organization.component\";\nimport { DeauthorizeSessionsComponent } from \"../settings/deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"../settings/delete-account.component\";\nimport { DomainRulesComponent } from \"../settings/domain-rules.component\";\nimport { EmergencyAccessAddEditComponent } from \"../settings/emergency-access-add-edit.component\";\nimport { EmergencyAccessAttachmentsComponent } from \"../settings/emergency-access-attachments.component\";\nimport { EmergencyAccessConfirmComponent } from \"../settings/emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"../settings/emergency-access-takeover.component\";\nimport { EmergencyAccessViewComponent } from \"../settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"../settings/emergency-access.component\";\nimport { EmergencyAddEditComponent } from \"../settings/emergency-add-edit.component\";\nimport { OrganizationPlansComponent } from \"../settings/organization-plans.component\";\nimport { PaymentMethodComponent } from \"../settings/payment-method.component\";\nimport { PaymentComponent } from \"../settings/payment.component\";\nimport { PreferencesComponent } from \"../settings/preferences.component\";\nimport { PremiumComponent } from \"../settings/premium.component\";\nimport { ProfileComponent } from \"../settings/profile.component\";\nimport { PurgeVaultComponent } from \"../settings/purge-vault.component\";\nimport { SecurityKeysComponent } from \"../settings/security-keys.component\";\nimport { SecurityComponent } from \"../settings/security.component\";\nimport { SettingsComponent } from \"../settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"../settings/sponsored-families.component\";\nimport { SponsoringOrgRowComponent } from \"../settings/sponsoring-org-row.component\";\nimport { SubscriptionComponent } from \"../settings/subscription.component\";\nimport { TaxInfoComponent } from \"../settings/tax-info.component\";\nimport { TwoFactorAuthenticatorComponent } from \"../settings/two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"../settings/two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"../settings/two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"../settings/two-factor-recovery.component\";\nimport { TwoFactorSetupComponent } from \"../settings/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"../settings/two-factor-verify.component\";\nimport { TwoFactorWebAuthnComponent } from \"../settings/two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"../settings/two-factor-yubikey.component\";\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\nimport { UpdateLicenseComponent } from \"../settings/update-license.component\";\nimport { UserSubscriptionComponent } from \"../settings/user-subscription.component\";\nimport { VaultTimeoutInputComponent } from \"../settings/vault-timeout-input.component\";\nimport { VerifyEmailComponent } from \"../settings/verify-email.component\";\nimport { GeneratorComponent } from \"../tools/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"../tools/password-generator-history.component\";\nimport { ToolsComponent } from \"../tools/tools.component\";\nimport { AddEditCustomFieldsComponent } from \"../vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"../vault/add-edit.component\";\nimport { AttachmentsComponent } from \"../vault/attachments.component\";\nimport { BulkActionsComponent } from \"../vault/bulk-actions.component\";\nimport { BulkDeleteComponent } from \"../vault/bulk-delete.component\";\nimport { BulkMoveComponent } from \"../vault/bulk-move.component\";\nimport { BulkRestoreComponent } from \"../vault/bulk-restore.component\";\nimport { BulkShareComponent } from \"../vault/bulk-share.component\";\nimport { CollectionsComponent } from \"../vault/collections.component\";\nimport { FolderAddEditComponent } from \"../vault/folder-add-edit.component\";\nimport { ShareComponent } from \"../vault/share.component\";\nimport { VaultFilterModule } from \"../vault/vault-filter/vault-filter.module\";\n\nimport { SharedModule } from \".\";\n\n// Please do not add to this list of declarations - we should refactor these into modules when doing so makes sense until there are none left.\n// If you are building new functionality, please create or extend a feature module instead.\n@NgModule({\n  imports: [\n    SharedModule,\n    VaultFilterModule,\n    OrganizationCreateModule,\n    RegisterFormModule,\n    ProductSwitcherModule,\n  ],\n  declarations: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptFamilySponsorshipComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BillingSyncKeyComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DomainRulesComponent,\n    DynamicAvatarComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAddEditComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgToolsComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordRepromptComponent,\n    UserVerificationPromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ChangeAvatarComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RemovePasswordComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SelectableAvatarComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    BillingHistoryComponent,\n    BillingHistoryViewComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n  exports: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DomainRulesComponent,\n    DynamicAvatarComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAddEditComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgToolsComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ChangeAvatarComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RemovePasswordComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SelectableAvatarComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    BillingHistoryComponent,\n    BillingHistoryViewComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n})\nexport class LooseComponentsModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BitActionDirective } from \"./bit-action.directive\";\nimport { BitSubmitDirective } from \"./bit-submit.directive\";\nimport { BitFormButtonDirective } from \"./form-button.directive\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [BitActionDirective, BitFormButtonDirective, BitSubmitDirective],\n  exports: [BitActionDirective, BitFormButtonDirective, BitSubmitDirective],\n})\nexport class AsyncActionsModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AvatarComponent } from \"./avatar.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [AvatarComponent],\n  declarations: [AvatarComponent],\n})\nexport class AvatarModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonComponent } from \"./button.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ButtonComponent],\n  declarations: [ButtonComponent],\n})\nexport class ButtonModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CalloutComponent } from \"./callout.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CalloutComponent],\n  declarations: [CalloutComponent],\n})\nexport class CalloutModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconButtonComponent } from \"./icon-button.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconButtonComponent],\n  exports: [BitIconButtonComponent],\n})\nexport class IconButtonModule {}\n","import { DialogModule as CdkDialogModule } from \"@angular/cdk/dialog\";\nimport { NgModule } from \"@angular/core\";\n\nimport { IconButtonModule } from \"../icon-button\";\nimport { SharedModule } from \"../shared\";\n\nimport { DialogService } from \"./dialog.service\";\nimport { DialogComponent } from \"./dialog/dialog.component\";\nimport { DialogCloseDirective } from \"./directives/dialog-close.directive\";\nimport { DialogTitleContainerDirective } from \"./directives/dialog-title-container.directive\";\nimport { IconDirective, SimpleDialogComponent } from \"./simple-dialog/simple-dialog.component\";\n\n@NgModule({\n  imports: [SharedModule, IconButtonModule, CdkDialogModule],\n  declarations: [\n    DialogCloseDirective,\n    DialogTitleContainerDirective,\n    DialogComponent,\n    SimpleDialogComponent,\n    IconDirective,\n  ],\n  exports: [\n    CdkDialogModule,\n    DialogComponent,\n    SimpleDialogComponent,\n    DialogCloseDirective,\n    IconDirective,\n  ],\n  providers: [DialogService],\n})\nexport class DialogModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconComponent } from \"./icon.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconComponent],\n  exports: [BitIconComponent],\n})\nexport class IconModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AnchorLinkDirective, ButtonLinkDirective } from \"./link.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [AnchorLinkDirective, ButtonLinkDirective],\n  declarations: [AnchorLinkDirective, ButtonLinkDirective],\n})\nexport class LinkModule {}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { MenuDividerComponent } from \"./menu-divider.component\";\nimport { MenuItemDirective } from \"./menu-item.directive\";\nimport { MenuTriggerForDirective } from \"./menu-trigger-for.directive\";\nimport { MenuComponent } from \"./menu.component\";\n\n@NgModule({\n  imports: [A11yModule, CommonModule, OverlayModule],\n  declarations: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n  exports: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n})\nexport class MenuModule {}\n","import { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { IconButtonModule } from \"../icon-button/icon-button.module\";\nimport { SharedModule } from \"../shared/shared.module\";\n\nimport { NavDividerComponent } from \"./nav-divider.component\";\nimport { NavGroupComponent } from \"./nav-group.component\";\nimport { NavItemComponent } from \"./nav-item.component\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule, IconButtonModule, OverlayModule, RouterModule],\n  declarations: [NavDividerComponent, NavGroupComponent, NavItemComponent],\n  exports: [NavDividerComponent, NavGroupComponent, NavItemComponent],\n})\nexport class NavigationModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CellDirective } from \"./cell.directive\";\nimport { RowDirective } from \"./row.directive\";\nimport { SortableComponent } from \"./sortable.component\";\nimport { TableBodyDirective, TableComponent } from \"./table.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    TableComponent,\n    CellDirective,\n    RowDirective,\n    SortableComponent,\n    TableBodyDirective,\n  ],\n  exports: [TableComponent, CellDirective, RowDirective, SortableComponent, TableBodyDirective],\n})\nexport class TableModule {}\n","import { PortalModule } from \"@angular/cdk/portal\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { TabHeaderComponent } from \"./shared/tab-header.component\";\nimport { TabListContainerDirective } from \"./shared/tab-list-container.directive\";\nimport { TabListItemDirective } from \"./shared/tab-list-item.directive\";\nimport { TabBodyComponent } from \"./tab-group/tab-body.component\";\nimport { TabGroupComponent } from \"./tab-group/tab-group.component\";\nimport { TabLabelDirective } from \"./tab-group/tab-label.directive\";\nimport { TabComponent } from \"./tab-group/tab.component\";\nimport { TabLinkComponent } from \"./tab-nav-bar/tab-link.component\";\nimport { TabNavBarComponent } from \"./tab-nav-bar/tab-nav-bar.component\";\n\n@NgModule({\n  imports: [CommonModule, RouterModule, PortalModule],\n  exports: [\n    TabGroupComponent,\n    TabComponent,\n    TabLabelDirective,\n    TabNavBarComponent,\n    TabLinkComponent,\n  ],\n  declarations: [\n    TabGroupComponent,\n    TabComponent,\n    TabLabelDirective,\n    TabListContainerDirective,\n    TabListItemDirective,\n    TabHeaderComponent,\n    TabNavBarComponent,\n    TabLinkComponent,\n    TabBodyComponent,\n  ],\n})\nexport class TabsModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ColorPasswordComponent } from \"./color-password.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ColorPasswordComponent],\n  declarations: [ColorPasswordComponent],\n})\nexport class ColorPasswordModule {}\n","import { registerLocaleData } from \"@angular/common\";\nimport localeAf from \"@angular/common/locales/af\";\nimport localeAr from \"@angular/common/locales/ar\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEo from \"@angular/common/locales/eo\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeEu from \"@angular/common/locales/eu\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\n\nregisterLocaleData(localeAf, \"af\");\nregisterLocaleData(localeAr, \"ar\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEo, \"eo\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeEu, \"eu\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport {\n  AsyncActionsModule,\n  AvatarModule,\n  BadgeModule,\n  ButtonModule,\n  CalloutModule,\n  DialogModule,\n  FormFieldModule,\n  IconButtonModule,\n  IconModule,\n  LinkModule,\n  MenuModule,\n  NavigationModule,\n  TableModule,\n  TabsModule,\n  ColorPasswordModule,\n} from \"@bitwarden/components\";\n\n// Register the locales for the application\nimport \"./locales\";\n\n/**\n * This NgModule should contain the most basic shared directives, pipes, and components. They\n * should be widely used by other modules to be considered for adding to this module. If in doubt\n * do not add to this module.\n *\n * See: https://angular.io/guide/module-types#shared-ngmodules\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InfiniteScrollModule,\n    RouterModule,\n    ToastrModule,\n    JslibModule,\n\n    // Component library\n    AsyncActionsModule,\n    AvatarModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    DialogModule,\n    FormFieldModule,\n    IconButtonModule,\n    IconModule,\n    LinkModule,\n    MenuModule,\n    NavigationModule,\n    TableModule,\n    TabsModule,\n    LinkModule,\n    ColorPasswordModule,\n\n    // Web specific\n  ],\n  exports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InfiniteScrollModule,\n    RouterModule,\n    ToastrModule,\n    JslibModule,\n\n    // Component library\n    AsyncActionsModule,\n    AvatarModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    DialogModule,\n    FormFieldModule,\n    IconButtonModule,\n    IconModule,\n    LinkModule,\n    MenuModule,\n    NavigationModule,\n    TableModule,\n    TabsModule,\n    LinkModule,\n    ColorPasswordModule,\n\n    // Web specific\n  ],\n  providers: [DatePipe],\n  bootstrap: [],\n})\nexport class SharedModule {}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { FieldView } from \"@bitwarden/common/models/view/field.view\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(\n    private i18nService: I18nService,\n    private eventCollectionService: EventCollectionService\n  ) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledHiddenFieldVisible,\n        this.cipher.id\n      );\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue: boolean | string = true;\n  @Input() falseValue: boolean | string = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<ng-container>\n  <h3 class=\"mt-4\">{{ \"customFields\" | i18n }}</h3>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n    <div\n      role=\"group\"\n      class=\"row\"\n      cdkDrag\n      *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n      attr.aria-label=\"{{ f.name }}\"\n    >\n      <div class=\"col-5 form-group\">\n        <div class=\"d-flex\">\n          <label for=\"fieldName{{ i }}\">{{ \"name\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/custom-fields/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"fieldName{{ i }}\"\n          type=\"text\"\n          name=\"Field.Name{{ i }}\"\n          [(ngModel)]=\"f.name\"\n          class=\"form-control\"\n          appInputVerbatim\n          [disabled]=\"cipher.isDeleted || viewOnly\"\n          [readonly]=\"!cipher.edit && editMode\"\n        />\n      </div>\n      <div class=\"col-7 form-group\">\n        <label for=\"fieldValue{{ i }}\">{{ \"value\" | i18n }}</label>\n        <div class=\"d-flex align-items-center\">\n          <!-- Text -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              appInputVerbatim\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              [readonly]=\"!cipher.edit && editMode\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', 'Field')\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Hidden -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              type=\"{{ f.showValue ? 'text' : 'password' }}\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              class=\"form-control text-monospace\"\n              appInputVerbatim\n              autocomplete=\"new-password\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"\n              [readonly]=\"!cipher.edit && editMode\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleFieldValue(f)\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n                >\n                </i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Linked -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\">\n            <select\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              class=\"form-control\"\n              [(ngModel)]=\"f.linkedId\"\n              *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            >\n              <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"flex-fill\">\n            <!-- Boolean -->\n            <input\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"f.value\"\n              *ngIf=\"f.type === fieldType.Boolean\"\n              appTrueFalseValue\n              trueValue=\"true\"\n              falseValue=\"false\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-danger ml-2\"\n            (click)=\"removeField(f)\"\n            appA11yTitle=\"{{ 'remove' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-muted cursor-move\"\n            appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-hamburger bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Add new custom field -->\n  <a\n    href=\"#\"\n    appStopClick\n    (click)=\"addField()\"\n    class=\"d-inline-block mb-2\"\n    *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n  >\n    <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomField\" | i18n }}\n  </a>\n  <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\">\n    <div class=\"col-5\">\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  @Input() viewOnly: boolean;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  constructor(i18nService: I18nService, eventCollectionService: EventCollectionService) {\n    super(i18nService, eventCollectionService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Observable, Subject, takeUntil, concatMap } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CardView } from \"@bitwarden/common/models/view/card.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identity.view\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\nimport { LoginView } from \"@bitwarden/common/models/view/login.view\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secure-note.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n  organization: Organization;\n\n  protected componentName = \"\";\n  protected destroy$ = new Subject<void>();\n  protected writeableCollections: CollectionView[];\n  private personalOwnershipPolicyAppliesToActiveUser: boolean;\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventCollectionService: EventCollectionService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"cardBrandMir\"), value: \"Mir\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n      .pipe(\n        concatMap(async (policyAppliesToActiveUser) => {\n          this.personalOwnershipPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n          await this.init();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (this.personalOwnershipPolicyAppliesToActiveUser) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventCollectionService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  getCardExpMonthDisplay() {\n    return this.cardExpMonthOptions.find((x) => x.value == this.cipher.card.expMonth)?.name;\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledPasswordVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledCardNumberVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledCardCodeVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipher.id == null\n      ? this.cipherService.createWithServer(cipher)\n      : this.cipherService.updateWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent implements OnInit, OnDestroy {\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  showRevisionDate = false;\n  hasPasswordHistory = false;\n  viewingPasswordHistory = false;\n  viewOnly = false;\n  showPasswordCount = false;\n\n  protected totpInterval: number;\n  protected override componentName = \"app-vault-add-edit\";\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    protected totpService: TotpService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected messagingService: MessagingService,\n    eventCollectionService: EventCollectionService,\n    protected policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n    this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n    this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n    this.cleanUp();\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (this.cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = window.setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n  toggleFavorite() {\n    this.cipher.favorite = !this.cipher.favorite;\n  }\n\n  togglePassword() {\n    super.togglePassword();\n\n    // Hide password count when password is hidden to be safe\n    if (!this.showPassword && this.showPasswordCount) {\n      this.togglePasswordCount();\n    }\n  }\n\n  togglePasswordCount() {\n    this.showPasswordCount = !this.showPasswordCount;\n\n    if (this.editMode && this.showPasswordCount) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledPasswordVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  launch(uri: LoginUriView) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (this.editMode) {\n      if (typeI18nKey === \"password\") {\n        this.eventCollectionService.collect(\n          EventType.Cipher_ClientToggledHiddenFieldVisible,\n          this.cipherId\n        );\n      } else if (typeI18nKey === \"securityCode\") {\n        this.eventCollectionService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n      } else if (aType === \"H_Field\") {\n        this.eventCollectionService.collect(\n          EventType.Cipher_ClientCopiedHiddenField,\n          this.cipherId\n        );\n      }\n    }\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      const options = (await this.passwordGenerationService.getOptions())?.[0] ?? {};\n      this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n    }\n    return confirmed;\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", {\n      organizationId: this.cipher.organizationId,\n    });\n  }\n\n  showGetPremium() {\n    if (this.canAccessPremium) {\n      return;\n    }\n    if (this.cipher.organizationUseTotp) {\n      this.upgradeOrganization();\n    } else {\n      this.premiumRequired();\n    }\n  }\n\n  viewHistory() {\n    this.viewingPasswordHistory = !this.viewingPasswordHistory;\n  }\n\n  protected cleanUp() {\n    if (this.totpInterval) {\n      window.clearInterval(this.totpInterval);\n    }\n  }\n\n  protected async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  protected allowOwnershipAssignment() {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationNameBadgeComponent } from \"./organization-name-badge.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationNameBadgeComponent],\n  exports: [OrganizationNameBadgeComponent],\n})\nexport class OrganizationBadgeModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\nimport { LinkSsoComponent } from \"../organization-filter/link-sso.component\";\nimport { OrganizationFilterComponent } from \"../organization-filter/organization-filter.component\";\nimport { OrganizationOptionsComponent } from \"../organization-filter/organization-options.component\";\n\nimport { CollectionFilterComponent } from \"./collection-filter/collection-filter.component\";\nimport { FolderFilterComponent } from \"./folder-filter/folder-filter.component\";\nimport { StatusFilterComponent } from \"./status-filter/status-filter.component\";\nimport { TypeFilterComponent } from \"./type-filter/type-filter.component\";\nimport { VaultFilterService } from \"./vault-filter.service\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n    OrganizationFilterComponent,\n    OrganizationOptionsComponent,\n    LinkSsoComponent,\n  ],\n  exports: [\n    SharedModule,\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n    OrganizationFilterComponent,\n    OrganizationOptionsComponent,\n    LinkSsoComponent,\n  ],\n  providers: [VaultFilterService],\n})\nexport class VaultFilterSharedModule {}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { DynamicTreeNode } from \"@bitwarden/angular/vault/vault-filter/models/dynamic-tree-node.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"@bitwarden/angular/vault/vault-filter/services/vault-filter.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collection.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Injectable()\nexport class VaultFilterService extends BaseVaultFilterService {\n  private _collapsedFilterNodes = new BehaviorSubject<Set<string>>(new Set());\n  collapsedFilterNodes$: Observable<Set<string>> = this._collapsedFilterNodes.asObservable();\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService,\n    private i18nService: I18nService,\n    protected apiService: ApiService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    const nodes = await super.buildCollapsedFilterNodes();\n    this._collapsedFilterNodes.next(nodes);\n    return nodes;\n  }\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await super.storeCollapsedFilterNodes(collapsedFilterNodes);\n    this._collapsedFilterNodes.next(collapsedFilterNodes);\n  }\n\n  async ensureVaultFiltersAreExpanded() {\n    const collapsedFilterNodes = await super.buildCollapsedFilterNodes();\n    if (!collapsedFilterNodes.has(\"vaults\")) {\n      return;\n    }\n    collapsedFilterNodes.delete(\"vaults\");\n    await this.storeCollapsedFilterNodes(collapsedFilterNodes);\n  }\n\n  async buildAdminCollections(organizationId: string) {\n    let result: CollectionView[] = [];\n    const collectionResponse = await this.apiService.getCollections(organizationId);\n    if (collectionResponse?.data != null && collectionResponse.data.length) {\n      const collectionDomains = collectionResponse.data.map(\n        (r: CollectionDetailsResponse) => new Collection(new CollectionData(r))\n      );\n      result = await this.collectionService.decryptMany(collectionDomains);\n    }\n\n    const noneCollection = new CollectionView();\n    noneCollection.name = this.i18nService.t(\"unassigned\");\n    noneCollection.organizationId = organizationId;\n    result.push(noneCollection);\n\n    const nestedCollections = await this.collectionService.getAllNested(result);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: result,\n      nestedList: nestedCollections,\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultFilterSharedModule } from \"./shared/vault-filter-shared.module\";\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","import {\n  flagEnabled as baseFlagEnabled,\n  devFlagEnabled as baseDevFlagEnabled,\n  devFlagValue as baseDevFlagValue,\n  SharedFlags,\n  SharedDevFlags,\n} from \"@bitwarden/common/misc/flags\";\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type Flags = {\n  secretsManager?: boolean;\n  showPasswordless?: boolean;\n} & SharedFlags;\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type DevFlags = {} & SharedDevFlags;\n\nexport function flagEnabled(flag: keyof Flags): boolean {\n  return baseFlagEnabled<Flags>(flag);\n}\n\nexport function devFlagEnabled(flag: keyof DevFlags) {\n  return baseDevFlagEnabled<DevFlags>(flag);\n}\n\nexport function devFlagValue(flag: keyof DevFlags) {\n  return baseDevFlagValue(flag);\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormControlModule } from \"../form-control\";\nimport { SharedModule } from \"../shared\";\n\nimport { CheckboxComponent } from \"./checkbox.component\";\n\n@NgModule({\n  imports: [SharedModule, CommonModule, FormControlModule],\n  declarations: [CheckboxComponent],\n  exports: [CheckboxComponent],\n})\nexport class CheckboxModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { CheckboxModule } from \"@bitwarden/components\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { LoginWithDeviceComponent } from \"./login-with-device.component\";\nimport { LoginComponent } from \"./login.component\";\n\n@NgModule({\n  imports: [SharedModule, CheckboxModule],\n  declarations: [LoginComponent, LoginWithDeviceComponent],\n  exports: [LoginComponent, LoginWithDeviceComponent],\n})\nexport class LoginModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { VerticalStepContentComponent } from \"./vertical-step-content.component\";\nimport { VerticalStep } from \"./vertical-step.component\";\nimport { VerticalStepperComponent } from \"./vertical-stepper.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [VerticalStepperComponent, VerticalStep, VerticalStepContentComponent],\n  exports: [VerticalStepperComponent, VerticalStep],\n})\nexport class VerticalStepperModule {}\n","import { CdkStepperModule } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormFieldModule } from \"@bitwarden/components\";\n\nimport { OrganizationCreateModule } from \"../../organizations/create/organization-create.module\";\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { RegisterFormModule } from \"../register-form/register-form.module\";\n\nimport { BillingComponent } from \"./billing.component\";\nimport { ConfirmationDetailsComponent } from \"./confirmation-details.component\";\nimport { AbmEnterpriseContentComponent } from \"./content/abm-enterprise-content.component\";\nimport { AbmTeamsContentComponent } from \"./content/abm-teams-content.component\";\nimport { CnetEnterpriseContentComponent } from \"./content/cnet-enterprise-content.component\";\nimport { CnetIndividualContentComponent } from \"./content/cnet-individual-content.component\";\nimport { CnetTeamsContentComponent } from \"./content/cnet-teams-content.component\";\nimport { DefaultContentComponent } from \"./content/default-content.component\";\nimport { EnterpriseContentComponent } from \"./content/enterprise-content.component\";\nimport { Enterprise1ContentComponent } from \"./content/enterprise1-content.component\";\nimport { Enterprise2ContentComponent } from \"./content/enterprise2-content.component\";\nimport { LogoCnetComponent } from \"./content/logo-cnet.component\";\nimport { LogoForbesComponent } from \"./content/logo-forbes.component\";\nimport { LogoUSNewsComponent } from \"./content/logo-us-news.component\";\nimport { TeamsContentComponent } from \"./content/teams-content.component\";\nimport { Teams1ContentComponent } from \"./content/teams1-content.component\";\nimport { Teams2ContentComponent } from \"./content/teams2-content.component\";\nimport { TrialInitiationComponent } from \"./trial-initiation.component\";\nimport { VerticalStepperModule } from \"./vertical-stepper/vertical-stepper.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CdkStepperModule,\n    VerticalStepperModule,\n    FormFieldModule,\n    RegisterFormModule,\n    OrganizationCreateModule,\n    LooseComponentsModule,\n  ],\n  declarations: [\n    TrialInitiationComponent,\n    EnterpriseContentComponent,\n    TeamsContentComponent,\n    ConfirmationDetailsComponent,\n    BillingComponent,\n    DefaultContentComponent,\n    EnterpriseContentComponent,\n    Enterprise1ContentComponent,\n    Enterprise2ContentComponent,\n    TeamsContentComponent,\n    Teams1ContentComponent,\n    Teams2ContentComponent,\n    CnetEnterpriseContentComponent,\n    CnetIndividualContentComponent,\n    CnetTeamsContentComponent,\n    AbmEnterpriseContentComponent,\n    AbmTeamsContentComponent,\n    LogoCnetComponent,\n    LogoForbesComponent,\n    LogoUSNewsComponent,\n  ],\n  exports: [TrialInitiationComponent],\n  providers: [TitleCasePipe],\n})\nexport class TrialInitiationModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule],\n  declarations: [EntityUsersComponent],\n  exports: [EntityUsersComponent],\n})\nexport class OrganizationManageModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { EnrollMasterPasswordReset } from \"./enroll-master-password-reset.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule, LooseComponentsModule],\n  declarations: [EnrollMasterPasswordReset],\n  exports: [EnrollMasterPasswordReset],\n})\nexport class OrganizationUserModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LoginModule } from \"./accounts/login/login.module\";\nimport { TrialInitiationModule } from \"./accounts/trial-initiation/trial-initiation.module\";\nimport { OrganizationCreateModule } from \"./organizations/create/organization-create.module\";\nimport { OrganizationManageModule } from \"./organizations/manage/organization-manage.module\";\nimport { OrganizationUserModule } from \"./organizations/users/organization-user.module\";\nimport { LooseComponentsModule, SharedModule } from \"./shared\";\nimport { OrganizationBadgeModule } from \"./vault/organization-badge/organization-badge.module\";\nimport { VaultFilterModule } from \"./vault/vault-filter/vault-filter.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationManageModule,\n    OrganizationUserModule,\n    OrganizationCreateModule,\n    LoginModule,\n  ],\n  exports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    LoginModule,\n  ],\n  bootstrap: [],\n})\nexport class OssModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [{ path: \"**\", redirectTo: \"\" }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WildcardRoutingModule {}\n","export class ProviderAddOrganizationRequest {\n  organizationId: string;\n  key: string;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderAddOrganizationRequest } from \"@bitwarden/common/models/request/provider/provider-add-organization.request\";\n\n@Injectable()\nexport class WebProviderService {\n  constructor(\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private apiService: ApiService\n  ) {}\n\n  async addOrganizationToProvider(providerId: string, organizationId: string) {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n    const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n    const request = new ProviderAddOrganizationRequest();\n    request.organizationId = organizationId;\n    request.key = encryptedOrgKey.encryptedString;\n\n    const response = await this.apiService.postProviderAddOrganization(providerId, request);\n    await this.syncService.fullSync(true);\n    return response;\n  }\n\n  async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n    await this.apiService.deleteProviderOrganization(providerId, organizationId);\n    await this.syncService.fullSync(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"addTitle\">\n          {{ \"addExistingOrganization\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <ng-container *ngIf=\"!loading\">\n          <table class=\"table table-hover table-list\">\n            <tr *ngFor=\"let o of organizations\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"o.name\" [id]=\"o.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ o.name }}\n              </td>\n              <td>\n                <button\n                  class=\"btn btn-outline-secondary pull-right\"\n                  (click)=\"add(o)\"\n                  [disabled]=\"formPromise\"\n                >\n                  Add\n                </button>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\n@Component({\n  selector: \"provider-add-organization\",\n  templateUrl: \"add-organization.component.html\",\n})\nexport class AddOrganizationComponent implements OnInit {\n  @Input() providerId: string;\n  @Input() organizations: Organization[];\n  @Output() onAddedOrganization = new EventEmitter();\n\n  provider: Provider;\n  formPromise: Promise<any>;\n  loading = true;\n\n  constructor(\n    private providerService: ProviderService,\n    private webProviderService: WebProviderService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private validationService: ValidationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    if (this.providerId == null) {\n      return;\n    }\n\n    this.provider = await this.providerService.get(this.providerId);\n\n    this.loading = false;\n  }\n\n  async add(organization: Organization) {\n    if (this.formPromise) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"addOrganizationConfirmation\", organization.name, this.provider.name),\n      organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.webProviderService.addOrganizationToProvider(\n        this.providerId,\n        organization.id\n      );\n      await this.formPromise;\n    } catch (e) {\n      this.validationService.showError(e);\n      return;\n    } finally {\n      this.formPromise = null;\n    }\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"organizationJoinedProvider\")\n    );\n    this.onAddedOrganization.emit();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Injectable()\nexport class ProviderPermissionsGuard implements CanActivate {\n  constructor(\n    private providerService: ProviderService,\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    if (provider == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!provider.isProviderAdmin && !provider.enabled) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"providerIsDisabled\"));\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (provider: Provider) => boolean = route.data?.providerPermissions;\n    const hasSpecifiedPermissions = permissionsCallback == null || permissionsCallback(provider);\n\n    if (!hasSpecifiedPermissions) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return this.router.createUrlTree([\"/providers\", provider.id]);\n    }\n\n    return true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header d-flex\">\n    <h1>{{ \"providers\" | i18n }}</h1>\n  </div>\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\">\n      <tbody>\n        <tr *ngFor=\"let p of providers\">\n          <td width=\"30\">\n            <bit-avatar [text]=\"p.name\" [id]=\"p.id\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{ p.name }}</a>\n            <ng-container *ngIf=\"!p.enabled\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-danger\"\n                title=\"{{ 'providerIsDisabled' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n            </ng-container>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-providers\",\n  templateUrl: \"providers.component.html\",\n})\nexport class ProvidersComponent implements OnInit {\n  providers: Provider[];\n  loaded = false;\n  actionPromise: Promise<any>;\n\n  constructor(private providerService: ProviderService, private i18nService: I18nService) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    await this.load();\n  }\n\n  async load() {\n    const providers = await this.providerService.getAll();\n    providers.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.providers = providers;\n    this.loaded = true;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"clients\" | i18n }}</h1>\n\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newClientOrganization\" | i18n }}\n    </a>\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"addExistingOrganization()\"\n      *ngIf=\"manageOrganizations && showAddExisting\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"addExistingOrganization\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container\n  *ngIf=\"!loading && (clients | search: searchText:'organizationName':'id') as searchedClients\"\n>\n  <p *ngIf=\"!searchedClients.length\">{{ \"noClientsInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedClients.length\">\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <thead>\n        <tr>\n          <th colspan=\"2\">{{ \"name\" | i18n }}</th>\n          <th>{{ \"numberOfUsers\" | i18n }}</th>\n          <th>{{ \"billingPlan\" | i18n }}</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let o of searchedClients\">\n          <td width=\"30\">\n            <bit-avatar [text]=\"o.organizationName\" [id]=\"o.id\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a [routerLink]=\"['/organizations', o.organizationId]\">{{ o.organizationName }}</a>\n          </td>\n          <td>\n            <span>{{ o.userCount }}</span>\n            <span *ngIf=\"o.seats != null\"> / {{ o.seats }}</span>\n          </td>\n          <td>\n            <span>{{ o.plan }}</span>\n          </td>\n          <td class=\"table-list-options\" *ngIf=\"manageOrganizations\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n\n<ng-template #add></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ProviderOrganizationOrganizationDetailsResponse } from \"@bitwarden/common/models/response/provider/provider-organization.response\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\nimport { AddOrganizationComponent } from \"./add-organization.component\";\n\nconst DisallowedPlanTypes = [\n  PlanType.Free,\n  PlanType.FamiliesAnnually2019,\n  PlanType.FamiliesAnnually,\n];\n\n@Component({\n  templateUrl: \"clients.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ClientsComponent implements OnInit {\n  @ViewChild(\"add\", { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n  providerId: string;\n  searchText: string;\n  addableOrganizations: Organization[];\n  loading = true;\n  manageOrganizations = false;\n  showAddExisting = false;\n\n  clients: ProviderOrganizationOrganizationDetailsResponse[];\n  pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected actionPromise: Promise<unknown>;\n  private pagedClientsCount = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private providerService: ProviderService,\n    private apiService: ApiService,\n    private searchService: SearchService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private validationService: ValidationService,\n    private webProviderService: WebProviderService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderClients(this.providerId);\n    this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n    this.manageOrganizations =\n      (await this.providerService.get(this.providerId)).type === ProviderUserType.ProviderAdmin;\n    const candidateOrgs = (await this.organizationService.getAll()).filter(\n      (o) => o.isOwner && o.providerId == null\n    );\n    const allowedOrgsIds = await Promise.all(\n      candidateOrgs.map((o) => this.organizationApiService.get(o.id))\n    ).then((orgs) =>\n      orgs.filter((o) => !DisallowedPlanTypes.includes(o.planType)).map((o) => o.id)\n    );\n    this.addableOrganizations = candidateOrgs.filter((o) => allowedOrgsIds.includes(o.id));\n\n    this.showAddExisting = this.addableOrganizations.length !== 0;\n    this.loading = false;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.clients && this.clients.length > this.pageSize;\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  async resetPaging() {\n    this.pagedClients = [];\n    this.loadMore();\n  }\n\n  loadMore() {\n    if (!this.clients || this.clients.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedClients.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n      pagedSize = this.pagedClientsCount;\n    }\n    if (this.clients.length > pagedLength) {\n      this.pagedClients = this.pagedClients.concat(\n        this.clients.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedClientsCount = this.pagedClients.length;\n    this.didScroll = this.pagedClients.length > this.pageSize;\n  }\n\n  async addExistingOrganization() {\n    const [modal] = await this.modalService.openViewRef(\n      AddOrganizationComponent,\n      this.addModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.organizations = this.addableOrganizations;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onAddedOrganization.subscribe(async () => {\n          try {\n            await this.load();\n            modal.close();\n          } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n          }\n        });\n      }\n    );\n  }\n\n  async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"detachOrganizationConfirmation\"),\n      organization.organizationName,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.webProviderService.detachOrganizastion(\n      this.providerId,\n      organization.id\n    );\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"detachedOrganization\", organization.organizationName)\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationPlansComponent } from \"@bitwarden/web-vault/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  providerId: string;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newClientOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newClientOrganizationDesc\" | i18n }}</p>\n<app-organization-plans [providerId]=\"providerId\"></app-organization-plans>\n","export class ProviderUserAcceptRequest {\n  token: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ providerName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinProviderDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserAcceptRequest } from \"@bitwarden/common/models/request/provider/provider-user-accept.request\";\nimport { BaseAcceptComponent } from \"@bitwarden/web-vault/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-provider\",\n  templateUrl: \"accept-provider.component.html\",\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n  providerName: string;\n\n  failedMessage = \"providerInviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"providerUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private apiService: ApiService,\n    platformUtilService: PlatformUtilsService\n  ) {\n    super(router, platformUtilService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params) {\n    const request = new ProviderUserAcceptRequest();\n    request.token = qParams.token;\n\n    await this.apiService.postProviderUserAccept(\n      qParams.providerId,\n      qParams.providerUserId,\n      request\n    );\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"providerInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params) {\n    this.providerName = qParams.providerName;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && $any(moreBtn).loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { BaseEventsComponent } from \"@bitwarden/web-vault/app/common/base.events.component\";\nimport { EventService } from \"@bitwarden/web-vault/app/core\";\n\n@Component({\n  selector: \"provider-events\",\n  templateUrl: \"events.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"provider-events\";\n  providerId: string;\n\n  private providerUsersUserIdMap = new Map<string, any>();\n  private providerUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    private providerService: ProviderService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n      if (provider == null || !provider.useEvents) {\n        this.router.navigate([\"/providers\", this.providerId]);\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderUsers(this.providerId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n      this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsProvider(\n      this.providerId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    if (r.installationId != null) {\n      return `Installation: ${r.installationId}`;\n    }\n\n    if (userId != null && this.providerUsersUserIdMap.has(userId)) {\n      return this.providerUsersUserIdMap.get(userId);\n    }\n\n    return null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"provider\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"provider-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  provider: Provider;\n  accessEvents = false;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.provider = await this.providerService.get(params.providerId);\n      this.accessEvents = this.provider.useEvents;\n    });\n  }\n}\n","export class ProviderUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class ProviderUserConfirmRequest {\n  key: string;\n}\n","type ProviderUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n  keys: ProviderUserBulkRequestEntry[];\n\n  constructor(keys: ProviderUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserBulkConfirmRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk.request\";\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkUserDetails } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-status.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n  @Input() providerId: string;\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === ProviderUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new ProviderUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getProviderKey(this.providerId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk.request\";\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-remove.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n  @Input() providerId: string;\n\n  async deleteUsers() {\n    const request = new ProviderUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeUsersWarning\");\n  }\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserInviteRequest {\n  emails: string[] = [];\n  type: ProviderUserType;\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserUpdateRequest {\n  type: ProviderUserType;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"providerInviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeServiceUser\"\n            [value]=\"userType.ServiceUser\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeServiceUser\">\n            {{ \"serviceUser\" | i18n }}\n            <small>{{ \"serviceUserDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeProviderAdmin\"\n            [value]=\"userType.ProviderAdmin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeProviderAdmin\">\n            {{ \"providerAdmin\" | i18n }}\n            <small>{{ \"providerAdminDesc\" | i18n }}</small>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissions.api\";\nimport { ProviderUserInviteRequest } from \"@bitwarden/common/models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"@bitwarden/common/models/request/provider/provider-user-update.request\";\n\n@Component({\n  selector: \"provider-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() providerUserId: string;\n  @Input() providerId: string;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  emails: string;\n  type: ProviderUserType = ProviderUserType.ServiceUser;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  userType = ProviderUserType;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.providerUserId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n        this.type = user.type;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new ProviderUserUpdateRequest();\n        request.type = this.type;\n        this.formPromise = this.apiService.putProviderUser(\n          this.providerId,\n          this.providerUserId,\n          request\n        );\n      } else {\n        const request = new ProviderUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.type = this.type;\n        this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"providerUsersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <bit-avatar [text]=\"u | userName\" [id]=\"u.userId\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.ProviderAdmin\">{{ \"providerAdmin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.ServiceUser\">{{ \"serviceUser\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"@bitwarden/common/models/request/provider/provider-user-confirm.request\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { ProviderUserBulkResponse } from \"@bitwarden/common/models/response/provider/provider-user-bulk.response\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/provider-user.response\";\nimport { BasePeopleComponent } from \"@bitwarden/web-vault/app/common/base.people.component\";\nimport { BulkStatusComponent } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"@bitwarden/web-vault/app/organizations/manage/entity-events.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\n\n@Component({\n  selector: \"provider-people\",\n  templateUrl: \"people.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PeopleComponent\n  extends BasePeopleComponent<ProviderUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = ProviderUserType;\n  userStatusType = ProviderUserStatusType;\n  providerId: string;\n  accessEvents = false;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    stateService: StateService,\n    private providerService: ProviderService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n\n      if (!provider.canManageUsers) {\n        this.router.navigate([\"../\"], { relativeTo: this.route });\n        return;\n      }\n\n      this.accessEvents = provider.useEvents;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    return this.apiService.getProviderUsers(this.providerId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteProviderUser(this.providerId, id);\n  }\n\n  revokeUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  restoreUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postProviderUserReinvite(this.providerId, id);\n  }\n\n  async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n    const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n    const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n    const request = new ProviderUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n  }\n\n  async edit(user: ProviderUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.providerId = this.providerId;\n        comp.providerUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async events(user: ProviderUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.providerId = this.providerId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === ProviderUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new ProviderUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  private async showBulkStatus(\n    users: ProviderUserUserDetailsResponse[],\n    filteredUsers: ProviderUserUserDetailsResponse[],\n    request: Promise<ListResponse<ProviderUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"provider\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <bit-avatar [text]=\"provider.name\" [id]=\"provider.id\"></bit-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ provider.name }}</span>\n          <small class=\"text-muted\">{{ \"provider\" | i18n }}</small>\n        </div>\n        <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\">\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"providerIsDisabled\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i>\n            {{ \"clients\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"providers-layout\",\n  templateUrl: \"providers-layout.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ProvidersLayoutComponent {\n  provider: Provider;\n  private providerId: string;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.provider = await this.providerService.get(this.providerId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showSettingsTab;\n  }\n\n  get showManageTab() {\n    return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n  }\n\n  get showSettingsTab() {\n    return this.provider.isProviderAdmin;\n  }\n\n  get manageRoute(): string {\n    switch (true) {\n      case this.provider.canManageUsers:\n        return \"manage/people\";\n      case this.provider.canAccessEventLogs:\n        return \"manage/events\";\n    }\n  }\n}\n","export class ProviderUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myProvider\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"provider && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"provider.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"provider.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <bit-avatar [text]=\"provider.name\" [id]=\"provider.id\" size=\"large\"></bit-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderUpdateRequest } from \"@bitwarden/common/models/request/provider/provider-update.request\";\nimport { ProviderResponse } from \"@bitwarden/common/models/response/provider/provider.response\";\n\n@Component({\n  selector: \"provider-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  selfHosted = false;\n  loading = true;\n  provider: ProviderResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private providerId: string;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      try {\n        this.provider = await this.apiService.getProvider(this.providerId);\n      } catch (e) {\n        this.logService.error(`Handled exception: ${e}`);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new ProviderUpdateRequest();\n      request.name = this.provider.name;\n      request.businessName = this.provider.businessName;\n      request.billingEmail = this.provider.billingEmail;\n\n      this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerUpdated\"));\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\n\n@Component({\n  selector: \"provider-settings\",\n  templateUrl: \"settings.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SettingsComponent {\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      await this.providerService.get(params.providerId);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myProvider\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setupProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"setupProviderLoginDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"@bitwarden/web-vault/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-setup-provider\",\n  templateUrl: \"setup-provider.component.html\",\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/providers/setup\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    // Empty\n  }\n}\n","export class ProviderSetupRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  token: string;\n  key: string;\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"setupProvider\" | i18n }}</h1>\n  </div>\n  <p>{{ \"setupProviderDesc\" | i18n }}</p>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\">\n    <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n      </div>\n      <div class=\"form-group col-6\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"billingEmail\"\n          required\n        />\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"submit\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ProviderSetupRequest } from \"@bitwarden/common/models/request/provider/provider-setup.request\";\n\n@Component({\n  selector: \"provider-setup\",\n  templateUrl: \"setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SetupComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  formPromise: Promise<any>;\n\n  providerId: string;\n  token: string;\n  name: string;\n  billingEmail: string;\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"emergencyInviteAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.providerId = qParams.providerId;\n      this.token = qParams.token;\n\n      // Check if provider exists, redirect if it does\n      try {\n        const provider = await this.apiService.getProvider(this.providerId);\n        if (provider.name != null) {\n          this.router.navigate([\"/providers\", provider.id], { replaceUrl: true });\n        }\n      } catch (e) {\n        this.validationService.showError(e);\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit();\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  async doSubmit() {\n    try {\n      const shareKey = await this.cryptoService.makeShareKey();\n      const key = shareKey[0].encryptedString;\n\n      const request = new ProviderSetupRequest();\n      request.name = this.name;\n      request.billingEmail = this.billingEmail;\n      request.token = this.token;\n      request.key = key;\n\n      const provider = await this.apiService.postProviderSetup(this.providerId, request);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerSetup\"));\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/providers\", provider.id]);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\nimport { FrontendLayoutComponent } from \"@bitwarden/web-vault/app/layouts/frontend-layout.component\";\nimport { ProvidersComponent } from \"@bitwarden/web-vault/app/providers/providers.component\";\n\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: ProvidersComponent,\n  },\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      {\n        path: \"setup-provider\",\n        component: SetupProviderComponent,\n        data: { titleId: \"setupProvider\" },\n      },\n      {\n        path: \"accept-provider\",\n        component: AcceptProviderComponent,\n        data: { titleId: \"acceptProvider\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"setup\",\n        component: SetupComponent,\n      },\n      {\n        path: \":providerId\",\n        component: ProvidersLayoutComponent,\n        canActivate: [ProviderPermissionsGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"clients\" },\n          { path: \"clients/create\", component: CreateOrganizationComponent },\n          { path: \"clients\", component: ClientsComponent, data: { titleId: \"clients\" } },\n          {\n            path: \"manage\",\n            component: ManageComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"people\",\n              },\n              {\n                path: \"people\",\n                component: PeopleComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"people\",\n                  providerPermissions: (provider: Provider) => provider.canManageUsers,\n                },\n              },\n              {\n                path: \"events\",\n                component: EventsComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"eventLogs\",\n                  providerPermissions: (provider: Provider) => provider.canAccessEventLogs,\n                },\n              },\n            ],\n          },\n          {\n            path: \"settings\",\n            component: SettingsComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"account\",\n              },\n              {\n                path: \"account\",\n                component: AccountComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"myProvider\",\n                  providerPermissions: (provider: Provider) => provider.isProviderAdmin,\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProvidersRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { ComponentFactoryResolver, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OssModule } from \"@bitwarden/web-vault/app/oss.module\";\n\nimport { AddOrganizationComponent } from \"./clients/add-organization.component\";\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { BulkConfirmComponent } from \"./manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./manage/bulk/bulk-remove.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { UserAddEditComponent } from \"./manage/user-add-edit.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { ProvidersRoutingModule } from \"./providers-routing.module\";\nimport { WebProviderService } from \"./services/webProvider.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, OssModule, JslibModule, ProvidersRoutingModule],\n  declarations: [\n    AcceptProviderComponent,\n    AccountComponent,\n    AddOrganizationComponent,\n    BulkConfirmComponent,\n    BulkRemoveComponent,\n    ClientsComponent,\n    CreateOrganizationComponent,\n    EventsComponent,\n    ManageComponent,\n    PeopleComponent,\n    ProvidersLayoutComponent,\n    SettingsComponent,\n    SetupComponent,\n    SetupProviderComponent,\n    UserAddEditComponent,\n  ],\n  providers: [WebProviderService, ProviderPermissionsGuard],\n})\nexport class ProvidersModule {\n  constructor(modalService: ModalService, componentFactoryResolver: ComponentFactoryResolver) {\n    modalService.registerComponentFactoryResolver(\n      AddOrganizationComponent,\n      componentFactoryResolver\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ProvidersModule } from \"./providers/providers.module\";\n\nconst routes: Routes = [\n  {\n    path: \"providers\",\n    loadChildren: () => ProvidersModule,\n  },\n  {\n    path: \"sm\",\n    loadChildren: async () =>\n      (await import(\"./secrets-manager/secrets-manager.module\")).SecretsManagerModule,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Component, Inject, NgZone, OnDestroy, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport * as jq from \"jquery\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventUploadService } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\n\nimport { PolicyListService, RouterService } from \"./core\";\nimport {\n  DisableSendPolicy,\n  MasterPasswordPolicy,\n  PasswordGeneratorPolicy,\n  PersonalOwnershipPolicy,\n  RequireSsoPolicy,\n  ResetPasswordPolicy,\n  SendOptionsPolicy,\n  SingleOrgPolicy,\n  TwoFactorAuthenticationPolicy,\n} from \"./organizations/policies\";\n\nconst BroadcasterSubscriptionId = \"AppComponent\";\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  private lastActivity: number = null;\n  private idleTimer: number = null;\n  private isIdle = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private broadcasterService: BroadcasterService,\n    private folderService: InternalFolderService,\n    private settingsService: SettingsService,\n    private syncService: SyncService,\n    private passwordGenerationService: PasswordGenerationService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private router: Router,\n    private toastrService: ToastrService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    private vaultTimeoutService: VaultTimeoutService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private sanitizer: DomSanitizer,\n    private searchService: SearchService,\n    private notificationsService: NotificationsService,\n    private routerService: RouterService,\n    private stateService: StateService,\n    private eventUploadService: EventUploadService,\n    private policyService: InternalPolicyService,\n    protected policyListService: PolicyListService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    this.i18nService.locale$.pipe(takeUntil(this.destroy$)).subscribe((locale) => {\n      this.document.documentElement.lang = locale;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousemove = () => this.recordActivity();\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"loggedIn\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"loggedOut\":\n            this.routerService.setPreviousUrl(null);\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"unlocked\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"authBlocked\":\n            this.routerService.setPreviousUrl(message.url);\n            this.router.navigate([\"/\"]);\n            break;\n          case \"logout\":\n            this.logOut(!!message.expired, message.redirect);\n            break;\n          case \"lockVault\":\n            await this.vaultTimeoutService.lock();\n            break;\n          case \"locked\":\n            this.notificationsService.updateConnection(false);\n            this.router.navigate([\"lock\"]);\n            break;\n          case \"lockedUrl\":\n            this.routerService.setPreviousUrl(message.url);\n            break;\n          case \"syncStarted\":\n            break;\n          case \"syncCompleted\":\n            break;\n          case \"upgradeOrganization\": {\n            const upgradeConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"upgradeOrganizationDesc\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (upgradeConfirmed) {\n              this.router.navigate([\n                \"organizations\",\n                message.organizationId,\n                \"settings\",\n                \"billing\",\n              ]);\n            }\n            break;\n          }\n          case \"premiumRequired\": {\n            const premiumConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"premiumRequiredDesc\"),\n              this.i18nService.t(\"premiumRequired\"),\n              this.i18nService.t(\"upgrade\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (premiumConfirmed) {\n              this.router.navigate([\"settings/subscription/premium\"]);\n            }\n            break;\n          }\n          case \"emailVerificationRequired\": {\n            const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"emailVerificationRequiredDesc\"),\n              this.i18nService.t(\"emailVerificationRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (emailVerificationConfirmed) {\n              this.platformUtilsService.launchUri(\n                \"https://bitwarden.com/help/create-bitwarden-account/\"\n              );\n            }\n            break;\n          }\n          case \"showToast\":\n            this.showToast(message);\n            break;\n          case \"setFullWidth\":\n            this.setFullWidth();\n            break;\n          case \"convertAccountToKeyConnector\":\n            this.router.navigate([\"/remove-password\"]);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const modals = Array.from(document.querySelectorAll(\".modal\"));\n        for (const modal of modals) {\n          (jq(modal) as any).modal(\"hide\");\n        }\n\n        if (document.querySelector(\".swal-modal\") != null) {\n          Swal.close(undefined);\n        }\n      }\n    });\n\n    this.policyListService.addPolicies([\n      new TwoFactorAuthenticationPolicy(),\n      new MasterPasswordPolicy(),\n      new ResetPasswordPolicy(),\n      new PasswordGeneratorPolicy(),\n      new SingleOrgPolicy(),\n      new RequireSsoPolicy(),\n      new PersonalOwnershipPolicy(),\n      new DisableSendPolicy(),\n      new SendOptionsPolicy(),\n    ]);\n\n    this.setFullWidth();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private async logOut(expired: boolean, redirect = true) {\n    await this.eventUploadService.uploadEvents();\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.syncService.setLastSync(new Date(0)),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n      this.keyConnectorService.clear(),\n    ]);\n\n    this.searchService.clearIndex();\n    this.authService.logOut(async () => {\n      if (expired) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          this.i18nService.t(\"loggedOut\"),\n          this.i18nService.t(\"loginExpired\")\n        );\n      }\n\n      await this.stateService.clean({ userId: userId });\n      Swal.close();\n      if (redirect) {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  private async recordActivity() {\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    this.stateService.setLastActive(now);\n    // Idle states\n    if (this.isIdle) {\n      this.isIdle = false;\n      this.idleStateChanged();\n    }\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idleTimer = window.setTimeout(() => {\n      if (!this.isIdle) {\n        this.isIdle = true;\n        this.idleStateChanged();\n      }\n    }, IdleTimeout);\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private idleStateChanged() {\n    if (this.isIdle) {\n      this.notificationsService.disconnectFromInactivity();\n    } else {\n      this.notificationsService.reconnectFromActivity();\n    }\n  }\n\n  private async setFullWidth() {\n    const enableFullWidth = await this.stateService.getEnableFullWidth();\n    if (enableFullWidth) {\n      document.body.classList.add(\"full-width\");\n    } else {\n      document.body.classList.remove(\"full-width\");\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"@bitwarden/web-vault/app/organizations/policies/base-policy.component\";\n\nexport class DisablePersonalVaultExportPolicy extends BasePolicy {\n  name = \"disablePersonalVaultExport\";\n  description = \"disablePersonalVaultExportDesc\";\n  type = PolicyType.DisablePersonalVaultExport;\n  component = DisablePersonalVaultExportPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-personal-vault-export\",\n  templateUrl: \"disable-personal-vault-export.component.html\",\n})\nexport class DisablePersonalVaultExportPolicyComponent extends BasePolicyComponent {}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"@bitwarden/web-vault/app/organizations/policies/base-policy.component\";\n\nexport class MaximumVaultTimeoutPolicy extends BasePolicy {\n  name = \"maximumVaultTimeout\";\n  description = \"maximumVaultTimeoutDesc\";\n  type = PolicyType.MaximumVaultTimeout;\n  component = MaximumVaultTimeoutPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-maximum-timeout\",\n  templateUrl: \"maximum-vault-timeout.component.html\",\n})\nexport class MaximumVaultTimeoutPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    hours: [null],\n    minutes: [null],\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder, private i18nService: I18nService) {\n    super();\n  }\n\n  loadData() {\n    const minutes = this.policyResponse.data?.minutes;\n\n    if (minutes == null) {\n      return;\n    }\n\n    this.data.patchValue({\n      hours: Math.floor(minutes / 60),\n      minutes: minutes % 60,\n    });\n  }\n\n  buildRequestData() {\n    if (this.data.value.hours == null && this.data.value.minutes == null) {\n      return null;\n    }\n\n    return {\n      minutes: this.data.value.hours * 60 + this.data.value.minutes,\n    };\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    const data = this.buildRequestData();\n    if (data?.minutes == null || data?.minutes <= 0) {\n      throw new Error(this.i18nService.t(\"invalidMaximumVaultTimeout\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <label for=\"hours\">{{ \"maximumVaultTimeoutLabel\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AppComponent as BaseAppComponent } from \"@bitwarden/web-vault/app/app.component\";\n\nimport { DisablePersonalVaultExportPolicy } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicy } from \"./policies/maximum-vault-timeout.component\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"../../../../apps/web/src/app/app.component.html\",\n})\nexport class AppComponent extends BaseAppComponent {\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.policyListService.addPolicies([\n      new MaximumVaultTimeoutPolicy(),\n      new DisablePersonalVaultExportPolicy(),\n    ]);\n  }\n}\n","import { ScimProviderType } from \"../../enums/scimProviderType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class ScimConfigApi extends BaseResponse {\n  enabled: boolean;\n  scimProvider: ScimProviderType;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.scimProvider = this.getResponseProperty(\"ScimProvider\");\n  }\n}\n","import { ScimProviderType } from \"../../enums/scimProviderType\";\n\nexport class ScimConfigRequest {\n  constructor(private enabled: boolean, private scimProvider: ScimProviderType = null) {}\n}\n","<div class=\"page-header\">\n  <h1>{{ \"scim\" | i18n }}</h1>\n</div>\n\n<p>{{ \"scimDescription\" | i18n }}</p>\n\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  [formGroup]=\"formData\"\n  *ngIf=\"!loading\"\n>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n        aria-describedby=\"scimEnabledCheckboxDescHelpText\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"scimEnabledCheckboxDesc\" | i18n }}</label>\n      <div id=\"scimEnabledCheckboxDescHelpText\">\n        <small class=\"form-text text-muted\">{{ \"scimEnabledCheckboxDescHelpText\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimUrl\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"endpointUrl\" />\n    <button\n      type=\"button\"\n      bitSuffix\n      bitIconButton=\"bwi-clone\"\n      (click)=\"copyScimUrl()\"\n      [appA11yTitle]=\"'copyScimUrl' | i18n\"\n    ></button>\n  </bit-form-field>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimApiKey\" | i18n }}</bit-label>\n    <input\n      bitInput\n      [type]=\"showScimKey ? 'text' : 'password'\"\n      formControlName=\"clientSecret\"\n      id=\"clientSecret\"\n    />\n    <ng-container>\n      <button\n        type=\"button\"\n        bitSuffix\n        [disabled]=\"$any(rotateButton).loading\"\n        [bitIconButton]=\"showScimKey ? 'bwi-eye-slash' : 'bwi-eye'\"\n        (click)=\"toggleScimKey()\"\n        [appA11yTitle]=\"'toggleVisibility' | i18n\"\n      ></button>\n    </ng-container>\n    <ng-container #rotateButton [appApiAction]=\"rotatePromise\">\n      <!-- TODO: Convert to async actions -->\n      <button\n        [loading]=\"$any(rotateButton).loading\"\n        type=\"button\"\n        bitSuffix\n        bitIconButton=\"bwi-generate\"\n        (click)=\"rotateScimKey()\"\n        [appA11yTitle]=\"'rotateScimKey' | i18n\"\n      ></button>\n    </ng-container>\n    <button\n      type=\"button\"\n      bitSuffix\n      bitIconButton=\"bwi-clone\"\n      (click)=\"copyScimKey()\"\n      [appA11yTitle]=\"'copyScimKey' | i18n\"\n    ></button>\n    <bit-hint>{{ \"scimApiKeyHelperText\" | i18n }}</bit-hint>\n  </bit-form-field>\n\n  <button\n    type=\"submit\"\n    buttonType=\"primary\"\n    bitButton\n    [loading]=\"form.loading\"\n    [disabled]=\"form.loading\"\n  >\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { ScimConfigApi } from \"@bitwarden/common/models/api/scim-config.api\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organization-api-key.request\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organization-connection.request\";\nimport { ScimConfigRequest } from \"@bitwarden/common/models/request/scim-config.request\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/api-key.response\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organization-connection.response\";\n\n@Component({\n  selector: \"app-org-manage-scim\",\n  templateUrl: \"scim.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ScimComponent implements OnInit {\n  loading = true;\n  organizationId: string;\n  existingConnectionId: string;\n  formPromise: Promise<OrganizationConnectionResponse<ScimConfigApi>>;\n  rotatePromise: Promise<ApiKeyResponse>;\n  enabled = new FormControl(false);\n  showScimSettings = false;\n  showScimKey = false;\n\n  formData = this.formBuilder.group({\n    endpointUrl: new FormControl({ value: \"\", disabled: true }),\n    clientSecret: new FormControl({ value: \"\", disabled: true }),\n  });\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private environmentService: EnvironmentService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    const connection = await this.apiService.getOrganizationConnection(\n      this.organizationId,\n      OrganizationConnectionType.Scim,\n      ScimConfigApi\n    );\n    await this.setConnectionFormValues(connection);\n  }\n\n  async loadApiKey() {\n    const apiKeyRequest = new OrganizationApiKeyRequest();\n    apiKeyRequest.type = OrganizationApiKeyType.Scim;\n    apiKeyRequest.masterPasswordHash = \"N/A\";\n    const apiKeyResponse = await this.organizationApiService.getOrCreateApiKey(\n      this.organizationId,\n      apiKeyRequest\n    );\n    this.formData.setValue({\n      endpointUrl: this.getScimEndpointUrl(),\n      clientSecret: apiKeyResponse.apiKey,\n    });\n  }\n\n  async copyScimUrl() {\n    this.platformUtilsService.copyToClipboard(this.getScimEndpointUrl());\n  }\n\n  async rotateScimKey() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"rotateScimKeyWarning\"),\n      this.i18nService.t(\"rotateScimKey\"),\n      this.i18nService.t(\"rotateKey\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    const request = new OrganizationApiKeyRequest();\n    request.type = OrganizationApiKeyType.Scim;\n    request.masterPasswordHash = \"N/A\";\n\n    this.rotatePromise = this.organizationApiService.rotateApiKey(this.organizationId, request);\n\n    try {\n      const response = await this.rotatePromise;\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: response.apiKey,\n      });\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimApiKeyRotated\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.rotatePromise = null;\n  }\n\n  async copyScimKey() {\n    this.platformUtilsService.copyToClipboard(this.formData.get(\"clientSecret\").value);\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.organizationId,\n        OrganizationConnectionType.Scim,\n        true,\n        new ScimConfigRequest(this.enabled.value)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(request, ScimConfigApi);\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          ScimConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this.formPromise) as OrganizationConnectionResponse<ScimConfigApi>;\n      await this.setConnectionFormValues(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimSettingsSaved\"));\n    } catch (e) {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  getScimEndpointUrl() {\n    return this.environmentService.getScimUrl() + \"/\" + this.organizationId;\n  }\n\n  toggleScimKey() {\n    this.showScimKey = !this.showScimKey;\n    document.getElementById(\"clientSecret\").focus();\n  }\n\n  private async setConnectionFormValues(connection: OrganizationConnectionResponse<ScimConfigApi>) {\n    this.existingConnectionId = connection?.id;\n    if (connection !== null && connection.config?.enabled) {\n      this.showScimSettings = true;\n      this.enabled.setValue(true);\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: \"\",\n      });\n      await this.loadApiKey();\n    } else {\n      this.showScimSettings = false;\n      this.enabled.setValue(false);\n    }\n    this.loading = false;\n  }\n}\n","import { SsoConfigApi } from \"../../api/sso-config.api\";\n\nexport class OrganizationSsoRequest {\n  enabled = false;\n  identifier: string;\n  data: SsoConfigApi;\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { SsoConfigApi } from \"../api/sso-config.api\";\n\nimport { View } from \"./view\";\n\nexport class SsoConfigView extends View {\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  openId: {\n    authority: string;\n    clientId: string;\n    clientSecret: string;\n    metadataAddress: string;\n    redirectBehavior: OpenIdConnectRedirectBehavior;\n    getClaimsFromUserInfoEndpoint: boolean;\n    additionalScopes: string;\n    additionalUserIdClaimTypes: string;\n    additionalEmailClaimTypes: string;\n    additionalNameClaimTypes: string;\n    acrValues: string;\n    expectedReturnAcrValue: string;\n  };\n\n  saml: {\n    spNameIdFormat: Saml2NameIdFormat;\n    spOutboundSigningAlgorithm: string;\n    spSigningBehavior: Saml2SigningBehavior;\n    spMinIncomingSigningAlgorithm: string;\n    spWantAssertionsSigned: boolean;\n    spValidateCertificates: boolean;\n\n    idpEntityId: string;\n    idpBindingType: Saml2BindingType;\n    idpSingleSignOnServiceUrl: string;\n    idpSingleLogoutServiceUrl: string;\n    idpX509PublicCert: string;\n    idpOutboundSigningAlgorithm: string;\n    idpAllowUnsolicitedAuthnResponse: boolean;\n    idpAllowOutboundLogoutRequests: boolean;\n    idpWantAuthnRequestsSigned: boolean;\n  };\n\n  constructor(api: SsoConfigApi) {\n    super();\n    if (api == null) {\n      return;\n    }\n\n    this.configType = api.configType;\n\n    this.keyConnectorEnabled = api.keyConnectorEnabled;\n    this.keyConnectorUrl = api.keyConnectorUrl;\n\n    if (this.configType === SsoType.OpenIdConnect) {\n      this.openId = {\n        authority: api.authority,\n        clientId: api.clientId,\n        clientSecret: api.clientSecret,\n        metadataAddress: api.metadataAddress,\n        redirectBehavior: api.redirectBehavior,\n        getClaimsFromUserInfoEndpoint: api.getClaimsFromUserInfoEndpoint,\n        additionalScopes: api.additionalScopes,\n        additionalUserIdClaimTypes: api.additionalUserIdClaimTypes,\n        additionalEmailClaimTypes: api.additionalEmailClaimTypes,\n        additionalNameClaimTypes: api.additionalNameClaimTypes,\n        acrValues: api.acrValues,\n        expectedReturnAcrValue: api.expectedReturnAcrValue,\n      };\n    } else if (this.configType === SsoType.Saml2) {\n      this.saml = {\n        spNameIdFormat: api.spNameIdFormat,\n        spOutboundSigningAlgorithm: api.spOutboundSigningAlgorithm,\n        spSigningBehavior: api.spSigningBehavior,\n        spMinIncomingSigningAlgorithm: api.spMinIncomingSigningAlgorithm,\n        spWantAssertionsSigned: api.spWantAssertionsSigned,\n        spValidateCertificates: api.spValidateCertificates,\n\n        idpEntityId: api.idpEntityId,\n        idpBindingType: api.idpBindingType,\n        idpSingleSignOnServiceUrl: api.idpSingleSignOnServiceUrl,\n        idpSingleLogoutServiceUrl: api.idpSingleLogoutServiceUrl,\n        idpX509PublicCert: api.idpX509PublicCert,\n        idpOutboundSigningAlgorithm: api.idpOutboundSigningAlgorithm,\n        idpAllowUnsolicitedAuthnResponse: api.idpAllowUnsolicitedAuthnResponse,\n        idpWantAuthnRequestsSigned: api.idpWantAuthnRequestsSigned,\n\n        // Value is inverted in the view model (allow instead of disable)\n        idpAllowOutboundLogoutRequests:\n          api.idpDisableOutboundLogoutRequests == null\n            ? null\n            : !api.idpDisableOutboundLogoutRequests,\n      };\n    }\n  }\n}\n","export class View {}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"input[appInputStripSpaces]\",\n})\nexport class InputStripSpacesDirective {\n  constructor(private el: ElementRef<HTMLInputElement>) {}\n\n  @HostListener(\"input\") onInput() {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/ /g, \"\");\n  }\n}\n","import { Directive, HostListener, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appCopyClick]\",\n})\nexport class CopyClickDirective {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  @Input(\"appCopyClick\") valueToCopy = \"\";\n\n  @HostListener(\"click\") onClick() {\n    this.platformUtilsService.copyToClipboard(this.valueToCopy);\n  }\n}\n","import { Directive, HostListener, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appLaunchClick]\",\n})\nexport class LaunchClickDirective {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  @Input(\"appLaunchClick\") uriToLaunch = \"\";\n\n  @HostListener(\"click\") onClick() {\n    if (!Utils.isNullOrWhitespace(this.uriToLaunch)) {\n      this.platformUtilsService.launchUri(this.uriToLaunch);\n    }\n  }\n}\n","import { Directive, Input, OnInit, Self } from \"@angular/core\";\nimport { ControlValueAccessor, UntypedFormControl, NgControl, Validators } from \"@angular/forms\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Directive()\nexport abstract class BaseCvaComponent implements ControlValueAccessor, OnInit {\n  get describedById() {\n    return this.showDescribedBy ? this.controlId + \"Desc\" : null;\n  }\n\n  get showDescribedBy() {\n    return this.helperText != null || this.controlDir.control.hasError(\"required\");\n  }\n\n  get isRequired() {\n    return this.controlDir.control.hasValidator(Validators.required);\n  }\n\n  @Input() label: string;\n  @Input() controlId: string;\n  @Input() helperText: string;\n\n  internalControl = new UntypedFormControl(\"\");\n\n  protected onChange: any;\n  protected onTouched: any;\n\n  constructor(@Self() public controlDir: NgControl) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit() {\n    this.internalControl.valueChanges.subscribe(this.onValueChangesInternal);\n  }\n\n  onBlurInternal() {\n    this.onTouched();\n  }\n\n  // CVA interfaces\n  writeValue(value: string) {\n    this.internalControl.setValue(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.internalControl.disable();\n    } else {\n      this.internalControl.enable();\n    }\n  }\n\n  protected onValueChangesInternal: any = (value: string) => this.onChange(value);\n  // End CVA interfaces\n}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [attr.id]=\"controlId\"\n      [attr.aria-describedby]=\"describedById\"\n      [formControl]=\"internalControl\"\n      (blur)=\"onBlurInternal()\"\n    />\n    <label class=\"form-check-label\" [attr.for]=\"controlId\">{{ label }}</label>\n  </div>\n  <small *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\" class=\"form-text text-muted\">{{\n    helperText\n  }}</small>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-checkbox\",\n  templateUrl: \"input-checkbox.component.html\",\n})\nexport class InputCheckboxComponent extends BaseCvaComponent {}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"singleSignOn\" | i18n }}</h1>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [formGroup]=\"ssoConfigForm\"\n  [appApiAction]=\"formPromise\"\n  *ngIf=\"!loading\"\n>\n  <p>\n    {{ \"ssoPolicyHelpStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"ssoPolicyHelpLink\" | i18n }}</a>\n    {{ \"ssoPolicyHelpEnd\" | i18n }}\n    <br />\n    {{ \"ssoPolicyHelpKeyConnector\" | i18n }}\n  </p>\n\n  <!-- Root form -->\n  <ng-container>\n    <app-input-checkbox\n      controlId=\"enabled\"\n      [formControl]=\"enabled\"\n      [label]=\"'allowSso' | i18n\"\n      [helperText]=\"'allowSsoDesc' | i18n\"\n    ></app-input-checkbox>\n\n    <bit-form-field>\n      <bit-label>{{ \"ssoIdentifier\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" [formControl]=\"ssoIdentifier\" />\n      <bit-hint>{{ \"ssoIdentifierHint\" | i18n }}</bit-hint>\n    </bit-form-field>\n\n    <hr />\n\n    <div class=\"form-group\">\n      <label>{{ \"memberDecryptionOption\" | i18n }}</label>\n      <div class=\"form-check form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionPass\"\n          [value]=\"false\"\n          formControlName=\"keyConnectorEnabled\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionPass\">\n          {{ \"masterPass\" | i18n }}\n          <small>{{ \"memberDecryptionPassDesc\" | i18n }}</small>\n        </label>\n      </div>\n      <div class=\"form-check mt-2 form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionKey\"\n          [value]=\"true\"\n          formControlName=\"keyConnectorEnabled\"\n          [attr.disabled]=\"!organization.useKeyConnector || null\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionKey\">\n          {{ \"keyConnector\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/about-key-connector/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n          <small>{{ \"memberDecryptionKeyConnectorDesc\" | i18n }}</small>\n        </label>\n      </div>\n    </div>\n\n    <!-- Key Connector -->\n    <ng-container *ngIf=\"ssoConfigForm.get('keyConnectorEnabled').value\">\n      <app-callout type=\"warning\" [useAlertRole]=\"true\">\n        {{ \"keyConnectorWarning\" | i18n }}\n      </app-callout>\n\n      <bit-form-field>\n        <bit-label>{{ \"keyConnectorUrl\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"text\"\n          required\n          formControlName=\"keyConnectorUrl\"\n          appInputStripSpaces\n          (input)=\"haveTestedKeyConnector = false\"\n        />\n        <button\n          bitSuffix\n          bitButton\n          [disabled]=\"!enableTestKeyConnector\"\n          type=\"button\"\n          (click)=\"validateKeyConnectorUrl()\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"keyConnectorUrl.pending\"\n          ></i>\n          <span *ngIf=\"!keyConnectorUrl.pending\">\n            {{ \"keyConnectorTest\" | i18n }}\n          </span>\n        </button>\n        <bit-hint\n          aria-live=\"polite\"\n          *ngIf=\"haveTestedKeyConnector && !keyConnectorUrl.hasError('invalidUrl')\"\n        >\n          <small class=\"text-success\">\n            <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n            {{ \"keyConnectorTestSuccess\" | i18n }}\n          </small>\n        </bit-hint>\n      </bit-form-field>\n    </ng-container>\n\n    <hr />\n\n    <bit-form-field>\n      <bit-label>{{ \"type\" | i18n }}</bit-label>\n      <select bitInput formControlName=\"configType\">\n        <option *ngFor=\"let o of ssoTypeOptions\" [ngValue]=\"o.value\" disabled=\"{{ o.disabled }}\">\n          {{ o.name }}\n        </option>\n      </select>\n    </bit-form-field>\n  </ng-container>\n\n  <!-- OIDC -->\n  <div\n    *ngIf=\"ssoConfigForm.get('configType').value === ssoType.OpenIdConnect\"\n    [formGroup]=\"openIdForm\"\n  >\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"openIdConnectConfig\" | i18n }}</h2>\n\n      <bit-form-field>\n        <bit-label>{{ \"callbackPath\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"callbackPath\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"callbackPath\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"signedOutCallbackPath\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"signedOutCallbackPath\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"signedOutCallbackPath\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"authority\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"authority\" appInputStripSpaces />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"clientId\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"clientId\" appInputStripSpaces />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"clientSecret\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"clientSecret\" appInputStripSpaces />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"metadataAddress\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"metadataAddress\" appInputStripSpaces />\n        <bit-hint>{{ \"openIdAuthorityRequired\" | i18n }}</bit-hint>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"oidcRedirectBehavior\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"redirectBehavior\">\n          <option\n            *ngFor=\"let o of connectRedirectOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <app-input-checkbox\n        controlId=\"getClaimsFromUserInfoEndpoint\"\n        formControlName=\"getClaimsFromUserInfoEndpoint\"\n        [label]=\"'getClaimsFromUserInfoEndpoint' | i18n\"\n      ></app-input-checkbox>\n\n      <!-- Optional customizations -->\n      <div\n        class=\"section-header d-flex flex-row align-items-center mt-3 mb-3\"\n        (click)=\"toggleOpenIdCustomizations()\"\n      >\n        <h3 class=\"mb-0 mr-2\" id=\"customizations-header\">\n          {{ \"openIdOptionalCustomizations\" | i18n }}\n        </h3>\n        <button\n          class=\"mb-1 btn btn-link\"\n          type=\"button\"\n          appStopClick\n          role=\"button\"\n          aria-controls=\"customizations\"\n          [attr.aria-expanded]=\"showOpenIdCustomizations\"\n          aria-labelledby=\"customizations-header\"\n        >\n          <i\n            class=\"bwi\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': !showOpenIdCustomizations,\n              'bwi-angle-down': showOpenIdCustomizations\n            }\"\n          ></i>\n        </button>\n      </div>\n      <div id=\"customizations\" [hidden]=\"!showOpenIdCustomizations\">\n        <bit-form-field>\n          <bit-label>{{ \"additionalScopes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalScopes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"additionalUserIdClaimTypes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalUserIdClaimTypes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"additionalEmailClaimTypes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalEmailClaimTypes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"additionalNameClaimTypes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalNameClaimTypes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"acrValues\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"acrValues\" />\n          <bit-hint>acr_values</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"expectedReturnAcrValue\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"expectedReturnAcrValue\" />\n          <bit-hint>acr_validaton</bit-hint>\n        </bit-form-field>\n      </div>\n    </div>\n  </div>\n\n  <!-- SAML2 SP -->\n  <div *ngIf=\"ssoConfigForm.get('configType').value === ssoType.Saml2\" [formGroup]=\"samlForm\">\n    <!-- SAML2 SP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlSpConfig\" | i18n }}</h2>\n\n      <bit-form-field>\n        <bit-label>{{ \"spEntityId\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"spEntityId\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"spEntityId\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spMetadataUrl\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"spMetadataUrl\" />\n        <button\n          bitButton\n          bitSuffix\n          type=\"button\"\n          [appLaunchClick]=\"spMetadataUrl\"\n          [appA11yTitle]=\"'launch' | i18n\"\n        >\n          <i class=\"bwi bwi-lg bwi-external-link\" aria-hidden=\"true\"></i>\n        </button>\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"spMetadataUrl\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spAcsUrl\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"spAcsUrl\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"spAcsUrl\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spNameIdFormat\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spNameIdFormat\">\n          <option\n            *ngFor=\"let o of saml2NameIdFormatOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spOutboundSigningAlgorithm\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spOutboundSigningAlgorithm\">\n          <option\n            *ngFor=\"let o of samlSigningAlgorithmOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spSigningBehavior\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spSigningBehavior\">\n          <option\n            *ngFor=\"let o of saml2SigningBehaviourOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spMinIncomingSigningAlgorithm\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spMinIncomingSigningAlgorithm\">\n          <option\n            *ngFor=\"let o of samlSigningAlgorithmOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <app-input-checkbox\n        controlId=\"spWantAssertionsSigned\"\n        formControlName=\"spWantAssertionsSigned\"\n        [label]=\"'spWantAssertionsSigned' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"spValidateCertificates\"\n        formControlName=\"spValidateCertificates\"\n        [label]=\"'spValidateCertificates' | i18n\"\n      ></app-input-checkbox>\n    </div>\n\n    <!-- SAML2 IDP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlIdpConfig\" | i18n }}</h2>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpEntityId\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"idpEntityId\" />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpBindingType\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"idpBindingType\">\n          <option\n            *ngFor=\"let o of saml2BindingTypeOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpSingleSignOnServiceUrl\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"text\"\n          formControlName=\"idpSingleSignOnServiceUrl\"\n          appInputStripSpaces\n        />\n        <bit-hint>{{ \"idpSingleSignOnServiceUrlRequired\" | i18n }}</bit-hint>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpSingleLogoutServiceUrl\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"text\"\n          formControlName=\"idpSingleLogoutServiceUrl\"\n          appInputStripSpaces\n        />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpX509PublicCert\" | i18n }}</bit-label>\n        <textarea bitInput rows=\"6\" formControlName=\"idpX509PublicCert\"></textarea>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpOutboundSigningAlgorithm\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"idpOutboundSigningAlgorithm\">\n          <option\n            *ngFor=\"let o of samlSigningAlgorithmOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <!--TODO: Uncomment once Unsolicited IdP Response is supported-->\n      <!-- <app-input-checkbox\n        controlId=\"idpAllowUnsolicitedAuthnResponse\"\n        formControlName=\"idpAllowUnsolicitedAuthnResponse\"\n        [label]=\"'idpAllowUnsolicitedAuthnResponse' | i18n\"\n      ></app-input-checkbox> -->\n\n      <app-input-checkbox\n        controlId=\"idpAllowOutboundLogoutRequests\"\n        formControlName=\"idpAllowOutboundLogoutRequests\"\n        [label]=\"'idpAllowOutboundLogoutRequests' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"idpWantAuthnRequestsSigned\"\n        formControlName=\"idpWantAuthnRequestsSigned\"\n        [label]=\"'idpSignAuthenticationRequests' | i18n\"\n      ></app-input-checkbox>\n    </div>\n  </div>\n\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </button>\n  <bit-error-summary [formGroup]=\"ssoConfigForm\"></bit-error-summary>\n</form>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  UntypedFormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\nimport { ControlsOf } from \"@bitwarden/angular/types/controls-of\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"@bitwarden/common/enums/ssoEnums\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SsoConfigApi } from \"@bitwarden/common/models/api/sso-config.api\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSsoRequest } from \"@bitwarden/common/models/request/organization/organization-sso.request\";\nimport { OrganizationSsoResponse } from \"@bitwarden/common/models/response/organization/organization-sso.response\";\nimport { SsoConfigView } from \"@bitwarden/common/models/view/sso-config.view\";\n\nconst defaultSigningAlgorithm = \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\";\n\n@Component({\n  selector: \"app-org-manage-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent implements OnInit, OnDestroy {\n  readonly ssoType = SsoType;\n\n  readonly ssoTypeOptions: SelectOptions[] = [\n    { name: this.i18nService.t(\"selectType\"), value: SsoType.None, disabled: true },\n    { name: \"OpenID Connect\", value: SsoType.OpenIdConnect },\n    { name: \"SAML 2.0\", value: SsoType.Saml2 },\n  ];\n\n  readonly samlSigningAlgorithms = [\n    \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha384\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha512\",\n  ];\n\n  readonly saml2SigningBehaviourOptions: SelectOptions[] = [\n    {\n      name: \"If IdP Wants Authn Requests Signed\",\n      value: Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned,\n    },\n    { name: \"Always\", value: Saml2SigningBehavior.Always },\n    { name: \"Never\", value: Saml2SigningBehavior.Never },\n  ];\n  readonly saml2BindingTypeOptions: SelectOptions[] = [\n    { name: \"Redirect\", value: Saml2BindingType.HttpRedirect },\n    { name: \"HTTP POST\", value: Saml2BindingType.HttpPost },\n  ];\n  readonly saml2NameIdFormatOptions: SelectOptions[] = [\n    { name: \"Not Configured\", value: Saml2NameIdFormat.NotConfigured },\n    { name: \"Unspecified\", value: Saml2NameIdFormat.Unspecified },\n    { name: \"Email Address\", value: Saml2NameIdFormat.EmailAddress },\n    { name: \"X.509 Subject Name\", value: Saml2NameIdFormat.X509SubjectName },\n    { name: \"Windows Domain Qualified Name\", value: Saml2NameIdFormat.WindowsDomainQualifiedName },\n    { name: \"Kerberos Principal Name\", value: Saml2NameIdFormat.KerberosPrincipalName },\n    { name: \"Entity Identifier\", value: Saml2NameIdFormat.EntityIdentifier },\n    { name: \"Persistent\", value: Saml2NameIdFormat.Persistent },\n    { name: \"Transient\", value: Saml2NameIdFormat.Transient },\n  ];\n\n  readonly connectRedirectOptions: SelectOptions[] = [\n    { name: \"Redirect GET\", value: OpenIdConnectRedirectBehavior.RedirectGet },\n    { name: \"Form POST\", value: OpenIdConnectRedirectBehavior.FormPost },\n  ];\n\n  private destory$ = new Subject<void>();\n\n  showOpenIdCustomizations = false;\n\n  loading = true;\n  haveTestedKeyConnector = false;\n  organizationId: string;\n  organization: Organization;\n  formPromise: Promise<OrganizationSsoResponse>;\n\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  protected enabled = this.formBuilder.control(false);\n\n  protected ssoIdentifier = this.formBuilder.control(\"\", {\n    validators: [Validators.maxLength(50), Validators.required],\n  });\n\n  protected openIdForm = this.formBuilder.group<ControlsOf<SsoConfigView[\"openId\"]>>(\n    {\n      authority: new FormControl(\"\", Validators.required),\n      clientId: new FormControl(\"\", Validators.required),\n      clientSecret: new FormControl(\"\", Validators.required),\n      metadataAddress: new FormControl(),\n      redirectBehavior: new FormControl(\n        OpenIdConnectRedirectBehavior.RedirectGet,\n        Validators.required\n      ),\n      getClaimsFromUserInfoEndpoint: new FormControl(),\n      additionalScopes: new FormControl(),\n      additionalUserIdClaimTypes: new FormControl(),\n      additionalEmailClaimTypes: new FormControl(),\n      additionalNameClaimTypes: new FormControl(),\n      acrValues: new FormControl(),\n      expectedReturnAcrValue: new FormControl(),\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  protected samlForm = this.formBuilder.group<ControlsOf<SsoConfigView[\"saml\"]>>(\n    {\n      spNameIdFormat: new FormControl(Saml2NameIdFormat.NotConfigured),\n      spOutboundSigningAlgorithm: new FormControl(defaultSigningAlgorithm),\n      spSigningBehavior: new FormControl(Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned),\n      spMinIncomingSigningAlgorithm: new FormControl(defaultSigningAlgorithm),\n      spWantAssertionsSigned: new FormControl(),\n      spValidateCertificates: new FormControl(),\n\n      idpEntityId: new FormControl(\"\", Validators.required),\n      idpBindingType: new FormControl(Saml2BindingType.HttpRedirect),\n      idpSingleSignOnServiceUrl: new FormControl(),\n      idpSingleLogoutServiceUrl: new FormControl(),\n      idpX509PublicCert: new FormControl(\"\", Validators.required),\n      idpOutboundSigningAlgorithm: new FormControl(defaultSigningAlgorithm),\n      idpAllowUnsolicitedAuthnResponse: new FormControl(),\n      idpAllowOutboundLogoutRequests: new FormControl(true),\n      idpWantAuthnRequestsSigned: new FormControl(),\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  protected ssoConfigForm = this.formBuilder.group<ControlsOf<SsoConfigView>>({\n    configType: new FormControl(SsoType.None),\n    keyConnectorEnabled: new FormControl(false),\n    keyConnectorUrl: new FormControl(\"\"),\n    openId: this.openIdForm,\n    saml: this.samlForm,\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.ssoConfigForm\n      .get(\"configType\")\n      .valueChanges.pipe(takeUntil(this.destory$))\n      .subscribe((newType: SsoType) => {\n        if (newType === SsoType.OpenIdConnect) {\n          this.openIdForm.enable();\n          this.samlForm.disable();\n        } else if (newType === SsoType.Saml2) {\n          this.openIdForm.disable();\n          this.samlForm.enable();\n        } else {\n          this.openIdForm.disable();\n          this.samlForm.disable();\n        }\n      });\n\n    this.samlForm\n      .get(\"spSigningBehavior\")\n      .valueChanges.pipe(takeUntil(this.destory$))\n      .subscribe(() => this.samlForm.get(\"idpX509PublicCert\").updateValueAndValidity());\n\n    this.route.params\n      .pipe(\n        concatMap(async (params) => {\n          this.organizationId = params.organizationId;\n          await this.load();\n        }),\n        takeUntil(this.destory$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destory$.next();\n    this.destory$.complete();\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    const ssoSettings = await this.organizationApiService.getSso(this.organizationId);\n    this.populateForm(ssoSettings);\n\n    this.callbackPath = ssoSettings.urls.callbackPath;\n    this.signedOutCallbackPath = ssoSettings.urls.signedOutCallbackPath;\n    this.spEntityId = ssoSettings.urls.spEntityId;\n    this.spMetadataUrl = ssoSettings.urls.spMetadataUrl;\n    this.spAcsUrl = ssoSettings.urls.spAcsUrl;\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.validateForm(this.ssoConfigForm);\n\n    if (this.ssoConfigForm.value.keyConnectorEnabled) {\n      this.haveTestedKeyConnector = false;\n      await this.validateKeyConnectorUrl();\n    }\n\n    if (!this.ssoConfigForm.valid) {\n      this.readOutErrors();\n      return;\n    }\n\n    const request = new OrganizationSsoRequest();\n    request.enabled = this.enabled.value;\n    request.identifier = this.ssoIdentifier.value;\n    request.data = SsoConfigApi.fromView(this.ssoConfigForm.getRawValue());\n\n    this.formPromise = this.organizationApiService.updateSso(this.organizationId, request);\n\n    try {\n      const response = await this.formPromise;\n      this.populateForm(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"ssoSettingsSaved\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  async validateKeyConnectorUrl() {\n    if (this.haveTestedKeyConnector) {\n      return;\n    }\n\n    this.keyConnectorUrl.markAsPending();\n\n    try {\n      await this.apiService.getKeyConnectorAlive(this.keyConnectorUrl.value);\n      this.keyConnectorUrl.updateValueAndValidity();\n    } catch {\n      this.keyConnectorUrl.setErrors({\n        invalidUrl: { message: this.i18nService.t(\"keyConnectorTestFail\") },\n      });\n    }\n\n    this.haveTestedKeyConnector = true;\n  }\n\n  toggleOpenIdCustomizations() {\n    this.showOpenIdCustomizations = !this.showOpenIdCustomizations;\n  }\n\n  getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n\n  get enableTestKeyConnector() {\n    return (\n      this.ssoConfigForm.get(\"keyConnectorEnabled\").value &&\n      !Utils.isNullOrWhitespace(this.keyConnectorUrl?.value)\n    );\n  }\n\n  get keyConnectorUrl() {\n    return this.ssoConfigForm.get(\"keyConnectorUrl\");\n  }\n\n  get samlSigningAlgorithmOptions(): SelectOptions[] {\n    return this.samlSigningAlgorithms.map((algorithm) => ({ name: algorithm, value: algorithm }));\n  }\n\n  private validateForm(form: UntypedFormGroup) {\n    Object.values(form.controls).forEach((control: AbstractControl) => {\n      if (control.disabled) {\n        return;\n      }\n\n      if (control instanceof UntypedFormGroup) {\n        this.validateForm(control);\n      } else {\n        control.markAsDirty();\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  private populateForm(ssoSettings: OrganizationSsoResponse) {\n    this.enabled.setValue(ssoSettings.enabled);\n    this.ssoIdentifier.setValue(ssoSettings.identifier);\n    if (ssoSettings.data != null) {\n      const ssoConfigView = new SsoConfigView(ssoSettings.data);\n      this.ssoConfigForm.patchValue(ssoConfigView);\n    }\n  }\n\n  private readOutErrors() {\n    const errorText = this.i18nService.t(\"error\");\n    const errorCount = this.getErrorCount(this.ssoConfigForm);\n    const errorCountText = this.i18nService.t(\n      errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\",\n      errorCount.toString()\n    );\n\n    const div = document.createElement(\"div\");\n    div.className = \"sr-only\";\n    div.id = \"srErrorCount\";\n    div.setAttribute(\"aria-live\", \"polite\");\n    div.innerText = errorText + \": \" + errorCountText;\n\n    const existing = document.getElementById(\"srErrorCount\");\n    if (existing != null) {\n      existing.remove();\n    }\n\n    document.body.append(div);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { canAccessSettingsTab } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationPermissionsGuard } from \"@bitwarden/web-vault/app/organizations/guards/org-permissions.guard\";\nimport { OrganizationLayoutComponent } from \"@bitwarden/web-vault/app/organizations/layouts/organization-layout.component\";\nimport { SettingsComponent } from \"@bitwarden/web-vault/app/organizations/settings/settings.component\";\n\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\n\nconst routes: Routes = [\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    children: [\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessSettingsTab,\n        },\n        children: [\n          {\n            path: \"sso\",\n            component: SsoComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageSso,\n            },\n          },\n          {\n            path: \"scim\",\n            component: ScimComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageScim,\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"@bitwarden/web-vault/app/shared/shared.module\";\n\nimport { InputCheckboxComponent } from \"./components/input-checkbox.component\";\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\nimport { OrganizationsRoutingModule } from \"./organizations-routing.module\";\n\n@NgModule({\n  imports: [SharedModule, OrganizationsRoutingModule],\n  declarations: [InputCheckboxComponent, SsoComponent, ScimComponent],\n})\nexport class OrganizationsModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { CoreModule } from \"@bitwarden/web-vault/app/core\";\nimport { OssRoutingModule } from \"@bitwarden/web-vault/app/oss-routing.module\";\nimport { OssModule } from \"@bitwarden/web-vault/app/oss.module\";\nimport { WildcardRoutingModule } from \"@bitwarden/web-vault/app/wildcard-routing.module\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { OrganizationsModule } from \"./organizations/organizations.module\";\nimport { DisablePersonalVaultExportPolicyComponent } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicyComponent } from \"./policies/maximum-vault-timeout.component\";\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    OssModule,\n    JslibModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    InfiniteScrollModule,\n    DragDropModule,\n    AppRoutingModule,\n    OssRoutingModule,\n    OrganizationsModule, // Must be after OssRoutingModule for competing routes to resolve properly\n    RouterModule,\n    WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n  ],\n  declarations: [\n    AppComponent,\n    DisablePersonalVaultExportPolicyComponent,\n    MaximumVaultTimeoutPolicyComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport \"bootstrap\";\nimport \"jquery\";\nimport \"popper.js\";\n\nrequire(\"@bitwarden/web-vault/scss/styles.scss\");\nrequire(\"@bitwarden/web-vault/scss/tailwind.css\");\n\nimport { AppModule } from \"./app/app.module\";\n\nif (process.env.NODE_ENV === \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n  Mir: \"card-mir\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Mir: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 17, blocks: [5, 4, 4, 4] },\n    { cardLength: 18, blocks: [6, 4, 4, 4] },\n    { cardLength: 19, blocks: [7, 4, 4, 4] },\n  ],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { CopyClickDirective } from \"./directives/copy-click.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { LaunchClickDirective } from \"./directives/launch-click.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\nimport { PasswordStrengthComponent } from \"./shared/components/password-strength/password-strength.component\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BitwardenToastModule,\n    BoxRowDirective,\n    CalloutComponent,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string | number, p2?: string | number, p3?: string | number): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { InjectionToken } from \"@angular/core\";\n\nimport {\n  AbstractMemoryStorageService,\n  AbstractStorageService,\n} from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractMemoryStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals?: boolean;\n  replaceTopModal?: boolean;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  /**\n   * @deprecated Use `dialogService.open` (in web) or `modalService.open` (in desktop/browser) instead.\n   * If replacing an existing call to this method, also remove any `@ViewChild` and `<ng-template>` associated with the\n   * existing usage.\n   */\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config: ModalConfig = {}) {\n    const { replaceTopModal = false, allowMultipleModals = false } = config;\n\n    if (this.modalCount > 0 && replaceTopModal) {\n      this.topModal.instance.close();\n    }\n\n    if (this.modalCount > 0 && !allowMultipleModals) {\n      return;\n    }\n\n    const [modalRef] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  closeAll(): void {\n    this.modalList.forEach((modal) => modal.instance.close());\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","import { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { firstValueFrom, from, mergeMap, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport {\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  async buildOrganizations(): Promise<Organization[]> {\n    let organizations = await this.organizationService.getAll();\n    if (organizations != null) {\n      organizations = organizations\n        .filter(isNotProviderUser)\n        .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    return organizations;\n  }\n\n  buildNestedFolders(organizationId?: string): Observable<DynamicTreeNode<FolderView>> {\n    const transformation = async (storedFolders: FolderView[]) => {\n      let folders: FolderView[];\n      if (organizationId != null) {\n        const ciphers = await this.cipherService.getAllDecrypted();\n        const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n        folders = storedFolders.filter(\n          (f) =>\n            orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n            ciphers.filter((c) => c.folderId == f.id).length < 1\n        );\n      } else {\n        folders = storedFolders;\n      }\n      const nestedFolders = await this.getAllFoldersNested(folders);\n      return new DynamicTreeNode<FolderView>({\n        fullList: folders,\n        nestedList: nestedFolders,\n      });\n    };\n\n    return this.folderService.folderViews$.pipe(\n      mergeMap((folders) => from(transformation(folders)))\n    );\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await firstValueFrom(\n      this.policyService.policyAppliesToActiveUser$(PolicyType.SingleOrg)\n    );\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await firstValueFrom(\n      this.policyService.policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n    );\n  }\n\n  protected async getAllFoldersNested(folders: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getFolderNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllFoldersNested(\n      await firstValueFrom(this.folderService.folderViews$)\n    );\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n}\n","import { Verification } from \"../../types/verification\";\n\nexport abstract class AccountApiService {\n  abstract deleteAccount(verification: Verification): Promise<void>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { ProfileResponse } from \"../../models/response/profile.response\";\nexport abstract class AvatarUpdateService {\n  avatarUpdate$ = new Observable<string | null>();\n  abstract pushUpdate(color: string): Promise<ProfileResponse | void>;\n  abstract loadColorFromState(): Promise<string | null>;\n}\n","export abstract class AnonymousHubService {\n  createHubConnection: (token: string) => void;\n  stopHubConnection: () => void;\n}\n","import { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { DeviceVerificationRequest } from \"../models/request/device-verification.request\";\nimport { EmailTokenRequest } from \"../models/request/email-token.request\";\nimport { EmailRequest } from \"../models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergency-access-update.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { GroupRequest } from \"../models/request/group.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { UserApiTokenRequest } from \"../models/request/identity-token/user-api-token.request\";\nimport { ImportCiphersRequest } from \"../models/request/import-ciphers.request\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/import-organization-ciphers.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PasswordHintRequest } from \"../models/request/password-hint.request\";\nimport { PasswordRequest } from \"../models/request/password.request\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordless-create-auth.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SecretVerificationRequest } from \"../models/request/secret-verification.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { SetPasswordRequest } from \"../models/request/set-password.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { TwoFactorEmailRequest } from \"../models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/two-factor-recovery.request\";\nimport { UpdateAvatarRequest } from \"../models/request/update-avatar.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { UpdateProfileRequest } from \"../models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/update-two-factor-yubio-otp.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { ApiKeyResponse } from \"../models/response/api-key.response\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../models/response/attachment.response\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\nimport { RegisterResponse } from \"../models/response/authentication/register.response\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DeviceVerificationResponse } from \"../models/response/device-verification.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergency-access.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/group.response\";\nimport { IdentityCaptchaResponse } from \"../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/key-connector-user-key.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { PreloginResponse } from \"../models/response/prelogin.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SsoPreValidateResponse } from \"../models/response/sso-pre-validate.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { SyncResponse } from \"../models/response/sync.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../models/response/two-factor-recover.response\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/two-factor-yubi-key.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\n\n/**\n * @deprecated The `ApiService` class is deprecated and calls should be extracted into individual\n * api services. The `send` method is still allowed to be used within api services. For background\n * of this decision please read https://contributing.bitwarden.com/architecture/adr/refactor-api-service.\n */\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | UserApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putAvatar: (request: UpdateAvatarRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<RegisterResponse>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<void>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postConvertToKeyConnector: () => Promise<void>;\n  //passwordless\n  postAuthRequest: (request: PasswordlessCreateAuthRequest) => Promise<AuthRequestResponse>;\n  getAuthResponse: (id: string, accessCode: string) => Promise<AuthRequestResponse>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putPartialCipher: (id: string, request: CipherPartialRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getSync: () => Promise<SyncResponse>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n  getKnownDevice: (email: string, deviceIdentifier: string) => Promise<boolean>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<void>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n  getOrganizationExport: (organizationId: string) => Promise<OrganizationExportResponse>;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { BreachAccountResponse } from \"../models/response/breach-account.response\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { AuthRequestPushNotification } from \"../models/response/notification.response\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  accessCode: string;\n  authRequestId: string;\n\n  logIn: (\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithUserApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  authingWithPasswordless: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n  authResponsePushNotifiction: (notification: AuthRequestPushNotification) => Promise<any>;\n\n  getPushNotifcationObs$: () => Observable<any>;\n}\n","export interface MessageBase {\n  command: string;\n}\n\nexport abstract class BroadcasterService {\n  send: (message: MessageBase, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: MessageBase) => void) => void;\n  unsubscribe: (id: string) => void;\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  createWithServer: (cipher: Cipher) => Promise<any>;\n  updateWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: CipherView, b: CipherView) => number;\n  sortCiphersByLastUsedThenName: (a: CipherView, b: CipherView) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  getKeyForUserEncryption: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuffer: EncArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { Decryptable } from \"../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../interfaces/initializer-metadata.interface\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class EncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract encryptToBytes: (\n    plainValue: ArrayBuffer,\n    key?: SymmetricCryptoKey\n  ) => Promise<EncArrayBuffer>;\n  abstract decryptToUtf8: (encString: EncString, key: SymmetricCryptoKey) => Promise<string>;\n  abstract decryptToBytes: (encThing: IEncrypted, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  abstract resolveLegacyKey: (key: SymmetricCryptoKey, encThing: IEncrypted) => SymmetricCryptoKey;\n  abstract decryptItems: <T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ) => Promise<T[]>;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n  isCloud: () => boolean;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport abstract class EventCollectionService {\n  collect: (\n    eventType: EventType,\n    cipherId?: string,\n    uploadImmediately?: boolean,\n    organizationId?: string\n  ) => Promise<any>;\n}\n","export abstract class EventUploadService {\n  uploadEvents: (userId?: string) => Promise<void>;\n}\n","import { EventView } from \"../models/view/event.view\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { Folder } from \"../../models/domain/folder\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { FolderView } from \"../../models/view/folder.view\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  getAllFromState: () => Promise<Folder[]>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getFromState: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string | number, p2?: string | number, p3?: string | number) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n}\n","export abstract class LoginService {\n  getEmail: () => string;\n  getRememberEmail: () => boolean;\n  setEmail: (value: string) => void;\n  setRememberEmail: (value: boolean) => void;\n  clearValues: () => void;\n  saveEmailSettings: () => Promise<void>;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { ListResponse } from \"../../models/response/list.response\";\n\nimport {\n  OrganizationUserAcceptRequest,\n  OrganizationUserBulkConfirmRequest,\n  OrganizationUserConfirmRequest,\n  OrganizationUserInviteRequest,\n  OrganizationUserResetPasswordEnrollmentRequest,\n  OrganizationUserResetPasswordRequest,\n  OrganizationUserUpdateGroupsRequest,\n  OrganizationUserUpdateRequest,\n} from \"./requests\";\nimport {\n  OrganizationUserBulkPublicKeyResponse,\n  OrganizationUserBulkResponse,\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"./responses\";\n\n/**\n * Service for interacting with Organization Users via the API\n */\nexport abstract class OrganizationUserService {\n  /**\n   * Retrieve a single organization user by Id\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse>;\n\n  /**\n   * Retrieve a list of groups Ids the specified organization user belongs to\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]>;\n\n  /**\n   * Retrieve a list of all users that belong to the specified organization\n   * @param organizationId - Identifier for the organization\n   */\n  abstract getAllUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n\n  /**\n   * Retrieve reset password details for the specified organization user\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse>;\n\n  /**\n   * Create new organization user invite(s) for the specified organization\n   * @param organizationId - Identifier for the organization\n   * @param request - New user invitation request details\n   */\n  abstract postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<void>;\n\n  /**\n   * Re-invite the specified organization user\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract postOrganizationUserReinvite(organizationId: string, id: string): Promise<any>;\n\n  /**\n   * Re-invite many organization users for the specified organization\n   * @param organizationId - Identifier for the organization\n   * @param ids - A list of organization user identifiers\n   * @return List of user ids, including both those that were successfully re-invited and those that had an error\n   */\n  abstract postManyOrganizationUserReinvite(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Accept an organization user invitation\n   * @param organizationId - Identifier for the organization to accept\n   * @param id - Organization user identifier\n   * @param request - Request details for accepting the invitation\n   */\n  abstract postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<void>;\n\n  /**\n   * Confirm an organization user that has accepted their invitation\n   * @param organizationId - Identifier for the organization to confirm\n   * @param id - Organization user identifier\n   * @param request - Request details for confirming the user\n   */\n  abstract postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<void>;\n\n  /**\n   * Retrieve a list of the specified users' public keys\n   * @param organizationId - Identifier for the organization to accept\n   * @param ids - A list of organization user identifiers to retrieve public keys for\n   */\n  abstract postOrganizationUsersPublicKey(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n\n  /**\n   * Confirm many organization users that have accepted their invitations\n   * @param organizationId - Identifier for the organization to confirm users\n   * @param request - Bulk request details for confirming the user\n   */\n  abstract postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Update an organization users\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param request - Request details for updating the user\n   */\n  abstract putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<void>;\n\n  /**\n   * Update an organization user's groups\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param groupIds - List of group ids to associate the user with\n   */\n  abstract putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    groupIds: OrganizationUserUpdateGroupsRequest\n  ): Promise<void>;\n\n  /**\n   * Update an organization user's reset password enrollment\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param userId - Organization user identifier\n   * @param request - Reset password enrollment details\n   */\n  abstract putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void>;\n\n  /**\n   * Reset an organization user's password\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param request - Reset password details\n   */\n  abstract putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<void>;\n\n  /**\n   * Delete an organization user\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract deleteOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Delete many organization users\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to delete\n   * @return List of user ids, including both those that were successfully deleted and those that had an error\n   */\n  abstract deleteManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Revoke an organization user's access to the organization\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract revokeOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Revoke many organization users' access to the organization\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to revoke\n   * @return List of user ids, including both those that were successfully revoked and those that had an error\n   */\n  abstract revokeManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Restore an organization user's access to the organization\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract restoreOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Restore many organization users' access to the organization\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to restore\n   * @return List of user ids, including both those that were successfully restored and those that had an error\n   */\n  abstract restoreManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organization-sso.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { ApiKeyResponse } from \"../../models/response/api-key.response\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organization-sso.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\n\nexport class OrganizationApiServiceAbstraction {\n  get: (id: string) => Promise<OrganizationResponse>;\n  getBilling: (id: string) => Promise<BillingResponse>;\n  getSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getLicense: (id: string, installationId: string) => Promise<unknown>;\n  getAutoEnrollStatus: (identifier: string) => Promise<OrganizationAutoEnrollStatusResponse>;\n  create: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  createLicense: (data: FormData) => Promise<OrganizationResponse>;\n  save: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n  updatePayment: (id: string, request: PaymentRequest) => Promise<void>;\n  upgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n  updateSubscription: (id: string, request: OrganizationSubscriptionUpdateRequest) => Promise<void>;\n  updateSeats: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  updateStorage: (id: string, request: StorageRequest) => Promise<PaymentResponse>;\n  verifyBank: (id: string, request: VerifyBankRequest) => Promise<void>;\n  cancel: (id: string) => Promise<void>;\n  reinstate: (id: string) => Promise<void>;\n  leave: (id: string) => Promise<void>;\n  delete: (id: string, request: SecretVerificationRequest) => Promise<void>;\n  updateLicense: (id: string, data: FormData) => Promise<void>;\n  importDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<void>;\n  getOrCreateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getApiKeyInformation: (\n    id: string,\n    organizationApiKeyType?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  rotateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  updateTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<void>;\n  getKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  updateKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n  getSso: (id: string) => Promise<OrganizationSsoResponse>;\n  updateSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;\n}\n","import { map, Observable } from \"rxjs\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { I18nService } from \"../i18n.service\";\n\nexport function canAccessVaultTab(org: Organization): boolean {\n  return org.isManager;\n}\n\nexport function canAccessSettingsTab(org: Organization): boolean {\n  return (\n    org.isOwner ||\n    org.canManagePolicies ||\n    org.canManageSso ||\n    org.canManageScim ||\n    org.canAccessImportExport\n  );\n}\n\nexport function canAccessMembersTab(org: Organization): boolean {\n  return org.canManageUsers || org.canManageUsersPassword;\n}\n\nexport function canAccessGroupsTab(org: Organization): boolean {\n  return org.canManageGroups;\n}\n\nexport function canAccessReportingTab(org: Organization): boolean {\n  return org.canAccessReports || org.canAccessEventLogs;\n}\n\nexport function canAccessBillingTab(org: Organization): boolean {\n  return org.canManageBilling;\n}\n\nexport function canManageCollections(org: Organization): boolean {\n  return (\n    org.canCreateNewCollections ||\n    org.canEditAnyCollection ||\n    org.canDeleteAnyCollection ||\n    org.canViewAssignedCollections\n  );\n}\n\nexport function canAccessManageTab(org: Organization): boolean {\n  return canAccessMembersTab(org) || canAccessGroupsTab(org) || canManageCollections(org);\n}\n\nexport function canAccessOrgAdmin(org: Organization): boolean {\n  return (\n    canAccessMembersTab(org) ||\n    canAccessGroupsTab(org) ||\n    canAccessReportingTab(org) ||\n    canAccessBillingTab(org) ||\n    canAccessSettingsTab(org) ||\n    canAccessVaultTab(org) ||\n    canAccessManageTab(org)\n  );\n}\n\nexport function getOrganizationById(id: string) {\n  return map<Organization[], Organization | undefined>((orgs) => orgs.find((o) => o.id === id));\n}\n\nexport function canAccessAdmin(i18nService: I18nService) {\n  return map<Organization[], Organization[]>((orgs) =>\n    orgs.filter(canAccessOrgAdmin).sort(Utils.getSortFunction(i18nService, \"name\"))\n  );\n}\n\nexport function isNotProviderUser(org: Organization): boolean {\n  return !org.isProviderUser;\n}\n\nexport abstract class OrganizationService {\n  organizations$: Observable<Organization[]>;\n\n  get: (id: string) => Organization;\n  getByIdentifier: (identifier: string) => Organization;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the organization\n   */\n  getFromState: (id: string) => Promise<Organization>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: () => boolean;\n}\n\nexport abstract class InternalOrganizationService extends OrganizationService {\n  replace: (organizations: { [id: string]: OrganizationData }) => Promise<void>;\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { PasswordGeneratorOptions } from \"../models/domain/password-generator-options\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/password-generator-policy-options\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: PasswordGeneratorOptions) => Promise<string>;\n  generatePassphrase: (options: PasswordGeneratorOptions) => Promise<string>;\n  getOptions: () => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: PasswordGeneratorOptions\n  ) => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: PasswordGeneratorOptions) => Promise<void>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<void>;\n  clear: (userId?: string) => Promise<void>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) => void;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  getApplicationVersionNumber: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean,\n    target?: string\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiServiceAbstraction {\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport abstract class PolicyService {\n  policies$: Observable<Policy[]>;\n  masterPasswordPolicyOptions$: (policies?: Policy[]) => Observable<MasterPasswordPolicyOptions>;\n  policyAppliesToActiveUser$: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean\n  ) => Observable<boolean>;\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n\nexport abstract class InternalPolicyService extends PolicyService {\n  upsert: (policy: PolicyData) => Promise<any>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<void>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { CipherView } from \"../models/view/cipher.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport abstract class SettingsService {\n  settings$: Observable<AccountSettingsSettings>;\n\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { LocalData } from \"../models/data/local.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport { Account, AccountSettingsSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts$: Observable<{ [userId: string]: T }>;\n  activeAccount$: Observable<string>;\n  activeAccountUnlocked$: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDuckDuckGoSharedKey: (options?: StorageOptions) => Promise<string>;\n  setDuckDuckGoSharedKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableDuckDuckGoBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableDuckDuckGoBrowserIntegration: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<{ [cipherId: string]: LocalData }>;\n  setLocalData: (\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  getSettings: (options?: StorageOptions) => Promise<AccountSettingsSettings>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  setSettings: (value: AccountSettingsSettings, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  getServerConfig: (options?: StorageOptions) => Promise<ServerConfigData>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  setServerConfig: (value: ServerConfigData, options?: StorageOptions) => Promise<void>;\n\n  getAvatarColor: (options?: StorageOptions) => Promise<string | null | undefined>;\n  setAvatarColor: (value: string, options?: StorageOptions) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { MemoryStorageOptions, StorageOptions } from \"../models/domain/storage-options\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n\nexport abstract class AbstractMemoryStorageService extends AbstractStorageService {\n  // Used to identify the service in the session sync decorator framework\n  static readonly TYPE = \"MemoryStorageService\";\n  readonly type = AbstractMemoryStorageService.TYPE;\n\n  abstract get<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n  abstract getBypassCache<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notification.response\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { Verification } from \"../../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","export abstract class ValidationService {\n  showError: (data: any) => string[];\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n}\n","export abstract class VaultTimeoutSettingsService {\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: (userId?: string) => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  UserApi = 2,\n  Passwordless = 3,\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","export enum OrganizationApiKeyType {\n  Default = 0,\n  BillingSync = 1,\n  Scim = 2,\n}\n","export enum OrganizationConnectionType {\n  CloudBillingSync = 1,\n  Scim = 2,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1,\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","export enum PaymentMethodType {\n  Card = 0,\n  BankAccount = 1,\n  PayPal = 2,\n  BitPay = 3,\n  Credit = 4,\n  WireTransfer = 5,\n  AppleInApp = 6,\n  GoogleInApp = 7,\n  Check = 8,\n}\n","export enum PlanType {\n  Free = 0,\n  FamiliesAnnually2019 = 1,\n  TeamsMonthly2019 = 2,\n  TeamsAnnually2019 = 3,\n  EnterpriseMonthly2019 = 4,\n  EnterpriseAnnually2019 = 5,\n  Custom = 6,\n  FamiliesAnnually = 7,\n  TeamsMonthly = 8,\n  TeamsAnnually = 9,\n  EnterpriseMonthly = 10,\n  EnterpriseAnnually = 11,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedFlags = {\n  multithreadDecryption: boolean;\n};\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedDevFlags = {};\n\nfunction getFlags<T>(envFlags: string | T): T {\n  if (typeof envFlags === \"string\") {\n    return JSON.parse(envFlags) as T;\n  } else {\n    return envFlags as T;\n  }\n}\n\n/**\n * Gets the value of a feature flag from environment.\n * All flags default to \"on\" (true).\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the feature flag to check\n * @returns The value of the flag\n */\nexport function flagEnabled<Flags extends SharedFlags>(flag: keyof Flags): boolean {\n  const flags = getFlags<Flags>(process.env.FLAGS);\n  return flags[flag] == null || !!flags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n */\nexport function devFlagEnabled<DevFlags extends SharedDevFlags>(flag: keyof DevFlags): boolean {\n  if (process.env.ENV !== \"development\") {\n    return false;\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag] == null || !!devFlags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n * @throws Error if the flag is not enabled\n */\nexport function devFlagValue<DevFlags extends SharedDevFlags>(\n  flag: keyof DevFlags\n): DevFlags[keyof DevFlags] {\n  if (!devFlagEnabled(flag)) {\n    throw new Error(`This method should not be called, it is protected by a disabled dev flag.`);\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag];\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/item.view\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/tree-node\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","/* eslint-disable no-useless-escape */\nimport { getHostname, parse } from \"tldts\";\nimport { Merge } from \"type-fest\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n  getEncryptService: () => EncryptService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n  static readonly validHosts: string[] = [\"localhost\"];\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (buffer == null) {\n      return null;\n    }\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"file:\")) {\n      return null;\n    }\n\n    // Does uriString contain invalid characters\n    // TODO Needs to possibly be extended, although '!' is a reserved character\n    if (uriString.indexOf(\"!\") > 0) {\n      return null;\n    }\n\n    try {\n      const hostname = getHostname(uriString, { validHosts: this.validHosts });\n      if (hostname != null) {\n        return hostname;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    try {\n      const parseResult = parse(uriString, { validHosts: this.validHosts });\n      if (parseResult != null && parseResult.hostname != null) {\n        if (parseResult.hostname === \"localhost\" || parseResult.isIp) {\n          return parseResult.hostname;\n        }\n\n        if (parseResult.domain != null) {\n          return parseResult.domain;\n        }\n        return null;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction<T>(\n    i18nService: I18nService,\n    prop: { [K in keyof T]: T[K] extends string ? K : never }[keyof T]\n  ): (a: T, b: T) => number {\n    return (a, b) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      // The `as unknown as string` here is unfortunate because typescript doesn't property understand that the return of T[prop] will be a string\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop] as unknown as string, b[prop] as unknown as string)\n        : (a[prop] as unknown as string).localeCompare(b[prop] as unknown as string);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static isPromise(obj: any): obj is Promise<unknown> {\n    return (\n      obj != undefined && typeof obj[\"then\"] === \"function\" && typeof obj[\"catch\"] === \"function\"\n    );\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (this.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n   * https://stackoverflow.com/a/3943023/6869691\n   *\n   * @param {string} bgColor\n   * @param {number} [threshold] see stackoverflow link above\n   * @param {boolean} [svgTextFill]\n   * Indicates if this method is performed on an SVG <text> 'fill' attribute (e.g. <text fill=\"black\"></text>).\n   * This check is necessary because the '!important' tag cannot be used in a 'fill' attribute.\n   */\n  static pickTextColorBasedOnBgColor(bgColor: string, threshold = 186, svgTextFill = false) {\n    const bgColorHexNums = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(bgColorHexNums.substring(0, 2), 16); // hexToR\n    const g = parseInt(bgColorHexNums.substring(2, 4), 16); // hexToG\n    const b = parseInt(bgColorHexNums.substring(4, 6), 16); // hexToB\n    const blackColor = svgTextFill ? \"black\" : \"black !important\";\n    const whiteColor = svgTextFill ? \"white\" : \"white !important\";\n    return r * 0.299 + g * 0.587 + b * 0.114 > threshold ? blackColor : whiteColor;\n  }\n\n  static stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  /**\n   * @throws Will throw an error if the ContainerService has not been attached to the window object\n   */\n  static getContainerService(): BitwardenContainerService {\n    if (this.global.bitwardenContainerService == null) {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n    return this.global.bitwardenContainerService;\n  }\n\n  static validateHexColor(color: string) {\n    return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(color);\n  }\n\n  /**\n   * Converts map to a Record<string, V> with the same data. Inverse of recordToMap\n   * Useful in toJSON methods, since Maps are not serializable\n   * @param map\n   * @returns\n   */\n  static mapToRecord<K extends string | number, V>(map: Map<K, V>): Record<string, V> {\n    if (map == null) {\n      return null;\n    }\n    if (!(map instanceof Map)) {\n      return map;\n    }\n    return Object.fromEntries(map);\n  }\n\n  /**\n   * Converts record to a Map<string, V> with the same data. Inverse of mapToRecord\n   * Useful in fromJSON methods, since Maps are not serializable\n   *\n   * Warning: If the record has string keys that are numbers, they will be converted to numbers in the map\n   * @param record\n   * @returns\n   */\n  static recordToMap<K extends string | number, V>(record: Record<K, V>): Map<K, V> {\n    if (record == null) {\n      return null;\n    } else if (record instanceof Map) {\n      return record;\n    }\n\n    const entries = Object.entries(record);\n    if (entries.length === 0) {\n      return new Map();\n    }\n\n    if (isNaN(Number(entries[0][0]))) {\n      return new Map(entries) as Map<K, V>;\n    } else {\n      return new Map(entries.map((e) => [Number(e[0]), e[1]])) as Map<K, V>;\n    }\n  }\n\n  /** Applies Object.assign, but converts the type nicely using Type-Fest Merge<Destination, Source> */\n  static merge<Destination, Source>(\n    destination: Destination,\n    source: Source\n  ): Merge<Destination, Source> {\n    return Object.assign(destination, source) as unknown as Merge<Destination, Source>;\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (typeof window !== \"undefined\") {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nimport { LoginUriApi } from \"./login-uri.api\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/base.response\";\nimport { SsoConfigView } from \"../view/sso-config.view\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: string;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { AttachmentResponse } from \"../response/attachment.response\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/card.api\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipher.response\";\n\nimport { AttachmentData } from \"./attachment.data\";\nimport { CardData } from \"./card.data\";\nimport { FieldData } from \"./field.data\";\nimport { IdentityData } from \"./identity.data\";\nimport { LoginData } from \"./login.data\";\nimport { PasswordHistoryData } from \"./password-history.data\";\nimport { SecureNoteData } from \"./secure-note.data\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.creationDate = response.creationDate;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collection.response\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/field.api\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { FolderResponse } from \"../response/folder.response\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { IdentityApi } from \"../api/identity.api\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/login-uri.api\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/login.api\";\n\nimport { LoginUriData } from \"./login-uri.data\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/password-history.response\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policy.response\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profile-provider.response\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { SendFileApi } from \"../api/send-file.api\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/send-text.api\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/send.response\";\n\nimport { SendFileData } from \"./send-file.data\";\nimport { SendTextData } from \"./send-text.data\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport {\n  ServerConfigResponse,\n  ThirdPartyServerConfigResponse,\n  EnvironmentServerConfigResponse,\n} from \"../response/server-config.response\";\n\nexport class ServerConfigData {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: string;\n\n  constructor(serverConfigResponse: Partial<ServerConfigResponse>) {\n    this.version = serverConfigResponse?.version;\n    this.gitHash = serverConfigResponse?.gitHash;\n    this.server = serverConfigResponse?.server\n      ? new ThirdPartyServerConfigData(serverConfigResponse.server)\n      : null;\n    this.utcDate = new Date().toISOString();\n    this.environment = serverConfigResponse?.environment\n      ? new EnvironmentServerConfigData(serverConfigResponse.environment)\n      : null;\n  }\n\n  static fromJSON(obj: Jsonify<ServerConfigData>): ServerConfigData {\n    return Object.assign(new ServerConfigData({}), obj, {\n      server: obj?.server ? ThirdPartyServerConfigData.fromJSON(obj.server) : null,\n      environment: obj?.environment ? EnvironmentServerConfigData.fromJSON(obj.environment) : null,\n    });\n  }\n}\n\nexport class ThirdPartyServerConfigData {\n  name: string;\n  url: string;\n\n  constructor(response: Partial<ThirdPartyServerConfigResponse>) {\n    this.name = response.name;\n    this.url = response.url;\n  }\n\n  static fromJSON(obj: Jsonify<ThirdPartyServerConfigData>): ThirdPartyServerConfigData {\n    return Object.assign(new ThirdPartyServerConfigData({}), obj);\n  }\n}\n\nexport class EnvironmentServerConfigData {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(response: Partial<EnvironmentServerConfigResponse>) {\n    this.vault = response.vault;\n    this.api = response.api;\n    this.identity = response.identity;\n    this.notifications = response.notifications;\n    this.sso = response.sso;\n  }\n\n  static fromJSON(obj: Jsonify<EnvironmentServerConfigData>): EnvironmentServerConfigData {\n    return Object.assign(new EnvironmentServerConfigData({}), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { CollectionData } from \"../data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\nimport { EventData } from \"../data/event.data\";\nimport { FolderData } from \"../data/folder.data\";\nimport { OrganizationData } from \"../data/organization.data\";\nimport { PolicyData } from \"../data/policy.data\";\nimport { ProviderData } from \"../data/provider.data\";\nimport { SendData } from \"../data/send.data\";\nimport { ServerConfigData } from \"../data/server-config.data\";\nimport { CipherView } from \"../view/cipher.view\";\nimport { CollectionView } from \"../view/collection.view\";\nimport { SendView } from \"../view/send.view\";\n\nimport { EncString } from \"./enc-string\";\nimport { EnvironmentUrls } from \"./environment-urls\";\nimport { GeneratedPasswordHistory } from \"./generated-password-history\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n\n  toJSON() {\n    return {\n      encrypted: this.encrypted,\n      decrypted:\n        this.decrypted instanceof ArrayBuffer\n          ? Utils.fromBufferToByteString(this.decrypted)\n          : this.decrypted,\n    };\n  }\n\n  static fromJSON<TEncrypted, TDecrypted>(\n    obj: { encrypted?: Jsonify<TEncrypted>; decrypted?: string | Jsonify<TDecrypted> },\n    decryptedFromJson?: (decObj: Jsonify<TDecrypted> | string) => TDecrypted,\n    encryptedFromJson?: (encObj: Jsonify<TEncrypted>) => TEncrypted\n  ) {\n    if (obj == null) {\n      return null;\n    }\n\n    const pair = new EncryptionPair<TEncrypted, TDecrypted>();\n    if (obj?.encrypted != null) {\n      pair.encrypted = encryptedFromJson\n        ? encryptedFromJson(obj.encrypted)\n        : (obj.encrypted as TEncrypted);\n    }\n    if (obj?.decrypted != null) {\n      pair.decrypted = decryptedFromJson\n        ? decryptedFromJson(obj.decrypted)\n        : (obj.decrypted as TDecrypted);\n    }\n    return pair;\n  }\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Record<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Record<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n\n  toJSON() {\n    return Utils.merge(this, {\n      publicKey: Utils.fromBufferToByteString(this.publicKey),\n    });\n  }\n\n  static fromJSON(obj: DeepJsonify<AccountKeys>): AccountKeys {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(\n      new AccountKeys(),\n      { cryptoMasterKey: SymmetricCryptoKey.fromJSON(obj?.cryptoMasterKey) },\n      {\n        cryptoSymmetricKey: EncryptionPair.fromJSON(\n          obj?.cryptoSymmetricKey,\n          SymmetricCryptoKey.fromJSON\n        ),\n      },\n      { organizationKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.organizationKeys) },\n      { providerKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.providerKeys) },\n      {\n        privateKey: EncryptionPair.fromJSON<string, ArrayBuffer>(\n          obj?.privateKey,\n          (decObj: string) => Utils.fromByteStringToArray(decObj).buffer\n        ),\n      },\n      {\n        publicKey: Utils.fromByteStringToArray(obj?.publicKey)?.buffer,\n      }\n    );\n  }\n\n  static initRecordEncryptionPairsFromJSON(obj: any) {\n    return EncryptionPair.fromJSON(obj, (decObj: any) => {\n      if (obj == null) {\n        return null;\n      }\n\n      const record: Record<string, SymmetricCryptoKey> = {};\n      for (const id in decObj) {\n        record[id] = SymmetricCryptoKey.fromJSON(decObj[id]);\n      }\n      return record;\n    });\n  }\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  name?: string;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n\n  static fromJSON(obj: Jsonify<AccountProfile>): AccountProfile {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountProfile(), obj);\n  }\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: AccountSettingsSettings; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n  serverConfig?: ServerConfigData;\n  avatarColor?: string;\n\n  static fromJSON(obj: Jsonify<AccountSettings>): AccountSettings {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountSettings(), obj, {\n      environmentUrls: EnvironmentUrls.fromJSON(obj?.environmentUrls),\n      pinProtected: EncryptionPair.fromJSON<string, EncString>(\n        obj?.pinProtected,\n        EncString.fromJSON\n      ),\n      serverConfig: ServerConfigData.fromJSON(obj?.serverConfig),\n    });\n  }\n}\n\nexport type AccountSettingsSettings = {\n  equivalentDomains?: string[][];\n};\n\nexport class AccountTokens {\n  accessToken?: string;\n  refreshToken?: string;\n  securityStamp?: string;\n\n  static fromJSON(obj: Jsonify<AccountTokens>): AccountTokens {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountTokens(), obj);\n  }\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n\n  static fromJSON(json: Jsonify<Account>): Account {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Account({}), json, {\n      keys: AccountKeys.fromJSON(json?.keys),\n      profile: AccountProfile.fromJSON(json?.profile),\n      settings: AccountSettings.fromJSON(json?.settings),\n      tokens: AccountTokens.fromJSON(json?.tokens),\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachment.data\";\nimport { AttachmentView } from \"../view/attachment.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      view.key = await this.decryptAttachmentKey(orgId, encKey);\n    }\n\n    return view;\n  }\n\n  private async decryptAttachmentKey(orgId: string, encKey?: SymmetricCryptoKey) {\n    try {\n      if (encKey == null) {\n        encKey = await this.getKeyForDecryption(orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      const decValue = await encryptService.decryptToBytes(this.key, encKey);\n      return new SymmetricCryptoKey(decValue);\n    } catch (e) {\n      // TODO: error?\n    }\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Attachment>>): Attachment {\n    if (obj == null) {\n      return null;\n    }\n\n    const key = EncString.fromJSON(obj.key);\n    const fileName = EncString.fromJSON(obj.fileName);\n\n    return Object.assign(new Attachment(), obj, {\n      key,\n      fileName,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardData } from \"../data/card.data\";\nimport { CardView } from \"../view/card.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Card>>): Card {\n    if (obj == null) {\n      return null;\n    }\n\n    const cardholderName = EncString.fromJSON(obj.cardholderName);\n    const brand = EncString.fromJSON(obj.brand);\n    const number = EncString.fromJSON(obj.number);\n    const expMonth = EncString.fromJSON(obj.expMonth);\n    const expYear = EncString.fromJSON(obj.expYear);\n    const code = EncString.fromJSON(obj.code);\n    return Object.assign(new Card(), obj, {\n      cardholderName,\n      brand,\n      number,\n      expMonth,\n      expYear,\n      code,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerKey } from \"../../services/cryptography/initializer-key\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { LocalData } from \"../data/local.data\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secure-note\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Cipher extends Domain implements Decryptable<CipherView> {\n  readonly initializerKey = InitializerKey.Cipher;\n\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: LocalData;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  creationDate: Date;\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: LocalData = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.creationDate = this.creationDate != null ? this.creationDate.toISOString() : null;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n\n  static fromJSON(obj: Jsonify<Cipher>) {\n    if (obj == null) {\n      return null;\n    }\n\n    const domain = new Cipher();\n    const name = EncString.fromJSON(obj.name);\n    const notes = EncString.fromJSON(obj.notes);\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => Attachment.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => Field.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => Password.fromJSON(ph));\n\n    Object.assign(domain, obj, {\n      name,\n      notes,\n      revisionDate,\n      deletedDate,\n      attachments,\n      fields,\n      passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        domain.card = Card.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        domain.login = Login.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return domain;\n  }\n}\n","import { CollectionData } from \"../data/collection.data\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    if (obj == null) {\n      return null;\n    }\n\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = encType + \".\" + iv + \"|\" + data;\n    } else {\n      this.encryptedString = encType + \".\" + data;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString += \"|\" + mac;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    try {\n      if (key == null) {\n        key = await this.getKeyForDecryption(orgId);\n      }\n      if (key == null) {\n        throw new Error(\"No key to decrypt EncString with orgId \" + orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      this.decryptedValue = await encryptService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nexport class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n\n  static fromJSON(obj: Jsonify<EnvironmentUrls>): EnvironmentUrls {\n    return Object.assign(new EnvironmentUrls(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/field.data\";\nimport { FieldView } from \"../view/field.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Field>>): Field {\n    if (obj == null) {\n      return null;\n    }\n\n    const name = EncString.fromJSON(obj.name);\n    const value = EncString.fromJSON(obj.value);\n\n    return Object.assign(new Field(), obj, {\n      name,\n      value,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FolderData } from \"../data/folder.data\";\nimport { FolderView } from \"../view/folder.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n\n  static fromJSON(obj: Jsonify<Folder>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new Folder(), obj, { name: EncString.fromJSON(obj.name), revisionDate });\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityData } from \"../data/identity.data\";\nimport { IdentityView } from \"../view/identity.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n\n  static fromJSON(obj: Jsonify<Identity>): Identity {\n    if (obj == null) {\n      return null;\n    }\n\n    const title = EncString.fromJSON(obj.title);\n    const firstName = EncString.fromJSON(obj.firstName);\n    const middleName = EncString.fromJSON(obj.middleName);\n    const lastName = EncString.fromJSON(obj.lastName);\n    const address1 = EncString.fromJSON(obj.address1);\n    const address2 = EncString.fromJSON(obj.address2);\n    const address3 = EncString.fromJSON(obj.address3);\n    const city = EncString.fromJSON(obj.city);\n    const state = EncString.fromJSON(obj.state);\n    const postalCode = EncString.fromJSON(obj.postalCode);\n    const country = EncString.fromJSON(obj.country);\n    const company = EncString.fromJSON(obj.company);\n    const email = EncString.fromJSON(obj.email);\n    const phone = EncString.fromJSON(obj.phone);\n    const ssn = EncString.fromJSON(obj.ssn);\n    const username = EncString.fromJSON(obj.username);\n    const passportNumber = EncString.fromJSON(obj.passportNumber);\n    const licenseNumber = EncString.fromJSON(obj.licenseNumber);\n\n    return Object.assign(new Identity(), obj, {\n      title,\n      firstName,\n      middleName,\n      lastName,\n      address1,\n      address2,\n      address3,\n      city,\n      state,\n      postalCode,\n      country,\n      company,\n      email,\n      phone,\n      ssn,\n      username,\n      passportNumber,\n      licenseNumber,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/login-uri.data\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n\n  static fromJSON(obj: Jsonify<LoginUri>): LoginUri {\n    if (obj == null) {\n      return null;\n    }\n\n    const uri = EncString.fromJSON(obj.uri);\n    return Object.assign(new LoginUri(), obj, {\n      uri,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginData } from \"../data/login.data\";\nimport { LoginView } from \"../view/login.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { LoginUri } from \"./login-uri\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Login>>): Login {\n    if (obj == null) {\n      return null;\n    }\n\n    const username = EncString.fromJSON(obj.username);\n    const password = EncString.fromJSON(obj.password);\n    const totp = EncString.fromJSON(obj.totp);\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUri.fromJSON(uri));\n\n    return Object.assign(new Login(), obj, {\n      username,\n      password,\n      totp,\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { OrganizationData } from \"../data/organization.data\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useCustomPermissions = obj.useCustomPermissions;\n    this.useResetPassword = obj.useResetPassword;\n    this.useSecretsManager = obj.useSecretsManager;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return (this.isAdmin || this.permissions.accessEventLogs) && this.useEvents;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return (this.isAdmin || this.permissions.manageGroups) && this.useGroups;\n  }\n\n  get canManageSso() {\n    return (this.isAdmin || this.permissions.manageSso) && this.useSso;\n  }\n\n  get canManageScim() {\n    return (this.isAdmin || this.permissions.manageScim) && this.useScim;\n  }\n\n  get canManagePolicies() {\n    return (this.isAdmin || this.permissions.managePolicies) && this.usePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n\n  get canAccessSecretsManager() {\n    return this.useSecretsManager;\n  }\n\n  static fromJSON(json: Jsonify<Organization>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Organization(), json, {\n      familySponsorshipLastSyncDate: new Date(json.familySponsorshipLastSyncDate),\n      familySponsorshipValidUntil: new Date(json.familySponsorshipValidUntil),\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { PasswordHistoryData } from \"../data/password-history.data\";\nimport { PasswordHistoryView } from \"../view/password-history.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Password>>): Password {\n    if (obj == null) {\n      return null;\n    }\n\n    const password = EncString.fromJSON(obj.password);\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new Password(), obj, {\n      password,\n      lastUsedDate,\n    });\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policy.data\";\n\nimport Domain from \"./domain-base\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secure-note.data\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nimport Domain from \"./domain-base\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n\n  static fromJSON(obj: Jsonify<SecureNote>): SecureNote {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new SecureNote(), obj);\n  }\n}\n","import { SendFileData } from \"../data/send-file.data\";\nimport { SendFileView } from \"../view/send-file.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/send-text.data\";\nimport { SendTextView } from \"../view/send-text.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n  zoomFactor?: number;\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CardView } from \"../view/card.view\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/enc-string\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/field.view\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identity.view\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/enc-string\";\nimport { LoginUri as LoginUriDomain } from \"../domain/login-uri\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/login.view\";\n\nimport { LoginUriExport } from \"./login-uri.export\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secure-note\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { CardExport } from \"./card.export\";\nimport { FieldExport } from \"./field.export\";\nimport { IdentityExport } from \"./identity.export\";\nimport { LoginExport } from \"./login.export\";\nimport { SecureNoteExport } from \"./secure-note.export\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { CipherExport } from \"./cipher.export\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CollectionView } from \"../view/collection.view\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport { CollectionExport } from \"./collection.export\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folder.view\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folder.view\";\n\nimport { FolderExport } from \"./folder.export\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/card.api\";\nimport { FieldApi } from \"../api/field.api\";\nimport { IdentityApi } from \"../api/identity.api\";\nimport { LoginUriApi } from \"../api/login-uri.api\";\nimport { LoginApi } from \"../api/login.api\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachment.request\";\nimport { PasswordHistoryRequest } from \"./password-history.request\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Collection } from \"../domain/collection\";\n\nimport { SelectionReadOnlyRequest } from \"./selection-read-only.request\";\n\nexport class CollectionRequest {\n  name: string;\n  externalId: string;\n  groups: SelectionReadOnlyRequest[] = [];\n\n  constructor(collection?: Collection) {\n    if (collection == null) {\n      return;\n    }\n    this.name = collection.name ? collection.name.encryptedString : null;\n    this.externalId = collection.externalId;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenTwoFactorRequest {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class OrganizationApiKeyRequest extends SecretVerificationRequest {\n  type: OrganizationApiKeyType = OrganizationApiKeyType.Default;\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\n\nimport { BillingSyncConfigRequest } from \"./billing-sync-config.request\";\nimport { ScimConfigRequest } from \"./scim-config.request\";\n\n/**API request config types for OrganizationConnectionRequest */\nexport type OrganizationConnectionRequestConfigs = BillingSyncConfigRequest | ScimConfigRequest;\n\nexport class OrganizationConnectionRequest {\n  constructor(\n    public organizationId: string,\n    public type: OrganizationConnectionType,\n    public enabled: boolean,\n    public config: OrganizationConnectionRequestConfigs\n  ) {}\n}\n","import { KeysRequest } from \"./keys.request\";\n\nexport class OrganizationKeysRequest extends KeysRequest {\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    super(publicKey, encryptedPrivateKey);\n  }\n}\n","import { TaxInfoUpdateRequest } from \"./tax-info-update.request\";\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n  taxId: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n  authRequestAccessCode: string;\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export class TaxInfoUpdateRequest {\n  country: string;\n  postalCode: string;\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n  authRequestId: string;\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/card.api\";\nimport { FieldApi } from \"../api/field.api\";\nimport { IdentityApi } from \"../api/identity.api\";\nimport { LoginApi } from \"../api/login.api\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\n\nimport { AttachmentResponse } from \"./attachment.response\";\nimport { BaseResponse } from \"./base.response\";\nimport { PasswordHistoryResponse } from \"./password-history.response\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (status === 429) {\n      this.message = \"Rate limit exceeded. Try again later.\";\n    } else if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetric-crypto-key\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { InitializerKey } from \"../../services/cryptography/initializer-key\";\nimport { LocalData } from \"../data/local.data\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachment.view\";\nimport { CardView } from \"./card.view\";\nimport { FieldView } from \"./field.view\";\nimport { IdentityView } from \"./identity.view\";\nimport { LoginView } from \"./login.view\";\nimport { PasswordHistoryView } from \"./password-history.view\";\nimport { SecureNoteView } from \"./secure-note.view\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View, InitializerMetadata {\n  readonly initializerKey = InitializerKey.CipherView;\n\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: LocalData;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  creationDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.creationDate = c.creationDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/tree-node\";\nimport { CollectionGroupDetailsResponse } from \"../response/collection.response\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/tree-node\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n\n  static fromJSON(obj: Jsonify<FolderView>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new FolderView(), obj, { revisionDate });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/login-uri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./item.view\";\nimport { LoginUriView } from \"./login-uri.view\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secure-note\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","import { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { SendFile } from \"../domain/send-file\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(json: DeepJsonify<SendFileView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendFileView(), json);\n  }\n}\n","import { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { SendText } from \"../domain/send-text\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(json: DeepJsonify<SendTextView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendTextView(), json);\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetric-crypto-key\";\n\nimport { SendFileView } from \"./send-file.view\";\nimport { SendTextView } from \"./send-text.view\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n\n  toJSON() {\n    return Utils.merge(this, {\n      key: Utils.fromBufferToB64(this.key),\n    });\n  }\n\n  static fromJSON(json: DeepJsonify<SendView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendView(), json, {\n      key: Utils.fromB64ToArray(json.key)?.buffer,\n      cryptoKey: SymmetricCryptoKey.fromJSON(json.cryptoKey),\n      text: SendTextView.fromJSON(json.text),\n      file: SendFileView.fromJSON(json.file),\n      revisionDate: json.revisionDate == null ? null : new Date(json.revisionDate),\n      deletionDate: json.deletionDate == null ? null : new Date(json.deletionDate),\n      expirationDate: json.expirationDate == null ? null : new Date(json.expirationDate),\n    });\n  }\n}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export enum InitializerKey {\n  Cipher = 0,\n  CipherView = 1,\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n\n  // TODO, make Jsonify<State,TGlobalState,TAccount> work. It currently doesn't because Globals doesn't implement Jsonify.\n  static fromJSON<TGlobalState extends GlobalState, TAccount extends Account>(\n    obj: any,\n    accountDeserializer: (json: Jsonify<TAccount>) => TAccount\n  ): State<TGlobalState, TAccount> {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new State(null), obj, {\n      accounts: State.buildAccountMapFromJSON(obj?.accounts, accountDeserializer),\n    });\n  }\n\n  private static buildAccountMapFromJSON<TAccount extends Account>(\n    jsonAccounts: { [userId: string]: Jsonify<TAccount> },\n    accountDeserializer: (json: Jsonify<TAccount>) => TAccount\n  ) {\n    if (!jsonAccounts) {\n      return {};\n    }\n    const accounts: { [userId: string]: TAccount } = {};\n    for (const userId in jsonAccounts) {\n      accounts[userId] = accountDeserializer(jsonAccounts[userId]);\n    }\n    return accounts;\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport {\n  AbstractMemoryStorageService,\n  AbstractStorageService,\n} from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { LocalData } from \"../models/data/local.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport {\n  Account,\n  AccountData,\n  AccountSettings,\n  AccountSettingsSettings,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nconst DDG_SHARED_KEY = \"DuckDuckGoSharedKey\";\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  protected accountsSubject = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  accounts$ = this.accountsSubject.asObservable();\n\n  protected activeAccountSubject = new BehaviorSubject<string | null>(null);\n  activeAccount$ = this.activeAccountSubject.asObservable();\n\n  protected activeAccountUnlockedSubject = new BehaviorSubject<boolean>(false);\n  activeAccountUnlocked$ = this.activeAccountUnlockedSubject.asObservable();\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  protected accountDiskCache = new BehaviorSubject<Record<string, TAccount>>({});\n\n  // default account serializer, must be overridden by child class\n  protected accountDeserializer = Account.fromJSON as (json: Jsonify<TAccount>) => TAccount;\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractMemoryStorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccountSubject\n      .pipe(\n        concatMap(async (userId) => {\n          if (userId == null && this.activeAccountUnlockedSubject.getValue() == false) {\n            return;\n          } else if (userId == null) {\n            this.activeAccountUnlockedSubject.next(false);\n          }\n\n          // FIXME: This should be refactored into AuthService or a similar service,\n          //  as checking for the existance of the crypto key is a low level\n          //  implementation detail.\n          this.activeAccountUnlockedSubject.next((await this.getCryptoMasterKey()) != null);\n        })\n      )\n      .subscribe();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccountSubject.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      if (state.accounts == null) {\n        state.accounts = {};\n      }\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccountSubject.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccountSubject.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccountSubject.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlockedSubject.getValue() != nextValue) {\n        this.activeAccountUnlockedSubject.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  @withPrototypeForArrayMembers(CipherView, CipherView.fromJSON)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return Utils.recordToMap(account?.keys?.organizationKeys?.decrypted);\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = Utils.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return Utils.recordToMap(account?.keys?.providerKeys?.decrypted);\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = Utils.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDuckDuckGoSharedKey(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(DDG_SHARED_KEY, options);\n  }\n\n  async setDuckDuckGoSharedKey(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    value == null\n      ? await this.secureStorageService.remove(DDG_SHARED_KEY, options)\n      : await this.secureStorageService.save(DDG_SHARED_KEY, value, options);\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableDuckDuckGoBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableDuckDuckGoBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableDuckDuckGoBrowserIntegration(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableDuckDuckGoBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<{ [cipherId: string]: LocalData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n\n  async setLocalData(\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    return keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<AccountSettingsSettings> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: AccountSettingsSettings, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async setServerConfig(value: ServerConfigData, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.serverConfig = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getServerConfig(options: StorageOptions): Promise<ServerConfigData> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.serverConfig;\n  }\n\n  async getAvatarColor(options?: StorageOptions): Promise<string | null | undefined> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.avatarColor;\n  }\n\n  async setAvatarColor(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.avatarColor = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.value[options.userId];\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    this.setDiskCache(options.userId, account);\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    this.deleteDiskCache(options.userId);\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accountsSubject.next({});\n        return;\n      }\n\n      this.accountsSubject.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      this.deleteDiskCache(userId);\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected async state(): Promise<State<TGlobalState, TAccount>> {\n    const state = await this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state, {\n      deserializer: (s) => State.fromJSON(s, this.accountDeserializer),\n    });\n    return state;\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n\n  private setDiskCache(key: string, value: TAccount, options?: StorageOptions) {\n    if (this.useAccountCache) {\n      this.accountDiskCache.value[key] = value;\n      this.accountDiskCache.next(this.accountDiskCache.value);\n    }\n  }\n\n  private deleteDiskCache(key: string) {\n    if (this.useAccountCache) {\n      delete this.accountDiskCache.value[key];\n      this.accountDiskCache.next(this.accountDiskCache.value);\n    }\n  }\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? r\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","import { Directive, HostListener, Input, OnDestroy, Optional } from \"@angular/core\";\nimport { BehaviorSubject, finalize, Subject, takeUntil, tap } from \"rxjs\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\nimport { FunctionReturningAwaitable, functionToObservable } from \"../utils/function-to-observable\";\n\n/**\n * Allow a single button to perform async actions on click and reflect the progress in the UI by automatically\n * activating the loading effect while the action is processed.\n */\n@Directive({\n  selector: \"[bitAction]\",\n})\nexport class BitActionDirective implements OnDestroy {\n  private destroy$ = new Subject<void>();\n  private _loading$ = new BehaviorSubject<boolean>(false);\n\n  disabled = false;\n\n  @Input(\"bitAction\") protected handler: FunctionReturningAwaitable;\n\n  readonly loading$ = this._loading$.asObservable();\n\n  constructor(\n    private buttonComponent: ButtonLikeAbstraction,\n    @Optional() private validationService?: ValidationService,\n    @Optional() private logService?: LogService\n  ) {}\n\n  get loading() {\n    return this._loading$.value;\n  }\n\n  set loading(value: boolean) {\n    this._loading$.next(value);\n    this.buttonComponent.loading = value;\n  }\n\n  @HostListener(\"click\")\n  protected async onClick() {\n    if (!this.handler || this.loading || this.disabled || this.buttonComponent.disabled) {\n      return;\n    }\n\n    this.loading = true;\n    functionToObservable(this.handler)\n      .pipe(\n        tap({\n          error: (err: unknown) => {\n            this.logService?.error(`Async action exception: ${err}`);\n            this.validationService?.showError(err);\n          },\n        }),\n        finalize(() => (this.loading = false)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Component, Input, OnChanges } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\ntype SizeTypes = \"xlarge\" | \"large\" | \"default\" | \"small\" | \"xsmall\";\n\nconst SizeClasses: Record<SizeTypes, string[]> = {\n  xlarge: [\"tw-h-24\", \"tw-w-24\"],\n  large: [\"tw-h-16\", \"tw-w-16\"],\n  default: [\"tw-h-10\", \"tw-w-10\"],\n  small: [\"tw-h-7\", \"tw-w-7\"],\n  xsmall: [\"tw-h-6\", \"tw-w-6\"],\n};\n\n@Component({\n  selector: \"bit-avatar\",\n  template: `<img *ngIf=\"src\" [src]=\"src\" title=\"{{ title || text }}\" [ngClass]=\"classList\" />`,\n})\nexport class AvatarComponent implements OnChanges {\n  @Input() border = false;\n  @Input() color?: string;\n  @Input() id?: string;\n  @Input() text?: string;\n  @Input() title: string;\n  @Input() size: SizeTypes = \"default\";\n\n  private svgCharCount = 2;\n  private svgFontSize = 20;\n  private svgFontWeight = 300;\n  private svgSize = 48;\n  src: SafeResourceUrl;\n\n  constructor(public sanitizer: DomSanitizer) {}\n\n  ngOnChanges() {\n    this.generate();\n  }\n\n  get classList() {\n    return [\"tw-rounded-full\"]\n      .concat(SizeClasses[this.size] ?? [])\n      .concat(this.border ? [\"tw-border\", \"tw-border-solid\", \"tw-border-secondary-500\"] : []);\n  }\n\n  private generate() {\n    let chars: string = null;\n    const upperCaseText = this.text?.toUpperCase() ?? \"\";\n\n    chars = this.getFirstLetters(upperCaseText, this.svgCharCount);\n\n    if (chars == null) {\n      chars = this.unicodeSafeSubstring(upperCaseText, this.svgCharCount);\n    }\n\n    // If the chars contain an emoji, only show it.\n    if (chars.match(Utils.regexpEmojiPresentation)) {\n      chars = chars.match(Utils.regexpEmojiPresentation)[0];\n    }\n\n    let svg: HTMLElement;\n    let hexColor = this.color;\n\n    if (!Utils.isNullOrWhitespace(this.color)) {\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    } else if (!Utils.isNullOrWhitespace(this.id)) {\n      hexColor = Utils.stringToColor(this.id.toString());\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    } else {\n      hexColor = Utils.stringToColor(upperCaseText);\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    }\n\n    const charObj = this.createTextElement(chars, hexColor);\n    svg.appendChild(charObj);\n    const html = window.document.createElement(\"div\").appendChild(svg).outerHTML;\n    const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n    this.src = this.sanitizer.bypassSecurityTrustResourceUrl(\n      \"data:image/svg+xml;base64,\" + svgHtml\n    );\n  }\n\n  private getFirstLetters(data: string, count: number): string {\n    const parts = data.split(\" \");\n    if (parts.length > 1) {\n      let text = \"\";\n      for (let i = 0; i < count; i++) {\n        text += this.unicodeSafeSubstring(parts[i], 1);\n      }\n      return text;\n    }\n    return null;\n  }\n\n  private createSvgElement(size: number, color: string): HTMLElement {\n    const svgTag = window.document.createElement(\"svg\");\n    svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svgTag.setAttribute(\"pointer-events\", \"none\");\n    svgTag.setAttribute(\"width\", size.toString());\n    svgTag.setAttribute(\"height\", size.toString());\n    svgTag.style.backgroundColor = color;\n    svgTag.style.width = size + \"px\";\n    svgTag.style.height = size + \"px\";\n    return svgTag;\n  }\n\n  private createTextElement(character: string, color: string): HTMLElement {\n    const textTag = window.document.createElement(\"text\");\n    textTag.setAttribute(\"text-anchor\", \"middle\");\n    textTag.setAttribute(\"y\", \"50%\");\n    textTag.setAttribute(\"x\", \"50%\");\n    textTag.setAttribute(\"dy\", \"0.35em\");\n    textTag.setAttribute(\"pointer-events\", \"auto\");\n    textTag.setAttribute(\"fill\", Utils.pickTextColorBasedOnBgColor(color, 135, true));\n    textTag.setAttribute(\n      \"font-family\",\n      '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n        'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"'\n    );\n    textTag.textContent = character;\n    textTag.style.fontWeight = this.svgFontWeight.toString();\n    textTag.style.fontSize = this.svgFontSize + \"px\";\n    return textTag;\n  }\n\n  private unicodeSafeSubstring(str: string, count: number) {\n    const characters = str.match(/./gu);\n    return characters != null ? characters.slice(0, count).join(\"\") : \"\";\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\nexport type BadgeTypes = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\";\n\nconst styles: Record<BadgeTypes, string[]> = {\n  primary: [\"tw-bg-primary-500\"],\n  secondary: [\"tw-bg-text-muted\"],\n  success: [\"tw-bg-success-500\"],\n  danger: [\"tw-bg-danger-500\"],\n  warning: [\"tw-bg-warning-500\"],\n  info: [\"tw-bg-info-500\"],\n};\n\nconst hoverStyles: Record<BadgeTypes, string[]> = {\n  primary: [\"hover:tw-bg-primary-700\"],\n  secondary: [\"hover:tw-bg-secondary-700\"],\n  success: [\"hover:tw-bg-success-700\"],\n  danger: [\"hover:tw-bg-danger-700\"],\n  warning: [\"hover:tw-bg-warning-700\"],\n  info: [\"hover:tw-bg-info-700\"],\n};\n\n@Directive({\n  selector: \"span[bitBadge], a[bitBadge], button[bitBadge]\",\n})\nexport class BadgeDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-inline\",\n      \"tw-py-0.5\",\n      \"tw-px-1.5\",\n      \"tw-font-bold\",\n      \"tw-text-center\",\n      \"!tw-text-contrast\",\n      \"tw-rounded\",\n      \"tw-border-none\",\n      \"tw-box-border\",\n      \"tw-whitespace-no-wrap\",\n      \"tw-text-xs\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n    ]\n      .concat(styles[this.badgeType])\n      .concat(this.hasHoverEffects ? hoverStyles[this.badgeType] : []);\n  }\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n\n  private hasHoverEffects = false;\n\n  constructor(el: ElementRef<Element>) {\n    this.hasHoverEffects = el?.nativeElement?.nodeName != \"SPAN\";\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeDirective } from \"./badge.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BadgeDirective],\n  declarations: [BadgeDirective],\n})\nexport class BadgeModule {}\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { Input, HostBinding, Component } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction, ButtonType } from \"../shared/button-like.abstraction\";\n\nconst focusRing = [\n  \"focus-visible:tw-ring\",\n  \"focus-visible:tw-ring-offset-2\",\n  \"focus-visible:tw-ring-primary-700\",\n  \"focus-visible:tw-z-10\",\n];\n\nconst buttonStyles: Record<ButtonType, string[]> = {\n  primary: [\n    \"tw-border-primary-500\",\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"disabled:tw-bg-primary-500/60\",\n    \"disabled:tw-border-primary-500/60\",\n    \"disabled:!tw-text-contrast/60\",\n    \"disabled:tw-bg-clip-padding\",\n    ...focusRing,\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"tw-border-text-muted\",\n    \"!tw-text-muted\",\n    \"hover:tw-bg-text-muted\",\n    \"hover:tw-border-text-muted\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-text-muted/60\",\n    \"disabled:!tw-text-muted/60\",\n    ...focusRing,\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"tw-border-danger-500\",\n    \"!tw-text-danger\",\n    \"hover:tw-bg-danger-500\",\n    \"hover:tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-danger-500/60\",\n    \"disabled:!tw-text-danger/60\",\n    ...focusRing,\n  ],\n  unstyled: [],\n};\n\n@Component({\n  selector: \"button[bitButton], a[bitButton]\",\n  templateUrl: \"button.component.html\",\n  providers: [{ provide: ButtonLikeAbstraction, useExisting: ButtonComponent }],\n})\nexport class ButtonComponent implements ButtonLikeAbstraction {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-py-1.5\",\n      \"tw-px-3\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-text-center\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n    ]\n      .concat(this.block ? [\"tw-w-full\", \"tw-block\"] : [\"tw-inline-block\"])\n      .concat(buttonStyles[this.buttonType ?? \"secondary\"]);\n  }\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    const disabled = this.disabled != null && this.disabled !== false;\n    return disabled || this.loading ? true : null;\n  }\n\n  @Input() buttonType: ButtonType;\n\n  private _block = false;\n\n  @Input()\n  get block(): boolean {\n    return this._block;\n  }\n\n  set block(value: boolean | \"\") {\n    this._block = coerceBooleanProperty(value);\n  }\n\n  @Input() loading = false;\n\n  @Input() disabled = false;\n\n  setButtonType(value: \"primary\" | \"secondary\" | \"danger\" | \"unstyled\") {\n    this.buttonType = value;\n  }\n}\n","<span class=\"tw-relative\">\n  <span [ngClass]=\"{ 'tw-invisible': loading }\">\n    <ng-content></ng-content>\n  </span>\n  <span\n    class=\"tw-absolute tw-inset-0 tw-flex tw-items-center tw-justify-center\"\n    [ngClass]=\"{ 'tw-invisible': !loading }\"\n  >\n    <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" aria-hidden=\"true\"></i>\n  </span>\n</span>\n","<div\n  class=\"tw-mb-4 tw-box-border tw-rounded tw-border tw-border-l-8 tw-border-solid tw-border-secondary-300 tw-bg-background-alt tw-py-3 tw-px-5 tw-leading-5 tw-text-main\"\n  [ngClass]=\"calloutClass\"\n>\n  <h3\n    class=\"tw-mt-0 tw-mb-2 tw-text-base tw-font-bold tw-uppercase\"\n    [ngClass]=\"headerClass\"\n    *ngIf=\"title\"\n  >\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\ntype CalloutTypes = \"success\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<CalloutTypes, string> = {\n  success: \"bwi-check\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\nconst defaultI18n: Partial<Record<CalloutTypes, string>> = {\n  warning: \"warning\",\n  danger: \"error\",\n};\n\n@Component({\n  selector: \"bit-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type: CalloutTypes = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() useAlertRole = false;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.icon ??= defaultIcon[this.type];\n    if (this.title == null && defaultI18n[this.type] != null) {\n      this.title = this.i18nService.t(defaultI18n[this.type]);\n    }\n  }\n\n  get calloutClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"tw-border-l-danger-500\";\n      case \"info\":\n        return \"tw-border-l-info-500\";\n      case \"success\":\n        return \"tw-border-l-success-500\";\n      case \"warning\":\n        return \"tw-border-l-warning-500\";\n    }\n  }\n\n  get headerClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"!tw-text-danger\";\n      case \"info\":\n        return \"!tw-text-info\";\n      case \"success\":\n        return \"!tw-text-success\";\n      case \"warning\":\n        return \"!tw-text-warning\";\n    }\n  }\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nenum CharacterType {\n  Letter,\n  Emoji,\n  Special,\n  Number,\n}\n\n@Component({\n  selector: \"bit-color-password\",\n  template: `<div\n    *ngFor=\"let character of passwordArray; index as i\"\n    [class]=\"getCharacterClass(character)\"\n  >\n    <span>{{ character }}</span>\n    <span *ngIf=\"showCount\" class=\"tw-whitespace-nowrap tw-text-xs tw-leading-5 tw-text-main\">{{\n      i + 1\n    }}</span>\n  </div>`,\n})\nexport class ColorPasswordComponent {\n  @Input() private password: string = null;\n  @Input() showCount = false;\n\n  characterStyles: Record<CharacterType, string[]> = {\n    [CharacterType.Emoji]: [],\n    [CharacterType.Letter]: [\"tw-text-main\"],\n    [CharacterType.Special]: [\"tw-text-danger\"],\n    [CharacterType.Number]: [\"tw-text-primary-500\"],\n  };\n\n  @HostBinding(\"class\")\n  get classList() {\n    return [\"tw-min-w-0\", \"tw-whitespace-pre-wrap\", \"tw-break-all\"];\n  }\n\n  get passwordArray() {\n    // Convert to an array to handle cases that strings have special characters, i.e.: emoji.\n    return Array.from(this.password);\n  }\n\n  getCharacterClass(character: string) {\n    const charType = this.getCharacterType(character);\n    const charClass = this.characterStyles[charType].concat(\"tw-inline-flex\");\n\n    if (this.showCount) {\n      return charClass.concat([\n        \"tw-flex-col\",\n        \"tw-items-center\",\n        \"tw-w-7\",\n        \"tw-py-1\",\n        \"odd:tw-bg-secondary-100\",\n        \"even:tw-bg-background\",\n      ]);\n    }\n\n    return charClass;\n  }\n\n  private getCharacterType(character: string): CharacterType {\n    if (character.match(Utils.regexpEmojiPresentation)) {\n      return CharacterType.Emoji;\n    }\n\n    if (character.match(/\\d/)) {\n      return CharacterType.Number;\n    }\n\n    const specials = [\"&\", \"<\", \">\", \" \"];\n    if (specials.includes(character) || character.match(/[^\\w ]/)) {\n      return CharacterType.Special;\n    }\n\n    return CharacterType.Letter;\n  }\n}\n","import { style, animate, trigger, transition, group } from \"@angular/animations\";\n\nexport const fadeIn = trigger(\"fadeIn\", [\n  transition(\":enter\", [\n    style({ opacity: 0, transform: \"translateY(-50px)\" }),\n    group([\n      animate(\"0.15s linear\", style({ opacity: 1 })),\n      animate(\"0.3s ease-out\", style({ transform: \"none\" })),\n    ]),\n  ]),\n]);\n","import {\n  DEFAULT_DIALOG_CONFIG,\n  Dialog,\n  DialogConfig,\n  DialogRef,\n  DIALOG_SCROLL_STRATEGY,\n} from \"@angular/cdk/dialog\";\nimport { ComponentType, Overlay, OverlayContainer } from \"@angular/cdk/overlay\";\nimport {\n  Inject,\n  Injectable,\n  Injector,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n} from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { filter, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class DialogService extends Dialog implements OnDestroy {\n  private _destroy$ = new Subject<void>();\n\n  override open<R = unknown, D = unknown, C = unknown>(\n    componentOrTemplateRef: ComponentType<C> | TemplateRef<C>,\n    config?: DialogConfig<D, DialogRef<R, C>>\n  ): DialogRef<R, C> {\n    config = {\n      backdropClass: [\"tw-fixed\", \"tw-bg-black\", \"tw-bg-opacity-30\", \"tw-inset-0\", \"tw-z-40\"],\n      ...config,\n    };\n\n    return super.open(componentOrTemplateRef, config);\n  }\n\n  constructor(\n    /** Parent class constructor */\n    _overlay: Overlay,\n    _injector: Injector,\n    @Optional() @Inject(DEFAULT_DIALOG_CONFIG) _defaultOptions: DialogConfig,\n    @Optional() @SkipSelf() _parentDialog: Dialog,\n    _overlayContainer: OverlayContainer,\n    @Inject(DIALOG_SCROLL_STRATEGY) scrollStrategy: any,\n\n    /** Not in parent class */\n    @Optional() router: Router,\n    @Optional() authService: AuthService\n  ) {\n    super(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy);\n\n    /** Close all open dialogs if the vault locks */\n    if (router && authService) {\n      router.events\n        .pipe(\n          filter((event) => event instanceof NavigationEnd),\n          switchMap(() => authService.getAuthStatus()),\n          filter((v) => v !== AuthenticationStatus.Unlocked),\n          takeUntil(this._destroy$)\n        )\n        .subscribe(() => this.closeAll());\n    }\n  }\n\n  override ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n    super.ngOnDestroy();\n  }\n}\n","import { CdkDialogContainer, DialogRef } from \"@angular/cdk/dialog\";\nimport { Directive, HostBinding, Input, OnInit, Optional } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"[bitDialogTitleContainer]\",\n})\nexport class DialogTitleContainerDirective implements OnInit {\n  @HostBinding(\"id\") id = `bit-dialog-title-${nextId++}`;\n\n  @Input() simple = false;\n\n  constructor(@Optional() private dialogRef: DialogRef<any>) {}\n\n  ngOnInit(): void {\n    // Based on angular/components, licensed under MIT\n    // https://github.com/angular/components/blob/14.2.0/src/material/dialog/dialog-content-directives.ts#L121-L128\n    if (this.dialogRef) {\n      Promise.resolve().then(() => {\n        const container = this.dialogRef.containerInstance as CdkDialogContainer;\n\n        if (container && !container._ariaLabelledBy) {\n          container._ariaLabelledBy = this.id;\n        }\n      });\n    }\n  }\n}\n","<div\n  class=\"tw-my-4 tw-flex tw-max-h-screen tw-w-96 tw-max-w-90vw tw-flex-col tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-text-contrast tw-text-main\"\n  @fadeIn\n>\n  <div class=\"tw-flex tw-flex-col tw-items-center tw-gap-2 tw-px-4 tw-pt-4 tw-text-center\">\n    <ng-content *ngIf=\"hasIcon; else elseBlock\" select=\"[bit-dialog-icon]\"></ng-content>\n    <ng-template #elseBlock>\n      <i class=\"bwi bwi-exclamation-triangle tw-text-3xl tw-text-warning\" aria-hidden=\"true\"></i>\n    </ng-template>\n    <h1 bitDialogTitleContainer class=\"tw-mb-0 tw-text-base tw-font-semibold\">\n      <ng-content select=\"[bitDialogTitle]\"></ng-content>\n    </h1>\n  </div>\n  <div class=\"tw-overflow-y-auto tw-px-4 tw-pt-2 tw-pb-4 tw-text-center tw-text-base\">\n    <ng-content select=\"[bitDialogContent]\"></ng-content>\n  </div>\n  <div class=\"tw-border-0 tw-border-t tw-border-solid tw-border-secondary-300 tw-p-4\">\n    <ng-content select=\"[bitDialogFooter]\"></ng-content>\n  </div>\n</div>\n","import { Component, ContentChild, Directive } from \"@angular/core\";\n\nimport { fadeIn } from \"../animations\";\n\n@Directive({ selector: \"[bit-dialog-icon]\" })\nexport class IconDirective {}\n\n@Component({\n  selector: \"bit-simple-dialog\",\n  templateUrl: \"./simple-dialog.component.html\",\n  animations: [fadeIn],\n})\nexport class SimpleDialogComponent {\n  @ContentChild(IconDirective) icon!: IconDirective;\n\n  get hasIcon() {\n    return this.icon != null;\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { FormControlComponent } from \"./form-control.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitLabel } from \"./label.directive\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [FormControlComponent, BitLabel, BitHintComponent],\n  exports: [FormControlComponent, BitLabel, BitHintComponent],\n})\nexport class FormControlModule {}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"bit-hint\",\n  host: {\n    class: \"tw-text-muted tw-inline-block tw-mt-1\",\n  },\n})\nexport class BitHintComponent {\n  @HostBinding() id = `bit-hint-${nextId++}`;\n}\n","import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"bit-label\",\n})\nexport class BitLabel {}\n","import { Component, Input } from \"@angular/core\";\nimport { AbstractControl, UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"bit-error-summary\",\n  template: ` <ng-container *ngIf=\"errorCount > 0\">\n    <i class=\"bwi bwi-error\"></i> {{ \"fieldsNeedAttention\" | i18n: errorString }}\n  </ng-container>`,\n  host: {\n    class: \"tw-block tw-text-danger tw-mt-2\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorSummary {\n  @Input()\n  formGroup: UntypedFormGroup;\n\n  get errorCount(): number {\n    return this.getErrorCount(this.formGroup);\n  }\n\n  get errorString() {\n    return this.errorCount.toString();\n  }\n\n  private getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n\n      if (!control.dirty && control.untouched) {\n        return acc;\n      }\n\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n}\n","export type InputTypes =\n  | \"text\"\n  | \"password\"\n  | \"number\"\n  | \"datetime-local\"\n  | \"email\"\n  | \"checkbox\"\n  | \"search\";\n\nexport abstract class BitFormFieldControl {\n  ariaDescribedBy: string;\n  id: string;\n  labelForId: string;\n  required: boolean;\n  hasError: boolean;\n  error: [string, any];\n  type?: InputTypes;\n  spellcheck?: boolean;\n  focus?: () => void;\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-error\",\n  template: `<i class=\"bwi bwi-error\"></i> {{ displayError }}`,\n  host: {\n    class: \"tw-block tw-mt-1 tw-text-danger\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorComponent {\n  @HostBinding() id = `bit-error-${nextId++}`;\n\n  @Input() error: [string, any];\n\n  constructor(private i18nService: I18nService) {}\n\n  get displayError() {\n    switch (this.error[0]) {\n      case \"required\":\n        return this.i18nService.t(\"inputRequired\");\n      case \"email\":\n        return this.i18nService.t(\"inputEmail\");\n      case \"minlength\":\n        return this.i18nService.t(\"inputMinLength\", this.error[1]?.requiredLength);\n      case \"maxlength\":\n        return this.i18nService.t(\"inputMaxLength\", this.error[1]?.requiredLength);\n      default:\n        // Attempt to show a custom error message.\n        if (this.error[1]?.message) {\n          return this.error[1]?.message;\n        }\n\n        return this.error;\n    }\n  }\n}\n","<label class=\"tw-mb-1 tw-block tw-font-semibold tw-text-main\" [attr.for]=\"input.labelForId\">\n  <ng-content select=\"bit-label\"></ng-content>\n  <span *ngIf=\"input.required\" class=\"tw-text-xs tw-font-normal\"> ({{ \"required\" | i18n }})</span>\n</label>\n<div class=\"tw-flex\">\n  <div *ngIf=\"prefixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitPrefix]\"></ng-content>\n  </div>\n  <ng-content></ng-content>\n  <div *ngIf=\"suffixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitSuffix]\"></ng-content>\n  </div>\n</div>\n<ng-container [ngSwitch]=\"input.hasError\">\n  <ng-content select=\"bit-hint\" *ngSwitchCase=\"false\"></ng-content>\n  <bit-error [error]=\"input.error\" *ngSwitchCase=\"true\"></bit-error>\n</ng-container>\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  ContentChildren,\n  QueryList,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { BitHintComponent } from \"../form-control/hint.component\";\n\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldControl } from \"./form-field-control\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@Component({\n  selector: \"bit-form-field\",\n  templateUrl: \"./form-field.component.html\",\n  host: {\n    class: \"tw-mb-6 tw-block\",\n  },\n})\nexport class BitFormFieldComponent implements AfterContentChecked {\n  @ContentChild(BitFormFieldControl) input: BitFormFieldControl;\n  @ContentChild(BitHintComponent) hint: BitHintComponent;\n\n  @ViewChild(BitErrorComponent) error: BitErrorComponent;\n\n  @ContentChildren(BitPrefixDirective) prefixChildren: QueryList<BitPrefixDirective>;\n  @ContentChildren(BitSuffixDirective) suffixChildren: QueryList<BitSuffixDirective>;\n\n  ngAfterContentChecked(): void {\n    if (this.error) {\n      this.input.ariaDescribedBy = this.error.id;\n    } else if (this.hint) {\n      this.input.ariaDescribedBy = this.hint.id;\n    } else {\n      this.input.ariaDescribedBy = undefined;\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"./input.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitInputDirective],\n  exports: [BitInputDirective],\n})\nexport class InputModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\n\nimport { BadgeModule } from \"../badge\";\nimport { SharedModule } from \"../shared\";\n\nimport { MultiSelectComponent } from \"./multi-select.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NgSelectModule, BadgeModule, SharedModule],\n  exports: [MultiSelectComponent],\n  declarations: [MultiSelectComponent],\n})\nexport class MultiSelectModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { FormControlModule } from \"../form-control\";\nimport { BitInputDirective } from \"../input/input.directive\";\nimport { InputModule } from \"../input/input.module\";\nimport { MultiSelectComponent } from \"../multi-select/multi-select.component\";\nimport { MultiSelectModule } from \"../multi-select/multi-select.module\";\nimport { SharedModule } from \"../shared\";\n\nimport { BitErrorSummary } from \"./error-summary.component\";\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldComponent } from \"./form-field.component\";\nimport { BitPasswordInputToggleDirective } from \"./password-input-toggle.directive\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@NgModule({\n  imports: [SharedModule, FormControlModule, InputModule, MultiSelectModule],\n  declarations: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitPasswordInputToggleDirective,\n    BitPrefixDirective,\n    BitSuffixDirective,\n  ],\n  exports: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitInputDirective,\n    BitPasswordInputToggleDirective,\n    BitPrefixDirective,\n    BitSuffixDirective,\n    MultiSelectComponent,\n    FormControlModule,\n  ],\n})\nexport class FormFieldModule {}\n","import {\n  AfterContentInit,\n  Directive,\n  EventEmitter,\n  Host,\n  HostBinding,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitIconButtonComponent } from \"../icon-button/icon-button.component\";\n\nimport { BitFormFieldComponent } from \"./form-field.component\";\n\n@Directive({\n  selector: \"[bitPasswordInputToggle]\",\n})\nexport class BitPasswordInputToggleDirective implements AfterContentInit, OnChanges {\n  /**\n   * Whether the input is toggled to show the password.\n   */\n  @HostBinding(\"attr.aria-pressed\") @Input() toggled = false;\n  @Output() toggledChange = new EventEmitter<boolean>();\n\n  @HostBinding(\"attr.title\") title = this.i18nService.t(\"toggleVisibility\");\n  @HostBinding(\"attr.aria-label\") label = this.i18nService.t(\"toggleVisibility\");\n\n  /**\n   * Click handler to toggle the state of the input type.\n   */\n  @HostListener(\"click\") onClick() {\n    this.toggled = !this.toggled;\n    this.toggledChange.emit(this.toggled);\n\n    this.update();\n\n    this.formField.input?.focus();\n  }\n\n  constructor(\n    @Host() private button: BitIconButtonComponent,\n    private formField: BitFormFieldComponent,\n    private i18nService: I18nService\n  ) {}\n\n  get icon() {\n    return this.toggled ? \"bwi-eye-slash\" : \"bwi-eye\";\n  }\n\n  ngOnChanges(): void {\n    this.update();\n  }\n\n  ngAfterContentInit(): void {\n    this.toggled = this.formField.input.type !== \"password\";\n    this.button.icon = this.icon;\n  }\n\n  private update() {\n    this.button.icon = this.icon;\n    if (this.formField.input?.type != null) {\n      this.formField.input.type = this.toggled ? \"text\" : \"password\";\n      this.formField.input.spellcheck = this.toggled ? false : undefined;\n    }\n  }\n}\n","import { Directive, HostBinding, Input, OnInit, Optional } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\n\nexport const PrefixClasses = [\n  \"tw-bg-background-alt\",\n  \"tw-border\",\n  \"tw-border-solid\",\n  \"tw-border-secondary-500\",\n  \"tw-text-muted\",\n  \"tw-rounded-none\",\n];\n\nexport const PrefixButtonClasses = [\n  \"hover:tw-bg-text-muted\",\n  \"hover:tw-text-contrast\",\n  \"disabled:tw-opacity-100\",\n  \"disabled:tw-bg-secondary-100\",\n  \"disabled:hover:tw-bg-secondary-100\",\n  \"disabled:hover:tw-text-muted\",\n  \"focus-visible:tw-ring-primary-700\",\n\n  \"focus-visible:tw-border-primary-700\",\n  \"focus-visible:tw-ring-1\",\n  \"focus-visible:tw-ring-inset\",\n  \"focus-visible:tw-ring-primary-700\",\n  \"focus-visible:tw-z-10\",\n];\n\nexport const PrefixStaticContentClasses = [\"tw-block\", \"tw-px-3\", \"tw-py-1.5\"];\n\n@Directive({\n  selector: \"[bitPrefix]\",\n})\nexport class BitPrefixDirective implements OnInit {\n  constructor(@Optional() private buttonComponent: ButtonLikeAbstraction) {}\n\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\n      \"tw-border-r-0\",\n      \"first:tw-rounded-l\",\n\n      \"focus-visible:tw-border-r\",\n      \"focus-visible:tw-mr-[-1px]\",\n    ]).concat(this.buttonComponent != undefined ? PrefixButtonClasses : PrefixStaticContentClasses);\n  }\n\n  ngOnInit(): void {\n    this.buttonComponent?.setButtonType(\"unstyled\");\n  }\n}\n","import { Directive, HostBinding, Input, Optional } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\n\nimport { PrefixButtonClasses, PrefixClasses, PrefixStaticContentClasses } from \"./prefix.directive\";\n\n@Directive({\n  selector: \"[bitSuffix]\",\n})\nexport class BitSuffixDirective {\n  constructor(@Optional() private buttonComponent: ButtonLikeAbstraction) {}\n\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\n      \"tw-border-l-0\",\n      \"last:tw-rounded-r\",\n\n      \"focus-visible:tw-border-l\",\n      \"focus-visible:tw-ml-[-1px]\",\n    ]).concat(this.buttonComponent != undefined ? PrefixButtonClasses : PrefixStaticContentClasses);\n  }\n\n  ngOnInit(): void {\n    this.buttonComponent?.setButtonType(\"unstyled\");\n  }\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction, ButtonType } from \"../shared/button-like.abstraction\";\n\nexport type IconButtonType = ButtonType | \"contrast\" | \"main\" | \"muted\" | \"light\";\n\nconst focusRing = [\n  // Workaround for box-shadow with transparent offset issue:\n  // https://github.com/tailwindlabs/tailwindcss/issues/3595\n  // Remove `before:` and use regular `tw-ring` when browser no longer has bug, or better:\n  // switch to `outline` with `outline-offset` when Safari supports border radius on outline.\n  // Using `box-shadow` to create outlines is a hack and as such `outline` should be preferred.\n  \"tw-relative\",\n  \"before:tw-content-['']\",\n  \"before:tw-block\",\n  \"before:tw-absolute\",\n  \"before:-tw-inset-[3px]\",\n  \"before:tw-rounded-md\",\n  \"before:tw-transition\",\n  \"before:tw-ring\",\n  \"before:tw-ring-transparent\",\n  \"focus-visible:tw-z-10\",\n];\n\nconst styles: Record<IconButtonType, string[]> = {\n  contrast: [\n    \"tw-bg-transparent\",\n    \"!tw-text-contrast\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-text-contrast\",\n    \"focus-visible:before:tw-ring-text-contrast\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  main: [\n    \"tw-bg-transparent\",\n    \"!tw-text-main\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-text-main\",\n    \"focus-visible:before:tw-ring-text-main\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  muted: [\n    \"tw-bg-transparent\",\n    \"!tw-text-muted\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-primary-700\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  primary: [\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"tw-border-primary-500\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-primary-500\",\n    \"disabled:hover:tw-bg-primary-500\",\n    ...focusRing,\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"!tw-text-muted\",\n    \"tw-border-text-muted\",\n    \"hover:!tw-text-contrast\",\n    \"hover:tw-bg-text-muted\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-text-muted\",\n    \"disabled:hover:tw-bg-transparent\",\n    \"disabled:hover:!tw-text-muted\",\n    \"disabled:hover:tw-border-text-muted\",\n    ...focusRing,\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"!tw-text-danger\",\n    \"tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"hover:tw-bg-danger-500\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-danger-500\",\n    \"disabled:hover:tw-bg-transparent\",\n    \"disabled:hover:!tw-text-danger\",\n    \"disabled:hover:tw-border-danger-500\",\n    ...focusRing,\n  ],\n  light: [\n    \"tw-bg-transparent\",\n    \"!tw-text-alt2\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-text-alt2\",\n    \"focus-visible:before:tw-ring-text-alt2\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  unstyled: [],\n};\n\nexport type IconButtonSize = \"default\" | \"small\";\n\nconst sizes: Record<IconButtonSize, string[]> = {\n  default: [\"tw-px-2.5\", \"tw-py-1.5\"],\n  small: [\"tw-leading-none\", \"tw-text-base\", \"tw-p-1\"],\n};\n\n@Component({\n  selector: \"button[bitIconButton]:not(button[bitButton])\",\n  templateUrl: \"icon-button.component.html\",\n  providers: [{ provide: ButtonLikeAbstraction, useExisting: BitIconButtonComponent }],\n})\nexport class BitIconButtonComponent implements ButtonLikeAbstraction {\n  @Input(\"bitIconButton\") icon: string;\n\n  @Input() buttonType: IconButtonType;\n\n  @Input() size: IconButtonSize = \"default\";\n\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n    ]\n      .concat(styles[this.buttonType ?? \"main\"])\n      .concat(sizes[this.size]);\n  }\n\n  get iconClass() {\n    return [this.icon, \"!tw-m-0\"];\n  }\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    const disabled = this.disabled != null && this.disabled !== false;\n    return disabled || this.loading ? true : null;\n  }\n\n  @Input() loading = false;\n  @Input() disabled = false;\n\n  setButtonType(value: \"primary\" | \"secondary\" | \"danger\" | \"unstyled\") {\n    this.buttonType = value;\n  }\n}\n","<span class=\"tw-relative\">\n  <span [ngClass]=\"{ 'tw-invisible': loading }\">\n    <i class=\"bwi\" [ngClass]=\"iconClass\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"tw-absolute tw-inset-0 tw-flex tw-items-center tw-justify-center\"\n    [ngClass]=\"{ 'tw-invisible': !loading }\"\n  >\n    <i\n      class=\"bwi bwi-spinner bwi-spin\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{ 'bwi-lg': size === 'default' }\"\n    ></i>\n  </span>\n</span>\n","import { Component, HostBinding, Input } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { Icon, isIcon } from \"./icon\";\n\n@Component({\n  selector: \"bit-icon\",\n  template: ``,\n})\nexport class BitIconComponent {\n  @Input() icon: Icon;\n\n  @HostBinding()\n  protected get innerHtml() {\n    if (!isIcon(this.icon)) {\n      return \"\";\n    }\n\n    const svg = this.icon.svg;\n    return this.domSanitizer.bypassSecurityTrustHtml(svg);\n  }\n\n  constructor(private domSanitizer: DomSanitizer) {}\n}\n","class Icon {\n  constructor(readonly svg: string) {}\n}\n\n// We only export the type to prohibit the creation of Icons without using\n// the `svgIcon` template literal tag.\nexport type { Icon };\n\nexport function isIcon(icon: unknown): icon is Icon {\n  return icon instanceof Icon;\n}\n\nexport class DynamicContentNotAllowedError extends Error {\n  constructor() {\n    super(\"Dynamic content in icons is not allowed due to risk of user-injected XSS.\");\n  }\n}\n\nexport function svgIcon(strings: TemplateStringsArray, ...values: unknown[]): Icon {\n  if (values.length > 0) {\n    throw new DynamicContentNotAllowedError();\n  }\n\n  return new Icon(strings[0]);\n}\n","import { svgIcon } from \"../icon\";\n\nexport const Search = svgIcon`\n<svg width=\"120\" height=\"120\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <g opacity=\".49\">\n    <path class=\"tw-fill-secondary-300\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.36 73.256a30.004 30.004 0 0 0 10.346 1.826c16.282 0 29.482-12.912 29.482-28.84 0-.384-.008-.766-.023-1.145h28.726v39.57H40.36v-11.41Z\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M21.546 46.241c0 15.929 13.2 28.841 29.482 28.841S80.51 62.17 80.51 46.241c0-15.928-13.2-28.841-29.482-28.841S21.546 30.313 21.546 46.241Z\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-fill-secondary-500\" d=\"M35.36 70.595a1.2 1.2 0 0 0-2.4 0h2.4Zm77.475-30.356a2.343 2.343 0 0 1 2.365 2.33h2.4c0-2.593-2.107-4.73-4.765-4.73v2.4Zm2.365 2.33v46.047h2.4V42.57h-2.4Zm0 46.047c0 1.293-1.058 2.33-2.365 2.33v2.4c2.59 0 4.765-2.069 4.765-4.73h-2.4Zm-2.365 2.33h-75.11v2.4h75.11v-2.4Zm-75.11 0a2.343 2.343 0 0 1-2.365-2.33h-2.4c0 2.594 2.107 4.73 4.766 4.73v-2.4Zm-2.365-2.33v-18.02h-2.4v18.02h2.4Zm44.508-48.377h32.967v-2.4H79.868v2.4Z\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M79.907 45.287h29.114v39.57H40.487V73.051\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M57.356 102.56h35.849\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M68.954 92.147v10.413m11.599-10.413v10.413\" stroke-width=\"4\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"m27.44 64.945-4.51 4.51L5.72 86.663a3 3 0 0 0 0 4.243l1.238 1.238a3 3 0 0 0 4.243 0L28.41 74.936l4.51-4.51\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M101.293 53.154H85.178m16.115 6.043H90.214m-5.036 0h-7.553m23.668 6.043h-7.05m-5.54 0h-15.61m28.2 6.042H85.178m-5.538 0h-8.562m30.215 6.043H78.632m-5.539 0H60m-5.54 0h-8.057\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M29.164 33.01h41.529a2.4 2.4 0 0 1 2.4 2.4v6.28a2.4 2.4 0 0 1-2.4 2.4h-41.53a2.4 2.4 0 0 1-2.4-2.4v-6.28a2.4 2.4 0 0 1 2.4-2.4Z\" stroke-width=\"4\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M22.735 54.16h34.361a2.4 2.4 0 0 1 2.4 2.4v6.28a2.4 2.4 0 0 1-2.4 2.4H28.778m50.358-11.08h-6.161a2.4 2.4 0 0 0-2.4 2.4v6.414a2.266 2.266 0 0 0 2.266 2.265\" stroke-width=\"4\" stroke-linecap=\"round\" />\n  </g>\n</svg>\n`;\n","import { Directive, ElementRef, HostBinding, Input, NgZone, Optional, Self } from \"@angular/core\";\nimport { NgControl, Validators } from \"@angular/forms\";\n\nimport { BitFormFieldControl, InputTypes } from \"../form-field/form-field-control\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"input[bitInput], select[bitInput], textarea[bitInput]\",\n  providers: [{ provide: BitFormFieldControl, useExisting: BitInputDirective }],\n})\nexport class BitInputDirective implements BitFormFieldControl {\n  @HostBinding(\"class\") @Input() get classList() {\n    return [\n      \"tw-block\",\n      \"tw-w-full\",\n      \"tw-px-3\",\n      \"tw-py-1.5\",\n      \"tw-bg-background-alt\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      this.hasError ? \"tw-border-danger-500\" : \"tw-border-secondary-500\",\n      \"tw-text-main\",\n      \"tw-placeholder-text-muted\",\n      // Rounded\n      \"tw-rounded-none\",\n      \"first:tw-rounded-l\",\n      \"last:tw-rounded-r\",\n      // Focus\n      \"focus:tw-outline-none\",\n      \"focus:tw-border-primary-700\",\n      \"focus:tw-ring-1\",\n      \"focus:tw-ring-inset\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n      \"disabled:tw-bg-secondary-100\",\n    ].filter((s) => s != \"\");\n  }\n\n  @HostBinding() @Input() id = `bit-input-${nextId++}`;\n\n  @HostBinding(\"attr.aria-describedby\") ariaDescribedBy: string;\n\n  @HostBinding(\"attr.aria-invalid\") get ariaInvalid() {\n    return this.hasError ? true : undefined;\n  }\n\n  @HostBinding(\"attr.type\") @Input() type?: InputTypes;\n\n  @HostBinding(\"attr.spellcheck\") @Input() spellcheck?: boolean;\n\n  @HostBinding()\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  @Input() hasPrefix = false;\n  @Input() hasSuffix = false;\n\n  get labelForId(): string {\n    return this.id;\n  }\n\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl.errors)[0];\n    return [key, this.ngControl.errors[key]];\n  }\n\n  constructor(\n    @Optional() @Self() private ngControl: NgControl,\n    private ngZone: NgZone,\n    private elementRef: ElementRef<HTMLInputElement>\n  ) {}\n\n  focus() {\n    this.ngZone.runOutsideAngular(() => {\n      const end = this.elementRef.nativeElement.value.length;\n      this.elementRef.nativeElement.setSelectionRange(end, end);\n      this.elementRef.nativeElement.focus();\n    });\n  }\n}\n","import { Input, HostBinding, Directive } from \"@angular/core\";\n\nexport type LinkType = \"primary\" | \"secondary\" | \"contrast\";\n\nconst linkStyles: Record<LinkType, string[]> = {\n  primary: [\n    \"!tw-text-primary-500\",\n    \"hover:!tw-text-primary-500\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:!tw-text-primary-500/60\",\n  ],\n  secondary: [\n    \"!tw-text-main\",\n    \"hover:!tw-text-main\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:!tw-text-muted/60\",\n  ],\n  contrast: [\n    \"!tw-text-contrast\",\n    \"hover:!tw-text-contrast\",\n    \"focus-visible:before:tw-ring-text-contrast\",\n    \"disabled:!tw-text-contrast/60\",\n  ],\n};\n\nconst commonStyles = [\n  \"tw-leading-none\",\n  \"tw-p-0\",\n  \"tw-font-semibold\",\n  \"tw-bg-transparent\",\n  \"tw-border-0\",\n  \"tw-border-none\",\n  \"tw-rounded\",\n  \"tw-transition\",\n  \"hover:tw-underline\",\n  \"hover:tw-decoration-1\",\n  \"disabled:tw-no-underline\",\n  \"disabled:tw-cursor-not-allowed\",\n  \"focus-visible:tw-outline-none\",\n  \"focus-visible:tw-underline\",\n  \"focus-visible:tw-decoration-1\",\n\n  // Workaround for html button tag not being able to be set to `display: inline`\n  // and at the same time not being able to use `tw-ring-offset` because of box-shadow issue.\n  // https://github.com/w3c/csswg-drafts/issues/3226\n  // Add `tw-inline`, add `tw-py-0.5` and use regular `tw-ring` if issue is fixed.\n  //\n  // https://github.com/tailwindlabs/tailwindcss/issues/3595\n  // Remove `before:` and use regular `tw-ring` when browser no longer has bug, or better:\n  // switch to `outline` with `outline-offset` when Safari supports border radius on outline.\n  // Using `box-shadow` to create outlines is a hack and as such `outline` should be preferred.\n  \"tw-relative\",\n  \"before:tw-content-['']\",\n  \"before:tw-block\",\n  \"before:tw-absolute\",\n  \"before:-tw-inset-x-[0.1em]\",\n  \"before:tw-rounded-md\",\n  \"before:tw-transition\",\n  \"focus-visible:before:tw-ring-2\",\n  \"focus-visible:before:tw-ring-text-contrast\",\n  \"focus-visible:tw-z-10\",\n];\n\n@Directive()\nabstract class LinkDirective {\n  @Input()\n  linkType: LinkType = \"primary\";\n}\n\n@Directive({\n  selector: \"a[bitLink]\",\n})\nexport class AnchorLinkDirective extends LinkDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\"before:-tw-inset-y-[0.125rem]\"]\n      .concat(commonStyles)\n      .concat(linkStyles[this.linkType] ?? []);\n  }\n}\n\n@Directive({\n  selector: \"button[bitLink]\",\n})\nexport class ButtonLinkDirective extends LinkDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\"before:-tw-inset-y-[0.25rem]\"]\n      .concat(commonStyles)\n      .concat(linkStyles[this.linkType] ?? []);\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-menu-divider\",\n  templateUrl: \"./menu-divider.component.html\",\n})\nexport class MenuDividerComponent {}\n","<div\n  class=\"tw-my-2 tw-border-0 tw-border-t tw-border-solid tw-border-t-secondary-500\"\n  role=\"separator\"\n></div>\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding } from \"@angular/core\";\n\n@Directive({\n  selector: \"[bitMenuItem]\",\n})\nexport class MenuItemDirective implements FocusableOption {\n  @HostBinding(\"class\") classList = [\n    \"tw-block\",\n    \"tw-py-1\",\n    \"tw-px-4\",\n    \"!tw-text-main\",\n    \"!tw-no-underline\",\n    \"tw-cursor-pointer\",\n    \"tw-border-none\",\n    \"tw-bg-background\",\n    \"tw-text-left\",\n    \"hover:tw-bg-secondary-100\",\n    \"focus:tw-bg-secondary-100\",\n    \"focus:tw-z-50\",\n    \"focus:tw-outline-none\",\n    \"focus:tw-ring\",\n    \"focus:tw-ring-offset-2\",\n    \"focus:tw-ring-primary-700\",\n    \"active:!tw-ring-0\",\n    \"active:!tw-ring-offset-0\",\n  ];\n  @HostBinding(\"attr.role\") role = \"menuitem\";\n  @HostBinding(\"tabIndex\") tabIndex = \"-1\";\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { filter, mergeWith } from \"rxjs/operators\";\n\nimport { MenuComponent } from \"./menu.component\";\n\n@Directive({\n  selector: \"[bitMenuTriggerFor]\",\n})\nexport class MenuTriggerForDirective implements OnDestroy {\n  @HostBinding(\"attr.aria-expanded\") isOpen = false;\n  @HostBinding(\"attr.aria-haspopup\") get hasPopup(): \"menu\" | \"dialog\" {\n    return this.menu?.ariaRole || \"menu\";\n  }\n  @HostBinding(\"attr.role\") role = \"button\";\n\n  @Input(\"bitMenuTriggerFor\") menu: MenuComponent;\n\n  private overlayRef: OverlayRef;\n  private defaultMenuConfig: OverlayConfig = {\n    panelClass: \"bit-menu-panel\",\n    hasBackdrop: true,\n    backdropClass: \"cdk-overlay-transparent-backdrop\",\n    scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    positionStrategy: this.overlay\n      .position()\n      .flexibleConnectedTo(this.elementRef)\n      .withPositions([\n        {\n          originX: \"start\",\n          originY: \"bottom\",\n          overlayX: \"start\",\n          overlayY: \"top\",\n        },\n        {\n          originX: \"end\",\n          originY: \"bottom\",\n          overlayX: \"end\",\n          overlayY: \"top\",\n        },\n      ])\n      .withLockedPosition(true)\n      .withFlexibleDimensions(false)\n      .withPush(true),\n  };\n  private closedEventsSub: Subscription;\n  private keyDownEventsSub: Subscription;\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private viewContainerRef: ViewContainerRef,\n    private overlay: Overlay\n  ) {}\n\n  @HostListener(\"click\") toggleMenu() {\n    this.isOpen ? this.destroyMenu() : this.openMenu();\n  }\n\n  ngOnDestroy() {\n    this.disposeAll();\n  }\n\n  private openMenu() {\n    if (this.menu == null) {\n      throw new Error(\"Cannot find bit-menu element\");\n    }\n\n    this.isOpen = true;\n    this.overlayRef = this.overlay.create(this.defaultMenuConfig);\n\n    const templatePortal = new TemplatePortal(this.menu.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n\n    this.closedEventsSub = this.getClosedEvents().subscribe((event: KeyboardEvent | undefined) => {\n      if (event?.key === \"Tab\") {\n        // Required to ensure tab order resumes correctly\n        this.elementRef.nativeElement.focus();\n      }\n      this.destroyMenu();\n    });\n    this.keyDownEventsSub =\n      this.menu.keyManager &&\n      this.overlayRef\n        .keydownEvents()\n        .subscribe((event: KeyboardEvent) => this.menu.keyManager.onKeydown(event));\n  }\n\n  private destroyMenu() {\n    if (this.overlayRef == null || !this.isOpen) {\n      return;\n    }\n\n    this.isOpen = false;\n    this.disposeAll();\n  }\n\n  private getClosedEvents(): Observable<any> {\n    const detachments = this.overlayRef.detachments();\n    const escKey = this.overlayRef.keydownEvents().pipe(\n      filter((event: KeyboardEvent) => {\n        const keys = this.menu.ariaRole === \"menu\" ? [\"Escape\", \"Tab\"] : [\"Escape\"];\n        return keys.includes(event.key);\n      })\n    );\n    const backdrop = this.overlayRef.backdropClick();\n    const menuClosed = this.menu.closed;\n\n    return detachments.pipe(mergeWith(escKey, backdrop, menuClosed));\n  }\n\n  private disposeAll() {\n    this.closedEventsSub?.unsubscribe();\n    this.overlayRef?.dispose();\n    this.keyDownEventsSub?.unsubscribe();\n  }\n}\n","<ng-template>\n  <div\n    (click)=\"closed.emit()\"\n    class=\"tw-flex tw-shrink-0 tw-flex-col tw-rounded tw-border tw-border-solid tw-border-secondary-500 tw-bg-background tw-bg-clip-padding tw-py-2\"\n    [attr.role]=\"ariaRole\"\n    [attr.aria-label]=\"ariaLabel\"\n    cdkTrapFocus\n    [cdkTrapFocusAutoCapture]=\"true\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  Component,\n  Output,\n  TemplateRef,\n  ViewChild,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  Input,\n} from \"@angular/core\";\n\nimport { MenuItemDirective } from \"./menu-item.directive\";\n\n@Component({\n  selector: \"bit-menu\",\n  templateUrl: \"./menu.component.html\",\n  exportAs: \"menuComponent\",\n})\nexport class MenuComponent implements AfterContentInit {\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @Output() closed = new EventEmitter<void>();\n  @ContentChildren(MenuItemDirective, { descendants: true })\n  menuItems: QueryList<MenuItemDirective>;\n  keyManager?: FocusKeyManager<MenuItemDirective>;\n\n  @Input() ariaRole: \"menu\" | \"dialog\" = \"menu\";\n\n  @Input() ariaLabel: string;\n\n  ngAfterContentInit() {\n    if (this.ariaRole === \"menu\") {\n      this.keyManager = new FocusKeyManager(this.menuItems).withWrap();\n    }\n  }\n}\n","export type ButtonType = \"primary\" | \"secondary\" | \"danger\" | \"unstyled\";\n\nexport abstract class ButtonLikeAbstraction {\n  loading: boolean;\n  disabled: boolean;\n  setButtonType: (value: ButtonType) => void;\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n/**\n * Temporarily duplicate this pipe\n */\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { I18nPipe } from \"./i18n.pipe\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [I18nPipe],\n  exports: [CommonModule, I18nPipe],\n})\nexport class SharedModule {}\n","import { HostBinding, Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"th[bitCell], td[bitCell]\",\n})\nexport class CellDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\"tw-p-3\"];\n  }\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"tr[bitRow]\",\n})\nexport class RowDirective {\n  @Input() alignContent: \"top\" | \"middle\" | \"bottom\" | \"baseline\" = \"baseline\";\n\n  get alignmentClass(): string {\n    switch (this.alignContent) {\n      case \"top\":\n        return \"tw-align-top\";\n      case \"middle\":\n        return \"tw-align-middle\";\n      case \"bottom\":\n        return \"tw-align-bottom\";\n      default:\n        return \"tw-align-baseline\";\n    }\n  }\n\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-border-0\",\n      \"tw-border-b\",\n      \"tw-border-secondary-300\",\n      \"tw-border-solid\",\n      \"hover:tw-bg-background-alt\",\n      \"last:tw-border-0\",\n      this.alignmentClass,\n    ];\n  }\n}\n","<table class=\"tw-w-full tw-table-auto tw-leading-normal tw-text-main\">\n  <thead\n    class=\"tw-text-bold tw-border-0 tw-border-b-2 tw-border-solid tw-border-secondary-300 tw-text-muted\"\n  >\n    <ng-content select=\"[header]\"></ng-content>\n  </thead>\n  <tbody>\n    <ng-container\n      *ngTemplateOutlet=\"templateVariable.template; context: { $implicit: rows }\"\n    ></ng-container>\n  </tbody>\n</table>\n","import { isDataSource } from \"@angular/cdk/collections\";\nimport {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnDestroy,\n  TemplateRef,\n} from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { TableDataSource } from \"./table-data-source\";\n\n@Directive({\n  selector: \"ng-template[body]\",\n})\nexport class TableBodyDirective {\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  constructor(public readonly template: TemplateRef<any>) {}\n}\n\n@Component({\n  selector: \"bit-table\",\n  templateUrl: \"./table.component.html\",\n})\nexport class TableComponent implements OnDestroy, AfterContentChecked {\n  @Input() dataSource: TableDataSource<any>;\n\n  @ContentChild(TableBodyDirective) templateVariable: TableBodyDirective;\n\n  protected rows: Observable<readonly any[]>;\n\n  private _initialized = false;\n\n  ngAfterContentChecked(): void {\n    if (!this._initialized && isDataSource(this.dataSource)) {\n      this._initialized = true;\n\n      const dataStream = this.dataSource.connect();\n      this.rows = dataStream;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (isDataSource(this.dataSource)) {\n      this.dataSource.disconnect();\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\n/**\n * Component used for styling the tab header/background for both content and navigation tabs\n */\n@Component({\n  selector: \"bit-tab-header\",\n  host: {\n    class:\n      \"tw-h-16 tw-pl-4 tw-bg-background-alt tw-flex tw-items-end tw-border-0 tw-border-b tw-border-solid tw-border-secondary-300\",\n  },\n  template: `<ng-content></ng-content>`,\n})\nexport class TabHeaderComponent {}\n","import { Directive } from \"@angular/core\";\n\n/**\n * Directive used for styling the container for bit tab labels\n */\n@Directive({\n  selector: \"[bitTabListContainer]\",\n  host: {\n    class: \"tw-inline-flex tw-flex-wrap tw-leading-5\",\n  },\n})\nexport class TabListContainerDirective {}\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\n/**\n * Directive used for styling tab header items for both nav links (anchor tags)\n * and content tabs (button tags)\n */\n@Directive({ selector: \"[bitTabListItem]\" })\nexport class TabListItemDirective implements FocusableOption {\n  @Input() active: boolean;\n  @Input() disabled: boolean;\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    return this.disabled || null; // native disabled attr must be null when false\n  }\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  click() {\n    this.elementRef.nativeElement.click();\n  }\n\n  @HostBinding(\"class\")\n  get classList(): string[] {\n    return this.baseClassList\n      .concat(this.active ? this.activeClassList : [])\n      .concat(this.disabled ? this.disabledClassList : [])\n      .concat(this.textColorClassList);\n  }\n\n  /**\n   * Classes used for styling tab item text color.\n   * Separate text color class list required to override bootstrap classes in Web.\n   */\n  get textColorClassList(): string[] {\n    if (this.disabled) {\n      return [\"!tw-text-muted\", \"hover:!tw-text-muted\"];\n    }\n    if (this.active) {\n      return [\"!tw-text-primary-500\", \"hover:!tw-text-primary-700\"];\n    }\n    return [\"!tw-text-main\", \"hover:!tw-text-main\"];\n  }\n\n  get baseClassList(): string[] {\n    return [\n      \"tw-block\",\n      \"tw-relative\",\n      \"tw-py-2\",\n      \"tw-px-4\",\n      \"tw-font-semibold\",\n      \"tw-transition\",\n      \"tw-rounded-t\",\n      \"tw-border-0\",\n      \"tw-border-x\",\n      \"tw-border-t-4\",\n      \"tw-border-transparent\",\n      \"tw-border-solid\",\n      \"tw-bg-transparent\",\n      \"hover:tw-underline\",\n      \"focus-visible:tw-z-10\",\n      \"focus-visible:tw-outline-none\",\n      \"focus-visible:tw-ring-2\",\n      \"focus-visible:tw-ring-primary-700\",\n    ];\n  }\n\n  get disabledClassList(): string[] {\n    return [\"!tw-bg-secondary-100\", \"!tw-no-underline\", \"tw-cursor-not-allowed\"];\n  }\n\n  get activeClassList(): string[] {\n    return [\n      \"tw--mb-px\",\n      \"tw-border-x-secondary-300\",\n      \"tw-border-t-primary-500\",\n      \"tw-border-b\",\n      \"tw-border-b-background\",\n      \"tw-bg-background\",\n      \"hover:tw-border-t-primary-700\",\n      \"focus-visible:tw-border-t-primary-700\",\n      \"focus-visible:!tw-text-primary-700\",\n    ];\n  }\n}\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { AfterViewInit, Component, HostListener, Input, OnDestroy, ViewChild } from \"@angular/core\";\nimport { IsActiveMatchOptions, RouterLinkActive } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { TabListItemDirective } from \"../shared/tab-list-item.directive\";\n\nimport { TabNavBarComponent } from \"./tab-nav-bar.component\";\n\n@Component({\n  selector: \"bit-tab-link\",\n  templateUrl: \"tab-link.component.html\",\n})\nexport class TabLinkComponent implements FocusableOption, AfterViewInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  @ViewChild(TabListItemDirective) tabItem: TabListItemDirective;\n  @ViewChild(\"rla\") routerLinkActive: RouterLinkActive;\n\n  readonly routerLinkMatchOptions: IsActiveMatchOptions = {\n    queryParams: \"ignored\",\n    matrixParams: \"ignored\",\n    paths: \"subset\",\n    fragment: \"ignored\",\n  };\n\n  @Input() route: string | any[];\n  @Input() disabled = false;\n\n  @HostListener(\"keydown\", [\"$event\"]) onKeyDown(event: KeyboardEvent) {\n    if (event.code === \"Space\") {\n      this.tabItem.click();\n    }\n  }\n\n  get active() {\n    return this.routerLinkActive?.isActive ?? false;\n  }\n\n  constructor(private _tabNavBar: TabNavBarComponent) {}\n\n  focus(): void {\n    this.tabItem.focus();\n  }\n\n  ngAfterViewInit() {\n    // The active state of tab links are tracked via the routerLinkActive directive\n    // We need to watch for changes to tell the parent nav group when the tab is active\n    this.routerLinkActive.isActiveChange\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((_) => this._tabNavBar.updateActiveLink());\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<a\n  bitTabListItem\n  [routerLink]=\"disabled ? null : route\"\n  routerLinkActive\n  [routerLinkActiveOptions]=\"routerLinkMatchOptions\"\n  #rla=\"routerLinkActive\"\n  [active]=\"rla.isActive\"\n  [disabled]=\"disabled\"\n  [attr.aria-disabled]=\"disabled\"\n  ariaCurrentWhenActive=\"page\"\n  role=\"link\"\n>\n  <ng-content></ng-content>\n</a>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  forwardRef,\n  Input,\n  QueryList,\n} from \"@angular/core\";\n\nimport { TabLinkComponent } from \"./tab-link.component\";\n\n@Component({\n  selector: \"bit-tab-nav-bar\",\n  templateUrl: \"tab-nav-bar.component.html\",\n})\nexport class TabNavBarComponent implements AfterContentInit {\n  @ContentChildren(forwardRef(() => TabLinkComponent)) tabLabels: QueryList<TabLinkComponent>;\n  @Input() label = \"\";\n\n  /**\n   * Focus key manager for keeping tab controls accessible.\n   * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tablist_role#keyboard_interactions\n   */\n  keyManager: FocusKeyManager<TabLinkComponent>;\n\n  ngAfterContentInit(): void {\n    this.keyManager = new FocusKeyManager(this.tabLabels)\n      .withHorizontalOrientation(\"ltr\")\n      .withWrap()\n      .withHomeAndEnd();\n  }\n\n  updateActiveLink() {\n    // Keep the keyManager in sync with active tabs\n    const items = this.tabLabels.toArray();\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.keyManager.updateActiveItem(i);\n      }\n    }\n  }\n}\n","<bit-tab-header>\n  <nav bitTabListContainer [attr.aria-label]=\"label\" (keydown)=\"keyManager.onKeydown($event)\">\n    <ng-content></ng-content>\n  </nav>\n</bit-tab-header>\n","import { from, Observable, of, throwError } from \"rxjs\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nexport type FunctionReturningAwaitable =\n  | (() => unknown)\n  | (() => Promise<unknown>)\n  | (() => Observable<unknown>);\n\nexport function functionToObservable(func: FunctionReturningAwaitable): Observable<unknown> {\n  let awaitable: unknown;\n  try {\n    awaitable = func();\n  } catch (error) {\n    return throwError(() => error);\n  }\n\n  if (Utils.isPromise(awaitable)) {\n    return from(awaitable);\n  }\n\n  if (awaitable instanceof Observable) {\n    return awaitable;\n  }\n\n  return of(awaitable);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + (chunkId === 768 ? \"encrypt-worker\" : chunkId) + \".\" + {\"167\":\"e46b81edf723a2a3e5f6\",\"182\":\"0213c9ca535f6fe6aef1\",\"271\":\"c8b1e1a8d5e6f6fc6f9a\",\"584\":\"238f402a694e2a33f299\",\"612\":\"21e6b0d558edd4465908\",\"667\":\"7a64b60ed50dcdcfb92d\",\"754\":\"8dc86c47e64d7376e1c7\",\"768\":\"f4230c205b1bc7d3b0a1\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t148: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [734], () => (__webpack_require__(12830)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","inProgress","dataWebpackPrefix","RegisterFormModule","BaseAcceptComponent","constructor","router","platformUtilService","i18nService","route","stateService","loading","authed","requiredParameters","failedShortMessage","failedMessage","ngOnInit","this","queryParams","pipe","subscribe","qParams","error","some","e","errorMessage","getIsAuthenticated","email","authedHandler","message","unauthedHandler","t","showToast","timeout","navigate","EventView","data","humanReadableMessage","appIcon","appName","userId","userName","userEmail","date","ip","type","installationId","systemUser","BaseEventsComponent","eventService","exportService","platformUtilsService","logService","fileDownloadService","loaded","dirtyDates","defaultDates","getDefaultDateFilters","start","end","exportEvents","appApiPromiseUnfulfilled","dates","parseDates","exportPromise","export","loadEvents","clearExisting","events","promise","loadAndParseEvents","continuationToken","refreshPromise","morePromise","result","length","concat","startDate","endDate","response","requestEvents","Promise","all","map","r","actingUserId","eventInfo","getEventInfo","user","getUserName","name","ipAddress","formatDateFilters","getEventExport","fileName","getFileName","exportFileName","download","blobData","blobOptions","UserConfirmComponent","cryptoService","onConfirmedUser","dontAskAgain","publicKey","fingerprint","getFingerprint","buffer","join","submit","setAutoConfirmFingerprints","emit","BasePeopleComponent","apiService","searchService","validationService","modalService","searchPipe","userNamePipe","statusMap","Map","users","pagedUsers","allUsers","activeUsers","didScroll","pageSize","pagedUsersCount","allCount","invitedCount","has","userStatusType","Invited","get","acceptedCount","Accepted","confirmedCount","Confirmed","revokedCount","Revoked","showConfirmUsers","showBulkConfirmUsers","load","getUsers","clear","status","set","sort","forEach","u","push","filter","selectAll","resetPaging","loadMore","pagedLength","pagedSize","slice","checkUser","select","checked","filteredUsers","transform","searchText","selectCount","i","invite","edit","removeUserConfirmationDialog","showDialog","remove","actionPromise","deleteUser","id","removeUser","showError","revoke","revokeWarningMessage","revokeUser","restore","restoreUser","reinvite","reinviteUser","confirm","confirmUser","self","mapIndex","indexOf","splice","updateUser","publicKeyResponse","getUserPublicKey","autoConfirm","getAutoConfirmFingerPrints","modal","openViewRef","confirmModalRef","comp","formPromise","close","info","isSearching","isSearchable","isPaging","searching","getCheckedUsers","index","DynamicAvatarComponent","accountUpdateService","border","size","destroy$","text","toUpperCase","color$","avatarUpdate$","ngOnDestroy","next","complete","NotPremiumDirective","templateRef","viewContainer","getCanAccessPremium","createEmbeddedView","premiumRequired","PremiumBadgeComponent","messagingService","send","keyConnectorService","userVerificationService","usesKeyConnector","disableRequestOTP","sentCode","secret","getUsesKeyConnector","processChanges","value","valueChanges","requestOTP","writeValue","obj","setValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","disable","enable","UserVerificationComponent","provide","multi","useExisting","opacity","AccountService","InternalAccountService","ConfigApiServiceAbstraction","FileUploadService","SyncNotifierService","UserVerificationApiServiceAbstraction","AccountFactory","accountConstructor","create","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","StateVersion","theme","window","stateVersion","One","environmentUrls","UpdateAvatarRequest","avatarColor","NotificationType","NotificationResponse","super","contextId","getResponseProperty","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","AuthRequest","AuthRequestResponse","AuthRequestPushNotification","organizationId","collectionIds","revisionDate","Date","DeviceType","AnonymousHubService","environmentService","authService","createHubConnection","token","url","getNotificationsUrl","anonHubConnection","HubConnectionBuilder","withUrl","skipNegotiation","transport","withHubProtocol","MessagePackHubProtocol","build","catch","on","ProcessNotification","stopHubConnection","stop","notification","authResponsePushNotifiction","DeviceRequest","appId","getDevice","getDeviceString","identifier","pushToken","TokenRequest","twoFactor","device","alterIdentityTokenHeaders","headers","setTwoFactor","setPasswordlessAccessCode","accessCode","passwordlessAuthRequest","toIdentityToken","clientId","scope","client_id","deviceType","deviceIdentifier","deviceName","authRequest","provider","twoFactorToken","twoFactorProvider","twoFactorRemember","remember","UserApiTokenRequest","clientSecret","startsWith","grant_type","client_secret","ApiKeyResponse","apiKey","AttachmentUploadDataResponse","attachmentId","fileUploadType","cipherResponse","cipherMiniResponse","requestDeviceType","requestIpAddress","key","masterPasswordHash","creationDate","requestApproved","RegisterResponse","captchaBypassToken","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","hasNoHistory","cardBrand","description","needsVerification","pdfUrl","number","paid","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","details","BillingHistoryResponse","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","domain","isActive","isVerified","logoPath","modifiedDate","pwnCount","title","SelectionReadOnlyResponse","readOnly","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","g","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EventResponse","providerId","cipherId","collectionId","groupId","policyId","organizationUserId","providerUserId","providerOrganizationId","GroupResponse","accessAll","GroupDetailsResponse","collections","c","IdentityCaptchaResponse","siteKey","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","resetMasterPassword","privateKey","kdf","kdfIterations","forcePasswordReset","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders2","captchaToken","twoFactorProviders","prop","hasOwnProperty","parseInt","KeyConnectorUserKeyResponse","OrganizationConnectionResponse","configType","enabled","rawConfig","config","OrganizationExportResponse","ciphers","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","ProfileOrganizationResponse","usePolicies","useGroups","useDirectory","useEvents","useTotp","use2fa","useApi","useSso","useKeyConnector","useScim","useCustomPermissions","useResetPassword","useSecretsManager","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","hasPublicAndPrivateKeys","ssoBound","permissions","resetPasswordEnrolled","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","keyConnectorEnabled","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","organizations","providers","providerOrganizations","emailVerified","masterPasswordHint","premiumPersonally","premiumFromOrganization","culture","twoFactorEnabled","securityStamp","o","PaymentResponse","userProfile","paymentIntentClientSecret","success","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","hasTotp","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","legacyYear","disabled","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","PreloginResponse","ProviderOrganizationResponse","settings","userCount","plan","ProviderOrganizationOrganizationDetailsResponse","organizationName","OrganizationUserBulkPublicKeyResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","ProviderResponse","businessName","billingEmail","SendAccessResponse","file","expirationDate","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","accessId","notes","maxAccessCount","accessCount","deletionDate","password","hideEmail","SendFileUploadDataResponse","sendResponse","SsoPreValidateResponse","SubscriptionResponse","storageName","storageGb","license","expiration","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","items","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","interval","sponsoredSubscriptionItem","FolderResponse","SyncResponse","folders","policies","sends","profile","f","p","s","TaxInfoResponse","taxId","taxIdType","line1","line2","city","state","postalCode","country","TaxRateResponse","rate","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","host","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","code","TwoFactorWebAuthnResponse","keys","k","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","AuditService","cryptoFunctionService","passwordLeaked","hashBytes","hash","hashStart","substr","hashEnding","nativeFetch","Request","match","split","find","v","breachedAccounts","username","getHibpBreach","statusCode","Error","limit","throttleKey","target","propertyKey","descriptor","originalMethod","allThrottles","throttles","getThrottles","argsThrottleKey","queue","resolve","reject","exec","onFinally","delete","apply","then","val","err","PasswordTokenRequest","captchaResponse","AuthResult","captchaSiteKey","requiresCaptcha","requiresTwoFactor","LogInStrategy","tokenService","appIdService","twoFactorService","logInTwoFactor","tokenRequest","startLogIn","clearSelectedProvider","postIdentityToken","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","buildDeviceRequest","getAppId","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","saveAccountInformation","tokenResponse","accountInformation","decodeToken","addAccount","sub","hasPremiumPersonally","premium","kdfType","tokens","setTwoFactorToken","setUserKey","setEncKey","setEncPrivateKey","createKeyPairForOldAccount","setProviders","makeKeyPair","postAccountKeys","encryptedString","PasswordLogInStrategy","setKey","setKeyHash","localHashedPassword","logIn","credentials","masterPassword","makePreloginKey","hashPassword","hashedPassword","PasswordlessLogInStrategy","passwordlessCredentials","authRequestId","decKey","localPasswordHash","SsoTokenRequest","codeVerifier","redirectUri","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","orgId","getAndSetKey","redirectUrl","UserApiLogInStrategy","getKeyConnectorUrl","setApiKeyClientId","setApiKeyClientSecret","PreloginRequest","sequentialize","cacheKey","caches","cache","getCache","argsCacheKey","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","clearTimeout","setTimeout","lastUsedIndex","Math","max","cipher","localData","lastLaunched","x","y","valueOf","getNextIndex","CipherBulkMoveRequest","ids","folderId","CipherBulkRestoreRequest","CipherBulkShareRequest","CipherPartialRequest","favorite","CipherShareRequest","DomainMatchBlacklist","Set","CipherService","settingsService","fileUploadService","encryptService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","encrypt","model","originalCipher","existingCipher","decrypt","passwordHistory","login","ph","lastUsedDate","passwordRevisionDate","hasFields","existingHiddenFields","fields","hiddenFields","ef","matchedField","reprompt","getOrgKey","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachments","attachmentsModel","promises","encAttachments","attachment","sizeName","fieldsModel","encFields","reduce","field","encField","encryptField","fieldModel","linkedId","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","getAll","getAllDecrypted","reindexCiphers","hasKey","orgKeys","getOrgKeys","userKey","getKeyForUserEncryption","grouped","agg","decCiphers","Object","entries","groupedCiphers","decryptItems","flat","getLocaleSortingFunction","getUserId","indexedEntityId","getAllDecryptedForGrouping","groupingId","folder","isDeleted","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","firstValueFrom","settings$","matches","eqDomain","matchingDomains","getDefaultUriMatch","deletedDate","uris","uri","domainUrlHost","urlHost","RegExp","test","getAllFromApiForOrganization","getCiphersOrganization","cr","getLastUsedForUrl","autofillOnPageLoad","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","getTime","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","createWithServer","request","postCipherCreate","postCipher","upsert","updateWithServer","putCipher","putPartialCipher","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","putShareCipher","shareManyWithServer","encCiphers","putShareCiphers","toCipherData","saveAttachmentWithServer","unencryptedFile","admin","reader","FileReader","readAsArrayBuffer","onload","evt","cData","saveAttachmentRawWithServer","onerror","filename","encFileName","dataEncKey","makeEncKey","encData","encryptToBytes","fileSize","byteLength","adminRequest","uploadDataResponse","postCipherAttachment","uploadCipherAttachment","getSingleMessage","legacyServerAttachmentFileUpload","fd","FormData","blob","Blob","append","Buffer","from","filepath","contentType","postCipherAttachmentAdminLegacy","postCipherAttachmentLegacy","saveCollectionsWithServer","putCipherCollections","replace","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","putMoveCiphers","deleteWithServer","deleteCipher","deleteManyWithServer","deleteManyCiphers","deleteAttachment","deleteAttachmentWithServer","deleteCipherAttachment","a","b","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","collator","compare","localeCompare","softDelete","setDeletedDate","toISOString","softDeleteWithServer","putDeleteCipher","softDeleteManyWithServer","putDeleteManyCiphers","clearDeletedDate","Array","restoreWithServer","putRestoreCipher","restoreManyWithServer","putRestoreManyCiphers","restores","attachmentView","attachmentResponse","toString","encBuf","decBuf","decryptFromBytes","postShareCipherAttachment","theProp","theObj","modelProp","totp","loginUri","secureNote","card","cardholderName","brand","expMonth","expYear","identity","firstName","middleName","lastName","address1","address2","address3","company","phone","ssn","passportNumber","licenseNumber","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","ServerConfigResponse","version","gitHash","server","ThirdPartyServerConfigResponse","environment","EnvironmentServerConfigResponse","vault","api","notifications","sso","ServerConfig","serverConfigData","utcDate","getAgeInMilliseconds","isValid","expiresSoon","EFFLongWordList","BaseEncryptedOrganizationKey","static","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","decValue","rsaDecrypt","toData","providerKey","getProviderKey","decryptToBytes","CryptoService","setCryptoMasterKey","storeKey","keyHash","encKey","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","orgs","providerOrgs","encOrgKeyData","org","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","providerKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","getKey","keySuffix","inMemoryKey","getCryptoMasterKey","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","warning","clearSecretKeyStore","getKeyHash","compareAndUpdateKeyHash","storedKeyHash","localKeyHash","serverKeyHash","getEncKey","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","hasKeyStored","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","hasEncKey","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","makeKey","salt","pbkdf2","makeKeyFromPin","pin","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","pinKey","makePinKey","makeShareKey","shareKey","randomBytes","rsaEncrypt","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","buildEncKey","remakeEncKey","plainValue","encBytes","encValue","privateKeyValue","headerPieces","encPieces","encType","alg","encString","keyForEnc","decryptToUtf8","encBuffer","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","Uint8Array","shouldStoreKey","keyB64","getVaultTimeout","getBiometricUnlock","supportsSecureStorage","getCryptoMasterKeyBiometric","newKey","macKey","minimumEntropy","entropyPerWord","log","numWords","hashArr","phrase","hashNumber","remainder","mod","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","encryptionType","symmetricCryptoKey","EncryptedObject","EncryptServiceImplementation","logMacFailures","plainBuf","encObj","aesEncrypt","iv","mac","macLen","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","macData","compareFast","logMacFailed","aesDecryptFast","encThing","macBytes","ivBytes","dataBytes","hmac","aesDecrypt","item","msg","classInitializers","MultithreadEncryptServiceImplementation","clear$","Subject","worker","Worker","URL","restartTimeout","postMessage","JSON","stringify","fromEvent","parse","jsonItem","className","initializerKey","takeUntil","defaultIfEmpty","terminate","EventRequest","EventExport","event","FileUploadType","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","Headers","toUTCString","searchParams","body","method","blobResponse","fetch","baseUrl","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","json","blockListUrl","blockListXml","expiry","isNaN","setTime","now","utfBlockId","blockIdList","xml","Version","year","month","day","parts","Number","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","SetKeyConnectorKeyRequest","orgIdentifier","KeyConnectorUserKeyRequest","LoginService","getEmail","_email","getRememberEmail","_rememberEmail","setEmail","setRememberEmail","clearValues","saveEmailSettings","setRememberedEmail","OrganizationUserResponse","OrganizationUserUserDetailsResponse","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","resetPasswordKey","encryptedPrivateKey","OrganizationUserBulkResponse","OrganizationUserBulkRequest","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","resetPasswordEnabled","KeysResponse","OrganizationKeysResponse","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","planType","maxAutoscaleSeats","OrganizationSubscriptionResponse","OrganizationSsoResponse","urls","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","PasswordGeneratorPolicyOptions","defaultType","minLength","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","ambiguous","minNumber","uppercase","minUppercase","lowercase","minLowercase","special","minSpecial","wordSeparator","ResetPasswordPolicyOptions","autoEnrollEnabled","Provider","canAccess","isProviderAdmin","canCreateOrganizations","canManageUsers","canAccessEventLogs","SearchService","cipherService","indexing","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","locale$","locale","registeredPipeline","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","query","normalizeSearchQuery","builder","Builder","pipeline","add","ref","boost","extractor","subTitle","uriExtractor","fieldExtractor","attachmentExtractor","searchCiphers","results","trim","toLowerCase","isArray","every","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","search","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","deleted","hasUris","searchSends","toLocaleLowerCase","sendsMatched","lowPriorityMatched","joined","hasAttachments","lastIndexOf","hostname","protocolIndex","queryIndex","substring","searchableFields","metadata","includes","normalize","Send","buildDomainModel","getCryptoService","cryptoKey","decryptObj","TokenService","decoded","setTokens","clientIdClientSecret","setToken","setRefreshToken","setClientId","setClientSecret","getClientId","getApiKeyClientId","getClientSecret","getApiKeyClientSecret","setAccessToken","getToken","getAccessToken","getRefreshToken","clearTwoFactorToken","clearToken","getTokenExpirationDate","exp","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","round","tokenNeedsRefresh","minutes","getEmailVerified","email_verified","getName","getIssuer","iss","getIsExternal","amr","v1Keys","alwaysShowDock","autoConfirmFingerprints","autoFillOnPageLoadDefault","biometricAwaitingAcceptance","biometricFingerprintValidated","biometricText","biometricUnlock","clearClipboard","collapsedGroupings","convertAccountToKeyConnector","defaultUriMatch","disableAddLoginNotification","disableAutoBiometricsPrompt","disableAutoTotpCopy","disableBadgeCounter","disableChangedPasswordNotification","disableContextMenuItem","disableFavicon","disableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","enableAlwaysOnTop","enableAutoFillOnPageLoad","enableBiometric","enableBrowserIntegration","enableBrowserIntegrationFingerprint","enableCloseToTray","enableFullWidth","enableMinimizeToTray","enableStartToTray","enableTray","encOrgKeys","encPrivate","entityId","entityType","eventCollection","history","installedVersion","lastActive","mainWindowSize","minimizeOnCopyToClipboard","neverDomains","noAutoPromptBiometricsText","openAtLogin","passwordGenerationOptions","pinProtected","protectedPin","ssoCodeVerifier","ssoIdentifier","ssoState","stamp","usesConnector","vaultTimeoutAction","vaultTimeout","rememberedEmail","v1KeyPrefixes","lastSync","partialKeys","storageService","secureStorageService","stateFactory","needsMigration","currentStateVersion","getCurrentStateVersion","Latest","migrate","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","authenticatedAccounts","getAuthenticatedAccounts","account","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","migrateAccountFrom5To6","Six","clearV1Keys","clearingUserId","keyPrefix","globals","noAutoPromptBiometrics","ssoOrganizationIdentifier","defaultAccount","accountSettings","autoConfirmFingerPrints","assign","decrypted","encrypted","addEditCipherInfo","passwordGenerationHistory","apiKeyClientSecret","cryptoMasterKey","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","cryptoSymmetricKey","legacyEtmKey","organizationKeys","apiKeyClientId","authenticationStatus","everBeenUnlocked","decodedToken","accountActivity","save","authenticatedUserIds","getGlobals","encryptedOrgKeys","options","htmlStorageLocation","newVersion","OrganizationData","SyncService","folderService","collectionService","policyService","sendService","providerService","folderApiService","organizationService","logoutCallback","syncInProgress","getLastSync","setLastSync","toJSON","fullSync","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","refreshIdentityToken","getSync","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","syncUpsertFolder","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","getFullCipherDetails","syncDeleteCipher","syncUpsertSend","localSend","remoteSend","getSend","sendId","syncDeleteSend","successfully","getAccountRevisionDate","getSecurityStamp","setAvatarColor","setSecurityStamp","setEmailVerified","setHasPremiumPersonally","setHasPremiumFromOrganization","setForcePasswordReset","setUsesKeyConnector","isProviderUser","userNeedsMigration","setConvertAccountRequired","removeConvertAccountRequired","eqDomains","global","setEquivalentDomains","B32Chars","SteamChars","VerifyOTPRequest","OTP","AnonAddyForwarder","generate","anonaddy","requestInit","redirect","Authorization","website","DuckDuckGoForwarder","address","FastmailForwarder","accountId","getAccountId","using","methodCalls","emailPrefix","fastmail","prefix","methodResponses","created","notCreated","primaryAccounts","FirefoxRelayForwarder","generated_for","full_address","ForwarderOptions","FastmailForwarderOptions","AnonAddyForwarderOptions","SimpleLoginForwarder","Authentication","note","alias","wordCapitalize","wordIncludeNumber","subaddressType","catchallType","forwardedService","forwardedAnonAddyDomain","DecryptParameters","BroadcasterService","subscribers","messageCallback","unsubscribe","modalRef","showPassword","togglePassword","component","protectedFields","showPasswordPrompt","open","allowMultipleModals","onClosedPromise","ThemeBuilder","configuredTheme","systemTheme","effectiveTheme","updateSystemTheme","updateConfiguredTheme","ThemingService","document","_theme","BehaviorSubject","theme$","monitorThemeChanges","getTheme","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","getValue","setTheme","documentElement","classList","matchMedia","JslibServicesModule","useValue","useFactory","translationLocale","deps","navigator","language","expired","useClass","makeAndGetAppId","getAnonymousAppId","existingId","guid","pushNotificationSubject","logInStrategy","strategy","clearState","saveState","logOut","callback","authingWithUserApiKey","authingWithSso","authingWithPassword","authingWithPasswordless","getAuthStatus","getEverBeenUnlocked","preloginResponse","postPrelogin","getPushNotifcationObs$","asObservable","startSessionTimeout","clearSessionTimeout","sessionTimeout","P","injector","_folders","_folderViews","folders$","folderViews$","activeAccountUnlocked$","concatMap","unlocked","getEncryptedFolders","updateObservables","getAllFromState","getFromState","getAllDecryptedFromState","values","decryptFolders","setEncryptedFolders","updates","cId","foldersMap","decryptFolderPromises","decryptedFolders","noneFolder","postFolder","putFolder","deleteFolder","accountService","deleteAccount","verification","verificationRequest","buildRequest","_avatarUpdate$","loadColorFromState","getAvatarColor","color","pushUpdate","putAvatar","setDecryptedCollections","collection","decryptMany","decCollections","getEncryptedCollections","decryptedCollections","getDecryptedCollections","getAllNested","nodes","collectionCopy","getNested","setEncryptedCollections","urlsSubject","scimUrl","activeAccount$","setUrlsFromStorage","hasBaseUrl","notificationsUrl","getWebVaultUrl","webVaultUrl","getSendUrl","getIconsUrl","iconsUrl","getApiUrl","apiUrl","getIdentityUrl","identityUrl","getEventsUrl","eventsUrl","getScimUrl","getEnvironmentUrls","envUrls","base","webVault","icons","keyConnector","setUrls","formatUrl","scim","setEnvironmentUrls","getUrls","isCloud","getCode","period","digits","keyB32","isOtpAuth","isSteamAuth","params","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","floor","timeBytes","keyBytes","b32ToBytes","sign","offset","binary","otp","fullCode","trunc","getTimeInterval","l","b32ToHex","cleanedInput","bits","hex","byteIndex","charAt","chunk","signature","generatePassword","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getOptions","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","enforcedPolicyOptions","getPasswordGeneratorPolicyOptions","currentPolicy","useUpper","useLower","minNumbers","saveOptions","getHistory","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decryptHistory","setDecryptedPasswordGenerationHistory","addHistory","currentHistory","matchesPrevious","unshift","pop","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","passwordStrength","userInputs","globalUserInputs","finalUserInputs","normalizeOptions","str","num","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","generateUsername","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","subaddressEmail","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwarder","forwarderOptions","forwardedSimpleLoginApiKey","forwardedAnonAddyApiToken","forwardedFirefoxApiToken","forwardedFastmailApiToken","forwardedDuckDuckGoToken","getUsernameGenerationOptions","setUsernameGenerationOptions","charSet","width","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","Accept","identityToken","getClientType","qsStringify","getCredentials","responseJson","isJsonResponse","TwoFactorProviders2","HCaptcha_SiteKey","doAuthRefresh","postAuthRequest","getAuthResponse","path","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postEmailToken","postEmail","postPassword","setPassword","postSetKeyConnectorKey","postSecurityStamp","postPasswordHint","postRegister","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountVerifyPassword","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","getSsoUserIdentifier","postUserApiKey","postUserRotateApiKey","putUpdateTempPassword","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","postSendAccess","getSendFileDownloadData","getSends","L","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","postCipherAdmin","putCipherAdmin","deleteCipherAdmin","deleteManyCiphersAdmin","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipherAdmin","putDeleteManyCiphersAdmin","putRestoreCipherAdmin","getAttachmentData","emergencyAccessId","deleteCipherAttachmentAdmin","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollections","getCollectionUsers","dr","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getPlans","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","btoa","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","postTwoFactorEmail","getDeviceVerificationSettings","putDeviceVerificationSettings","getKnownDevice","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getOrganizationExport","getApplicationVersionNumber","preValidateSso","encodeURIComponent","postCreateSponsorship","sponsoredOrgId","isSelfHost","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","doRefreshToken","doApiTokenRefresh","deviceRequest","hasResponse","alterHeaders","requestUrl","href","responseType","responseIsJson","tokenError","isTextResponse","Message","typeHeader","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","_settings","getSettings","setSettings","setVaultTimeoutOptions","action","setVaultTimeout","currentAction","getVaultTimeoutAction","setVaultTimeoutAction","isPinLockSet","getProtectedPin","isBiometricLockSet","policyAppliesToUser","policy","setEverBeenUnlocked","setDecryptedPinProtected","setProtectedPin","vaultTimeoutSettingsService","lockedCallback","loggedOutCallback","inited","init","checkOnInterval","startCheck","checkVaultTimeout","setInterval","isViewOpen","accounts","accounts$","shouldLock","executeTimeoutAction","lock","pinSet","getDecryptedPinProtected","authStatus","getLastActive","vaultTimeoutSeconds","getExport","format","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","extension","getFullYear","padNumber","getMonth","getDate","getHours","getMinutes","getSeconds","decFolders","exportCiphers","buildCommonCipher","exportData","exportPromises","decCol","decCipher","collectionsMap","orgKey","padCharacter","numString","login_uri","login_username","login_password","login_totp","syncService","connected","inactive","reconnectTimer","signalrConnection","off","accessTokenFactory","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","isAuthenticated","payloadUserId","UserId","myUserId","random","win","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","n","okm","md","valueBytes","toByteString","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","bytes","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","encKeyB64","macKeyB64","parameters","dataBuffer","decipher","finish","output","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","arr","getRandomValues","buf","cryptoFunctionservice","uploadEvents","getEventCollection","req","clearEvents","setEventCollection","eventUploadService","collect","eventType","uploadImmediately","orgIds","_policies","policies$","getEncryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","prototype","call","setDecryptedPolicies","masterPasswordPolicyOptions$","of","obsPolicies","filteredPolicies","minComplexity","requireUpper","requireLower","requireNumbers","requireSpecial","policyAppliesToActiveUser$","policyType","policyFilter","checkPoliciesThatApplyToUser","evaluateMasterPassword","newPassword","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","mapPoliciesFromToken","policiesResponse","setEncryptedPolicies","isExcemptFromPolicies","organization","isExemptFromPolicies","policiesMap","policySet","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","getMasterPasswordPoliciesForInvitedUsers","putPolicy","setDecryptedSends","fileData","passwordHash","hidden","ArrayBuffer","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","saveWithServer","sendData","legacyServerSendFileUpload","setEncryptedSends","removePasswordWithServer","loggedInUsingSso","requiredByOrganization","getManagingOrganization","userIsNotUsingKeyConnector","migrateUser","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","pubKey","privKey","setPasswordRequest","setConvertAccountToKeyConnector","getConvertAccountRequired","getConvertAccountToKeyConnector","userVerificationApiService","requestClass","alreadyHashed","validateInput","verifyUser","postAccountVerifyOTP","postAccountRequestOTP","_organizations","organizations$","getOrganizations","organizationsMap","canManageSponsorships","hasOrganizations","getByIdentifier","setOrganizations","getOrganizationUser","getOrganizationUserGroups","getAllUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPasswordEnrollment","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","revokeOrganizationUser","revokeManyOrganizationUsers","restoreOrganizationUser","restoreManyOrganizationUsers","getProviders","getFormValidationErrors","controls","errors","control","controlErrors","keyError","controlName","errorName","getBilling","getSubscription","getLicense","getAutoEnrollStatus","createLicense","updatePayment","upgrade","updateSubscription","updateSeats","updateStorage","verifyBank","cancel","reinstate","leave","updateLicense","importDirectory","getOrCreateApiKey","getApiKeyInformation","organizationApiKeyType","rotateApiKey","updateTaxInfo","getKeys","updateKeys","getSso","updateSso","_sync","sync$","configApiService","_serverConfig","serverConfig$","switchMap","timer","E","buildServerConfig","serverConfig","getServerConfig","fetchServerConfig","setServerConfig","defaultErrorMessage","validationErrors","getAllMessages","MemoryStorageService","store","getBypassCache","BroadcasterMessagingService","broadcasterService","subscriber","arg","command","EventService","setDate","toDateTimeLocalString","filterStart","filterEnd","ev","EventOptions","appInfo","getAppInfo","getEventMessage","humanReadableMsg","formatCipherId","getShortId","formatCollectionId","formatGroupId","formatOrgUserId","formatPolicyId","p1","formatProviderUserId","formatProviderOrganizationId","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","shortId","cipherInfo","makeAnchor","setAttribute","outerHTML","createElement","innerHTML","pad","norm","abs","HtmlStorageService","defaultOptions","localStorage","getItem","sessionStorage","setItem","removeItem","ContainerService","attachToGlobal","bitwardenContainerService","getEncryptService","InitService","notificationsService","vaultTimeoutService","themingService","location","origin","getLocale","ModalService","componentFactoryResolver","applicationRef","el","modalOpen","setupHandlers","onCreated","first","modals","querySelectorAll","show","shown","focus","closed","onClose","PasswordRepromptComponent","PasswordRepromptService","PolicyListService","addPolicies","FileDownloadBuilder","_request","fileType","downloadMethod","fileNameLower","endsWith","WebFileDownloadService","isSafari","createObjectURL","style","position","appendChild","click","removeChild","ClientType","WebPlatformUtilsService","browserCache","userAgent","chrome","Web","isFirefox","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","launchUri","sameWindow","rel","getApplicationVersion","supportsWebAuthn","PublicKeyCredential","supportsDuo","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","querySelector","removeAttribute","iconHtmlStr","undefined","confirmed","heightAuto","buttonsStyling","icon","iconHtml","html","titleText","showCancelButton","cancelButtonText","showConfirmButton","confirmButtonText","isDev","copyToClipboard","doc","clipboardData","setData","queryCommandSupported","textarea","textContent","copyEl","contains","execCommand","debug","console","warn","readFromClipboard","supportsBiometric","authenticateBiometric","CoreModule","parentModule","initService","rememberEmail","systemLanguage","localesDirectory","getLocalesJson","_locale","ReplaySubject","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","p2","p3","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","filePath","localesResult","migrationStateFrom1To2","RouterService","activatedRoute","titleService","previousUrl","currentUrl","child","firstChild","titleId","snapshot","rawTitle","updateUrl","doNotSaveUrl","newTitle","setTitle","setPreviousUrl","getPreviousUrl","AccountSettings","Account","StateService","memoryStorageService","stateMigrationService","useAccountCache","reconcileOptions","defaultInMemoryOptions","FooterComponent","FrontendLayoutComponent","NavbarComponent","selfHosted","ProductSwitcherContentComponent","products$","combineLatest","paramMap","routeOrg","smOrg","canAccessSecretsManager","products","pm","appRoute","marketingRoute","sm","bento","other","ProductSwitcherComponent","changeDetector","isEnabled","buttonType","ngAfterViewInit","detectChanges","ProductSwitcherModule","OrganizationCreateModule","changedBusinessOwned","OrganizationInformationComponent","nameOnly","createOrganization","isProvider","acceptingSponsorship","OrganizationPermissionsGuard","canActivate","createUrlTree","isOwner","permissionsCallback","organizationPermissions","root","queryParamMap","itemId","OrganizationRedirectGuard","customRedirect","autoRedirectCallback","redirectPath","OrganizationSwitcherComponent","activeOrganization","OrganizationLayoutComponent","_destroy","organization$","mergeMap","canShowSettingsTab","canShowManageTab","canShowMembersTab","canShowGroupsTab","canShowReportsTab","canShowBillingTab","getReportTabLabel","OrganizationUserBulkConfirmRequest","BulkConfirmComponent","organizationUserService","publicKeys","fingerprints","statuses","done","excludedUsers","isAccepted","getPublicKeys","entry","getCryptoKey","userIdsWithKeys","encryptedKey","postConfirmRequest","BulkRemoveComponent","deleteUsers","removeUsersWarning","BulkStatusComponent","EntityEventsComponent","showUser","orgUsersUserIdMap","orgUsersIdMap","entity","PolicyRequest","BasePolicy","display","BasePolicyComponent","policyResponse","loadData","patchValue","buildRequestData","policiesEnabledMap","PoliciesModule","DisableSendPolicy","DisableSendPolicyComponent","MasterPasswordPolicy","MasterPasswordPolicyComponent","formBuilder","group","showKeyConnectorInfo","passwordScores","PasswordGeneratorPolicy","PasswordGeneratorPolicyComponent","defaultTypes","PersonalOwnershipPolicy","PersonalOwnershipPolicyComponent","RequireSsoPolicy","RequireSsoPolicyComponent","singleOrgEnabled","ResetPasswordPolicy","ResetPasswordPolicyComponent","SendOptionsPolicy","SendOptionsPolicyComponent","disableHideEmail","SingleOrgPolicy","SingleOrgPolicyComponent","TwoFactorAuthenticationPolicy","TwoFactorAuthenticationPolicyComponent","PolicyEditComponent","policyApiService","cdr","onSavedPolicy","factory","resolveComponentFactory","policyComponent","policyFormRef","createComponent","instance","Enabled","PoliciesComponent","policyListService","parent","policyIdFromEvents","orgPolicy","orgPolicies","op","editModalRef","OrganizationUpdateRequest","CountBasedLocalizationKey","singular","plural","count","OrganizationContentSummaryItem","localizationKeyOptions","localizationKey","OrganizationContentSummary","totalItemCount","itemCountByType","DeleteOrganizationComponent","organizationApiService","deleteOrganizationRequestType","organizationContentSummary","onSuccess","buildOrganizationContentSummary","organizationItems","cipherType","getOrganizationItemCountByType","getOrganizationItemLocalizationKeysByType","viewApiKey","AccountComponent","canManageBilling","canUseApi","orgShareKey","deleteOrganization","deleteModalRef","purgeVault","purgeModalRef","apiKeyModalRef","postKey","bind","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKeyModalRef","isRotation","recoveryCode","manage","TwoFactorSetupComponent","duoComp","openModal","duoModalRef","onUpdated","updateStatus","filterProvider","routes","children","pathMatch","canManagePolicies","canAccessImportExport","canManageSso","canManageScim","loadChildren","m","OrganizationImportExportModule","OrganizationSettingsRoutingModule","OrganizationSettingsModule","SettingsComponent","copy","togglePasswordCount","checkPassword","upgradeOrganization","removeUri","launch","loginUriMatchChanged","addUri","toggleCardNumber","toggleCardCode","organizationChanged","viewHistory","repromptChanged","toggleFavorite","AddEditComponent","auditService","totpService","passwordGenerationService","eventCollectionService","passwordRepromptService","componentName","allowOwnershipAssignment","ownershipOptions","allowPersonal","cloneMode","canEditAnyCollection","editMode","loadCollections","loadCipher","encryptCipher","saveCipher","EmergencyAccessAcceptRequest","AcceptEmergencyComponent","OrganizationUserAcceptRequest","AcceptOrganizationComponent","getOrganizationInvitation","prepareOrganizationInvitation","prepareAcceptRequest","setOrganizationInvitation","performResetPasswordAutoEnroll","policyList","orgName","PasswordHintRequest","loginService","successRoute","onSuccessfulSubmit","HintComponent","ngZone","pinLock","webVaultHostname","invalidPinAttempts","handlePinRequiredUnlock","handleMasterPasswordRequiredUnlock","unlockBiometric","biometricLock","doContinue","input","getElementById","isStable","onStable","take","doUnlockWithPin","failed","getKdfType","getKdfIterations","setKeyAndContinue","doUnlockWithMasterPassword","passwordValid","decPin","getDisableFavicon","setDisableFavicon","getBiometricText","hideInput","vaultUrl","LockComponent","routerService","navigateByUrl","CaptchaIFrame","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","connectorLink","sendMessage","iframe","src","contentWindow","base64Encode","String","fromCharCode","cleanup","removeEventListener","createParams","URLSearchParams","initComponent","addEventListener","validMessage","parsedMessage","height","AuthRequestType","CaptchaProtectedComponent","setupCaptcha","captcha","showCaptcha","handleCaptchaRequired","PasswordLogInCredentials","SsoLogInCredentials","PasswordlessLogInCredentials","PasswordlessCreateAuthRequest","fingerprintPhrase","startPasswordlessLogin","LoginWithDeviceComponent","anonymousHubService","showResendNotification","twoFactorRoute","forcePasswordResetRoute","getCurrentNavigation","confirmResponse","buildAuthRequest","reqResponse","passwordlessRequest","requestId","buildLoginCredntials","loginResponse","onSuccessfulLoginTwoFactorNavigate","onSuccessfulLoginForceResetNavigate","onSuccessfulLogin","onSuccessfulLoginNavigate","authRequestKeyPair","AuthenticateAndUnlock","decMasterPasswordHash","formValidationErrorService","validatedEmail","paramEmailSet","formGroup","loggedEmail","selfHostedDomain","queryParamsEmail","getRememberedEmail","markAllAsTouched","invalid","errorText","getErrorToastMessage","setFormValues","launchSsoBrowser","ssoRedirectUri","passwordOptions","numbers","codeVerifierHash","codeChallenge","setSsoState","setSsoCodeVerifier","webUrl","validateEmail","markAsTouched","toggleValidateEmail","getLoginWithDevice","reset","shift","errorTag","res","showLoginWithDevice","BitFormControlAbstraction","FormControlComponent","_inline","inline","classes","labelClasses","formControl","labelContentClasses","required","hasError","displayError","CheckboxComponent","ngControl","inputClasses","maskImage","_disabled","_required","hasValidator","touched","goToHint","LoginComponent","showResetPasswordAutoEnrollWarning","showPasswordless","goAfterLogIn","resetPasswordPolicy","enforcedPasswordPolicyOptions","strengthResult","getPasswordStrengthUserInput","masterPasswordScore","score","policiesData","clearValidators","updateValueAndValidity","valid","userInput","atPosition","DeleteRecoverRequest","RecoverDeleteComponent","TwoFactorRecoveryRequest","RecoverTwoFactorComponent","continuing","leaving","convert","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","strongPassword","setupSubmitActions","performSubmitActions","masterPasswordRetype","passwordStrengthResult","getStrengthResult","getPasswordScoreText","syncLoading","hint","resetPasswordAutoEnroll","onSetPasswordSuccess","userEncKey","resetRequest","onSuccessfulChangePassword","confirmField","setKdfType","setKdfIterations","PasswordStrengthComponent","showText","passwordScoreColor","scoreWidth","updatePasswordStrength","masterPasswordScoreColor","masterPasswordScoreText","ngOnChanges","masterPasswordStrengthTimeout","setPasswordScoreText","SetPasswordComponent","loggingIn","changePasswordRoute","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","authorizeUrl","buildAuthorizeUrl","userIdentifier","orgIdFromState","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","storedIdentifier","getSsoOrgIdentifier","setSsoOrganizationIdentifier","cookie","ReferenceEventRequest","VerticalStep","subLabel","applyBorder","VerticalStepContentComponent","onSelectStep","selected","selectStep","selectStepByIndex","VerticalStepperComponent","activeClass","isNextButtonHidden","steps","selectedIndex","isStepDisabled","_","completed","RegisterRequest","referenceData","InputsFieldMatch","matchTo","inputsMatchError","inputsDoesntMatchError","fieldMatchTo","fieldCtrl","fieldMatchToCtrl","setErrors","RegisterComponent","isInTrialFlow","createdAccount","showTerms","showErrorSummary","confirmMasterPassword","validateInputsDoesntMatch","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","accountCreated","registerResponse","registerAccount","buildRegisterRequest","successful","captchaRequired","validateRegistration","orgInvite","RegisterFormComponent","referenceDataValue","queryParamEmail","LogoForbesComponent","LogoUSNewsComponent","EnterpriseContentComponent","TeamsContentComponent","ConfirmationDetailsComponent","BillingComponent","previousStep","additionalSeats","orgInfoForm","stepBack","changedCountry","DefaultContentComponent","Enterprise1ContentComponent","Enterprise2ContentComponent","Teams1ContentComponent","Teams2ContentComponent","LogoCnetComponent","CnetEnterpriseContentComponent","CnetIndividualContentComponent","CnetTeamsContentComponent","AbmEnterpriseContentComponent","AbmTeamsContentComponent","billingSuccess","stepSelectionChange","navigateToOrgVault","navigateToOrgInvite","ValidOrgParams","ValidLayoutParams","TrialInitiationComponent","titleCasePipe","orgInfoSubLabel","orgLabel","billingSubLabel","layout","accountCreateOnly","useTrialStepper","trialFlowOrgs","teams","enterprise","families","routeFlowOrgs","free","individual","layouts","orgInfoFormGroup","validators","updateOn","referenceDataId","referenceId","reference","flow","setupFamilySponsorship","previouslySelectedIndex","verticalStepper","subLabelText","previous","WebAuthnIFrame","webAuthnNewTab","btnText","allow","webAuthnReady","providerType","selectedProviderType","webAuthnSupported","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","getDefaultProvider","cleanupWebAuthn","providerData","authWebAuthn","Host","sig_request","Signature","submit_callback","sig","Email","sendEmail","doSubmit","doToast","emailPromise","authRequestAccessCode","Window","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","TwoFactorOptionsComponent","TwoFactorComponent","anotherMethod","twoFactorOptionsModal","PasswordRequest","currentMasterPassword","newMasterPasswordHash","UpdatePasswordComponent","OrganizationUserResetPasswordRequest","UpdateTempPasswordRequest","newPasswordHash","newEncKey","UpdateTempPasswordComponent","VerifyEmailRequest","VerifyEmailTokenComponent","VerifyDeleteRecoverRequest","VerifyRecoverDeleteComponent","HomeGuard","CollectionPermission","AccessItemType","UserLayoutComponent","findSortedIndex","sortedArray","compareFn","low","high","mid","FormSelectionList","controlFactory","allItems","selectedItems","deselectedItems","formArray","selectItems","initialValue","selectItem","deselectItems","deselectItem","deselectAll","findIndex","selectedOption","sortedInsertIndex","newControl","insert","deselectedOption","removeAt","populateItems","selectedItem","nextId","MultiSelectComponent","removeSelectedItems","searchInputId","onItemsConfirmed","valueAccessor","placeholder","loadingText","isSelected","onDropdownClosed","updatedBaseItems","baseItems","notifyOnChange","notifyOnTouched","onBlur","ariaDescribedBy","_ariaDescribedBy","searchInput","nativeElement","labelForId","UserTypePipe","unknownText","handleBlur","selectionList","PermissionMode","AccessSelectorComponent","permissionControl","initialPermission","fg","permission","readonly","accessAllItems","permissionMode","Edit","_itemComparator","itemType","permissionList","perm","View","labelId","ViewExceptPass","EditExceptPass","_permissionMode","Hidden","getRawValue","itemIcon","notifyOnTouch","pauseChangeNotification","Collection","Group","Member","permissionLabelId","accessAllLabelId","canEditItemPermission","listName","labelName","AccessSelectorModule","check","CollectionAddEditComponent","onSavedCollection","onDeletedCollection","accessGroups","groupsResponse","deletePromise","selectedChanged","filterSelected","EntityUsersComponent","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","loadUsers","searchedUsers","scrollViewportStyle","selections","dialogRef","OrgUpgradeDialogComponent","CollectionsComponent","dialogService","canCreate","pagedCollectionsCount","canCreateNewCollections","decryptCollections","canViewAssignedCollections","assignedCollections","canViewAllCollections","pagedCollections","canEdit","canDelete","dialogBodyText","orgCanManageBilling","addEditModalRef","canSave","removeCollection","usersModalRef","entityName","canEditAssignedCollections","canDeleteAnyCollection","canDeleteAssignedCollections","GroupRequest","GroupAddEditComponent","onSavedGroup","onDeletedGroup","access","GroupsComponent","pagedGroupsCount","pagedGroups","removeGroup","ManageComponent","OrganizationUserConfirmRequest","BulkRestoreRevokeComponent","isRevoking","bulkTitle","titleKey","performBulkUserAction","bulkMessage","userIds","ResetPasswordComponent","onPasswordReset","loggedOutWarningName","passwordStrengthComponent","orgSymKey","decPrivateKey","OrganizationUserUpdateRequest","OrganizationUserInviteRequest","emails","NestedCheckboxComponent","onSavedUser","onDeletedUser","parentIndeterminate","parentChecked","checkboxes","pascalize","handleDependentPermissions","UserAddEditComponent","onRevokedUser","onRestoredUser","isRevoked","showCustom","manageAllCollectionsCheckboxes","createNewCollections","editAnyCollection","deleteAnyCollection","manageAssignedCollectionsCheckboxes","editAssignedCollections","deleteAssignedCollections","customUserTypeSelected","canUseCustomPermissions","setRequestPermissions","clearPermissions","manageResetPassword","manageUsers","inviteUser","OrganizationUserUpdateGroupsRequest","groupIds","UserGroupsComponent","userGroups","ug","bulkConfirm","resetPassword","PeopleComponent","userType","orgResetPasswordPolicyEnabled","canManageUsersPassword","viewEvents","allowResetPassword","orgUser","callingUserHasPermission","showEnrolledStatus","groupsModalRef","bulkRemove","bulkRemoveModalRef","bulkRevoke","bulkRevokeOrRestore","bulkRestore","bulkReinvite","showBulkStatus","bulkConfirmModalRef","eventsModalRef","resetPasswordModalRef","warningMessage","successfullMessage","childComponent","bulkStatusModalRef","onShown","keyedErrors","keyedFilteredUsers","PipesModule","VaultService","calculateSearchBarLocalizationString","vaultFilter","selectedFolderId","selectedCollection","selectedOrganizationId","myVaultOnly","VaultSharedModule","VaultFilterModule","VaultFilter","selectedFolder","refreshCollectionsAndFolders","resetFilter","selectedCollectionId","resetOrganization","buildFilter","cipherPassesFilter","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","hasUpdatedKey","fileEl","files","saveCipherAttachment","cipherDomain","downloading","canAccessAttachments","canAccessPremium","reuploadCipherAttachment","foundAttachment","a2","reupload","viewOnly","showFixOldAttachments","AttachmentsComponent","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","vaultFilterService","activeFilter","hideFolders","hideCollections","hideFavorites","hideTrash","hideOrganizations","onFilterChange","onAddFolder","onEditFolder","isLoaded","displayCollections","fullList","collapsedFilterNodes","buildCollapsedFilterNodes","buildOrganizations","activePersonalOwnershipPolicy","checkForPersonalOwnershipPolicy","activeSingleOrganizationPolicy","checkForSingleOrganizationPolicy","buildNestedFolders","initCollections","buildCollections","toggleFilterNodeCollapseState","node","storeCollapsedFilterNodes","applyFilter","reloadCollectionsAndFolders","pruneInvalidatedFilterSelections","reloadOrganizations","addFolder","editFolder","pruneInvalidFolderSelection","pruneInvalidCollectionSelection","hasId","hide","onNodeCollapseStateChange","collectionsGrouping","collectionNodes","nestedCollections","nestedList","isCollapsed","toggleCollapse","CollectionFilterComponent","foldersGrouping","folderNodes","nestedFolders","FolderFilterComponent","cipherStatus","StatusFilterComponent","selectedCipherType","typesNode","cipherTypeEnum","TypeFilterComponent","organizationGrouping","displayMode","hasActiveFilter","applyOrganizationFilter","applyMyVaultFilter","clearFilter","EnrollMasterPasswordReset","toastStringRef","keyString","LinkSsoComponent","ngAfterContentInit","toggleResetPasswordEnrollment","unlinkSso","OrganizationOptionsComponent","allowEnrollmentChanges","OrganizationFilterComponent","displayText","searchTextChanged","onSearchTextChanged","collapsedFilterNodes$","VaultFilterComponent","buildAdminCollections","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","searchPlaceholder","accessEvents","searchPending","searchTimeout","deletedFilter","reload","refresh","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","EllipsisPipe","completeWords","ellipsis","OrganizationNameBadgeComponent","avatarService","onOrganizationClicked","isMe","textColor","emitOnOrganizationClicked","GetOrgNameFromIdPipe","profileName","clone","share","checkCipher","showAddNew","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","onOrganzationBadgeClicked","pagedCiphers","userHasPremiumAccess","noItemIcon","pagedCiphersCount","refreshing","repromptCipher","permanent","typeI18nKey","aType","displayTotpCopyButton","viewPassword","getSelected","getSelectedIds","organizationUseTotp","hasOldAttachments","VaultItemsComponent","onEventsClicked","allCiphers","BulkDeleteComponent","cipherIds","onDeleted","deleteCiphersAdmin","deleteCiphers","deleteRequest","BulkMoveComponent","onMoved","BulkRestoreComponent","onRestored","isChecked","BulkShareComponent","onShared","nonShareableCount","shareableCiphers","writeableCollections","allCollections","filterCollections","checkedCollectionIds","bulkMove","bulkShare","BulkActionsComponent","bulkDelete","promptPassword","selectedIds","vaultItemsComponent","bulkDeleteModalRef","bulkRestoreModalRef","selectedCiphers","bulkShareModalRef","bulkMoveModalRef","BroadcasterSubscriptionId","VaultComponent","changeDetectorRef","vaultService","trashCleanupWarning","firstLoaded","vaultFilterComponent","run","getCipherIdFromParams","editCipherId","queryParamsHandling","applyVaultFilter","go","filterSearchText","editCipherAttachments","madeAttachmentChanges","attachmentsModalRef","onClosed","editCipherCollections","collectionsModalRef","editCipher","cipherAddEditModalRef","onSavedCipher","onDeletedCipher","onRestoredCipher","cloneCipher","relativeTo","replaceUrl","VaultRoutingModule","VaultModule","redirectTo","canManageGroups","OrganizationReportingModule","OrganizationBillingModule","OrganizationsRoutingModule","SharedOrganizationModule","OrganizationModule","PlanSponsorshipType","AcceptFamilySponsorshipComponent","register","OrganizationSponsorshipRedeemRequest","FamiliesForEnterpriseSetupComponent","badToken","showNewOrganization","_selectedFamilyOrganizationId","organizationPlansComponent","onOrganizationCreateSuccess","existingFamilyOrganizations$","selectedFamilyOrganizationId","planSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","SendAccessView","SendAccess","SendAccessRequest","toggleText","copyText","AccessComponent","sendType","passwordRequired","unavailable","sendText","maskedText","downloadData","accessRequest","keyArray","sendAccess","disableSend","filteredSends","hasSearched","policyAppliesToActiveUser","onSuccessfulLoad","applyTextSearch","removePassword","onSuccessfulRemovePassword","onSuccessfulDelete","link","urlB64Key","clearSelections","selectedAll","selectType","selectedType","BrowserPath","DateField","DatePreset","datePipe","onSavedSend","onDeletedSend","onCancelled","copyLink","alertShown","showOptions","typeOptions","sendLinkBaseUrl","isDateTimeLocalSupported","setDates","loadSend","hasPassword","encryptSend","encSend","uploadPromise","handleCopyLinkToClipboard","copyLinkToClipboard","typeChanged","toggleOptions","togglePasswordVisible","copySuccess","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","Never","browserPath","Firefox","Safari","Default","formattedDeletionDate","miliseconds","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","h","hour","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","EffluxDatesComponent","editSend","addSend","SendComponent","sendAddEditModalRef","DeauthorizeSessionsComponent","DeleteAccountComponent","accountApiService","deleteForm","EmailTokenRequest","EmailRequest","ChangeEmailComponent","tokenSent","showTwoFactorEmailWarning","newEmail","UpdateProfileRequest","SelectableAvatarComponent","onFire","setSelection","ChangeAvatarComponent","changeColor","onSaved","defaultColorPalette","customColorSelected","customColor$","customTextColor$","debounceTime","currentSelection","showCustomPicker","colorPickerElement","generateAvatarColor","selectedColorIndex","openChangeAvatar","ProfileComponent","modalOpened","avatarModalRef","showChangeEmail","deauthorizeSessions","deauthModalRef","CreateOrganizationComponent","orgPlansComponent","UpdateDomainsRequest","toggleExcluded","customize","DomainRulesComponent","custom","globalDomain","excludedGlobalEquivalentDomains","d2","indexTrackBy","EmergencyAccessAttachmentsComponent","EmergencyAddEditComponent","viewAttachments","EmergencyAccessViewComponent","getAllCiphers","oldKeyBuffer","keyEncrypted","oldEncKey","cipherData","EmergencyAccessStatusType","EmergencyAccessType","EmergencyAccessConfirmRequest","EmergencyAccessInviteRequest","EmergencyAccessUpdateRequest","EmergencyAccessAddEditComponent","emergencyAccessType","waitTimes","emergencyAccess","waitTime","waitTimeDays","EmergencyAccessConfirmComponent","onConfirmed","EmergencyAccessPasswordRequest","EmergencyAccessTakeoverComponent","onDone","takeoverResponse","approve","requestAccess","takeover","EmergencyAccessComponent","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","grantedContacts","contact","doConfirmation","granteeId","removeGrantee","removeGrantor","RecoveryInitiated","RecoveryApproved","takeoverModalRef","form","hours","CUSTOM_VALUE","exceedsMinimumTimout","customTimeInMinutes","MIN_CUSTOM_MINUTES","combineLatestWith","vaultTimeoutPolicy","applyVaultTimeoutPolicy","current","vaultTimeouts","onTouched","validate","policyError","minTimeoutError","registerOnValidatorChange","validatorChange","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","VaultTimeoutInputComponent","PreferencesComponent","localeOptions","themeOptions","enableFavicons","getEnableFullWidth","startingLocale","startingTheme","setEnableFullWidth","setLocale","vaultTimeoutActionChanged","newValue","FolderWithIdRequest","SendWithIdRequest","UpdateKeyRequest","ChangePasswordComponent","rotateEncKey","rotateEncKeyClicked","updateKey","updateEmergencyAccesses","updateAllResetPasswordKeys","allowedStatuses","filteredAccesses","updateRequest","KdfRequest","ChangeKdfComponent","kdfOptions","recommendedKdfIterations","SecurityKeysComponent","showChangeKdf","viewUserApiKey","viewUserApiKeyModalRef","rotateUserApiKey","rotateUserApiKeyModalRef","SecurityComponent","showChangePassword","SecurityRoutingModule","getHasPremiumPersonally","hasFamilySponsorshipAvailable","hasPremiumFromOrg","getHasPremiumFromOrganization","billing","hideSubscription","notAllowedValueAsync","valueGetter","caseInsensitive","notAllowedValue","controlValue","resendEmail","SponsoringOrgRowComponent","sponsoringOrg","isSelfHosted","sponsorshipRemoved","statusMessage","statusClass","setStatus","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmailPromise","isSentAwaitingSync","toDelete","validUntil","forceReload","SponsoredFamiliesComponent","sponsorshipForm","selectedSponsorshipOrgId","sponsorshipEmail","asyncValidators","availableSponsorshipOrgs$","anyOrgsAvailable$","activeSponsorshipOrgs$","anyActiveSponsorships$","sponsoredEmail","friendlyName","resetForm","sponsorshipEmailControl","BillingHistoryViewComponent","PremiumComponent","premiumPrice","familyPlanMaxUserCount","storageGbPrice","additionalStorage","finalizePremium","paymentComponent","createPaymentToken","taxInfoComponent","taxInfo","paymentResponse","handleStripeCardPayment","additionalStorageTotal","subtotal","taxCharges","taxRate","total","SubscriptionComponent","hasPremium","subscriptionRoute","closeUpdateLicense","downloadLicense","adjustStorage","closeStorage","UserSubscriptionComponent","adjustStorageAdd","showAdjustStorage","showUpdateLicense","reinstatePromise","cancelPromise","licenseString","subscriptionMarkedForCancel","nextInvoice","storagePercentage","toFixed","storageProgressWidth","SubscriptionRoutingModule","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","avoidAmbiguous","usernameWebsite","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","initForwardOptions","passwordOptionsResponse","websiteOption","generatorOptions","getGeneratorOptions","regenerateWithoutButtonPress","regenerate","setGeneratorOptions","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","sliderInput","normalizePasswordOptions","saveUsernameOptions","usernameGeneratingPromise","copyOptions","forwardOptions","SelectCopyDirective","onCopy","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","PasswordGeneratorHistoryComponent","lengthChanged","minNumberChanged","minSpecialChanged","GeneratorComponent","historyModalRef","ToolsComponent","UpdateKeyComponent","makeRequest","onSavedFolder","onDeletedFolder","FolderAddEditComponent","onSharedCipher","cipherView","ShareComponent","VerifyEmailComponent","onVerified","verifyEmail","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","filterComponent","isShowingCards","verified","ensureVaultFiltersAreExpanded","shareCipher","shareModalRef","folderAddEditModalRef","updateKeyModalRef","favorites","ImportExportModule","OssRoutingModule","buildFlaggedRoute","flagName","useHash","paramsInheritanceStrategy","HasPremiumGuard","routerState","userHasPremium","BreachReportComponent","checkedUsername","ReportBreach","ReportExposedPasswords","ReportInactiveTwoFactor","ReportReusedPasswords","ReportUnsecuredWebsites","ReportWeakPasswords","ReportType","reports","ExposedPasswords","ReusedPasswords","WeakPasswords","UnsecuredWebsites","Inactive2fa","DataBreach","ReportsSharedModule","ReportsHomeComponent","reportRequiresPremium","variant","ReportsLayoutComponent","homepage","ReportsRoutingModule","ReportsModule","CipherReportComponent","requiresPaid","hasLoaded","setCiphers","checkAccess","ExposedPasswordsReportComponent","exposedPasswordMap","exposedPasswordCiphers","exposedCount","canManageCipher","InactiveTwoFactorReportComponent","services","cipherDocs","load2fa","inactive2faCiphers","docs","service","serviceData","documentation","additionalDomain","ReusedPasswordsReportComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","UnsecuredWebsitesReportComponent","unsecuredCiphers","WeakPasswordsReportComponent","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","scoreKey","ReportVariant","ReportCardComponent","requiresPremium","ReportListComponent","StorageRequest","AdjustStorageComponent","onAdjusted","onCanceled","storageAdjustment","storageGbAdjustment","paymentFailed","adjustedStorageTotal","ApiKeyComponent","TransactionType","BillingHistoryComponent","transactionType","paymentMethodClasses","OrganizationCreateRequest","OrganizationUpgradeRequest","ProviderOrganizationCreateRequest","clientOwnerEmail","organizationCreateRequest","changedProduct","changedOwnedBusiness","OrganizationPlansComponent","showFree","showCancel","_product","_plan","onTrialBillingSuccess","productTypes","singleOrgPolicyBlock","discount","businessOwned","premiumAccessAddon","plans","addValidators","selectedPlan","selectedPlanInterval","selectableProducts","validPlans","Free","familyPlan","selectablePlans","additionalStoragePriceMonthly","seatPriceMonthly","seatTotal","subTotal","freeTrial","taxComponent","paymentDesc","hideBank","changeMethod","collectionCt","createSelfHosted","createCloudHosted","updateOrganization","billingSubLabelText","additionalStorageGb","billingAddressCountry","billingAddressPostalCode","collectionName","tokenResult","paymentToken","includeTaxId","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","price","VerifyBankRequest","BitPayInvoiceRequest","AddCreditComponent","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","credit","creditAmountNumber","bitPayUrl","formatAmount","floatAmount","parseFloat","PaymentRequest","AdjustPaymentComponent","changeCountry","addCredit","closeAddCredit","changePayment","closePayment","submitTaxInfo","PaymentMethodComponent","showAdjustPayment","showAddCredit","verifyBankForm","amount1","amount2","forOrganization","billingPromise","orgPromise","paymentSourceInApp","verifyBankPromise","taxFormPromise","isCreditBalance","creditOrBalance","headerClass","paymentSourceClasses","bank","PaymentComponent","showMethods","hidePaypal","hideCredit","trialFlow","routing_number","account_number","account_holder_name","account_holder_type","currency","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","async","Stripe","elements","setStripeElement","btScript","StripeElementStyle","fontFamily","fontSize","fontSmoothing","StripeElementClasses","empty","subscribeToTheme","head","btStylesheet","braintree","dropin","authorization","container","paymentOptionPriority","paypal","buttonStyle","label","shape","tagline","createErr","requestPaymentMethod","nonce","handleCardSetup","setupIntent","payment_method","createToken","handleCardPayment","paymentIntent","mount","getComputedStyle","getPropertyValue","borderColor","PurgeVaultComponent","TaxInfoComponent","onCountryChanged","pristine","taxRates","localTaxRate","getTaxInfoRequest","hasChanged","TwoFactorProviderRequest","TwoFactorBaseComponent","twoFactorProviderType","auth","authResponse","hashedSecret","verificationType","enableFunction","buildRequestModel","UpdateTwoFactorDuoRequest","TwoFactorDuoComponent","processResponse","ikey","skey","UpdateTwoFactorAuthenticatorRequest","TwoFactorAuthenticatorComponent","qrScript","QRious","element","UpdateTwoFactorEmailRequest","TwoFactorEmailComponent","sentEmail","print","TwoFactorRecoveryComponent","w","write","onafterprint","formatString","UpdateTwoFactorWebAuthnDeleteRequest","UpdateTwoFactorWebAuthnRequest","readKey","TwoFactorWebAuthnComponent","keyIdAvailable","keysConfiguredCount","webAuthnResponse","removePromise","challengePromise","readDevice","webAuthnChallenge","resetWebAuthn","webAuthnListening","webAuthnError","listening","configured","UpdateTwoFactorYubioOtpRequest","TwoFactorYubiKeyComponent","disablePromise","existingKey","padRight","character","showPolicyWarning","twoFactorAuthPolicyAppliesToActiveUser","evaluatePolicies","authenticatorModalRef","yubikeyModalRef","emailModalRef","webAuthnModalRef","recoveryModalRef","TwoFactorVerifyComponent","onAuthed","UpdateLicenseComponent","updatePromise","LooseComponentsModule","AsyncActionsModule","AvatarModule","ButtonModule","CalloutModule","IconButtonModule","DialogModule","IconModule","LinkModule","MenuModule","NavigationModule","TableModule","TabsModule","ColorPasswordModule","SharedModule","addFieldType","linkedFieldOptions","fieldType","addFieldTypeOptions","addFieldLinkedTypeOption","changes","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","newField","removeField","toggleFieldValue","showValue","trackByFunction","drop","previousIndex","currentIndex","linkedFieldOption","i18nKey","TrueFalseValueDirective","elementRef","renderer","trueValue","falseValue","propagateChange","onHostChange","setProperty","AddEditCustomFieldsComponent","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","showCardNumber","showCardCode","currentDate","canUseReprompt","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","autofillOnPageLoadOptions","personalOwnershipPolicyAppliesToActiveUser","myEmail","getAddEditCipherInfo","setAddEditCipherInfo","previousCipherId","getCardExpMonthDisplay","editCollections","restorePromise","restoreCipher","toggleUriOptions","checkPasswordPromise","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","showPasswordCount","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","totpTick","totpInterval","canLaunch","showGetPremium","clearInterval","totpCode","half","totpCodeFormatted","intervalSeconds","totpSec","totpDash","totpLow","OrganizationBadgeModule","VaultFilterSharedModule","VaultFilterService","_collapsedFilterNodes","collectionResponse","collectionDomains","noneCollection","flagEnabled","flag","CheckboxModule","LoginModule","VerticalStepperModule","TrialInitiationModule","OrganizationManageModule","OrganizationUserModule","OssModule","WildcardRoutingModule","ProviderAddOrganizationRequest","WebProviderService","addOrganizationToProvider","encryptedOrgKey","detachOrganizastion","AddOrganizationComponent","webProviderService","onAddedOrganization","ProviderPermissionsGuard","providerPermissions","ProvidersComponent","addExistingOrganization","DisallowedPlanTypes","ClientsComponent","manageOrganizations","showAddExisting","pagedClientsCount","clients","candidateOrgs","allowedOrgsIds","addableOrganizations","pagedClients","addModalRef","ProviderUserAcceptRequest","AcceptProviderComponent","EventsComponent","providerUsersUserIdMap","providerUsersIdMap","ProviderUserBulkRequest","ProviderUserConfirmRequest","ProviderUserBulkConfirmRequest","ProviderUserInviteRequest","ProviderUserUpdateRequest","ProvidersLayoutComponent","showMenuBar","showManageTab","showSettingsTab","manageRoute","ProviderUpdateRequest","SetupProviderComponent","ProviderSetupRequest","SetupComponent","ProvidersRoutingModule","ProvidersModule","registerComponentFactoryResolver","SecretsManagerModule","AppRoutingModule","toastrService","sanitizer","lastActivity","idleTimer","isIdle","lang","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","setFullWidth","clean","setLastActive","idleStateChanged","sanitize","enableHtml","trustedHtml","timeOut","DisablePersonalVaultExportPolicy","DisablePersonalVaultExportPolicyComponent","MaximumVaultTimeoutPolicy","MaximumVaultTimeoutPolicyComponent","AppComponent","ScimConfigApi","scimProvider","ScimConfigRequest","copyScimUrl","toggleScimKey","rotateScimKey","copyScimKey","ScimComponent","showScimSettings","showScimKey","formData","endpointUrl","connection","setConnectionFormValues","loadApiKey","apiKeyRequest","apiKeyResponse","getScimEndpointUrl","rotatePromise","existingConnectionId","OrganizationSsoRequest","SsoConfigView","openId","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","saml","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpWantAuthnRequestsSigned","idpAllowOutboundLogoutRequests","idpDisableOutboundLogoutRequests","InputStripSpacesDirective","onInput","CopyClickDirective","valueToCopy","onClick","LaunchClickDirective","uriToLaunch","BaseCvaComponent","controlDir","internalControl","onValueChangesInternal","describedById","showDescribedBy","controlId","helperText","isRequired","onBlurInternal","InputCheckboxComponent","validateKeyConnectorUrl","toggleOpenIdCustomizations","defaultSigningAlgorithm","ssoType","ssoTypeOptions","samlSigningAlgorithms","saml2SigningBehaviourOptions","saml2BindingTypeOptions","saml2NameIdFormatOptions","connectRedirectOptions","destory$","showOpenIdCustomizations","haveTestedKeyConnector","openIdForm","samlForm","ssoConfigForm","newType","ssoSettings","populateForm","validateForm","readOutErrors","markAsPending","invalidUrl","getErrorCount","acc","enableTestKeyConnector","samlSigningAlgorithmOptions","markAsDirty","ssoConfigView","errorCount","errorCountText","div","innerText","existing","OrganizationsModule","AppModule","bootstrapModule","preserveWhitespaces","CalloutComponent","useAlertRole","calloutStyle","enforcedPolicyMessage","getPasswordScoreAlertDisplay","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","RuPay","Mir","IconComponent","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","isWebsite","ModalRef","_onCreated","_onClose","_onClosed","_onShow","_onShown","onShow","lastResult","toPromise","A11yTitleDirective","appA11yTitle","hasAttribute","ApiActionDirective","appApiAction","AutofocusDirective","appAutofocus","condition","autofocus","InputVerbatimDirective","appInputVerbatim","disableComplete","StopClickDirective","$event","preventDefault","StopPropDirective","stopPropagation","AuthGuard","promptBiometric","LockGuard","loginpage","UnauthGuard","BitwardenToast","toastPackage","BitwardenToastGlobalConfig","toastComponent","BitwardenToastModule","ngModule","default","numberFormats","cardLength","blocks","Other","CreditCardNumberPipe","creditCardNumber","rules","matchingRule","chunks","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","I18nPipe","SearchPipe","prop1","prop2","prop3","UserNamePipe","WINDOW","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","DynamicModalComponent","cd","focusTrapFactory","loadChildComponent","childComponentType","setComponentParameters","componentRef","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","modalContentRef","destroy","getFocus","autoFocusEl","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","flags","ModalConfig","modalList","factoryResolvers","modalCount","topModal","viewContainerRef","modalComponentRef","openInternal","hostView","replaceTopModal","closeAll","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","backdrop","modalEl","dialogEl","zIndex","prepend","closeElement","WeakMap","AbstractThemingService","DynamicTreeNode","setCollapsedGroupings","getCollapsedGroupings","transformation","storedFolders","orgCiphers","oc","getAllFoldersNested","storedCollections","folderCopy","getFolderNested","AccountApiService","AvatarUpdateService","ApiService","AppIdService","AuthService","CollectionService","CryptoFunctionService","EncryptService","EnvironmentService","EventCollectionService","EventUploadService","ExportService","FileDownloadService","FolderApiServiceAbstraction","FolderService","InternalFolderService","FormValidationErrorsService","I18nService","KeyConnectorService","LogService","MessagingService","NotificationsService","OrganizationUserService","OrganizationApiServiceAbstraction","canAccessSettingsTab","canAccessMembersTab","canAccessGroupsTab","canAccessReportingTab","canAccessReports","canAccessBillingTab","canManageCollections","canAccessManageTab","canAccessOrgAdmin","isManager","canAccessVaultTab","getOrganizationById","canAccessAdmin","isNotProviderUser","OrganizationService","InternalOrganizationService","PasswordGenerationService","PlatformUtilsService","PolicyApiServiceAbstraction","PolicyService","InternalPolicyService","ProviderService","SendService","SettingsService","StateMigrationService","AbstractStorageService","AbstractMemoryStorageService","TYPE","TotpService","TwoFactorService","UserVerificationService","UsernameGenerationService","ValidationService","VaultTimeoutService","VaultTimeoutSettingsService","AuthenticationStatus","AuthenticationType","CipherRepromptType","CipherType","EncryptionType","EventType","FieldType","HashPurpose","HtmlStorageLocation","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","SEND_KDF_ITERATIONS","KeySuffixOptions","LoginLinkedId","CardLinkedId","IdentityLinkedId","LogLevelType","OrganizationApiKeyType","OrganizationConnectionType","OrganizationUserStatusType","OrganizationUserType","PaymentMethodType","PlanType","PolicyType","ProductType","ProviderUserStatusType","ProviderUserType","SecureNoteType","SendType","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","ThemeType","TwoFactorProviderType","UriMatchType","VerificationType","getFlags","envFlags","LinkedMetadata","_i18nKey","TreeNode","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","nodeURL","Utils","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","binaryString","atob","charCodeAt","fromB64ToArray","fromUrlB64ToB64","strUtf8","unescape","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","decodeURIComponent","escape","urlB64Str","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","uriString","isNullOrWhitespace","validHosts","getUrl","parseResult","isIp","pair","source","getUrlObject","bgColor","threshold","svgTextFill","bgColorHexNums","fromEntries","record","destination","mobile","vendor","opera","hasProtocol","anchor","regexpEmojiPresentation","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageScim","SecureNoteApi","SendFileApi","SendTextApi","SsoConfigApi","view","AttachmentData","CardData","CipherData","CollectionData","EventData","FieldData","FolderData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","PolicyData","ProviderData","SecureNoteData","SendFileData","SendTextData","SendData","ServerConfigData","serverConfigResponse","ThirdPartyServerConfigData","EnvironmentServerConfigData","fromJSON","EncryptionPair","decryptedFromJson","encryptedFromJson","DataEncryptionPair","TemporaryDataEncryption","AccountData","AccountKeys","initRecordEncryptionPairsFromJSON","decObj","AccountProfile","AccountTokens","Attachment","decryptAttachmentKey","getKeyForDecryption","toAttachmentData","buildDataModel","Card","toCardData","Cipher","decAttachment","decField","decPh","toLoginData","toSecureNoteData","toIdentityData","toFieldData","toPasswordHistoryData","Domain","dataObj","notEncList","objProp","notEncStringList","viewModel","mapProp","EncArrayBuffer","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","arrayBuffer","b64","EncString","encryptedStringOrType","initFromData","initFromEncryptedString","parseEncryptedString","decryptedValue","EnvironmentUrls","Field","Folder","GeneratedPasswordHistory","Identity","LoginUri","toLoginUriData","Login","MasterPasswordPolicyOptions","Organization","isAdmin","hasProvider","Password","Policy","SecureNote","SendFile","SendText","SymmetricCryptoKey","WindowState","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","CipherWithIdExport","CollectionExport","CollectionWithIdExport","FolderExport","FolderWithIdExport","CipherBulkDeleteRequest","CipherCollectionsRequest","CipherCreateRequest","CipherWithIdRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CollectionRequest","FolderRequest","TokenTwoFactorRequest","KeysRequest","OrganizationApiKeyRequest","OrganizationConnectionRequest","OrganizationKeysRequest","OrganizationTaxInfoUpdateRequest","SecretVerificationRequest","SendRequest","fileLength","TaxInfoUpdateRequest","TwoFactorEmailRequest","AttachmentResponse","BaseResponse","propertyName","exactName","otherCasePropertyName","PasswordHistoryResponse","CipherResponse","EmergencyAccessGranteeDetailsResponse","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","EmergencyAccessViewResponse","ErrorResponse","identityResponse","errorModel","responseErrorModel","messages","lastSep","ListResponse","PolicyResponse","AttachmentView","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","formatYear","CipherView","linkedFieldValue","linkedFieldI18nKey","CollectionView","FieldView","showCount","maskedValue","FolderView","IdentityView","_firstName","_lastName","fullName","fullAddress","fullAddressPart2","addressPart2","ItemView","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","hostnameOrUri","hostOrUri","LoginView","maskedPassword","PasswordHistoryView","SecureNoteView","SendFileView","SendTextView","SendView","maxAccessCountReached","pendingDelete","ConsoleLogService","timersMap","level","InitializerKey","StorageLocation","State","accountDeserializer","buildAccountMapFromJSON","jsonAccounts","DDG_SHARED_KEY","accountsSubject","activeAccountSubject","activeAccountUnlockedSubject","hasBeenInited","isRecoveredSession","accountDiskCache","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setActiveUser","clearDecryptedDataForActiveUser","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getTimeoutBasedStorageOptions","getAccount","saveAccount","getAlwaysShowDock","defaultOnDiskOptions","setAlwaysShowDock","saveGlobals","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","setBiometricAwaitingAcceptance","getBiometricFingerprintValidated","setBiometricFingerprintValidated","setBiometricText","setBiometricUnlock","hasPremiumFromOrganization","getClearClipboard","defaultOnDiskLocalOptions","setClearClipboard","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","setDefaultUriMatch","getDisableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","getDisableAutoTotpCopy","setDisableAutoTotpCopy","getDisableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","setDisableContextMenuItem","getDisableGa","setDisableGa","getDontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","getDuckDuckGoSharedKey","setDuckDuckGoSharedKey","getEnableAlwaysOnTop","accountPreference","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","setEnableCloseToTray","getEnableDuckDuckGoBrowserIntegration","enableDuckDuckGoBrowserIntegration","setEnableDuckDuckGoBrowserIntegration","getEnableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","setEnableStartToTray","getEnableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","setEntityId","getEntityType","setEntityType","getGlobalEnvironmentUrls","getEquivalentDomains","getForcePasswordReset","getInstalledVersion","setInstalledVersion","getMainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","getNoAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","setOpenAtLogin","organizationInvitation","usernameGenerationOptions","accountVaultTimeoutAction","globalVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","setDiskCache","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deleteDiskCache","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","deserializer","stateUpdater","updatedState","withPrototypeForArrayMembers","memberConstructor","memberConverter","originalResult","getOwnPropertyDescriptors","withPrototypeForObjectValues","valuesConstructor","valuesConverter","TwoFactorProviders","priority","selectedTwoFactorProviderType","twoFactorProvidersData","providerPriority","_value","setSelectedProvider","clearProviders","BitActionDirective","buttonComponent","_loading$","loading$","handler","SizeClasses","xlarge","large","small","xsmall","AvatarComponent","svgCharCount","svgFontSize","svgFontWeight","svgSize","chars","upperCaseText","svg","getFirstLetters","unicodeSafeSubstring","hexColor","createSvgElement","charObj","createTextElement","svgHtml","bypassSecurityTrustResourceUrl","svgTag","backgroundColor","textTag","fontWeight","characters","styles","primary","secondary","danger","hoverStyles","BadgeDirective","badgeType","hasHoverEffects","nodeName","BadgeModule","focusRing","buttonStyles","unstyled","ButtonComponent","_block","block","disabledAttr","setButtonType","defaultIcon","defaultI18n","calloutClass","CharacterType","ColorPasswordComponent","characterStyles","Emoji","Letter","Special","passwordArray","getCharacterClass","charType","getCharacterType","charClass","fadeIn","DialogService","_overlay","_injector","_defaultOptions","_parentDialog","_overlayContainer","scrollStrategy","_destroy$","componentOrTemplateRef","backdropClass","DialogTitleContainerDirective","simple","containerInstance","_ariaLabelledBy","IconDirective","SimpleDialogComponent","hasIcon","FormControlModule","BitHintComponent","BitLabel","BitErrorSummary","errorString","dirty","untouched","BitFormFieldControl","BitErrorComponent","requiredLength","BitFormFieldComponent","ngAfterContentChecked","InputModule","MultiSelectModule","FormFieldModule","BitPasswordInputToggleDirective","button","formField","toggled","toggledChange","spellcheck","PrefixClasses","PrefixButtonClasses","PrefixStaticContentClasses","BitPrefixDirective","BitSuffixDirective","contrast","main","muted","light","sizes","BitIconButtonComponent","iconClass","BitIconComponent","domSanitizer","innerHtml","bypassSecurityTrustHtml","Icon","isIcon","DynamicContentNotAllowedError","svgIcon","strings","Search","BitInputDirective","hasPrefix","hasSuffix","ariaInvalid","setSelectionRange","linkStyles","commonStyles","LinkDirective","linkType","AnchorLinkDirective","ButtonLinkDirective","MenuDividerComponent","MenuItemDirective","role","tabIndex","MenuTriggerForDirective","overlay","isOpen","defaultMenuConfig","panelClass","hasBackdrop","scrollStrategies","reposition","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","withLockedPosition","withFlexibleDimensions","withPush","hasPopup","menu","ariaRole","toggleMenu","destroyMenu","openMenu","disposeAll","overlayRef","templatePortal","attach","closedEventsSub","getClosedEvents","keyDownEventsSub","keyManager","keydownEvents","onKeydown","detachments","escKey","backdropClick","menuClosed","dispose","MenuComponent","menuItems","withWrap","ButtonLikeAbstraction","CellDirective","RowDirective","alignContent","alignmentClass","TableBodyDirective","template","TableComponent","_initialized","dataSource","dataStream","connect","rows","disconnect","TabHeaderComponent","TabListContainerDirective","TabListItemDirective","baseClassList","active","activeClassList","disabledClassList","textColorClassList","TabLinkComponent","_tabNavBar","routerLinkMatchOptions","matrixParams","paths","fragment","onKeyDown","tabItem","routerLinkActive","isActiveChange","updateActiveLink","TabNavBarComponent","tabLabels","withHorizontalOrientation","withHomeAndEnd","toArray","updateActiveItem","functionToObservable","func","awaitable","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","chunkId","miniCssF","globalThis","Function","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","prev","doneFns","parentNode","Symbol","toStringTag","nmd","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}