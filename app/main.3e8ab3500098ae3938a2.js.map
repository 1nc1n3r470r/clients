{"version":3,"file":"app/main.3e8ab3500098ae3938a2.js","mappings":"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,EAAkB,I,+BCA9B,IAAYC,E,iBAAZ,SAAYA,GACV,qBACA,+BACA,mBACA,0BACD,CALD,CAAYA,IAAAA,EAAU,I,+BCAtB,IAAYC,E,iBAAZ,SAAYA,GACV,qCACA,2DACA,2DACA,uDACA,mDACA,6EACA,wEACD,CARD,CAAYA,IAAAA,EAAc,I,+BCA1B,IAAYC,E,iBAAZ,SAAYA,GACV,uCACA,sDACA,4CACA,8CACA,gDACA,8CACA,oDACA,8DACA,8DACA,0EAEA,0CACA,0CACA,0CACA,8DACA,8DACA,wCACA,gEACA,oDACA,oFACA,0FACA,oFACA,oEACA,0EACA,oEACA,4DACA,kDACA,4CACA,wFAEA,kDACA,kDACA,kDAEA,wCACA,wCACA,wCAEA,8DACA,kEACA,8DACA,8DACA,0EACA,sEACA,wFACA,4FACA,oFACA,wEACA,0EACA,8DACA,gEAEA,sDACA,8DACA,8EACA,kEACA,4DACA,8DACA,8EACA,gFACA,4EAEA,0CAEA,sDACA,0DACA,sDACA,sDAEA,sEACA,kEACA,sEACA,iFACD,CA1ED,CAAYA,IAAAA,EAAS,I,+BCArB,IAAYC,E,iBAAZ,SAAYA,GACV,mBACA,uBACA,yBACA,sBACD,CALD,CAAYA,IAAAA,EAAS,I,+BCArB,IAAYC,E,6CAAZ,SAAYA,GACV,oCACD,CAFD,CAAYA,IAAAA,EAAO,KAIZ,MAAMC,EAAmBD,EAAQE,cAC3BC,EAAyB,IACzBC,EAAsB,G,+BCHnC,IAAYC,EAMAC,EAUAC,E,oCAhBZ,SAAYF,GACV,6BACA,4BACD,CAHD,CAAYA,IAAAA,EAAa,KAMzB,SAAYC,GACV,yCACA,6BACA,2BACA,qBACA,uBACA,wBACD,CAPD,CAAYA,IAAAA,EAAY,KAUxB,SAAYC,GACV,uBACA,iCACA,6BACA,6BACA,6BACA,qBACA,uBACA,iCACA,2BACA,2BACA,uBACA,uBACA,mBACA,6BACA,yCACA,uCACA,+BACA,6BACA,4BACD,CApBD,CAAYA,IAAAA,EAAgB,I,8BCnB5B,IAAYC,E,iBAAZ,SAAYA,GACV,yDACA,uCACA,6CACA,6BACA,+BACA,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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/webpack/runtime/load script","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-create.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/org-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/organizations/navigation-permissions.ts","webpack://@bitwarden/web-vault/./src/app/shared/loose-components.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/locales.ts","webpack://@bitwarden/web-vault/./src/app/shared/shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/themeType.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/themeBuilder.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/abstractEncrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/messaging.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/stateVersion.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/accountFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/stateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/environmentUrls.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/account.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/windowState.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/globalState.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/deviceType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deviceRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/tokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/apiTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/tokenRequestTwoFactor.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/apiKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachmentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/passwordHistoryResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/cipherResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachmentUploadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingHistoryResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billingPaymentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/breachAccountResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/selectionReadOnlyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/collectionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/deviceVerificationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/globalDomainResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/domainsResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/emergencyAccessResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/eventResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/groupResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityCaptchaResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityTokenResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identityTwoFactorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/listResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationConnectionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationExportResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationSponsorshipSyncStatusResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserBulkResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/permissionsApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationUserResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileProviderOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileProviderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profileResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/paymentResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/planResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/policyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/preloginResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerOrganizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserBulkResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/providerUserResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sendFileApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sendTextApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendAccessResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendFileDownloadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sendFileUploadDataResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/ssoPreValidateResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/subscriptionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/folderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/syncResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/taxInfoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/taxRateResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorDuoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorEmailResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorProviderResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorRescoverResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/userKeyResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/throttle.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationStatus.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/twoFactorProviderType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/authResult.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keysRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/hashPurpose.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/preloginRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/sequentialize.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encArrayBuffer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sortedCiphersCache.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkDeleteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkMoveRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkRestoreRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherBulkShareRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherCollectionsRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherCreateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherShareRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/wordlist.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encryptedOrganizationKey.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encryptedObject.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/eventData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/eventRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/eventExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fileUploadType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/folderData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/notificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/notificationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/organization.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/ssoEnums.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/ssoConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization/organizationSsoResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationApiKeyInformationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keysResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationKeysResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organizationSubscriptionResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/generatedPasswordHistory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/policyData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/policy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/provider.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/sendType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendFileData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendTextData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/sendData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendFileView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendTextView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendFile.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendText.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/storageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/providerData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/organizationData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/verifyOTPRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/secretVerificationRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/anonAddyForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/duckDuckGoForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/fastmailForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/firefoxRelayForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/forwarderOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/simpleLoginForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/decryptParameters.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/auth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/lock.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/unauth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal.ref.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal-injector.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/modal.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/jslib-services.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/encrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/memoryStorage.service.ts","webpack://@bitwarden/web-vault/./src/app/core/broadcaster-messaging.service.ts","webpack://@bitwarden/web-vault/./src/app/core/event.service.ts","webpack://@bitwarden/web-vault/./src/app/core/html-storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/./src/app/core/init.service.ts","webpack://@bitwarden/web-vault/./src/app/core/modal.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-title.directive.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.html","webpack://@bitwarden/web-vault/./src/app/core/password-reprompt.service.ts","webpack://@bitwarden/web-vault/./src/app/core/policy-list.service.ts","webpack://@bitwarden/web-vault/./src/app/core/router.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state/account.ts","webpack://@bitwarden/web-vault/./src/app/core/state/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack://@bitwarden/web-vault/./src/app/core/web-file-download.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/clientType.ts","webpack://@bitwarden/web-vault/./src/app/core/web-platform-utils.service.ts","webpack://@bitwarden/web-vault/./src/app/core/core.module.ts","webpack://@bitwarden/web-vault/./src/utils/flags.ts","webpack://@bitwarden/web-vault/./src/app/core/state/global-state.ts","webpack://@bitwarden/web-vault/./src/app/core/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state-migration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessAcceptRequest.ts","webpack://@bitwarden/web-vault/./src/app/common/base.accept.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserAcceptRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordHintRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/logInCredentials.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/captcha_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/iframe_component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/captchaProtected.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/login.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorRecoveryRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/registerRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/register.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/referenceEventRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/label.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/submit-button/submit-button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/submit-button/submit-button.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/remove-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/setPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/set-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/sso.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/productType.ts","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/paymentMethodType.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationCreateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationKeysRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUpgradeRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerOrganizationCreateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.ts","webpack://@bitwarden/web-vault/./src/scss/export.module.scss","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/taxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationTaxInfoUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/webauthn_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-click.directive.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTempPasswordRequest.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyEmailRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyDeleteRecoverRequest.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/guards/home.guard.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/avatar.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-prop.directive.ts","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/selectionReadOnlyRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/eventView.ts","webpack://@bitwarden/web-vault/./src/app/common/base.events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/groupRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserBulkRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserConfirmRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.people.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.html","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/policyRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/base-policy.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/transactionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verifyBankRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/bitPayInvoiceRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/paymentRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-billing.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-billing.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationApiKeyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationConnectionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/billingSyncConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/billingSyncConfigRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationConnectionRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-sync-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-sync-key.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationApiKeyRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/billing-sync-api-key.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/billing-sync-api-key.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/storageRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organizationSubscriptionUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/image-subscription-hidden.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/image-subscription-hidden.component.svg","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorDuoRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/twoFactorProviderRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-base.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/deviceVerificationRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorEmailRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorWebAuthnDeleteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorWebAuthnRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/not-premium.directive.ts","webpack://@bitwarden/web-vault/./src/app/components/premium-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/true-false-value.directive.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/cipher-report.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/fallback-src.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/pipes.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/vault-filter.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.html","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/attachments.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/ciphers.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/get-organization-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.html","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.html","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/vault-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/collection-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/folder-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/status-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/type-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planSponsorshipType.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organizationSponsorshipRedeemRequest.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/shared/guards/has-premium.guard.ts","webpack://@bitwarden/web-vault/./src/app/reports/models/report-variant.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icons.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/report-card/report-card.component.html","webpack://@bitwarden/web-vault/./src/app/reports/report-card/report-card.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/report-list/report-list.component.html","webpack://@bitwarden/web-vault/./src/app/reports/report-list/report-list.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sendAccessView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sendAccess.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendAccessRequest.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.html","webpack://@bitwarden/web-vault/./src/app/send/access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/send.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.html","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/send.component.html","webpack://@bitwarden/web-vault/./src/app/send/send.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.html","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emailTokenRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emailRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateProfileRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.html","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateDomainsRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.html","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessConfirmRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessUpdateRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergencyAccessPasswordRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.html","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.html","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folderWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/sendWithIdRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/updateKeyRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/kdfRequest.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/notAllowedValueAsync.validator.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.html","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-billing-history.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-billing-history.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/generator.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-generator-history.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/select-copy.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/color-password.pipe.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.html","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.html","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/share.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/oss-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/organization-manage.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/organization-user.module.ts","webpack://@bitwarden/web-vault/./src/app/oss.module.ts","webpack://@bitwarden/web-vault/./src/app/wildcard-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerAddOrganizationRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/services/webProvider.service.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/guards/provider-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.html","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserAcceptRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserBulkRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserConfirmRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserBulkConfirmRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserInviteRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUserUpdateRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerUpdateRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/providerSetupRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.html","webpack://@bitwarden/web-vault/./src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/app.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/scimConfigApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/scimConfigRequest.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/dirty.validator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organizationSsoRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/ssoConfigView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/view.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-invalid.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-strip-spaces.directive.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/base-cva.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text-readonly.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text-readonly.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/select.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/select.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/main.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/api-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/autofocus.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-verbatim.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/toastr.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/jslib.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/search.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/user-name.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/dynamic-tree-node.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/services/vault-filter.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/log.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/platformUtils.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherRepromptType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/eventType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fieldType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/kdfType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/policyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/secureNoteType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/verificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/treeNode.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/serviceUtils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/tldjs.noop.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/cardApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/fieldApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/identityApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/loginApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/loginUriApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/secureNoteApi.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/attachmentData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cardData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cipherData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/collectionData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/fieldData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/identityData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/loginData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/loginUriData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/passwordHistoryData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/secureNoteData.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/attachment.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/card.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/cipher.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/collection.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/domainBase.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encString.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/field.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/folder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/identity.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/loginUri.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/secureNote.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/symmetricCryptoKey.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cardExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/fieldExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/identityExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/loginUriExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/loginExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/secureNoteExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipherExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipherWithIdsExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collectionExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collectionWithIdExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folderExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folderWithIdExport.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/attachmentRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipherRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/collectionRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folderRequest.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/baseResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/errorResponse.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/attachmentView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cardView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cipherView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/collectionView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/fieldView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/folderView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/identityView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/itemView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/loginUriView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/loginView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/passwordHistoryView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/secureNoteView.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error-summary.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/prefix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/suffix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/banner/banner.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/banner/banner.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/banner/banner.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/submit-button/submit-button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/link/link.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/link/link.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tabs.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-item.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-item.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/toggle-group/toggle-group.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/toggle-group/toggle-group.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/toggle-group/toggle-group.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-trigger-for.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.ts","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/compat get default export","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/ensure chunk","webpack://@bitwarden/web-vault/webpack/runtime/get javascript chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/get mini-css chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/publicPath","webpack://@bitwarden/web-vault/webpack/runtime/jsonp chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"@bitwarden/web-vault:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { RegisterFormComponent } from \"./register-form.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [RegisterFormComponent],\n  exports: [RegisterFormComponent],\n})\nexport class RegisterFormModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationInformationComponent } from \"./organization-information.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationInformationComponent],\n  exports: [OrganizationInformationComponent],\n})\nexport class OrganizationCreateModule {}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { canAccessOrgAdmin } from \"../navigation-permissions\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationPermissionsGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private syncService: SyncService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // TODO: We need to fix this issue once and for all.\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n\n    const org = await this.organizationService.get(route.params.organizationId);\n    if (org == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!org.isOwner && !org.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"organizationIsDisabled\")\n      );\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (organization: Organization) => boolean =\n      route.data?.organizationPermissions;\n    const hasPermissions = permissionsCallback == null || permissionsCallback(org);\n\n    if (!hasPermissions) {\n      // Handle linkable ciphers for organizations the user only has view access to\n      // https://bitwarden.atlassian.net/browse/EC-203\n      const cipherId =\n        state.root.queryParamMap.get(\"itemId\") || state.root.queryParamMap.get(\"cipherId\");\n      if (cipherId) {\n        return this.router.createUrlTree([\"/vault\"], {\n          queryParams: {\n            itemId: cipherId,\n          },\n        });\n      }\n\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return canAccessOrgAdmin(org)\n        ? this.router.createUrlTree([\"/organizations\", org.id])\n        : this.router.createUrlTree([\"/\"]);\n    }\n\n    return true;\n  }\n}\n","import { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nexport function canAccessToolsTab(org: Organization): boolean {\n  return org.canAccessImportExport || org.canAccessReports;\n}\n\nexport function canAccessSettingsTab(org: Organization): boolean {\n  return org.isOwner;\n}\n\nexport function canAccessManageTab(org: Organization): boolean {\n  return (\n    org.canCreateNewCollections ||\n    org.canEditAnyCollection ||\n    org.canDeleteAnyCollection ||\n    org.canEditAssignedCollections ||\n    org.canDeleteAssignedCollections ||\n    org.canAccessEventLogs ||\n    org.canManageGroups ||\n    org.canManageUsers ||\n    org.canManagePolicies ||\n    org.canManageSso ||\n    org.canManageScim\n  );\n}\n\nexport function canAccessOrgAdmin(org: Organization): boolean {\n  return canAccessToolsTab(org) || canAccessSettingsTab(org) || canAccessManageTab(org);\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { UserVerificationComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\nimport { AcceptEmergencyComponent } from \"../accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"../accounts/accept-organization.component\";\nimport { HintComponent } from \"../accounts/hint.component\";\nimport { LockComponent } from \"../accounts/lock.component\";\nimport { LoginComponent } from \"../accounts/login.component\";\nimport { RecoverDeleteComponent } from \"../accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"../accounts/recover-two-factor.component\";\nimport { RegisterFormModule } from \"../accounts/register-form/register-form.module\";\nimport { RegisterComponent } from \"../accounts/register.component\";\nimport { RemovePasswordComponent } from \"../accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"../accounts/set-password.component\";\nimport { SsoComponent } from \"../accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"../accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"../accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"../accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"../accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"../accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"../accounts/verify-recover-delete.component\";\nimport { NestedCheckboxComponent } from \"../components/nested-checkbox.component\";\nimport { OrganizationSwitcherComponent } from \"../components/organization-switcher.component\";\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\nimport { PremiumBadgeComponent } from \"../components/premium-badge.component\";\nimport { FooterComponent } from \"../layouts/footer.component\";\nimport { FrontendLayoutComponent } from \"../layouts/frontend-layout.component\";\nimport { NavbarComponent } from \"../layouts/navbar.component\";\nimport { UserLayoutComponent } from \"../layouts/user-layout.component\";\nimport { OrganizationCreateModule } from \"../organizations/create/organization-create.module\";\nimport { OrganizationLayoutComponent } from \"../organizations/layouts/organization-layout.component\";\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from \"../organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from \"../organizations/manage/bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent as OrgBulkRestoreRevokeComponent } from \"../organizations/manage/bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent as OrgBulkStatusComponent } from \"../organizations/manage/bulk/bulk-status.component\";\nimport { CollectionAddEditComponent as OrgCollectionAddEditComponent } from \"../organizations/manage/collection-add-edit.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"../organizations/manage/collections.component\";\nimport { EntityEventsComponent as OrgEntityEventsComponent } from \"../organizations/manage/entity-events.component\";\nimport { EventsComponent as OrgEventsComponent } from \"../organizations/manage/events.component\";\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from \"../organizations/manage/group-add-edit.component\";\nimport { GroupsComponent as OrgGroupsComponent } from \"../organizations/manage/groups.component\";\nimport { ManageComponent as OrgManageComponent } from \"../organizations/manage/manage.component\";\nimport { PeopleComponent as OrgPeopleComponent } from \"../organizations/manage/people.component\";\nimport { PoliciesComponent as OrgPoliciesComponent } from \"../organizations/manage/policies.component\";\nimport { PolicyEditComponent as OrgPolicyEditComponent } from \"../organizations/manage/policy-edit.component\";\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from \"../organizations/manage/reset-password.component\";\nimport { UserAddEditComponent as OrgUserAddEditComponent } from \"../organizations/manage/user-add-edit.component\";\nimport { UserConfirmComponent as OrgUserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\nimport { UserGroupsComponent as OrgUserGroupsComponent } from \"../organizations/manage/user-groups.component\";\nimport { DisableSendPolicyComponent } from \"../organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicyComponent } from \"../organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicyComponent } from \"../organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicyComponent } from \"../organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicyComponent } from \"../organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicyComponent } from \"../organizations/policies/reset-password.component\";\nimport { SendOptionsPolicyComponent } from \"../organizations/policies/send-options.component\";\nimport { SingleOrgPolicyComponent } from \"../organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicyComponent } from \"../organizations/policies/two-factor-authentication.component\";\nimport { AccountComponent as OrgAccountComponent } from \"../organizations/settings/account.component\";\nimport { AdjustSubscription } from \"../organizations/settings/adjust-subscription.component\";\nimport { BillingSyncApiKeyComponent } from \"../organizations/settings/billing-sync-api-key.component\";\nimport { ChangePlanComponent } from \"../organizations/settings/change-plan.component\";\nimport { DeleteOrganizationComponent } from \"../organizations/settings/delete-organization.component\";\nimport { DownloadLicenseComponent } from \"../organizations/settings/download-license.component\";\nimport { ImageSubscriptionHiddenComponent as OrgSubscriptionHiddenComponent } from \"../organizations/settings/image-subscription-hidden.component\";\nimport { OrganizationBillingComponent } from \"../organizations/settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"../organizations/settings/organization-subscription.component\";\nimport { SettingsComponent as OrgSettingComponent } from \"../organizations/settings/settings.component\";\nimport { TwoFactorSetupComponent as OrgTwoFactorSetupComponent } from \"../organizations/settings/two-factor-setup.component\";\nimport { AcceptFamilySponsorshipComponent } from \"../organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"../organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"../organizations/tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"../organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"../organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"../organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"../organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"../organizations/tools/weak-passwords-report.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"../organizations/vault/add-edit.component\";\nimport { AttachmentsComponent as OrgAttachmentsComponent } from \"../organizations/vault/attachments.component\";\nimport { CollectionsComponent as OrgCollectionsComponent } from \"../organizations/vault/collections.component\";\nimport { ProvidersComponent } from \"../providers/providers.component\";\nimport { AccessComponent } from \"../send/access.component\";\nimport { AddEditComponent as SendAddEditComponent } from \"../send/add-edit.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"../send/efflux-dates.component\";\nimport { SendComponent } from \"../send/send.component\";\nimport { AccountComponent } from \"../settings/account.component\";\nimport { AddCreditComponent } from \"../settings/add-credit.component\";\nimport { AdjustPaymentComponent } from \"../settings/adjust-payment.component\";\nimport { AdjustStorageComponent } from \"../settings/adjust-storage.component\";\nimport { ApiKeyComponent } from \"../settings/api-key.component\";\nimport { BillingSyncKeyComponent } from \"../settings/billing-sync-key.component\";\nimport { ChangeEmailComponent } from \"../settings/change-email.component\";\nimport { ChangeKdfComponent } from \"../settings/change-kdf.component\";\nimport { ChangePasswordComponent } from \"../settings/change-password.component\";\nimport { CreateOrganizationComponent } from \"../settings/create-organization.component\";\nimport { DeauthorizeSessionsComponent } from \"../settings/deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"../settings/delete-account.component\";\nimport { DomainRulesComponent } from \"../settings/domain-rules.component\";\nimport { EmergencyAccessAddEditComponent } from \"../settings/emergency-access-add-edit.component\";\nimport { EmergencyAccessAttachmentsComponent } from \"../settings/emergency-access-attachments.component\";\nimport { EmergencyAccessConfirmComponent } from \"../settings/emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"../settings/emergency-access-takeover.component\";\nimport { EmergencyAccessViewComponent } from \"../settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"../settings/emergency-access.component\";\nimport { EmergencyAddEditComponent } from \"../settings/emergency-add-edit.component\";\nimport { OrganizationPlansComponent } from \"../settings/organization-plans.component\";\nimport { PaymentMethodComponent } from \"../settings/payment-method.component\";\nimport { PaymentComponent } from \"../settings/payment.component\";\nimport { PreferencesComponent } from \"../settings/preferences.component\";\nimport { PremiumComponent } from \"../settings/premium.component\";\nimport { ProfileComponent } from \"../settings/profile.component\";\nimport { PurgeVaultComponent } from \"../settings/purge-vault.component\";\nimport { SecurityKeysComponent } from \"../settings/security-keys.component\";\nimport { SecurityComponent } from \"../settings/security.component\";\nimport { SettingsComponent } from \"../settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"../settings/sponsored-families.component\";\nimport { SponsoringOrgRowComponent } from \"../settings/sponsoring-org-row.component\";\nimport { SubscriptionComponent } from \"../settings/subscription.component\";\nimport { TaxInfoComponent } from \"../settings/tax-info.component\";\nimport { TwoFactorAuthenticatorComponent } from \"../settings/two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"../settings/two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"../settings/two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"../settings/two-factor-recovery.component\";\nimport { TwoFactorSetupComponent } from \"../settings/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"../settings/two-factor-verify.component\";\nimport { TwoFactorWebAuthnComponent } from \"../settings/two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"../settings/two-factor-yubikey.component\";\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\nimport { UpdateLicenseComponent } from \"../settings/update-license.component\";\nimport { UserBillingHistoryComponent } from \"../settings/user-billing-history.component\";\nimport { UserSubscriptionComponent } from \"../settings/user-subscription.component\";\nimport { VaultTimeoutInputComponent } from \"../settings/vault-timeout-input.component\";\nimport { VerifyEmailComponent } from \"../settings/verify-email.component\";\nimport { GeneratorComponent } from \"../tools/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"../tools/password-generator-history.component\";\nimport { ToolsComponent } from \"../tools/tools.component\";\nimport { AddEditCustomFieldsComponent } from \"../vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"../vault/add-edit.component\";\nimport { AttachmentsComponent } from \"../vault/attachments.component\";\nimport { BulkActionsComponent } from \"../vault/bulk-actions.component\";\nimport { BulkDeleteComponent } from \"../vault/bulk-delete.component\";\nimport { BulkMoveComponent } from \"../vault/bulk-move.component\";\nimport { BulkRestoreComponent } from \"../vault/bulk-restore.component\";\nimport { BulkShareComponent } from \"../vault/bulk-share.component\";\nimport { CollectionsComponent } from \"../vault/collections.component\";\nimport { FolderAddEditComponent } from \"../vault/folder-add-edit.component\";\nimport { OrganizationBadgeModule } from \"../vault/organization-badge/organization-badge.module\";\nimport { ShareComponent } from \"../vault/share.component\";\nimport { VaultFilterModule } from \"../vault/vault-filter/vault-filter.module\";\n\nimport { SharedModule } from \".\";\n\n// Please do not add to this list of declarations - we should refactor these into modules when doing so makes sense until there are none left.\n// If you are building new functionality, please create or extend a feature module instead.\n@NgModule({\n  imports: [\n    SharedModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationCreateModule,\n    RegisterFormModule,\n  ],\n  declarations: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptFamilySponsorshipComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    AdjustSubscription,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BillingSyncApiKeyComponent,\n    BillingSyncKeyComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    ChangePlanComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DeleteOrganizationComponent,\n    DisableSendPolicyComponent,\n    DomainRulesComponent,\n    DownloadLicenseComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    LoginComponent,\n    MasterPasswordPolicyComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAccountComponent,\n    OrgAddEditComponent,\n    OrganizationBillingComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrganizationSubscriptionComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgPoliciesComponent,\n    OrgPolicyEditComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgSettingComponent,\n    OrgToolsComponent,\n    OrgTwoFactorSetupComponent,\n    OrgSubscriptionHiddenComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordGeneratorPolicyComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PersonalOwnershipPolicyComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SendOptionsPolicyComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SingleOrgPolicyComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    UserBillingHistoryComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n  exports: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    AdjustSubscription,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    ChangePlanComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DeleteOrganizationComponent,\n    DisableSendPolicyComponent,\n    DomainRulesComponent,\n    DownloadLicenseComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    LoginComponent,\n    MasterPasswordPolicyComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAccountComponent,\n    OrgAddEditComponent,\n    OrganizationBillingComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrganizationSubscriptionComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgPoliciesComponent,\n    OrgPolicyEditComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgSettingComponent,\n    OrgToolsComponent,\n    OrgTwoFactorSetupComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordGeneratorPolicyComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PersonalOwnershipPolicyComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SendOptionsPolicyComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SingleOrgPolicyComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    UserBillingHistoryComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n})\nexport class LooseComponentsModule {}\n","import { registerLocaleData } from \"@angular/common\";\nimport localeAf from \"@angular/common/locales/af\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEo from \"@angular/common/locales/eo\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeEu from \"@angular/common/locales/eu\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\n\nregisterLocaleData(localeAf, \"af\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEo, \"eo\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeEu, \"eu\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { DatePipe, CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport {\n  BadgeModule,\n  ButtonModule,\n  CalloutModule,\n  FormFieldModule,\n  SubmitButtonModule,\n  MenuModule,\n  IconModule,\n} from \"@bitwarden/components\";\n\n// Register the locales for the application\nimport \"./locales\";\n\n/**\n * This NgModule should contain the most basic shared directives, pipes, and components. They\n * should be widely used by other modules to be considered for adding to this module. If in doubt\n * do not add to this module.\n *\n * See: https://angular.io/guide/module-types#shared-ngmodules\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    InfiniteScrollModule,\n    JslibModule,\n    ReactiveFormsModule,\n    RouterModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    ToastrModule,\n    BadgeModule,\n    ButtonModule,\n    MenuModule,\n    FormFieldModule,\n    SubmitButtonModule,\n    IconModule,\n  ],\n  exports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    InfiniteScrollModule,\n    JslibModule,\n    ReactiveFormsModule,\n    RouterModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    ToastrModule,\n    BadgeModule,\n    ButtonModule,\n    MenuModule,\n    FormFieldModule,\n    SubmitButtonModule,\n    IconModule,\n  ],\n  providers: [DatePipe],\n  bootstrap: [],\n})\nexport class SharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationNameBadgeComponent } from \"./organization-name-badge.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationNameBadgeComponent],\n  exports: [OrganizationNameBadgeComponent],\n})\nexport class OrganizationBadgeModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { CollectionFilterComponent } from \"./collection-filter/collection-filter.component\";\nimport { FolderFilterComponent } from \"./folder-filter/folder-filter.component\";\nimport { StatusFilterComponent } from \"./status-filter/status-filter.component\";\nimport { TypeFilterComponent } from \"./type-filter/type-filter.component\";\nimport { VaultFilterService } from \"./vault-filter.service\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n  ],\n  exports: [\n    SharedModule,\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n  ],\n  providers: [VaultFilterService],\n})\nexport class VaultFilterSharedModule {}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { DynamicTreeNode } from \"@bitwarden/angular/vault/vault-filter/models/dynamic-tree-node.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"@bitwarden/angular/vault/vault-filter/services/vault-filter.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Injectable()\nexport class VaultFilterService extends BaseVaultFilterService {\n  private _collapsedFilterNodes = new BehaviorSubject<Set<string>>(null);\n  collapsedFilterNodes$: Observable<Set<string>> = this._collapsedFilterNodes.asObservable();\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService,\n    private i18nService: I18nService,\n    protected apiService: ApiService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    const nodes = await super.buildCollapsedFilterNodes();\n    this._collapsedFilterNodes.next(nodes);\n    return nodes;\n  }\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await super.storeCollapsedFilterNodes(collapsedFilterNodes);\n    this._collapsedFilterNodes.next(collapsedFilterNodes);\n  }\n\n  async ensureVaultFiltersAreExpanded() {\n    const collapsedFilterNodes = await super.buildCollapsedFilterNodes();\n    if (!collapsedFilterNodes.has(\"vaults\")) {\n      return;\n    }\n    collapsedFilterNodes.delete(\"vaults\");\n    await this.storeCollapsedFilterNodes(collapsedFilterNodes);\n  }\n\n  async buildAdminCollections(organizationId: string) {\n    let result: CollectionView[] = [];\n    const collectionResponse = await this.apiService.getCollections(organizationId);\n    if (collectionResponse?.data != null && collectionResponse.data.length) {\n      const collectionDomains = collectionResponse.data.map(\n        (r: CollectionDetailsResponse) => new Collection(new CollectionData(r))\n      );\n      result = await this.collectionService.decryptMany(collectionDomains);\n    }\n\n    const noneCollection = new CollectionView();\n    noneCollection.name = this.i18nService.t(\"unassigned\");\n    noneCollection.organizationId = organizationId;\n    result.push(noneCollection);\n\n    const nestedCollections = await this.collectionService.getAllNested(result);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: result,\n      nestedList: nestedCollections,\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { LinkSsoComponent } from \"./organization-filter/link-sso.component\";\nimport { OrganizationFilterComponent } from \"./organization-filter/organization-filter.component\";\nimport { OrganizationOptionsComponent } from \"./organization-filter/organization-options.component\";\nimport { VaultFilterSharedModule } from \"./shared/vault-filter-shared.module\";\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [\n    VaultFilterComponent,\n    OrganizationFilterComponent,\n    OrganizationOptionsComponent,\n    LinkSsoComponent,\n  ],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../jslib-services.module\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","import { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport abstract class AbstractEncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract encryptToBytes: (\n    plainValue: ArrayBuffer,\n    key?: SymmetricCryptoKey\n  ) => Promise<EncArrayBuffer>;\n  abstract decryptToUtf8: (encString: EncString, key: SymmetricCryptoKey) => Promise<string>;\n  abstract decryptToBytes: (encThing: IEncrypted, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  abstract resolveLegacyKey: (key: SymmetricCryptoKey, encThing: IEncrypted) => SymmetricCryptoKey;\n}\n","import { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\nexport abstract class AccountApiService {\n  abstract deleteAccount(request: SecretVerificationRequest): Promise<void>;\n}\n","import { Verification } from \"../../types/verification\";\n\nexport abstract class AccountService {\n  abstract delete(verification: Verification): Promise<any>;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  logIn: (\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n}\n","export interface MessageBase {\n  command: string;\n}\n\nexport abstract class BroadcasterService {\n  send: (message: MessageBase, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: MessageBase) => void) => void;\n  unsubscribe: (id: string) => void;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","import { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/importDirectoryRequest\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organizationApiKeyRequest\";\nimport { OrganizationCreateRequest } from \"../../models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"../../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organizationUpgradeRequest\";\nimport { PaymentRequest } from \"../../models/request/paymentRequest\";\nimport { SeatRequest } from \"../../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { StorageRequest } from \"../../models/request/storageRequest\";\nimport { VerifyBankRequest } from \"../../models/request/verifyBankRequest\";\nimport { ApiKeyResponse } from \"../../models/response/apiKeyResponse\";\nimport { BillingResponse } from \"../../models/response/billingResponse\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organizationSubscriptionResponse\";\nimport { PaymentResponse } from \"../../models/response/paymentResponse\";\nimport { TaxInfoResponse } from \"../../models/response/taxInfoResponse\";\n\nexport class OrganizationApiServiceAbstraction {\n  get: (id: string) => Promise<OrganizationResponse>;\n  getBilling: (id: string) => Promise<BillingResponse>;\n  getSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getLicense: (id: string, installationId: string) => Promise<unknown>;\n  getAutoEnrollStatus: (identifier: string) => Promise<OrganizationAutoEnrollStatusResponse>;\n  create: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  createLicense: (data: FormData) => Promise<OrganizationResponse>;\n  save: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n  updatePayment: (id: string, request: PaymentRequest) => Promise<void>;\n  upgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n  updateSubscription: (id: string, request: OrganizationSubscriptionUpdateRequest) => Promise<void>;\n  updateSeats: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  updateStorage: (id: string, request: StorageRequest) => Promise<PaymentResponse>;\n  verifyBank: (id: string, request: VerifyBankRequest) => Promise<void>;\n  cancel: (id: string) => Promise<void>;\n  reinstate: (id: string) => Promise<void>;\n  leave: (id: string) => Promise<void>;\n  delete: (id: string, request: SecretVerificationRequest) => Promise<void>;\n  updateLicense: (id: string, data: FormData) => Promise<void>;\n  importDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<void>;\n  getOrCreateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getApiKeyInformation: (\n    id: string,\n    organizationApiKeyType?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  rotateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  updateTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<void>;\n  getKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  updateKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n  getSso: (id: string) => Promise<OrganizationSsoResponse>;\n  updateSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport class PolicyApiServiceAbstraction {\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<any>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","export abstract class SettingsService {\n  clearCache: () => Promise<void>;\n  getEquivalentDomains: () => Promise<any>;\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n\nexport abstract class AbstractCachedStorageService extends AbstractStorageService {\n  abstract getBypassCache<T>(key: string, options?: StorageOptions): Promise<T>;\n}\n","import { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { VerifyOTPRequest } from \"@bitwarden/common/models/request/account/verifyOTPRequest\";\n\nexport abstract class UserVerificationApiServiceAbstraction {\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postAccountRequestOTP: () => Promise<void>;\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Six = 6, // Delete account.keys.legacyEtmKey property\n  Latest = Six,\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (allowSoftLock?: boolean, userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: () => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n  decryptedSerialized?: string;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Map<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  publicKey?: ArrayBuffer;\n  publicKeySerialized?: string;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenRequestTwoFactor {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billingResponse\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingSourceResponse } from \"./billingResponse\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billingSyncConfigApi\";\nimport { ScimConfigApi } from \"../api/scimConfigApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionResponse } from \"./collectionResponse\";\nimport { ListResponse } from \"./listResponse\";\n\nexport class OrganizationExportResponse extends BaseResponse {\n  collections: ListResponse<CollectionResponse>;\n  ciphers: ListResponse<CipherResponse>;\n\n  constructor(response: any) {\n    super(response);\n    this.collections = this.getResponseProperty(\"Collections\");\n    this.ciphers = this.getResponseProperty(\"Ciphers\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n  userCount: number;\n  seats?: number;\n  plan?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.userCount = this.getResponseProperty(\"UserCount\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.plan = this.getResponseProperty(\"Plan\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenRequestTwoFactor(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenRequestTwoFactor();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { EncryptionType } from \"@bitwarden/common/enums/encryptionType\";\nimport { IEncrypted } from \"@bitwarden/common/interfaces/IEncrypted\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<number>[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const encBuf = await EncArrayBuffer.fromResponse(attachmentResponse);\n    const decBuf = await this.cryptoService.decryptFromBytes(encBuf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../../models/data/encryptedOrganizationKeyData\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encryptedOrganizationKey\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: AbstractEncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForUserEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encrypt\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encryptToBytes\n   */\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    key = await this.getKeyForUserEncryption(key);\n    return this.encryptService.encryptToBytes(plainValue, key);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForUserEncryption(key);\n    return this.encryptService.decryptToBytes(encString, keyForEnc);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToUtf8\n   */\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptFromBytes(encBuffer: EncArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuffer == null) {\n      throw new Error(\"No buffer provided for decryption.\");\n    }\n\n    key = await this.getKeyForUserEncryption(key);\n\n    return this.encryptService.decryptToBytes(encBuffer, key);\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // ---HELPERS---\n\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  async getKeyForUserEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    // Legacy support: encryption used to be done with the user key (derived from master password).\n    // Users who have not migrated will have a null encKey and must use the user key instead.\n    return await this.getKey();\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1,\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return (this.isAdmin || this.permissions.accessEventLogs) && this.useEvents;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return (this.isAdmin || this.permissions.manageGroups) && this.useGroups;\n  }\n\n  get canManageSso() {\n    return (this.isAdmin || this.permissions.manageSso) && this.useSso;\n  }\n\n  get canManageScim() {\n    return (this.isAdmin || this.permissions.manageScim) && this.useScim;\n  }\n\n  get canManagePolicies() {\n    return (this.isAdmin || this.permissions.managePolicies) && this.usePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  private static registeredPipeline = false;\n\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    // Currently have to ensure this is only done a single time. Lunr allows you to register a function\n    // multiple times but they will add a warning message to the console. The way they do that breaks when ran on a service worker.\n    if (!SearchService.registeredPipeline) {\n      SearchService.registeredPipeline = true;\n      //register lunr pipeline function\n      lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.info(\"Finished search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri?.uri?.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      // eslint-disable-next-line\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountData, AccountSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  private activeAccountSubject = new BehaviorSubject<string>(null);\n  activeAccount$ = this.activeAccountSubject.asObservable();\n\n  private activeAccountUnlockedSubject = new BehaviorSubject<boolean>(false);\n  activeAccountUnlocked$ = this.activeAccountUnlockedSubject.asObservable();\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  private accountDiskCache = new Map<string, TAccount>();\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractStorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccountSubject.subscribe(async (userId) => {\n      if (userId == null && this.activeAccountUnlockedSubject.getValue() == false) {\n        return;\n      } else if (userId == null) {\n        this.activeAccountUnlockedSubject.next(false);\n      }\n\n      // FIXME: This should be refactored into AuthService or a similar service,\n      //  as checking for the existance of the crypto key is a low level\n      //  implementation detail.\n      this.activeAccountUnlockedSubject.next((await this.getCryptoMasterKey()) != null);\n    });\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccountSubject.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccountSubject.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccountSubject.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccountSubject.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlockedSubject.getValue() != nextValue) {\n        this.activeAccountUnlockedSubject.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CipherView, CipherView.fromJSON)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForMap(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(EncString)\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const privateKey = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey;\n    let result = privateKey?.decrypted;\n    if (result == null && privateKey?.decryptedSerialized != null) {\n      result = Utils.fromByteStringToArray(privateKey.decryptedSerialized);\n    }\n    return result;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    account.keys.privateKey.decryptedSerialized =\n      value == null ? null : Utils.fromBufferToByteString(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForMap(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  @withPrototype(EnvironmentUrls)\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    let result = keys?.publicKey;\n    if (result == null && keys?.publicKeySerialized != null) {\n      result = Utils.fromByteStringToArray(keys.publicKeySerialized);\n    }\n    return result;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    account.keys.publicKeySerialized = value == null ? null : Utils.fromBufferToByteString(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accounts.next(null);\n        return;\n      }\n\n      this.accounts.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      if (this.useAccountCache) {\n        this.accountDiskCache.delete(userId);\n      }\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected state(): Promise<State<TGlobalState, TAccount>> {\n    return this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state);\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n}\n\nexport function withPrototype<T>(\n  constructor: new (...args: any[]) => T,\n  converter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<T> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          return result == null ||\n            result.constructor.name === constructor.prototype.constructor.name\n            ? converter(result as T)\n            : converter(\n                Object.create(constructor.prototype, Object.getOwnPropertyDescriptors(result)) as T\n              );\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? memberConverter(r)\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForMap<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<Map<string, T>> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (result instanceof Map) {\n            return result;\n          } else {\n            for (const key in Object.keys(result)) {\n              result[key] =\n                result[key] == null ||\n                result[key].constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(result[key])\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(result[key])\n                      )\n                    );\n            }\n            return new Map<string, T>(Object.entries(result));\n          }\n        });\n      },\n    };\n  };\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n        case StateVersion.Five: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom5To6(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Six);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected async migrateAccountFrom5To6(account: TAccount): Promise<TAccount> {\n    delete (account as any).keys?.legacyEtmKey;\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { InternalPolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: InternalPolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class AnonAddyForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    if (options.anonaddy?.domain == null || options.anonaddy.domain === \"\") {\n      throw \"Invalid AnonAddy domain.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: options.anonaddy.domain,\n      description:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class DuckDuckGoForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://quack.duckduckgo.com/api/email/addresses\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      if (json.address) {\n        return `${json.address}@duck.com`;\n      }\n    } else if (response.status === 401) {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    throw \"Unknown DuckDuckGo error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FastmailForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Fastmail API token.\";\n    }\n    if (options?.fastmail.accountId == null || options.fastmail.accountId === \"\") {\n      throw \"Invalid Fastmail account ID.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://api.fastmail.com/jmap/api/\";\n    requestInit.body = JSON.stringify({\n      using: [\"https://www.fastmail.com/dev/maskedemail\", \"urn:ietf:params:jmap:core\"],\n      methodCalls: [\n        [\n          \"MaskedEmail/set\",\n          {\n            accountId: \"u\" + options.fastmail.accountId,\n            create: {\n              \"new-masked-email\": {\n                state: \"enabled\",\n                description:\n                  (options.website != null ? options.website + \" - \" : \"\") +\n                  \"Generated by Bitwarden\",\n                url: options.website,\n                emailPrefix: options.fastmail.prefix,\n              },\n            },\n          },\n          \"0\",\n        ],\n      ],\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (\n        json.methodResponses != null &&\n        json.methodResponses.length > 0 &&\n        json.methodResponses[0].length > 0\n      ) {\n        if (json.methodResponses[0][0] === \"MaskedEmail/set\") {\n          return json.methodResponses[0][1]?.created?.[\"new-masked-email\"]?.email;\n        } else if (json.methodResponses[0][0] === \"error\") {\n          throw \"Fastmail error: \" + json.methodResponses[0][1]?.description;\n        }\n      }\n    }\n    if (response.status === 401) {\n      throw \"Invalid Fastmail API token.\";\n    }\n    throw \"Unknown Fastmail error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FirefoxRelayForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: options.website,\n      description:\n        (options.website != null ? options.website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class ForwarderOptions {\n  apiKey: string;\n  website: string;\n  fastmail = new FastmailForwarderOptions();\n  anonaddy = new AnonAddyForwarderOptions();\n}\n\nexport class FastmailForwarderOptions {\n  accountId: string;\n  prefix: string;\n}\n\nexport class AnonAddyForwarderOptions {\n  domain: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class SimpleLoginForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (options.website != null) {\n      url += \"?hostname=\" + options.website;\n    }\n    requestInit.body = JSON.stringify({\n      note:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { AnonAddyForwarder } from \"../emailForwarders/anonAddyForwarder\";\nimport { DuckDuckGoForwarder } from \"../emailForwarders/duckDuckGoForwarder\";\nimport { FastmailForwarder } from \"../emailForwarders/fastmailForwarder\";\nimport { FirefoxRelayForwarder } from \"../emailForwarders/firefoxRelayForwarder\";\nimport { Forwarder } from \"../emailForwarders/forwarder\";\nimport { ForwarderOptions } from \"../emailForwarders/forwarderOptions\";\nimport { SimpleLoginForwarder } from \"../emailForwarders/simpleLoginForwarder\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"simplelogin\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EEFLongWordList.length - 1);\n    let word = EEFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    let forwarder: Forwarder = null;\n    const forwarderOptions = new ForwarderOptions();\n    forwarderOptions.website = o.website;\n    if (o.forwardedService === \"simplelogin\") {\n      forwarder = new SimpleLoginForwarder();\n      forwarderOptions.apiKey = o.forwardedSimpleLoginApiKey;\n    } else if (o.forwardedService === \"anonaddy\") {\n      forwarder = new AnonAddyForwarder();\n      forwarderOptions.apiKey = o.forwardedAnonAddyApiToken;\n      forwarderOptions.anonaddy.domain = o.forwardedAnonAddyDomain;\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      forwarder = new FirefoxRelayForwarder();\n      forwarderOptions.apiKey = o.forwardedFirefoxApiToken;\n    } else if (o.forwardedService === \"fastmail\") {\n      forwarder = new FastmailForwarder();\n      forwarderOptions.apiKey = o.forwardedFastmailApiToken;\n      forwarderOptions.fastmail.accountId = o.forwardedFastmailAccountId;\n    } else if (o.forwardedService === \"duckduckgo\") {\n      forwarder = new DuckDuckGoForwarder();\n      forwarderOptions.apiKey = o.forwardedDuckDuckGoToken;\n    }\n\n    if (forwarder == null) {\n      return null;\n    }\n\n    return forwarder.generate(this.apiService, forwarderOptions);\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import {\n  BroadcasterService as BroadcasterServiceAbstraction,\n  MessageBase,\n} from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: MessageBase) => void> = new Map<\n    string,\n    (message: MessageBase) => void\n  >();\n\n  send(message: MessageBase, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: MessageBase) => void) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals?: boolean;\n  replaceTopModal?: boolean;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config: ModalConfig = {}) {\n    const { replaceTopModal = false, allowMultipleModals = false } = config;\n\n    if (this.modalCount > 0 && replaceTopModal) {\n      this.topModal.instance.close();\n    }\n\n    if (this.modalCount > 0 && !allowMultipleModals) {\n      return;\n    }\n\n    const [modalRef] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  closeAll(): void {\n    this.modalList.forEach((modal) => modal.instance.close());\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { InjectionToken, Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ThemingService } from \"@bitwarden/angular/services/theming/theming.service\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { AbstractEncryptService } from \"@bitwarden/common/abstractions/abstractEncrypt.service\";\nimport { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { AccountService as AccountServiceAbstraction } from \"@bitwarden/common/abstractions/account/account.service.abstraction\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport {\n  PolicyService as PolicyServiceAbstraction,\n  InternalPolicyService,\n} from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { AccountApiService } from \"@bitwarden/common/services/account/account-api.service\";\nimport { AccountService } from \"@bitwarden/common/services/account/account.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/services/encrypt.service\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventService } from \"@bitwarden/common/services/event.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization.service\";\nimport { OrganizationApiService } from \"@bitwarden/common/services/organization/organization-api.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ValidationService } from \"./validation.service\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n\n@NgModule({\n  declarations: [],\n  providers: [\n    ValidationService,\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AccountApiServiceAbstraction,\n      useClass: AccountApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AccountServiceAbstraction,\n      useClass: AccountService,\n      deps: [\n        AccountApiServiceAbstraction,\n        UserVerificationServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n      ],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        AbstractEncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: AbstractEncryptService,\n      useClass: EncryptService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction],\n    },\n    {\n      provide: InternalPolicyService,\n      useExisting: PolicyServiceAbstraction,\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useClass: PolicyApiService,\n      deps: [\n        PolicyServiceAbstraction,\n        ApiServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        UserVerificationApiServiceAbstraction,\n      ],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n    {\n      provide: UserVerificationApiServiceAbstraction,\n      useClass: UserVerificationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: OrganizationApiServiceAbstraction,\n      useClass: OrganizationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n  private sessionTimeout: any;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n\n    if (credentials.type === AuthenticationType.Password) {\n      strategy = new PasswordLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this\n      );\n    } else if (credentials.type === AuthenticationType.Sso) {\n      strategy = new SsoLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.keyConnectorService\n      );\n    } else if (credentials.type === AuthenticationType.Api) {\n      strategy = new ApiLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.environmentService,\n        this.keyConnectorService\n      );\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  private saveState(strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipherData\";\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  protected _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  protected _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked$.subscribe(async (unlocked) => {\n      if ((Utils.global as any).bitwardenContainerService == null) {\n        return;\n      }\n\n      if (!unlocked) {\n        this._folders.next([]);\n        this._folderViews.next([]);\n        return;\n      }\n\n      const data = await this.stateService.getEncryptedFolders();\n\n      await this.updateObservables(data);\n    });\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"@bitwarden/common/models/data/folderData\";\nimport { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderRequest } from \"@bitwarden/common/models/request/folderRequest\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","import { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\nexport class AccountApiService implements AccountApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  deleteAccount(request: SecretVerificationRequest): Promise<void> {\n    return this.apiService.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n}\n","import { AccountApiService } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\nimport { AccountService as AccountServiceAbstraction } from \"../../abstractions/account/account.service.abstraction\";\nimport { Verification } from \"../../types/verification\";\n\nexport class AccountService implements AccountServiceAbstraction {\n  constructor(\n    private accountApiService: AccountApiService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async delete(verification: Verification): Promise<void> {\n    try {\n      const verificationRequest = await this.userVerificationService.buildRequest(verification);\n      await this.accountApiService.deleteAccount(verificationRequest);\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  protected baseUrl: string;\n  protected webVaultUrl: string;\n  protected apiUrl: string;\n  protected identityUrl: string;\n  protected iconsUrl: string;\n  protected notificationsUrl: string;\n  protected eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount$.subscribe(async () => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceRequest } from \"../models/request/deviceRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationExportResponse } from \"../models/response/organizationExportResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      false,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<void> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  revokeOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/revoke\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async revokeManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/revoke\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  restoreOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/restore\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async restoreManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/restore\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, false, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getOrganizationExport(organizationId: string): Promise<OrganizationExportResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/export\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationExportResponse(r);\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    const tokenRequest = new ApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenRequestTwoFactor(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { AuthService } from \"../abstractions/auth.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(true, userId);\n  }\n}\n","import * as papa from \"papaparse\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipherWithIdsExport\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collectionWithIdExport\";\nimport { EventExport } from \"../models/export/eventExport\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folderWithIdExport\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folderViews$).then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folders$).then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getOrganizationExport(organizationId).then((exportData) => {\n        const exportPromises: any = [];\n        if (exportData != null) {\n          if (\n            exportData.collections != null &&\n            exportData.collections.data != null &&\n            exportData.collections.data.length > 0\n          ) {\n            exportData.collections.data.forEach((c) => {\n              const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n              exportPromises.push(\n                collection.decrypt().then((decCol) => {\n                  decCollections.push(decCol);\n                })\n              );\n            });\n          }\n          if (\n            exportData.ciphers != null &&\n            exportData.ciphers.data != null &&\n            exportData.ciphers.data.length > 0\n          ) {\n            exportData.ciphers.data\n              .filter((c) => c.deletedDate === null)\n              .forEach((c) => {\n                const cipher = new Cipher(new CipherData(c));\n                exportPromises.push(\n                  cipher.decrypt().then((decCipher) => {\n                    decCiphers.push(decCipher);\n                  })\n                );\n              });\n          }\n        }\n        return Promise.all(exportPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { EncryptedObject } from \"@bitwarden/common/models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class EncryptService implements AbstractEncryptService {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false,\n    organizationId: string = null\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    if (organizationId != null) {\n      if (!orgIds.has(organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    event.organizationId = organizationId;\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      req.organizationId = e.organizationId;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { OrganizationService } from \"../../abstractions/organization.service\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport class PolicyService implements InternalPolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  async upsert(policy: PolicyData): Promise<any> {\n    let policies = await this.stateService.getEncryptedPolicies();\n    if (policies == null) {\n      policies = {};\n    }\n\n    policies[policy.id] = policy;\n\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport class PolicyApiService implements PolicyApiServiceAbstraction {\n  constructor(\n    private policyService: InternalPolicyService,\n    private apiService: ApiService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.policyService.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.policyService.mapPoliciesFromToken(response);\n    return this.policyService.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<any> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    const response = new PolicyResponse(r);\n    const data = new PolicyData(response);\n    await this.policyService.upsert(data);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"../../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { Verification } from \"../../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private userVerificationApiService: UserVerificationApiServiceAbstraction\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.userVerificationApiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.userVerificationApiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    const sortedResponse = response.sort((a, b) => a.name.localeCompare(b.name));\n    return sortedResponse;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import { UntypedFormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof UntypedFormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verifyOTPRequest\";\n\nexport class UserVerificationApiService implements UserVerificationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n  async postAccountRequestOTP(): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"../../abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/importDirectoryRequest\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organizationApiKeyRequest\";\nimport { OrganizationCreateRequest } from \"../../models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"../../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organizationUpgradeRequest\";\nimport { PaymentRequest } from \"../../models/request/paymentRequest\";\nimport { SeatRequest } from \"../../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { StorageRequest } from \"../../models/request/storageRequest\";\nimport { VerifyBankRequest } from \"../../models/request/verifyBankRequest\";\nimport { ApiKeyResponse } from \"../../models/response/apiKeyResponse\";\nimport { BillingResponse } from \"../../models/response/billingResponse\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organizationSubscriptionResponse\";\nimport { PaymentResponse } from \"../../models/response/paymentResponse\";\nimport { TaxInfoResponse } from \"../../models/response/taxInfoResponse\";\n\nexport class OrganizationApiService implements OrganizationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(id: string): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getBilling(id: string): Promise<BillingResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/billing\",\n      null,\n      true,\n      true\n    );\n    return new BillingResponse(r);\n  }\n\n  async getSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/subscription\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getLicense(id: string, installationId: string): Promise<unknown> {\n    return this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getAutoEnrollStatus(identifier: string): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  async create(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async createLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async save(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async updatePayment(id: string, request: PaymentRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  async upgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/upgrade\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/subscription\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async updateSeats(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/seat\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/storage\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async verifyBank(id: string, request: VerifyBankRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/verify-bank\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async cancel(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  async reinstate(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  async leave(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async delete(id: string, request: SecretVerificationRequest): Promise<void> {\n    return this.apiService.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async updateLicense(id: string, data: FormData): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async importDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/import\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getOrCreateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getApiKeyInformation(\n    id: string,\n    organizationApiKeyType: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      organizationApiKeyType === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + organizationApiKeyType;\n    const r = await this.apiService.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async rotateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async updateTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<void> {\n    return this.apiService.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  async getKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async updateKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/keys\",\n      request,\n      true,\n      true\n    );\n    return new OrganizationKeysResponse(r);\n  }\n\n  async getSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async updateSso(id: string, request: OrganizationSsoRequest): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/sso\",\n      request,\n      true,\n      true\n    );\n    return new OrganizationSsoResponse(r);\n  }\n}\n","import { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\n\nexport class MemoryStorageService implements AbstractStorageService {\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.get(key) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Injectable()\nexport class BroadcasterMessagingService implements MessagingService {\n  constructor(private broadcasterService: BroadcasterService) {}\n\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    this.broadcasterService.send(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\n@Injectable()\nexport class EventService {\n  constructor(private i18nService: I18nService, private policyService: PolicyService) {}\n\n  getDefaultDateFilters() {\n    const d = new Date();\n    const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n    d.setDate(d.getDate() - 30);\n    const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n    return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n  }\n\n  formatDateFilters(filterStart: string, filterEnd: string) {\n    const start: Date = new Date(filterStart);\n    const end: Date = new Date(filterEnd + \":59.999\");\n    if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n      throw new Error(\"Invalid date range.\");\n    }\n    return [start.toISOString(), end.toISOString()];\n  }\n\n  async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n    const appInfo = this.getAppInfo(ev.deviceType);\n    const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n    return {\n      message: message,\n      humanReadableMessage: humanReadableMessage,\n      appIcon: appInfo[0],\n      appName: appInfo[1],\n    };\n  }\n\n  private async getEventMessage(ev: EventResponse, options: EventOptions) {\n    let msg = \"\";\n    let humanReadableMsg = \"\";\n    switch (ev.type) {\n      // User\n      case EventType.User_LoggedIn:\n        msg = humanReadableMsg = this.i18nService.t(\"loggedIn\");\n        break;\n      case EventType.User_ChangedPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"changedPassword\");\n        break;\n      case EventType.User_Updated2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledUpdated2fa\");\n        break;\n      case EventType.User_Disabled2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"disabled2fa\");\n        break;\n      case EventType.User_Recovered2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"recovered2fa\");\n        break;\n      case EventType.User_FailedLogIn:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin\");\n        break;\n      case EventType.User_FailedLogIn2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin2fa\");\n        break;\n      case EventType.User_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedVault\");\n        break;\n      case EventType.User_UpdatedTempPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"updatedMasterPassword\");\n        break;\n      case EventType.User_MigratedKeyToKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"migratedKeyConnector\");\n        break;\n      // Cipher\n      case EventType.Cipher_Created:\n        msg = this.i18nService.t(\"createdItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"createdItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Updated:\n        msg = this.i18nService.t(\"editedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"editedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Deleted:\n        msg = this.i18nService.t(\"permanentlyDeletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"permanentlyDeletedItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_SoftDeleted:\n        msg = this.i18nService.t(\"deletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"deletedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Restored:\n        msg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        break;\n      case EventType.Cipher_AttachmentCreated:\n        msg = this.i18nService.t(\"createdAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"createdAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_AttachmentDeleted:\n        msg = this.i18nService.t(\"deletedAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_Shared:\n        msg = this.i18nService.t(\"movedItemIdToOrg\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"movedItemIdToOrg\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientViewed:\n        msg = this.i18nService.t(\"viewedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledPasswordVisible:\n        msg = this.i18nService.t(\"viewedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledHiddenFieldVisible:\n        msg = this.i18nService.t(\"viewedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardCodeVisible:\n        msg = this.i18nService.t(\"viewedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedHiddenField:\n        msg = this.i18nService.t(\"copiedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedPassword:\n        msg = this.i18nService.t(\"copiedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"copiedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientCopiedCardCode:\n        msg = this.i18nService.t(\"copiedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientAutofilled:\n        msg = this.i18nService.t(\"autofilledItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"autofilledItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_UpdatedCollections:\n        msg = this.i18nService.t(\"editedCollectionsForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionsForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      // Collection\n      case EventType.Collection_Created:\n        msg = this.i18nService.t(\"createdCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Updated:\n        msg = this.i18nService.t(\"editedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Deleted:\n        msg = this.i18nService.t(\"deletedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      // Group\n      case EventType.Group_Created:\n        msg = this.i18nService.t(\"createdGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"createdGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Updated:\n        msg = this.i18nService.t(\"editedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Deleted:\n        msg = this.i18nService.t(\"deletedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"deletedGroupId\", this.getShortId(ev.groupId));\n        break;\n      // Org user\n      case EventType.OrganizationUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"invitedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UpdatedGroups:\n        msg = this.i18nService.t(\"editedGroupsForUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedGroupsForUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UnlinkedSso:\n        msg = this.i18nService.t(\"unlinkedSsoUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"unlinkedSsoUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Enroll:\n        msg = this.i18nService.t(\"eventEnrollPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventEnrollPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Withdraw:\n        msg = this.i18nService.t(\"eventWithdrawPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventWithdrawPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_AdminResetPassword:\n        msg = this.i18nService.t(\"eventAdminPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventAdminPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetSsoLink:\n        msg = this.i18nService.t(\"eventResetSsoLink\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventResetSsoLink\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_FirstSsoLogin:\n        msg = this.i18nService.t(\"firstSsoLogin\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"firstSsoLogin\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Revoked:\n        msg = this.i18nService.t(\"revokedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"revokedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Restored:\n        msg = this.i18nService.t(\"restoredUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"restoredUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      // Org\n      case EventType.Organization_Updated:\n        msg = humanReadableMsg = this.i18nService.t(\"editedOrgSettings\");\n        break;\n      case EventType.Organization_PurgedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"purgedOrganizationVault\");\n        break;\n      case EventType.Organization_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedOrganizationVault\");\n        break;\n      case EventType.Organization_VaultAccessed:\n        msg = humanReadableMsg = this.i18nService.t(\"vaultAccessedByProvider\");\n        break;\n      case EventType.Organization_EnabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledSso\");\n        break;\n      case EventType.Organization_DisabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledSso\");\n        break;\n      case EventType.Organization_EnabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledKeyConnector\");\n        break;\n      case EventType.Organization_DisabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledKeyConnector\");\n        break;\n      case EventType.Organization_SponsorshipsSynced:\n        msg = humanReadableMsg = this.i18nService.t(\"sponsorshipsSynced\");\n        break;\n      // Policies\n      case EventType.Policy_Updated: {\n        msg = this.i18nService.t(\"modifiedPolicyId\", this.formatPolicyId(ev));\n\n        const policies = await this.policyService.getAll();\n        const policy = policies.filter((p) => p.id === ev.policyId)[0];\n        let p1 = this.getShortId(ev.policyId);\n        if (policy != null) {\n          p1 = PolicyType[policy.type];\n        }\n\n        humanReadableMsg = this.i18nService.t(\"modifiedPolicyId\", p1);\n        break;\n      }\n      // Provider users:\n      case EventType.ProviderUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"invitedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.providerUserId)\n        );\n        break;\n      case EventType.ProviderUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"removedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderOrganization_Created:\n        msg = this.i18nService.t(\"createdOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Added:\n        msg = this.i18nService.t(\"addedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"addedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Removed:\n        msg = this.i18nService.t(\"removedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_VaultAccessed:\n        msg = this.i18nService.t(\"accessedClientVault\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"accessedClientVault\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      default:\n        break;\n    }\n    return {\n      message: msg === \"\" ? null : msg,\n      humanReadableMessage: humanReadableMsg === \"\" ? null : humanReadableMsg,\n    };\n  }\n\n  private getAppInfo(deviceType: DeviceType): [string, string] {\n    switch (deviceType) {\n      case DeviceType.Android:\n        return [\"bwi-android\", this.i18nService.t(\"mobile\") + \" - Android\"];\n      case DeviceType.iOS:\n        return [\"bwi-apple\", this.i18nService.t(\"mobile\") + \" - iOS\"];\n      case DeviceType.UWP:\n        return [\"bwi-windows\", this.i18nService.t(\"mobile\") + \" - Windows\"];\n      case DeviceType.ChromeExtension:\n        return [\"bwi-chrome\", this.i18nService.t(\"extension\") + \" - Chrome\"];\n      case DeviceType.FirefoxExtension:\n        return [\"bwi-firefox\", this.i18nService.t(\"extension\") + \" - Firefox\"];\n      case DeviceType.OperaExtension:\n        return [\"bwi-opera\", this.i18nService.t(\"extension\") + \" - Opera\"];\n      case DeviceType.EdgeExtension:\n        return [\"bwi-edge\", this.i18nService.t(\"extension\") + \" - Edge\"];\n      case DeviceType.VivaldiExtension:\n        return [\"bwi-puzzle\", this.i18nService.t(\"extension\") + \" - Vivaldi\"];\n      case DeviceType.SafariExtension:\n        return [\"bwi-safari\", this.i18nService.t(\"extension\") + \" - Safari\"];\n      case DeviceType.WindowsDesktop:\n        return [\"bwi-windows\", this.i18nService.t(\"desktop\") + \" - Windows\"];\n      case DeviceType.MacOsDesktop:\n        return [\"bwi-apple\", this.i18nService.t(\"desktop\") + \" - macOS\"];\n      case DeviceType.LinuxDesktop:\n        return [\"bwi-linux\", this.i18nService.t(\"desktop\") + \" - Linux\"];\n      case DeviceType.ChromeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Chrome\"];\n      case DeviceType.FirefoxBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Firefox\"];\n      case DeviceType.OperaBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Opera\"];\n      case DeviceType.SafariBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Safari\"];\n      case DeviceType.VivaldiBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Vivaldi\"];\n      case DeviceType.EdgeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Edge\"];\n      case DeviceType.IEBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - IE\"];\n      case DeviceType.UnknownBrowser:\n        return [\n          \"bwi-globe\",\n          this.i18nService.t(\"webVault\") + \" - \" + this.i18nService.t(\"unknown\"),\n        ];\n      default:\n        return [\"bwi-globe\", this.i18nService.t(\"unknown\")];\n    }\n  }\n\n  private formatCipherId(ev: EventResponse, options: EventOptions) {\n    const shortId = this.getShortId(ev.cipherId);\n    if (ev.organizationId == null || !options.cipherInfo) {\n      return \"<code>\" + shortId + \"</code>\";\n    }\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/vault?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.cipherId\n    );\n    return a.outerHTML;\n  }\n\n  private formatGroupId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.groupId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/groups?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatCollectionId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.collectionId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/collections?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatOrgUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.organizationUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.organizationUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/providers/\" +\n        ev.providerId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.providerUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderOrganizationId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerOrganizationId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/providers/\" + ev.providerId + \"/clients?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatPolicyId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.policyId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/policies?policyId=\" + ev.policyId\n    );\n    return a.outerHTML;\n  }\n\n  private makeAnchor(shortId: string) {\n    const a = document.createElement(\"a\");\n    a.title = this.i18nService.t(\"view\");\n    a.innerHTML = \"<code>\" + shortId + \"</code>\";\n    return a;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  private toDateTimeLocalString(date: Date) {\n    return (\n      date.getFullYear() +\n      \"-\" +\n      this.pad(date.getMonth() + 1) +\n      \"-\" +\n      this.pad(date.getDate()) +\n      \"T\" +\n      this.pad(date.getHours()) +\n      \":\" +\n      this.pad(date.getMinutes())\n    );\n  }\n\n  private pad(num: number) {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  }\n}\n\nexport class EventInfo {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n}\n\nexport class EventOptions {\n  cipherInfo = true;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"@bitwarden/common/enums/htmlStorageLocation\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\n\n@Injectable()\nexport class HtmlStorageService implements AbstractStorageService {\n  get defaultOptions(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Session };\n  }\n\n  get<T>(key: string, options: StorageOptions = this.defaultOptions): Promise<T> {\n    let json: string = null;\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        json = window.localStorage.getItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        json = window.sessionStorage.getItem(key);\n        break;\n    }\n\n    if (json != null) {\n      const obj = JSON.parse(json);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string, options: StorageOptions = this.defaultOptions): Promise<boolean> {\n    return (await this.get(key, options)) != null;\n  }\n\n  save(key: string, obj: any, options: StorageOptions = this.defaultOptions): Promise<any> {\n    if (obj == null) {\n      return this.remove(key, options);\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const json = JSON.stringify(obj);\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.setItem(key, json);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.setItem(key, json);\n        break;\n    }\n    return Promise.resolve();\n  }\n\n  remove(key: string, options: StorageOptions = this.defaultOptions): Promise<any> {\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.removeItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.removeItem(key);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  getCryptoService(): CryptoService {\n    return this.cryptoService;\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport { WINDOW } from \"@bitwarden/angular/services/jslib-services.module\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventLoggingServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EventService as EventLoggingService } from \"@bitwarden/common/services/event.service\";\nimport { VaultTimeoutService as VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout.service\";\n\nimport { I18nService } from \"./i18n.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    @Inject(WINDOW) private win: Window,\n    private environmentService: EnvironmentServiceAbstraction,\n    private notificationsService: NotificationsServiceAbstraction,\n    private vaultTimeoutService: VaultTimeoutServiceAbstraction,\n    private i18nService: I18nServiceAbstraction,\n    private eventLoggingService: EventLoggingServiceAbstraction,\n    private twoFactorService: TwoFactorServiceAbstraction,\n    private stateService: StateServiceAbstraction,\n    private cryptoService: CryptoServiceAbstraction,\n    private themingService: AbstractThemingService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      const urls = process.env.URLS as Urls;\n      urls.base ??= this.win.location.origin;\n      this.environmentService.setUrls(urls);\n\n      setTimeout(() => this.notificationsService.init(), 3000);\n      (this.vaultTimeoutService as VaultTimeoutService).init(true);\n      const locale = await this.stateService.getLocale();\n      await (this.i18nService as I18nService).init(locale);\n      (this.eventLoggingService as EventLoggingService).init(true);\n      this.twoFactorService.init();\n      const htmlEl = this.win.document.documentElement;\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n      await this.themingService.monitorThemeChanges();\n      const containerService = new ContainerService(this.cryptoService);\n      containerService.attachToGlobal(this.win);\n    };\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport * as jq from \"jquery\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService as BaseModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n  el: any = null;\n  modalOpen = false;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    applicationRef: ApplicationRef,\n    injector: Injector,\n    private messagingService: MessagingService\n  ) {\n    super(componentFactoryResolver, applicationRef, injector);\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    modalRef.onCreated.pipe(first()).subscribe(() => {\n      const modals = Array.from(document.querySelectorAll(\".modal\"));\n      if (modals.length > 0) {\n        this.el = jq(modals[0]);\n        this.el.modal(\"show\");\n\n        this.el.on(\"show.bs.modal\", () => {\n          modalRef.show();\n          this.messagingService.send(\"modalShow\");\n        });\n        this.el.on(\"shown.bs.modal\", () => {\n          modalRef.shown();\n          this.messagingService.send(\"modalShown\");\n          if (!Utils.isMobileBrowser) {\n            this.el.find(\"*[appAutoFocus]\").focus();\n          }\n        });\n        this.el.on(\"hide.bs.modal\", () => {\n          this.messagingService.send(\"modalClose\");\n        });\n        this.el.on(\"hidden.bs.modal\", () => {\n          modalRef.closed();\n          this.messagingService.send(\"modalClosed\");\n        });\n      }\n    });\n\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      if (this.el != null) {\n        this.el.modal(\"hide\");\n      }\n    });\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"passwordConfirmation\" | i18n }}\n        </h2>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"passwordConfirmationDesc\" | i18n }}\n\n        <div class=\"form-group\">\n          <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n            <button\n              type=\"button\"\n              class=\"ml-1 btn btn-link\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { BasePolicy } from \"../organizations/policies/base-policy.component\";\n\nexport class PolicyListService {\n  private policies: BasePolicy[] = [];\n\n  addPolicies(policies: BasePolicy[]) {\n    this.policies.push(...policies);\n  }\n\n  getPolicies(): BasePolicy[] {\n    return this.policies;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\nimport { filter } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Injectable()\nexport class RouterService {\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    i18nService: I18nService\n  ) {\n    this.currentUrl = this.router.url;\n\n    router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentUrl = event.url;\n\n        let title = i18nService.t(\"pageTitle\", \"Bitwarden\");\n        let child = this.activatedRoute.firstChild;\n        while (child.firstChild) {\n          child = child.firstChild;\n        }\n\n        const titleId: string = child?.snapshot?.data?.titleId;\n        const rawTitle: string = child?.snapshot?.data?.title;\n        const updateUrl = !child?.snapshot?.data?.doNotSaveUrl ?? true;\n\n        if (titleId != null || rawTitle != null) {\n          const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n          if (newTitle != null && newTitle !== \"\") {\n            title = newTitle + \" | \" + title;\n          }\n        }\n        this.titleService.setTitle(title);\n        if (updateUrl) {\n          this.setPreviousUrl(this.currentUrl);\n        }\n      });\n  }\n\n  getPreviousUrl() {\n    return this.previousUrl;\n  }\n\n  setPreviousUrl(url: string) {\n    this.previousUrl = url;\n  }\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = process.env.NODE_ENV === \"development\" ? null : 15;\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport {\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n} from \"@bitwarden/angular/services/jslib-services.module\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateMigrationService } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { FolderData } from \"@bitwarden/common/models/data/folderData\";\nimport { SendData } from \"@bitwarden/common/models/data/sendData\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\nimport { StateService as BaseStateService } from \"@bitwarden/common/services/state.service\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\n@Injectable()\nexport class StateService extends BaseStateService<GlobalState, Account> {\n  constructor(\n    storageService: AbstractStorageService,\n    @Inject(SECURE_STORAGE) secureStorageService: AbstractStorageService,\n    @Inject(MEMORY_STORAGE) memoryStorageService: AbstractStorageService,\n    logService: LogService,\n    stateMigrationService: StateMigrationService,\n    @Inject(STATE_FACTORY) stateFactory: StateFactory<GlobalState, Account>,\n    @Inject(STATE_SERVICE_USE_CACHE) useAccountCache = true\n  ) {\n    super(\n      storageService,\n      secureStorageService,\n      memoryStorageService,\n      logService,\n      stateMigrationService,\n      stateFactory,\n      useAccountCache\n    );\n  }\n\n  async addAccount(account: Account) {\n    // Apply web overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getRememberEmail(options?: StorageOptions) {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberEmail;\n  }\n\n  async setRememberEmail(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCiphers(options);\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCiphers(value, options);\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCollections(options);\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCollections(value, options);\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedFolders(options);\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedFolders(value, options);\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedSends(options);\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedSends(value, options);\n  }\n\n  override async getLastSync(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getLastSync(options);\n  }\n\n  override async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setLastSync(value, options);\n  }\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class WebFileDownloadService implements FileDownloadService {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    const a = window.document.createElement(\"a\");\n    if (builder.downloadMethod === \"save\") {\n      a.download = request.fileName;\n    } else if (!this.platformUtilsService.isSafari()) {\n      a.target = \"_blank\";\n    }\n    a.href = URL.createObjectURL(builder.blob);\n    a.style.position = \"fixed\";\n    window.document.body.appendChild(a);\n    a.click();\n    window.document.body.removeChild(a);\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { Injectable } from \"@angular/core\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\n@Injectable()\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n  private browserCache: DeviceType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.browserCache != null) {\n      return this.browserCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.browserCache = DeviceType.FirefoxBrowser;\n    } else if (navigator.userAgent.indexOf(\" OPR/\") >= 0) {\n      this.browserCache = DeviceType.OperaBrowser;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.browserCache = DeviceType.EdgeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.browserCache = DeviceType.VivaldiBrowser;\n    } else if (\n      navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      this.browserCache = DeviceType.SafariBrowser;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.browserCache = DeviceType.ChromeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Trident/\") !== -1) {\n      this.browserCache = DeviceType.IEBrowser;\n    } else {\n      this.browserCache = DeviceType.UnknownBrowser;\n    }\n\n    return this.browserCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"browser\", \"\");\n  }\n\n  getClientType() {\n    return ClientType.Web;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxBrowser;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeBrowser;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeBrowser;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaBrowser;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiBrowser;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariBrowser;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  isViewOpen(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    const a = document.createElement(\"a\");\n    a.href = uri;\n    if (options == null || !options.sameWindow) {\n      a.target = \"_blank\";\n      a.rel = \"noreferrer noopener\";\n    }\n    a.classList.add(\"d-none\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(process.env.APPLICATION_VERSION || \"-\");\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  async showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    let iconClasses: string = null;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const bootstrapModal = document.querySelector(\"div.modal\");\n    if (bootstrapModal != null) {\n      bootstrapModal.removeAttribute(\"tabindex\");\n    }\n\n    const iconHtmlStr =\n      iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml: iconHtmlStr,\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      titleText: title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n    });\n\n    if (bootstrapModal != null) {\n      bootstrapModal.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    return confirmed.value;\n  }\n\n  isDev(): boolean {\n    return process.env.NODE_ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return process.env.ENV.toString() === \"selfhosted\";\n  }\n\n  copyToClipboard(text: string, options?: any): void | boolean {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      let copyEl = doc.body;\n      // For some reason copy command won't work when modal is open if appending to body\n      if (doc.body.classList.contains(\"modal-open\")) {\n        copyEl = doc.body.querySelector<HTMLElement>(\".modal\");\n      }\n      copyEl.appendChild(textarea);\n      textarea.select();\n      let success = false;\n      try {\n        // Security exception may be thrown by some browsers.\n        success = doc.execCommand(\"copy\");\n        if (!success) {\n          this.logService.debug(\"Copy command unsupported or disabled.\");\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        copyEl.removeChild(textarea);\n      }\n      return success;\n    }\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Cannot read from clipboard on web.\");\n  }\n\n  supportsBiometric() {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric() {\n    return Promise.resolve(false);\n  }\n\n  supportsSecureStorage() {\n    return false;\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { APP_INITIALIZER, NgModule, Optional, SkipSelf } from \"@angular/core\";\n\nimport {\n  JslibServicesModule,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  MEMORY_STORAGE,\n} from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ModalService as ModalServiceAbstraction } from \"@bitwarden/angular/services/modal.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\n\nimport { BroadcasterMessagingService } from \"./broadcaster-messaging.service\";\nimport { EventService } from \"./event.service\";\nimport { HtmlStorageService } from \"./html-storage.service\";\nimport { I18nService } from \"./i18n.service\";\nimport { InitService } from \"./init.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PolicyListService } from \"./policy-list.service\";\nimport { RouterService } from \"./router.service\";\nimport { Account, GlobalState, StateService } from \"./state\";\nimport { StateMigrationService } from \"./state-migration.service\";\nimport { WebFileDownloadService } from \"./web-file-download.service\";\nimport { WebPlatformUtilsService } from \"./web-platform-utils.service\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, JslibServicesModule],\n  providers: [\n    InitService,\n    RouterService,\n    EventService,\n    PolicyListService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: false,\n    },\n    {\n      provide: I18nServiceAbstraction,\n      useClass: I18nService,\n      deps: [SYSTEM_LANGUAGE, LOCALES_DIRECTORY],\n    },\n    { provide: AbstractStorageService, useClass: HtmlStorageService },\n    {\n      provide: SECURE_STORAGE,\n      // TODO: platformUtilsService.isDev has a helper for this, but using that service here results in a circular dependency.\n      // We have a tech debt item in the backlog to break up platformUtilsService, but in the meantime simply checking the environement here is less cumbersome.\n      useClass: process.env.NODE_ENV === \"development\" ? HtmlStorageService : MemoryStorageService,\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useClass: MemoryStorageService,\n    },\n    {\n      provide: PlatformUtilsServiceAbstraction,\n      useClass: WebPlatformUtilsService,\n    },\n    { provide: MessagingServiceAbstraction, useClass: BroadcasterMessagingService },\n    { provide: ModalServiceAbstraction, useClass: ModalService },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    StateService,\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateService,\n    },\n    {\n      provide: PasswordRepromptServiceAbstraction,\n      useClass: PasswordRepromptService,\n    },\n    {\n      provide: FileDownloadService,\n      useClass: WebFileDownloadService,\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\n    if (parentModule) {\n      throw new Error(\"CoreModule is already loaded. Import it in the AppModule only\");\n    }\n  }\n}\n","export type Flags = {\n  showTrial?: boolean;\n};\n\nexport type FlagName = keyof Flags;\n\nexport function flagEnabled(flag: FlagName): boolean {\n  return flags()[flag] == null || flags()[flag];\n}\n\nfunction flags(): Flags {\n  const envFlags = process.env.FLAGS as string | Flags;\n\n  if (typeof envFlags === \"string\") {\n    return JSON.parse(envFlags) as Flags;\n  } else {\n    return envFlags as Flags;\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { GlobalState as BaseGlobalState } from \"@bitwarden/common/models/domain/globalState\";\n\nexport class GlobalState extends BaseGlobalState {\n  theme?: ThemeType = ThemeType.Light;\n  rememberEmail = true;\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"af\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"eo\",\n      \"es\",\n      \"et\",\n      \"eu\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-PT\",\n      \"pt-BR\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  private _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"eu\", \"euskara\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { StateMigrationService as BaseStateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\n\nimport { Account } from \"./state/account\";\nimport { GlobalState } from \"./state/global-state\";\n\nexport class StateMigrationService extends BaseStateMigrationService<GlobalState, Account> {\n  protected async migrationStateFrom1To2(): Promise<void> {\n    await super.migrateStateFrom1To2();\n    const globals = (await this.get<GlobalState>(\"global\")) ?? this.stateFactory.createGlobal(null);\n    globals.rememberEmail = (await this.get<boolean>(\"rememberEmail\")) ?? globals.rememberEmail;\n    await this.set(\"global\", globals);\n  }\n}\n","export class EmergencyAccessAcceptRequest {\n  token: string;\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  actionPromise: Promise<any>;\n\n  protected requiredParameters: string[] = [];\n  protected failedShortMessage = \"inviteAcceptFailedShort\";\n  protected failedMessage = \"inviteAcceptFailed\";\n\n  constructor(\n    protected router: Router,\n    protected platformUtilService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService\n  ) {}\n\n  abstract authedHandler(qParams: Params): Promise<void>;\n  abstract unauthedHandler(qParams: Params): Promise<void>;\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      let error = this.requiredParameters.some((e) => qParams?.[e] == null || qParams[e] === \"\");\n      let errorMessage: string = null;\n      if (!error) {\n        this.authed = await this.stateService.getIsAuthenticated();\n\n        if (this.authed) {\n          try {\n            await this.authedHandler(qParams);\n          } catch (e) {\n            error = true;\n            errorMessage = e.message;\n          }\n        } else {\n          this.email = qParams.email;\n          await this.unauthedHandler(qParams);\n        }\n      }\n\n      if (error) {\n        const message =\n          errorMessage != null\n            ? this.i18nService.t(this.failedShortMessage, errorMessage)\n            : this.i18nService.t(this.failedMessage);\n        this.platformUtilService.showToast(\"error\", null, message, { timeout: 10000 });\n        this.router.navigate([\"/\"]);\n      }\n\n      this.loading = false;\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"emergencyAccess\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ name }}\n          </p>\n          <p>{{ \"acceptEmergencyAccess\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessAcceptRequest } from \"@bitwarden/common/models/request/emergencyAccessAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-emergency\",\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const request = new EmergencyAccessAcceptRequest();\n    request.token = qParams.token;\n    this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n  }\n}\n","export class OrganizationUserAcceptRequest {\n  token: string;\n  // Used to auto-enroll in master password reset\n  resetPasswordKey: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img src=\"../../images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinOrganization\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ orgName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinOrganizationDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { OrganizationUserAcceptRequest } from \"@bitwarden/common/models/request/organizationUserAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-organization\",\n  templateUrl: \"accept-organization.component.html\",\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n  orgName: string;\n\n  protected requiredParameters: string[] = [\"organizationId\", \"organizationUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService,\n    private cryptoService: CryptoService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    this.actionPromise = this.prepareAcceptRequest(qParams).then(async (request) => {\n      await this.apiService.postOrganizationUserAccept(\n        qParams.organizationId,\n        qParams.organizationUserId,\n        request\n      );\n    });\n\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"inviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.orgName = qParams.organizationName;\n    if (this.orgName != null) {\n      // Fix URL encoding of space issue with Angular\n      this.orgName = this.orgName.replace(/\\+/g, \" \");\n    }\n    await this.stateService.setOrganizationInvitation(qParams);\n  }\n\n  private async prepareAcceptRequest(qParams: Params): Promise<OrganizationUserAcceptRequest> {\n    const request = new OrganizationUserAcceptRequest();\n    request.token = qParams.token;\n\n    if (await this.performResetPasswordAutoEnroll(qParams)) {\n      const response = await this.organizationApiService.getKeys(qParams.organizationId);\n\n      if (response == null) {\n        throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n      }\n\n      const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n      // RSA Encrypt user's encKey.key with organization public key\n      const encKey = await this.cryptoService.getEncKey();\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Add reset password key to accept request\n      request.resetPasswordKey = encryptedKey.encryptedString;\n    }\n    return request;\n  }\n\n  private async performResetPasswordAutoEnroll(qParams: Params): Promise<boolean> {\n    let policyList: Policy[] = null;\n    try {\n      const policies = await this.policyApiService.getPoliciesByToken(\n        qParams.organizationId,\n        qParams.token,\n        qParams.email,\n        qParams.organizationUserId\n      );\n      policyList = this.policyService.mapPoliciesFromToken(policies);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (policyList != null) {\n      const result = this.policyService.getResetPasswordPolicyOptions(\n        policyList,\n        qParams.organizationId\n      );\n      // Return true if policy enabled and auto-enroll enabled\n      return result[1] && result[0].autoEnrollEnabled;\n    }\n\n    return false;\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/passwordHintRequest\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"passwordHint\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n            <small class=\"form-text text-muted\">{{ \"enterEmailToGetHint\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\n@Directive()\nexport class LockComponent implements OnInit, OnDestroy {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  private activeAccountSubscription: Subscription;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    this.activeAccountSubscription = this.stateService.activeAccount$.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  ngOnDestroy() {\n    this.activeAccountSubscription.unsubscribe();\n  }\n\n  async submit() {\n    if (this.pinLock) {\n      return await this.handlePinRequiredUnlock();\n    }\n\n    await this.handleMasterPasswordRequiredUnlock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async handlePinRequiredUnlock() {\n    if (this.pin == null || this.pin === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n\n    return await this.doUnlockWithPin();\n  }\n\n  private async doUnlockWithPin() {\n    let failed = true;\n    try {\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      if (this.pinSet[0]) {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations,\n          await this.stateService.getDecryptedPinProtected()\n        );\n        const encKey = await this.cryptoService.getEncKey(key);\n        const protectedPin = await this.stateService.getProtectedPin();\n        const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n        failed = decPin !== this.pin;\n        if (!failed) {\n          await this.setKeyAndContinue(key);\n        }\n      } else {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations\n        );\n        failed = false;\n        await this.setKeyAndContinue(key);\n      }\n    } catch {\n      failed = true;\n    }\n\n    if (failed) {\n      this.invalidPinAttempts++;\n      if (this.invalidPinAttempts >= 5) {\n        this.messagingService.send(\"logout\");\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidPin\")\n      );\n    }\n  }\n\n  private async handleMasterPasswordRequiredUnlock() {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n    await this.doUnlockWithMasterPassword();\n  }\n\n  private async doUnlockWithMasterPassword() {\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const storedKeyHash = await this.cryptoService.getKeyHash();\n\n    let passwordValid = false;\n\n    if (storedKeyHash != null) {\n      passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n    } else {\n      const request = new SecretVerificationRequest();\n      const serverKeyHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      request.masterPasswordHash = serverKeyHash;\n      try {\n        this.formPromise = this.apiService.postAccountVerifyPassword(request);\n        await this.formPromise;\n        passwordValid = true;\n        const localKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.LocalAuthorization\n        );\n        await this.cryptoService.setKeyHash(localKeyHash);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (!passwordValid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    if (this.pinSet[0]) {\n      const protectedPin = await this.stateService.getProtectedPin();\n      const encKey = await this.cryptoService.getEncKey(key);\n      const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n      const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n      await this.stateService.setDecryptedPinProtected(\n        await this.cryptoService.encrypt(key.key, pinKey)\n      );\n    }\n    await this.setKeyAndContinue(key);\n  }\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    environmentService: EnvironmentService,\n    private routerService: RouterService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.onSuccessfulSubmit = async () => {\n      const previousUrl = this.routerService.getPreviousUrl();\n      if (previousUrl && previousUrl !== \"/\" && previousUrl.indexOf(\"lock\") === -1) {\n        this.successRoute = previousUrl;\n      }\n      this.router.navigateByUrl(this.successRoute);\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"text-center mb-4\">\n        <i class=\"bwi bwi-lock bwi-4x text-muted\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"yourVaultIsLocked\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appAutofocus\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"text-muted form-text\">\n              {{ \"loggedInAsEmailOn\" | i18n: email:webVaultHostname }}\n            </small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-unlock\" aria-hidden=\"true\"></i> {{ \"unlock\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequestTwoFactor\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { Directive, Input, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() email = \"\";\n  @Input() rememberEmail = true;\n\n  masterPassword = \"\";\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  async ngOnInit() {\n    if (this.email == null || this.email === \"\") {\n      this.email = await this.stateService.getRememberedEmail();\n      if (this.email == null) {\n        this.email = \"\";\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      this.rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    if (Utils.isBrowser && !Utils.isNode) {\n      this.focusInput();\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        this.email,\n        this.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (this.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(this.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  protected focusInput() {\n    document\n      .getElementById(this.email == null || this.email === \"\" ? \"email\" : \"masterPassword\")\n      .focus();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"mb-2 logo logo-themed\" alt=\"Bitwarden\" />\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"showResetPasswordAutoEnrollWarning\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"form-text\">\n              <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n            </small>\n          </div>\n          <div class=\"form-check mb-3\">\n            <input\n              type=\"checkbox\"\n              class=\"form-check-input\"\n              id=\"rememberEmail\"\n              name=\"RememberEmail\"\n              [(ngModel)]=\"rememberEmail\"\n            />\n            <label class=\"form-check-label\" for=\"rememberEmail\">{{ \"rememberEmail\" | i18n }}</label>\n          </div>\n          <div class=\"mb-n3\" [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n            >\n              <i class=\"bwi bwi-pencil-square\" aria-hidden=\"true\"></i>\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n          <div class=\"d-flex\">\n            <a routerLink=\"/sso\" class=\"btn btn-outline-secondary btn-block mt-2\">\n              <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { RouterService, StateService } from \"../core\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  showResetPasswordAutoEnrollWarning = false;\n  enforcedPasswordPolicyOptions: MasterPasswordPolicyOptions;\n  policies: ListResponse<PolicyResponse>;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: InternalPolicyService,\n    logService: LogService,\n    ngZone: NgZone,\n    protected stateService: StateService,\n    private messagingService: MessagingService,\n    private routerService: RouterService\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone\n    );\n    this.onSuccessfulLogin = async () => {\n      this.messagingService.send(\"setFullWidth\");\n    };\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { token: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      await super.ngOnInit();\n      this.rememberEmail = await this.stateService.getRememberEmail();\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      let policyList: Policy[] = null;\n      try {\n        this.policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        policyList = this.policyService.mapPoliciesFromToken(this.policies);\n      } catch (e) {\n        this.logService.error(e);\n      }\n\n      if (policyList != null) {\n        const resetPasswordPolicy = this.policyService.getResetPasswordPolicyOptions(\n          policyList,\n          invite.organizationId\n        );\n        // Set to true if policy enabled and auto-enroll enabled\n        this.showResetPasswordAutoEnrollWarning =\n          resetPasswordPolicy[1] && resetPasswordPolicy[0].autoEnrollEnabled;\n\n        this.enforcedPasswordPolicyOptions =\n          await this.policyService.getMasterPasswordPolicyOptions(policyList);\n      }\n    }\n  }\n\n  async goAfterLogIn() {\n    // Check master password against policy\n    if (this.enforcedPasswordPolicyOptions != null) {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      const masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n\n      // If invalid, save policies and require update\n      if (\n        !this.policyService.evaluateMasterPassword(\n          masterPasswordScore,\n          this.masterPassword,\n          this.enforcedPasswordPolicyOptions\n        )\n      ) {\n        const policiesData: { [id: string]: PolicyData } = {};\n        this.policies.data.map((p) => (policiesData[p.id] = new PolicyData(p)));\n        await this.policyService.replace(policiesData);\n        this.router.navigate([\"update-password\"]);\n        return;\n      }\n    }\n\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  async submit() {\n    await this.stateService.setRememberEmail(this.rememberEmail);\n    if (!this.rememberEmail) {\n      await this.stateService.setRememberedEmail(null);\n    }\n    await super.submit();\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","export class DeleteRecoverRequest {\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { DeleteRecoverRequest } from \"@bitwarden/common/models/request/deleteRecoverRequest\";\n\n@Component({\n  selector: \"app-recover-delete\",\n  templateUrl: \"recover-delete.component.html\",\n})\nexport class RecoverDeleteComponent {\n  email: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new DeleteRecoverRequest();\n      request.email = this.email.trim().toLowerCase();\n      this.formPromise = this.apiService.postAccountRecoverDelete(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deleteRecoverEmailSent\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>{{ \"deleteRecoverDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n  recoveryCode: string;\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorRecoveryRequest } from \"@bitwarden/common/models/request/twoFactorRecoveryRequest\";\n\n@Component({\n  selector: \"app-recover-two-factor\",\n  templateUrl: \"recover-two-factor.component.html\",\n})\nexport class RecoverTwoFactorComponent {\n  email: string;\n  masterPassword: string;\n  recoveryCode: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new TwoFactorRecoveryRequest();\n      request.recoveryCode = this.recoveryCode.replace(/\\s/g, \"\").toLowerCase();\n      request.email = this.email.trim().toLowerCase();\n      const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n      this.formPromise = this.apiService.postTwoFactorRecover(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"twoStepRecoverDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"recoverAccountTwoStep\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>\n            {{ \"recoverAccountTwoStepDesc\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/lost-two-step-device/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              >{{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"password\"\n              name=\"MasterPassword\"\n              class=\"form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recoveryCode\">{{ \"recoveryCodeTitle\" | i18n }}</label>\n            <input\n              id=\"recoveryCode\"\n              class=\"text-monospace form-control\"\n              type=\"text\"\n              name=\"RecoveryCode\"\n              [(ngModel)]=\"recoveryCode\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: UntypedFormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { InputsFieldMatch } from \"@bitwarden/angular/validators/inputsFieldMatch.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/registerRequest\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<any>;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: UntypedFormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.get(\"email\")?.value;\n    let name = this.formGroup.get(\"name\")?.value;\n    const masterPassword = this.formGroup.get(\"masterPassword\")?.value;\n    const hint = this.formGroup.get(\"hint\")?.value;\n\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return;\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return;\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return;\n    }\n\n    if (this.passwordStrengthResult != null && this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return;\n      }\n    }\n\n    name = name === \"\" ? null : name;\n    email = email.trim().toLowerCase();\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n\n    try {\n      this.formPromise = this.apiService.postRegister(request);\n      try {\n        await this.formPromise;\n      } catch (e) {\n        if (this.handleCaptchaRequired(e)) {\n          return;\n        } else {\n          throw e;\n        }\n      }\n\n      if (this.isInTrialFlow) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"trialAccountCreated\")\n        );\n        //login user here\n        const credentials = new PasswordLogInCredentials(\n          email,\n          masterPassword,\n          this.captchaToken,\n          null\n        );\n        await this.authService.logIn(credentials);\n\n        this.createdAccount.emit(this.formGroup.get(\"email\")?.value);\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"newAccountCreated\")\n        );\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n}\n","export class ReferenceEventRequest {\n  id: string;\n  layout: string;\n  flow: string;\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\n\nexport interface PasswordColorText {\n  color: string;\n  text: string;\n}\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() showText = false;\n  @Input() email: string;\n  @Input() name: string;\n  @Input() set password(value: string) {\n    this.updatePasswordStrength(value);\n  }\n  @Output() passwordStrengthResult = new EventEmitter<any>();\n  @Output() passwordScoreColor = new EventEmitter<PasswordColorText>();\n\n  masterPasswordScore: number;\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  private masterPasswordStrengthTimeout: any;\n\n  //used by desktop and browser to display strength text color\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  //used by desktop and browser to display strength text\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  constructor(\n    private i18nService: I18nService,\n    private passwordGenerationService: PasswordGenerationService\n  ) {}\n\n  ngOnChanges(): void {\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      this.scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n\n      switch (this.masterPasswordScore) {\n        case 4:\n          this.color = \"bg-success\";\n          this.text = this.i18nService.t(\"strong\");\n          break;\n        case 3:\n          this.color = \"bg-primary\";\n          this.text = this.i18nService.t(\"good\");\n          break;\n        case 2:\n          this.color = \"bg-warning\";\n          this.text = this.i18nService.t(\"weak\");\n          break;\n        default:\n          this.color = \"bg-danger\";\n          this.text = this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n          break;\n      }\n\n      this.setPasswordScoreText(this.color, this.text);\n    }, 300);\n  }\n\n  updatePasswordStrength(password: string) {\n    const masterPassword = password;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    this.passwordStrengthResult.emit(strengthResult);\n    this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n  }\n\n  getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.email;\n    const name = this.name;\n    const atPosition = email?.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  setPasswordScoreText(color: string, text: string) {\n    color = color.slice(3);\n    this.passwordScoreColor.emit({ color: color, text: text });\n  }\n}\n","import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"bit-label\",\n})\nexport class BitLabel {}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ButtonTypes } from \"../button\";\n\n@Component({\n  selector: \"bit-submit-button\",\n  templateUrl: \"./submit-button.component.html\",\n})\nexport class SubmitButtonComponent {\n  @Input() buttonType: ButtonTypes = \"primary\";\n  @Input() disabled = false;\n  @Input() loading: boolean;\n}\n","<button bitButton type=\"submit\" [buttonType]=\"buttonType\" [disabled]=\"loading || disabled\">\n  <span class=\"tw-relative\">\n    <span [ngClass]=\"{ 'tw-invisible': loading }\">\n      <ng-content></ng-content>\n    </span>\n    <span class=\"tw-absolute tw-inset-0\" [ngClass]=\"{ 'tw-invisible': !loading }\">\n      <i class=\"bwi bwi-spinner bwi-lg bwi-spin tw-align-baseline\" aria-hidden=\"true\"></i>\n    </span>\n  </span>\n</button>\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div>\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n        <input id=\"register-form_input_email\" bitInput type=\"email\" formControlName=\"email\" />\n        <bit-hint>{{ \"emailAddressDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"name\" | i18n }}</bit-label>\n        <input id=\"register-form_input_name\" bitInput type=\"text\" formControlName=\"name\" />\n        <bit-hint>{{ \"yourNameDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <app-callout\n        type=\"info\"\n        [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n        *ngIf=\"enforcedPolicyOptions\"\n      >\n      </app-callout>\n      <bit-form-field>\n        <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_master-password\"\n          bitInput\n          type=\"{{ showPassword ? 'text' : 'password' }}\"\n          formControlName=\"masterPassword\"\n        />\n        <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n          <i\n            aria-hidden=\"true\"\n            class=\"bwi bwi-lg bwi-eye\"\n            [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n          ></i>\n        </button>\n        <bit-hint>\n          <span class=\"tw-font-semibold\">Important:</span>\n          {{ \"masterPassImportant\" | i18n }}\n        </bit-hint>\n      </bit-form-field>\n      <app-password-strength\n        [password]=\"formGroup.get('masterPassword')?.value\"\n        [email]=\"formGroup.get('email')?.value\"\n        [name]=\"formGroup.get('name')?.value\"\n        [showText]=\"true\"\n        (passwordStrengthResult)=\"getStrengthResult($event)\"\n      >\n      </app-password-strength>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"reTypeMasterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_confirm-master-password\"\n          bitInput\n          type=\"{{ showPassword ? 'text' : 'password' }}\"\n          formControlName=\"confirmMasterPassword\"\n        />\n        <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n          <i\n            aria-hidden=\"true\"\n            class=\"bwi bwi-lg bwi-eye\"\n            [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n          ></i>\n        </button>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"masterPassHint\" | i18n }}</bit-label>\n        <input id=\"register-form_input_hint\" bitInput type=\"text\" formControlName=\"hint\" />\n        <bit-hint>{{ \"masterPassHintDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex tw-items-start\" *ngIf=\"showTerms\">\n      <div class=\"tw-flex tw-h-6 tw-items-center\">\n        <input\n          id=\"register-form_input_accept-policies\"\n          class=\"tw-border-gray-300 tw-w-4 tw-rounded tw-border\"\n          bitInput\n          type=\"checkbox\"\n          formControlName=\"acceptPolicies\"\n        />\n      </div>\n      <bit-label class=\"ml-2\">\n        {{ \"acceptPolicies\" | i18n }}<br />\n        <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n          \"termsOfService\" | i18n\n        }}</a\n        >,\n        <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n          \"privacyPolicy\" | i18n\n        }}</a>\n      </bit-label>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex\">\n      <bit-submit-button [loading]=\"form.loading\">{{ \"createAccount\" | i18n }}</bit-submit-button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        routerLink=\"/login\"\n        class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n      >\n        <i class=\"bwi bwi-sign-in tw-mr-2\"></i>\n        {{ \"logIn\" | i18n }}\n      </a>\n    </div>\n    <bit-error-summary *ngIf=\"showErrorSummary\" [formGroup]=\"formGroup\"></bit-error-summary>\n  </div>\n</form>\n","import { Component, Input } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\n\n@Component({\n  selector: \"app-register-form\",\n  templateUrl: \"./register-form.component.html\",\n})\nexport class RegisterFormComponent extends BaseRegisterComponent {\n  @Input() queryParamEmail: string;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() referenceDataValue: ReferenceEventRequest;\n\n  showErrorSummary = false;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.referenceData = this.referenceDataValue;\n\n    if (this.queryParamEmail) {\n      this.formGroup.get(\"email\")?.setValue(this.queryParamEmail);\n    }\n  }\n\n  async submit() {\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.formGroup.get(\"masterPassword\")?.value,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    await super.submit(false);\n  }\n}\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\">\n  <!-- TEAMS 1 Header -->\n  <header\n    class=\"header\"\n    *ngIf=\"\n      layout === 'default' ||\n      layout === 'teams' ||\n      layout === 'teams1' ||\n      layout === 'teams2' ||\n      layout === 'enterprise' ||\n      layout === 'enterprise1' ||\n      layout === 'enterprise2' ||\n      layout === 'cnetcmpgnent' ||\n      layout === 'cnetcmpgnteams' ||\n      layout === 'cnetcmpgnind'\n    \"\n  >\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-7\">\n          <img\n            alt=\"Bitwarden\"\n            class=\"logo mb-2\"\n            src=\"../../images/register-layout/logo-horizontal-white.svg\"\n          />\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-7\" *ngIf=\"layout\">\n        <div class=\"mt-5\">\n          <!-- Default Body -->\n          <div\n            *ngIf=\"\n              layout === 'teams' ||\n              layout === 'enterprise' ||\n              layout === 'enterprise1' ||\n              layout === 'default'\n            \"\n          >\n            <h1>The Bitwarden Password Manager</h1>\n            <h2>\n              Trusted by millions of individuals, teams, and organizations worldwide for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Collaborate and share securely</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'teams1' || layout === 'teams2' || layout === 'enterprise2'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'teams1' || layout === 'teams1'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'enterprise2'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnent'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'cnetcmpgnteams'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'cnetcmpgnent'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Premium Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnind'\">\n            <h1>Start Your Premium Account Now</h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Secure your account with advanced two-step login</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n        </div>\n      </div>\n      <div [ngClass]=\"{ 'col-5': layout, 'col-12': !layout }\">\n        <div class=\"row justify-content-md-center mt-5\">\n          <div [ngClass]=\"{ 'col-5': !layout, 'col-12': layout }\">\n            <h1 class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{ \"createAccount\" | i18n }}</h1>\n            <div class=\"card d-block\">\n              <div class=\"card-body\">\n                <app-callout\n                  title=\"{{ 'createOrganizationStep1' | i18n }}\"\n                  type=\"info\"\n                  icon=\"bwi bwi-thumb-tack\"\n                  *ngIf=\"showCreateOrgMessage\"\n                >\n                  {{ \"createOrganizationCreatePersonalAccount\" | i18n }}\n                </app-callout>\n                <app-register-form\n                  [queryParamEmail]=\"email\"\n                  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n                  [referenceDataValue]=\"referenceData\"\n                ></app-register-form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-7 d-flex align-items-center\">\n        <div\n          *ngIf=\"\n            layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/cnet-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"cnet logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              \"No more excuses; start using Bitwarden today. The identity you save could be your\n              own. The money definitely will be.\"\n            </blockquote>\n          </figure>\n        </div>\n\n        <div\n          *ngIf=\"\n            layout === 'teams' ||\n            layout === 'teams1' ||\n            layout === 'teams2' ||\n            layout === 'enterprise' ||\n            layout === 'enterprise1' ||\n            layout === 'enterprise2' ||\n            layout === 'default'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/forbes-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"Forbes Logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              “Bitwarden boasts the backing of some of the world's best security experts and an\n              attractive, easy-to-use interface”\n            </blockquote>\n          </figure>\n        </div>\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'teams' ||\n          layout === 'teams1' ||\n          layout === 'teams2' ||\n          layout === 'enterprise' ||\n          layout === 'enterprise1' ||\n          layout === 'enterprise2' ||\n          layout === 'default'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  email = \"\";\n  showCreateOrgMessage = false;\n  layout = \"\";\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  private policies: Policy[];\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private routerService: RouterService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        this.showCreateOrgMessage = true;\n        this.referenceData.flow = qParams.org;\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      if (qParams.layout != null) {\n        this.layout = this.referenceData.layout = qParams.layout;\n      }\n      if (qParams.reference != null) {\n        this.referenceData.id = qParams.reference;\n      } else {\n        this.referenceData.id = (\"; \" + document.cookie)\n          .split(\"; reference=\")\n          .pop()\n          .split(\";\")\n          .shift();\n      }\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        // After logging in redirect them to setup the families sponsorship\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { plan: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      if (this.referenceData.id === \"\") {\n        this.referenceData.id = null;\n      }\n    });\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        this.policies\n      );\n    }\n\n    await super.ngOnInit();\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<void | boolean>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.organizationApiService.leave(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"removeMasterPassword\" | i18n }}</p>\n      <hr />\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-block\"\n            (click)=\"convert()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"continuing\"\n            ></i>\n            {{ \"removeMasterPassword\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-block\"\n            (click)=\"leave()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"leaving\"\n            ></i>\n            {{ \"leaveOrganization\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keysRequest\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordStrengthResult;\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.organizationApiService.getAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyApiService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.organizationApiService.getKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!syncLoading\">\n          <app-callout type=\"info\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"resetPasswordAutoEnroll\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n            <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyApiService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService,\n      organizationApiService\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/ssoPreValidateResponse\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","export enum PlanType {\n  Free = 0,\n  FamiliesAnnually2019 = 1,\n  TeamsMonthly2019 = 2,\n  TeamsAnnually2019 = 3,\n  EnterpriseMonthly2019 = 4,\n  EnterpriseAnnually2019 = 5,\n  Custom = 6,\n  FamiliesAnnually = 7,\n  TeamsMonthly = 8,\n  TeamsAnnually = 9,\n  EnterpriseMonthly = 10,\n  EnterpriseAnnually = 11,\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  class=\"container\"\n  [appApiAction]=\"initiateSsoFormPromise\"\n  ngNativeValidate\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\" />\n      <div class=\"card d-block mt-4\">\n        <div class=\"card-body\" *ngIf=\"loggingIn\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loggingIn\">\n          <p>{{ \"ssoLogInWithOrgIdentifier\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"identifier\">{{ \"organizationIdentifier\" | i18n }}</label>\n            <input\n              id=\"identifier\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Identifier\"\n              [(ngModel)]=\"identifier\"\n              required\n              appAutofocus\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      } else {\n        const storedIdentifier = await this.stateService.getSsoOrgIdentifier();\n        if (storedIdentifier != null) {\n          this.identifier = storedIdentifier;\n        }\n      }\n    });\n  }\n\n  async submit() {\n    await this.stateService.setSsoOrganizationIdentifier(this.identifier);\n    if (this.clientId === \"browser\") {\n      document.cookie = `ssoHandOffMessage=${this.i18nService.t(\"ssoHandOff\")};SameSite=strict`;\n    }\n    super.submit();\n  }\n}\n","<ng-template>\n  <div\n    class=\"tw-inline-block tw-w-11/12 tw-pl-7\"\n    [ngClass]=\"{ 'tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300': applyBorder }\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { CdkStep } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-step\",\n  templateUrl: \"vertical-step.component.html\",\n  providers: [{ provide: CdkStep, useExisting: VerticalStep }],\n})\nexport class VerticalStep extends CdkStep {\n  @Input() subLabel = \"\";\n  @Input() applyBorder = true;\n}\n","<div class=\"tw-m-2.5 tw-h-16 tw-text-center\">\n  <button\n    (click)=\"selectStep()\"\n    [disabled]=\"disabled\"\n    class=\"tw-flex tw-w-full tw-items-center tw-border-none tw-bg-transparent\"\n    [ngClass]=\"{\n      'hover:tw-bg-secondary-100': !disabled && step.editable\n    }\"\n    [attr.aria-expanded]=\"selected\"\n  >\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-font-bold tw-leading-9\"\n      *ngIf=\"!step.completed\"\n      [ngClass]=\"{\n        'tw-bg-primary-500 tw-text-contrast': selected,\n        'tw-bg-secondary-300 tw-text-main': !selected && !disabled && step.editable,\n        'tw-bg-transparent tw-text-muted': disabled\n      }\"\n    >\n      {{ stepNumber }}\n    </span>\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-bg-primary-500 tw-font-bold tw-leading-9 tw-text-contrast\"\n      *ngIf=\"step.completed\"\n    >\n      <i class=\"bwi bwi-fw bwi-check tw-p-1\" aria-hidden=\"true\"></i>\n    </span>\n    <div\n      class=\"tw-txt-main tw-mt-3.5 tw-h-12 tw-text-left tw-leading-snug\"\n      [ngClass]=\"{\n        'tw-font-bold': selected\n      }\"\n    >\n      <p\n        class=\"main-label text tw-mb-1 tw-text-main\"\n        [ngClass]=\"{\n          'tw-mt-1': !step.subLabel\n        }\"\n      >\n        {{ step.label }}\n      </p>\n      <p class=\"sub-label small tw-text-muted\">{{ step.subLabel }}</p>\n    </div>\n  </button>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-step-content\",\n  templateUrl: \"vertical-step-content.component.html\",\n})\nexport class VerticalStepContentComponent {\n  @Output() onSelectStep = new EventEmitter<void>();\n\n  @Input() disabled = false;\n  @Input() selected = false;\n  @Input() step: VerticalStep;\n  @Input() stepNumber: number;\n\n  selectStep() {\n    this.onSelectStep.emit();\n  }\n}\n","<div>\n  <ul class=\"tw-flex tw-list-none tw-flex-col tw-flex-wrap tw-p-5\">\n    <li *ngFor=\"let step of steps; let i = index; let isLast = last\">\n      <app-vertical-step-content\n        [disabled]=\"isStepDisabled(i)\"\n        [selected]=\"selectedIndex === i\"\n        [step]=\"step\"\n        [stepNumber]=\"i + 1\"\n        (onSelectStep)=\"selectStepByIndex(i)\"\n      ></app-vertical-step-content>\n      <div\n        class=\"tw-inline-block tw-pl-7\"\n        *ngIf=\"selectedIndex === i\"\n        [ngTemplateOutlet]=\"selected ? selected.content : null\"\n      ></div>\n      <div\n        class=\"tw-ml-8 tw-h-6 tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300\"\n        *ngIf=\"!isLast && !(selectedIndex === i)\"\n      ></div>\n    </li>\n  </ul>\n</div>\n","import { CdkStepper } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-stepper\",\n  templateUrl: \"vertical-stepper.component.html\",\n  providers: [{ provide: CdkStepper, useExisting: VerticalStepperComponent }],\n})\nexport class VerticalStepperComponent extends CdkStepper {\n  @Input()\n  activeClass = \"active\";\n\n  isNextButtonHidden() {\n    return !(this.steps.length === this.selectedIndex + 1);\n  }\n\n  isStepDisabled(index: number) {\n    if (this.selectedIndex !== index) {\n      return this.selectedIndex === index - 1\n        ? !this.steps.find((_, i) => i == index - 1)?.completed\n        : true;\n    }\n    return false;\n  }\n\n  selectStepByIndex(index: number): void {\n    this.selectedIndex = index;\n  }\n}\n","<form #form [formGroup]=\"formGroup\" *ngIf=\"nameOnly\">\n  <bit-form-field>\n    <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"name\" />\n  </bit-form-field>\n</form>\n<form #form [formGroup]=\"formGroup\" *ngIf=\"!nameOnly\">\n  <h2>{{ \"generalInformation\" | i18n }}</h2>\n  <div class=\"tw-flex tw-w-full tw-space-x-4\" *ngIf=\"createOrganization\">\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" formControlName=\"name\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"billingEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"billingEmail\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\" *ngIf=\"isProvider\">\n      <bit-label>{{ \"clientOwnerEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"clientOwnerEmail\" />\n    </bit-form-field>\n  </div>\n  <div *ngIf=\"!isProvider && !acceptingSponsorship\">\n    <input\n      type=\"checkbox\"\n      name=\"businessOwned\"\n      formControlName=\"businessOwned\"\n      (change)=\"changedBusinessOwned.emit()\"\n    />\n    <bit-label for=\"businessOwned\" class=\"tw-mb-3\">{{ \"accountOwnedBusiness\" | i18n }}</bit-label>\n    <div class=\"tw-mt-4\" *ngIf=\"formGroup.controls['businessOwned'].value\">\n      <bit-form-field class=\"tw-w-1/2\">\n        <bit-label>{{ \"businessName\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"businessName\" />\n      </bit-form-field>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-org-info\",\n  templateUrl: \"organization-information.component.html\",\n})\nexport class OrganizationInformationComponent {\n  @Input() nameOnly = false;\n  @Input() createOrganization = true;\n  @Input() isProvider = false;\n  @Input() acceptingSponsorship = false;\n  @Input() formGroup: UntypedFormGroup;\n  @Output() changedBusinessOwned = new EventEmitter<void>();\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-forbes\",\n  templateUrl: \"logo-forbes.component.html\",\n})\nexport class LogoForbesComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/forbes-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"Forbes Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    “Bitwarden boasts the backing of some of the world's best security experts and an attractive,\n    easy-to-use interface”\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-us-news\",\n  templateUrl: \"logo-us-news.component.html\",\n})\nexport class LogoUSNewsComponent {}\n","<img\n  src=\"../../images/register-layout/usnews-360-badge.svg\"\n  class=\"tw-mx-auto tw-block tw-w-48\"\n  alt=\"US News 360 Reviews Best Password Manager\"\n/>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise-content\",\n  templateUrl: \"enterprise-content.component.html\",\n})\nexport class EnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams-content\",\n  templateUrl: \"teams-content.component.html\",\n})\nexport class TeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-trial-confirmation-details\",\n  templateUrl: \"confirmation-details.component.html\",\n})\nexport class ConfirmationDetailsComponent {\n  @Input() email: string;\n  @Input() orgLabel: string;\n}\n","export enum PaymentMethodType {\n  Card = 0,\n  BankAccount = 1,\n  PayPal = 2,\n  BitPay = 3,\n  Credit = 4,\n  WireTransfer = 5,\n  AppleInApp = 6,\n  GoogleInApp = 7,\n  Check = 8,\n}\n","<div class=\"tw-pl-6 tw-pb-6\">\n  <p class=\"tw-text-xl\">{{ \"trialThankYou\" | i18n: orgLabel }}</p>\n  <ul class=\"tw-list-disc\">\n    <li>\n      <p>\n        {{ \"trialConfirmationEmail\" | i18n }}\n        <span class=\"tw-font-bold\">{{ email }}</span\n        >.\n      </p>\n    </li>\n    <li>\n      <p>\n        {{ \"trialPaidInfoMessage\" | i18n: orgLabel }}\n      </p>\n    </li>\n  </ul>\n</div>\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationCreateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  planType: PlanType;\n  key: string;\n  keys: OrganizationKeysRequest;\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n  additionalSeats: number;\n  maxAutoscaleSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  collectionName: string;\n  taxIdNumber: string;\n  billingAddressLine1: string;\n  billingAddressLine2: string;\n  billingAddressCity: string;\n  billingAddressState: string;\n  billingAddressPostalCode: string;\n  billingAddressCountry: string;\n}\n","import { KeysRequest } from \"./keysRequest\";\n\nexport class OrganizationKeysRequest extends KeysRequest {\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    super(publicKey, encryptedPrivateKey);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpgradeRequest {\n  businessName: string;\n  planType: PlanType;\n  additionalSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  billingAddressCountry: string;\n  billingAddressPostalCode: string;\n  keys: OrganizationKeysRequest;\n}\n","import { OrganizationCreateRequest } from \"../organizationCreateRequest\";\n\nexport class ProviderOrganizationCreateRequest {\n  constructor(\n    public clientOwnerEmail: string,\n    public organizationCreateRequest: OrganizationCreateRequest\n  ) {}\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n  <div class=\"form-check form-check-inline mr-4\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-card\"\n      [value]=\"paymentMethodType.Card\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-card\">\n      <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i> {{ \"creditCard\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-bank\"\n      [value]=\"paymentMethodType.BankAccount\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-bank\">\n      <i class=\"bwi bwi-fw bwi-bank\" aria-hidden=\"true\"></i> {{ \"bankAccount\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-paypal\"\n      [value]=\"paymentMethodType.PayPal\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-paypal\">\n      <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-credit\"\n      [value]=\"paymentMethodType.Credit\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-credit\">\n      <i class=\"bwi bwi-fw bwi-dollar\" aria-hidden=\"true\"></i> {{ \"accountCredit\" | i18n }}</label\n    >\n  </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n  <div class=\"row\">\n    <div [ngClass]=\"trialFlow ? 'col-5' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-number-element\">{{ \"number\" | i18n }}</label>\n      <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div *ngIf=\"!trialFlow\" class=\"form-group col-8 d-flex align-items-end\">\n      <img\n        src=\"../../images/cards.png\"\n        alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n        width=\"323\"\n        height=\"32\"\n      />\n    </div>\n    <div [ngClass]=\"trialFlow ? 'col-3' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-expiry-element\">{{ \"expiration\" | i18n }}</label>\n      <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-4\">\n      <div class=\"d-flex\">\n        <label for=\"stripe-card-cvc-element\">\n          {{ \"securityCode\" | i18n }}\n        </label>\n        <a\n          href=\"https://www.cvvnumber.com/cvv.html\"\n          tabindex=\"-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"ml-auto\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n  <app-callout type=\"warning\" title=\"{{ 'verifyBankAccount' | i18n }}\">\n    {{ \"verifyBankAccountInitialDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"routing_number\">{{ \"routingNumber\" | i18n }}</label>\n      <input\n        id=\"routing_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"routing_number\"\n        [(ngModel)]=\"bank.routing_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_number\">{{ \"accountNumber\" | i18n }}</label>\n      <input\n        id=\"account_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_number\"\n        [(ngModel)]=\"bank.account_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_name\">{{ \"accountHolderName\" | i18n }}</label>\n      <input\n        id=\"account_holder_name\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_holder_name\"\n        [(ngModel)]=\"bank.account_holder_name\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_type\">{{ \"bankAccountType\" | i18n }}</label>\n      <select\n        id=\"account_holder_type\"\n        class=\"form-control\"\n        name=\"account_holder_type\"\n        [(ngModel)]=\"bank.account_holder_type\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option value=\"company\">{{ \"bankAccountTypeCompany\" | i18n }}</option>\n        <option value=\"individual\">{{ \"bankAccountTypeIndividual\" | i18n }}</option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n  <div class=\"mb-3\">\n    <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n    <small class=\"text-muted\">{{ \"paypalClickSubmit\" | i18n }}</small>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n  <app-callout type=\"note\">\n    {{ \"makeSureEnoughCredit\" | i18n }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport ThemeVariables from \"../../scss/export.module.scss\";\n\nconst lightInputColor = ThemeVariables.lightInputColor;\nconst lightInputPlaceholderColor = ThemeVariables.lightInputPlaceholderColor;\nconst darkInputColor = ThemeVariables.darkInputColor;\nconst darkInputPlaceholderColor = ThemeVariables.darkInputPlaceholderColor;\n\n@Component({\n  selector: \"app-payment\",\n  templateUrl: \"payment.component.html\",\n})\nexport class PaymentComponent implements OnInit, OnDestroy {\n  @Input() showMethods = true;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.Card;\n  @Input() hideBank = false;\n  @Input() hidePaypal = false;\n  @Input() hideCredit = false;\n  @Input() trialFlow = false;\n\n  private destroy$: Subject<void> = new Subject<void>();\n\n  bank: any = {\n    routing_number: null,\n    account_number: null,\n    account_holder_name: null,\n    account_holder_type: \"\",\n    currency: \"USD\",\n    country: \"US\",\n  };\n\n  paymentMethodType = PaymentMethodType;\n\n  private btScript: HTMLScriptElement;\n  private btInstance: any = null;\n  private stripeScript: HTMLScriptElement;\n  private stripe: any = null;\n  private stripeElements: any = null;\n  private stripeCardNumberElement: any = null;\n  private stripeCardExpiryElement: any = null;\n  private stripeCardCvcElement: any = null;\n  private StripeElementStyle: any;\n  private StripeElementClasses: any;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private themingService: AbstractThemingService\n  ) {\n    this.stripeScript = window.document.createElement(\"script\");\n    this.stripeScript.src = \"https://js.stripe.com/v3/\";\n    this.stripeScript.async = true;\n    this.stripeScript.onload = () => {\n      this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n      this.stripeElements = this.stripe.elements();\n      this.setStripeElement();\n    };\n    this.btScript = window.document.createElement(\"script\");\n    this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n    this.btScript.async = true;\n    this.StripeElementStyle = {\n      base: {\n        color: null,\n        fontFamily:\n          '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n          '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: \"14px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: null,\n        },\n      },\n      invalid: {\n        color: null,\n      },\n    };\n    this.StripeElementClasses = {\n      focus: \"is-focused\",\n      empty: \"is-empty\",\n      invalid: \"is-invalid\",\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.showOptions) {\n      this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n      this.hideBank = this.method !== PaymentMethodType.BankAccount;\n      this.hideCredit = this.method !== PaymentMethodType.Credit;\n    }\n    await this.setTheme();\n    window.document.head.appendChild(this.stripeScript);\n    if (!this.hidePaypal) {\n      window.document.head.appendChild(this.btScript);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    window.document.head.removeChild(this.stripeScript);\n    window.setTimeout(() => {\n      Array.from(window.document.querySelectorAll(\"iframe\")).forEach((el) => {\n        if (el.src != null && el.src.indexOf(\"stripe\") > -1) {\n          try {\n            window.document.body.removeChild(el);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      });\n    }, 500);\n    if (!this.hidePaypal) {\n      window.document.head.removeChild(this.btScript);\n      window.setTimeout(() => {\n        Array.from(window.document.head.querySelectorAll(\"script\")).forEach((el) => {\n          if (el.src != null && el.src.indexOf(\"paypal\") > -1) {\n            try {\n              window.document.head.removeChild(el);\n            } catch (e) {\n              this.logService.error(e);\n            }\n          }\n        });\n        const btStylesheet = window.document.head.querySelector(\"#braintree-dropin-stylesheet\");\n        if (btStylesheet != null) {\n          try {\n            window.document.head.removeChild(btStylesheet);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      }, 500);\n    }\n  }\n\n  changeMethod() {\n    this.btInstance = null;\n\n    if (this.method === PaymentMethodType.PayPal) {\n      window.setTimeout(() => {\n        (window as any).braintree.dropin.create(\n          {\n            authorization: process.env.BRAINTREE_KEY,\n            container: \"#bt-dropin-container\",\n            paymentOptionPriority: [\"paypal\"],\n            paypal: {\n              flow: \"vault\",\n              buttonStyle: {\n                label: \"pay\",\n                size: \"medium\",\n                shape: \"pill\",\n                color: \"blue\",\n                tagline: \"false\",\n              },\n            },\n          },\n          (createErr: any, instance: any) => {\n            if (createErr != null) {\n              // eslint-disable-next-line\n              console.error(createErr);\n              return;\n            }\n            this.btInstance = instance;\n          }\n        );\n      }, 250);\n    } else {\n      this.setStripeElement();\n    }\n  }\n\n  createPaymentToken(): Promise<[string, PaymentMethodType]> {\n    return new Promise((resolve, reject) => {\n      if (this.method === PaymentMethodType.Credit) {\n        resolve([null, this.method]);\n      } else if (this.method === PaymentMethodType.PayPal) {\n        this.btInstance\n          .requestPaymentMethod()\n          .then((payload: any) => {\n            resolve([payload.nonce, this.method]);\n          })\n          .catch((err: any) => {\n            reject(err.message);\n          });\n      } else if (\n        this.method === PaymentMethodType.Card ||\n        this.method === PaymentMethodType.BankAccount\n      ) {\n        if (this.method === PaymentMethodType.Card) {\n          this.apiService\n            .postSetupPayment()\n            .then((clientSecret) =>\n              this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n            )\n            .then((result: any) => {\n              if (result.error) {\n                reject(result.error.message);\n              } else if (result.setupIntent && result.setupIntent.status === \"succeeded\") {\n                resolve([result.setupIntent.payment_method, this.method]);\n              } else {\n                reject();\n              }\n            });\n        } else {\n          this.stripe.createToken(\"bank_account\", this.bank).then((result: any) => {\n            if (result.error) {\n              reject(result.error.message);\n            } else if (result.token && result.token.id != null) {\n              resolve([result.token.id, this.method]);\n            } else {\n              reject();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.showMethods && this.stripeCardNumberElement == null) {\n        reject();\n        return;\n      }\n      const handleCardPayment = () =>\n        this.showMethods\n          ? this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n          : this.stripe.handleCardSetup(clientSecret);\n      return handleCardPayment().then(async (result: any) => {\n        if (result.error) {\n          reject(result.error.message);\n        } else if (result.paymentIntent && result.paymentIntent.status === \"succeeded\") {\n          if (successCallback != null) {\n            await successCallback();\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  private setStripeElement() {\n    window.setTimeout(() => {\n      if (this.showMethods && this.method === PaymentMethodType.Card) {\n        if (this.stripeCardNumberElement == null) {\n          this.stripeCardNumberElement = this.stripeElements.create(\"cardNumber\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        if (this.stripeCardExpiryElement == null) {\n          this.stripeCardExpiryElement = this.stripeElements.create(\"cardExpiry\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n          });\n        }\n        if (this.stripeCardCvcElement == null) {\n          this.stripeCardCvcElement = this.stripeElements.create(\"cardCvc\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        this.stripeCardNumberElement.mount(\"#stripe-card-number-element\");\n        this.stripeCardExpiryElement.mount(\"#stripe-card-expiry-element\");\n        this.stripeCardCvcElement.mount(\"#stripe-card-cvc-element\");\n      }\n    }, 50);\n  }\n\n  private async setTheme() {\n    this.themingService.theme$.pipe(takeUntil(this.destroy$)).subscribe((theme) => {\n      if (theme.effectiveTheme === ThemeType.Dark) {\n        this.StripeElementStyle.base.color = darkInputColor;\n        this.StripeElementStyle.base[\"::placeholder\"].color = darkInputPlaceholderColor;\n        this.StripeElementStyle.invalid.color = darkInputColor;\n      } else {\n        this.StripeElementStyle.base.color = lightInputColor;\n        this.StripeElementStyle.base[\"::placeholder\"].color = lightInputPlaceholderColor;\n        this.StripeElementStyle.invalid.color = lightInputColor;\n      }\n    });\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"darkInputColor\":\"#fff\",\"darkInputPlaceholderColor\":\"#bac0ce\",\"lightInputColor\":\"#465057\",\"lightInputPlaceholderColor\":\"#b6b8b8\"};","export class TaxInfoUpdateRequest {\n  country: string;\n  postalCode: string;\n}\n","import { TaxInfoUpdateRequest } from \"./taxInfoUpdateRequest\";\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n  taxId: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n}\n","<div class=\"row\">\n  <div [ngClass]=\"trialFlow ? 'col-7' : 'col-6'\">\n    <div class=\"form-group\">\n      <label for=\"addressCountry\">{{ \"country\" | i18n }}</label>\n      <select\n        id=\"addressCountry\"\n        class=\"form-control\"\n        [(ngModel)]=\"taxInfo.country\"\n        required\n        name=\"addressCountry\"\n        autocomplete=\"country\"\n        (change)=\"changeCountry()\"\n      >\n        <option value=\"\">-- Select --</option>\n        <option value=\"US\">United States</option>\n        <option value=\"CN\">China</option>\n        <option value=\"FR\">France</option>\n        <option value=\"DE\">Germany</option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"GB\">United Kingdom</option>\n        <option value=\"AU\">Australia</option>\n        <option value=\"IN\">India</option>\n        <option value=\"-\" disabled></option>\n        <option value=\"AF\">Afghanistan</option>\n        <option value=\"AX\">Åland Islands</option>\n        <option value=\"AL\">Albania</option>\n        <option value=\"DZ\">Algeria</option>\n        <option value=\"AS\">American Samoa</option>\n        <option value=\"AD\">Andorra</option>\n        <option value=\"AO\">Angola</option>\n        <option value=\"AI\">Anguilla</option>\n        <option value=\"AQ\">Antarctica</option>\n        <option value=\"AG\">Antigua and Barbuda</option>\n        <option value=\"AR\">Argentina</option>\n        <option value=\"AM\">Armenia</option>\n        <option value=\"AW\">Aruba</option>\n        <option value=\"AT\">Austria</option>\n        <option value=\"AZ\">Azerbaijan</option>\n        <option value=\"BS\">Bahamas</option>\n        <option value=\"BH\">Bahrain</option>\n        <option value=\"BD\">Bangladesh</option>\n        <option value=\"BB\">Barbados</option>\n        <option value=\"BY\">Belarus</option>\n        <option value=\"BE\">Belgium</option>\n        <option value=\"BZ\">Belize</option>\n        <option value=\"BJ\">Benin</option>\n        <option value=\"BM\">Bermuda</option>\n        <option value=\"BT\">Bhutan</option>\n        <option value=\"BO\">Bolivia, Plurinational State of</option>\n        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n        <option value=\"BA\">Bosnia and Herzegovina</option>\n        <option value=\"BW\">Botswana</option>\n        <option value=\"BV\">Bouvet Island</option>\n        <option value=\"BR\">Brazil</option>\n        <option value=\"IO\">British Indian Ocean Territory</option>\n        <option value=\"BN\">Brunei Darussalam</option>\n        <option value=\"BG\">Bulgaria</option>\n        <option value=\"BF\">Burkina Faso</option>\n        <option value=\"BI\">Burundi</option>\n        <option value=\"KH\">Cambodia</option>\n        <option value=\"CM\">Cameroon</option>\n        <option value=\"CV\">Cape Verde</option>\n        <option value=\"KY\">Cayman Islands</option>\n        <option value=\"CF\">Central African Republic</option>\n        <option value=\"TD\">Chad</option>\n        <option value=\"CL\">Chile</option>\n        <option value=\"CX\">Christmas Island</option>\n        <option value=\"CC\">Cocos (Keeling) Islands</option>\n        <option value=\"CO\">Colombia</option>\n        <option value=\"KM\">Comoros</option>\n        <option value=\"CG\">Congo</option>\n        <option value=\"CD\">Congo, the Democratic Republic of the</option>\n        <option value=\"CK\">Cook Islands</option>\n        <option value=\"CR\">Costa Rica</option>\n        <option value=\"CI\">Côte d'Ivoire</option>\n        <option value=\"HR\">Croatia</option>\n        <option value=\"CU\">Cuba</option>\n        <option value=\"CW\">Curaçao</option>\n        <option value=\"CY\">Cyprus</option>\n        <option value=\"CZ\">Czech Republic</option>\n        <option value=\"DK\">Denmark</option>\n        <option value=\"DJ\">Djibouti</option>\n        <option value=\"DM\">Dominica</option>\n        <option value=\"DO\">Dominican Republic</option>\n        <option value=\"EC\">Ecuador</option>\n        <option value=\"EG\">Egypt</option>\n        <option value=\"SV\">El Salvador</option>\n        <option value=\"GQ\">Equatorial Guinea</option>\n        <option value=\"ER\">Eritrea</option>\n        <option value=\"EE\">Estonia</option>\n        <option value=\"ET\">Ethiopia</option>\n        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n        <option value=\"FO\">Faroe Islands</option>\n        <option value=\"FJ\">Fiji</option>\n        <option value=\"FI\">Finland</option>\n        <option value=\"GF\">French Guiana</option>\n        <option value=\"PF\">French Polynesia</option>\n        <option value=\"TF\">French Southern Territories</option>\n        <option value=\"GA\">Gabon</option>\n        <option value=\"GM\">Gambia</option>\n        <option value=\"GE\">Georgia</option>\n        <option value=\"GH\">Ghana</option>\n        <option value=\"GI\">Gibraltar</option>\n        <option value=\"GR\">Greece</option>\n        <option value=\"GL\">Greenland</option>\n        <option value=\"GD\">Grenada</option>\n        <option value=\"GP\">Guadeloupe</option>\n        <option value=\"GU\">Guam</option>\n        <option value=\"GT\">Guatemala</option>\n        <option value=\"GG\">Guernsey</option>\n        <option value=\"GN\">Guinea</option>\n        <option value=\"GW\">Guinea-Bissau</option>\n        <option value=\"GY\">Guyana</option>\n        <option value=\"HT\">Haiti</option>\n        <option value=\"HM\">Heard Island and McDonald Islands</option>\n        <option value=\"VA\">Holy See (Vatican City State)</option>\n        <option value=\"HN\">Honduras</option>\n        <option value=\"HK\">Hong Kong</option>\n        <option value=\"HU\">Hungary</option>\n        <option value=\"IS\">Iceland</option>\n        <option value=\"ID\">Indonesia</option>\n        <option value=\"IR\">Iran, Islamic Republic of</option>\n        <option value=\"IQ\">Iraq</option>\n        <option value=\"IE\">Ireland</option>\n        <option value=\"IM\">Isle of Man</option>\n        <option value=\"IL\">Israel</option>\n        <option value=\"IT\">Italy</option>\n        <option value=\"JM\">Jamaica</option>\n        <option value=\"JP\">Japan</option>\n        <option value=\"JE\">Jersey</option>\n        <option value=\"JO\">Jordan</option>\n        <option value=\"KZ\">Kazakhstan</option>\n        <option value=\"KE\">Kenya</option>\n        <option value=\"KI\">Kiribati</option>\n        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n        <option value=\"KR\">Korea, Republic of</option>\n        <option value=\"KW\">Kuwait</option>\n        <option value=\"KG\">Kyrgyzstan</option>\n        <option value=\"LA\">Lao People's Democratic Republic</option>\n        <option value=\"LV\">Latvia</option>\n        <option value=\"LB\">Lebanon</option>\n        <option value=\"LS\">Lesotho</option>\n        <option value=\"LR\">Liberia</option>\n        <option value=\"LY\">Libya</option>\n        <option value=\"LI\">Liechtenstein</option>\n        <option value=\"LT\">Lithuania</option>\n        <option value=\"LU\">Luxembourg</option>\n        <option value=\"MO\">Macao</option>\n        <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n        <option value=\"MG\">Madagascar</option>\n        <option value=\"MW\">Malawi</option>\n        <option value=\"MY\">Malaysia</option>\n        <option value=\"MV\">Maldives</option>\n        <option value=\"ML\">Mali</option>\n        <option value=\"MT\">Malta</option>\n        <option value=\"MH\">Marshall Islands</option>\n        <option value=\"MQ\">Martinique</option>\n        <option value=\"MR\">Mauritania</option>\n        <option value=\"MU\">Mauritius</option>\n        <option value=\"YT\">Mayotte</option>\n        <option value=\"MX\">Mexico</option>\n        <option value=\"FM\">Micronesia, Federated States of</option>\n        <option value=\"MD\">Moldova, Republic of</option>\n        <option value=\"MC\">Monaco</option>\n        <option value=\"MN\">Mongolia</option>\n        <option value=\"ME\">Montenegro</option>\n        <option value=\"MS\">Montserrat</option>\n        <option value=\"MA\">Morocco</option>\n        <option value=\"MZ\">Mozambique</option>\n        <option value=\"MM\">Myanmar</option>\n        <option value=\"NA\">Namibia</option>\n        <option value=\"NR\">Nauru</option>\n        <option value=\"NP\">Nepal</option>\n        <option value=\"NL\">Netherlands</option>\n        <option value=\"NC\">New Caledonia</option>\n        <option value=\"NZ\">New Zealand</option>\n        <option value=\"NI\">Nicaragua</option>\n        <option value=\"NE\">Niger</option>\n        <option value=\"NG\">Nigeria</option>\n        <option value=\"NU\">Niue</option>\n        <option value=\"NF\">Norfolk Island</option>\n        <option value=\"MP\">Northern Mariana Islands</option>\n        <option value=\"NO\">Norway</option>\n        <option value=\"OM\">Oman</option>\n        <option value=\"PK\">Pakistan</option>\n        <option value=\"PW\">Palau</option>\n        <option value=\"PS\">Palestinian Territory, Occupied</option>\n        <option value=\"PA\">Panama</option>\n        <option value=\"PG\">Papua New Guinea</option>\n        <option value=\"PY\">Paraguay</option>\n        <option value=\"PE\">Peru</option>\n        <option value=\"PH\">Philippines</option>\n        <option value=\"PN\">Pitcairn</option>\n        <option value=\"PL\">Poland</option>\n        <option value=\"PT\">Portugal</option>\n        <option value=\"PR\">Puerto Rico</option>\n        <option value=\"QA\">Qatar</option>\n        <option value=\"RE\">Réunion</option>\n        <option value=\"RO\">Romania</option>\n        <option value=\"RU\">Russian Federation</option>\n        <option value=\"RW\">Rwanda</option>\n        <option value=\"BL\">Saint Barthélemy</option>\n        <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n        <option value=\"KN\">Saint Kitts and Nevis</option>\n        <option value=\"LC\">Saint Lucia</option>\n        <option value=\"MF\">Saint Martin (French part)</option>\n        <option value=\"PM\">Saint Pierre and Miquelon</option>\n        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n        <option value=\"WS\">Samoa</option>\n        <option value=\"SM\">San Marino</option>\n        <option value=\"ST\">Sao Tome and Principe</option>\n        <option value=\"SA\">Saudi Arabia</option>\n        <option value=\"SN\">Senegal</option>\n        <option value=\"RS\">Serbia</option>\n        <option value=\"SC\">Seychelles</option>\n        <option value=\"SL\">Sierra Leone</option>\n        <option value=\"SG\">Singapore</option>\n        <option value=\"SX\">Sint Maarten (Dutch part)</option>\n        <option value=\"SK\">Slovakia</option>\n        <option value=\"SI\">Slovenia</option>\n        <option value=\"SB\">Solomon Islands</option>\n        <option value=\"SO\">Somalia</option>\n        <option value=\"ZA\">South Africa</option>\n        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n        <option value=\"SS\">South Sudan</option>\n        <option value=\"ES\">Spain</option>\n        <option value=\"LK\">Sri Lanka</option>\n        <option value=\"SD\">Sudan</option>\n        <option value=\"SR\">Suriname</option>\n        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n        <option value=\"SZ\">Swaziland</option>\n        <option value=\"SE\">Sweden</option>\n        <option value=\"CH\">Switzerland</option>\n        <option value=\"SY\">Syrian Arab Republic</option>\n        <option value=\"TW\">Taiwan</option>\n        <option value=\"TJ\">Tajikistan</option>\n        <option value=\"TZ\">Tanzania, United Republic of</option>\n        <option value=\"TH\">Thailand</option>\n        <option value=\"TL\">Timor-Leste</option>\n        <option value=\"TG\">Togo</option>\n        <option value=\"TK\">Tokelau</option>\n        <option value=\"TO\">Tonga</option>\n        <option value=\"TT\">Trinidad and Tobago</option>\n        <option value=\"TN\">Tunisia</option>\n        <option value=\"TR\">Turkey</option>\n        <option value=\"TM\">Turkmenistan</option>\n        <option value=\"TC\">Turks and Caicos Islands</option>\n        <option value=\"TV\">Tuvalu</option>\n        <option value=\"UG\">Uganda</option>\n        <option value=\"UA\">Ukraine</option>\n        <option value=\"AE\">United Arab Emirates</option>\n        <option value=\"UM\">United States Minor Outlying Islands</option>\n        <option value=\"UY\">Uruguay</option>\n        <option value=\"UZ\">Uzbekistan</option>\n        <option value=\"VU\">Vanuatu</option>\n        <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n        <option value=\"VN\">Viet Nam</option>\n        <option value=\"VG\">Virgin Islands, British</option>\n        <option value=\"VI\">Virgin Islands, U.S.</option>\n        <option value=\"WF\">Wallis and Futuna</option>\n        <option value=\"EH\">Western Sahara</option>\n        <option value=\"YE\">Yemen</option>\n        <option value=\"ZM\">Zambia</option>\n        <option value=\"ZW\">Zimbabwe</option>\n      </select>\n    </div>\n  </div>\n  <div [ngClass]=\"trialFlow ? 'col-5' : 'col-3'\">\n    <div class=\"form-group\">\n      <label for=\"addressPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n      <input\n        id=\"addressPostalCode\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressPostalCode\"\n        [(ngModel)]=\"taxInfo.postalCode\"\n        [required]=\"taxInfo.country === 'US'\"\n        autocomplete=\"postal-code\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n    <div class=\"form-group form-check\">\n      <input\n        class=\"form-check-input\"\n        id=\"addressIncludeTaxId\"\n        name=\"addressIncludeTaxId\"\n        type=\"checkbox\"\n        [(ngModel)]=\"taxInfo.includeTaxId\"\n      />\n      <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{ \"includeVAT\" | i18n }}</label>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"taxId\">{{ \"taxIdNumber\" | i18n }}</label>\n      <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\" />\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine1\">{{ \"address1\" | i18n }}</label>\n      <input\n        id=\"addressLine1\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine1\"\n        [(ngModel)]=\"taxInfo.line1\"\n        autocomplete=\"address-line1\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine2\">{{ \"address2\" | i18n }}</label>\n      <input\n        id=\"addressLine2\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine2\"\n        [(ngModel)]=\"taxInfo.line2\"\n        autocomplete=\"address-line2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCity\">{{ \"cityTown\" | i18n }}</label>\n      <input\n        id=\"addressCity\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressCity\"\n        [(ngModel)]=\"taxInfo.city\"\n        autocomplete=\"address-level2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressState\">{{ \"stateProvince\" | i18n }}</label>\n      <input\n        id=\"addressState\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressState\"\n        [(ngModel)]=\"taxInfo.state\"\n        autocomplete=\"address-level1\"\n      />\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationTaxInfoUpdateRequest } from \"@bitwarden/common/models/request/organizationTaxInfoUpdateRequest\";\nimport { TaxInfoUpdateRequest } from \"@bitwarden/common/models/request/taxInfoUpdateRequest\";\nimport { TaxInfoResponse } from \"@bitwarden/common/models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"@bitwarden/common/models/response/taxRateResponse\";\n\ntype TaxInfoView = Omit<TaxInfoResponse, \"taxIdType\"> & {\n  includeTaxId: boolean;\n  [key: string]: unknown;\n};\n\n@Component({\n  selector: \"app-tax-info\",\n  templateUrl: \"tax-info.component.html\",\n})\nexport class TaxInfoComponent {\n  @Input() trialFlow = false;\n  @Output() onCountryChanged = new EventEmitter();\n\n  loading = true;\n  organizationId: string;\n  taxInfo: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  taxRates: TaxRateResponse[];\n\n  private pristine: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      if (this.organizationId) {\n        try {\n          const taxInfo = await this.organizationApiService.getTaxInfo(this.organizationId);\n          if (taxInfo) {\n            this.taxInfo.taxId = taxInfo.taxId;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.line1 = taxInfo.line1;\n            this.taxInfo.line2 = taxInfo.line2;\n            this.taxInfo.city = taxInfo.city;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n            this.taxInfo.includeTaxId =\n              this.taxInfo.country !== \"US\" &&\n              (!!taxInfo.taxId ||\n                !!taxInfo.line1 ||\n                !!taxInfo.line2 ||\n                !!taxInfo.city ||\n                !!taxInfo.state);\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      } else {\n        try {\n          const taxInfo = await this.apiService.getTaxInfo();\n          if (taxInfo) {\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.pristine = Object.assign({}, this.taxInfo);\n      // If not the default (US) then trigger onCountryChanged\n      if (this.taxInfo.country !== \"US\") {\n        this.onCountryChanged.emit();\n      }\n    });\n\n    try {\n      const taxRates = await this.apiService.getTaxRates();\n      if (taxRates) {\n        this.taxRates = taxRates.data;\n      }\n    } catch (e) {\n      this.logService.error(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  get taxRate() {\n    if (this.taxRates != null) {\n      const localTaxRate = this.taxRates.find(\n        (x) => x.country === this.taxInfo.country && x.postalCode === this.taxInfo.postalCode\n      );\n      return localTaxRate?.rate ?? null;\n    }\n  }\n\n  getTaxInfoRequest(): TaxInfoUpdateRequest {\n    if (this.organizationId) {\n      const request = new OrganizationTaxInfoUpdateRequest();\n      request.taxId = this.taxInfo.taxId;\n      request.state = this.taxInfo.state;\n      request.line1 = this.taxInfo.line1;\n      request.line2 = this.taxInfo.line2;\n      request.city = this.taxInfo.city;\n      request.state = this.taxInfo.state;\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    } else {\n      const request = new TaxInfoUpdateRequest();\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    }\n  }\n\n  submitTaxInfo(): Promise<any> {\n    if (!this.hasChanged()) {\n      return new Promise<void>((resolve) => {\n        resolve();\n      });\n    }\n    const request = this.getTaxInfoRequest();\n    return this.organizationId\n      ? this.organizationApiService.updateTaxInfo(\n          this.organizationId,\n          request as OrganizationTaxInfoUpdateRequest\n        )\n      : this.apiService.putTaxInfo(request);\n  }\n\n  changeCountry() {\n    if (this.taxInfo.country === \"US\") {\n      this.taxInfo.includeTaxId = false;\n      this.taxInfo.taxId = null;\n      this.taxInfo.line1 = null;\n      this.taxInfo.line2 = null;\n      this.taxInfo.city = null;\n      this.taxInfo.state = null;\n    }\n    this.onCountryChanged.emit();\n  }\n\n  private hasChanged(): boolean {\n    for (const key in this.taxInfo) {\n      // eslint-disable-next-line\n      if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n  <p>{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_organization_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form\n  #form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n  *ngIf=\"!loading && !selfHosted && this.plans\"\n  class=\"tw-pt-6\"\n>\n  <app-org-info\n    (changedBusinessOwned)=\"changedOwnedBusiness()\"\n    [formGroup]=\"formGroup\"\n    [createOrganization]=\"createOrganization\"\n    [isProvider]=\"!!providerId\"\n    [acceptingSponsorship]=\"acceptingSponsorship\"\n  ></app-org-info>\n  <h2 class=\"mt-5\">{{ \"chooseYourPlan\" | i18n }}</h2>\n  <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"product\"\n      id=\"product{{ selectableProduct.product }}\"\n      [value]=\"selectableProduct.product\"\n      formControlName=\"product\"\n      (change)=\"changedProduct()\"\n    />\n    <label class=\"form-check-label\" for=\"product{{ selectableProduct.product }}\">\n      {{ selectableProduct.nameLocalizationKey | i18n }}\n      <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n: \"1\" }}</small>\n      <ng-container\n        *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"\n      >\n        <small>• {{ \"includeAllTeamsFeatures\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSso\">• {{ \"includeSsoAuthentication\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasPolicies\"\n          >• {{ \"includeEnterprisePolicies\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-container>\n      <ng-template #fullFeatureList>\n        <small *ngIf=\"selectableProduct.product == productTypes.Free\"\n          >• {{ \"limitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxUsers\">• {{ \"addShareUnlimitedUsers\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.maxCollections\"\n          >• {{ \"limitedCollections\" | i18n: selectableProduct.maxCollections }}</small\n        >\n        <small *ngIf=\"selectableProduct.maxAdditionalSeats\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxAdditionalSeats }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxCollections\"\n          >• {{ \"createUnlimitedCollections\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.baseStorageGb\"\n          >• {{ \"gbEncryptedFileStorage\" | i18n: selectableProduct.baseStorageGb + \"GB\" }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasGroups\">• {{ \"controlAccessWithGroups\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasApi\">• {{ \"trackAuditLogs\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasDirectory\"\n          >• {{ \"syncUsersFromDirectory\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.usersGetPremium\">• {{ \"usersGetPremium\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.product != productTypes.Free\"\n          >• {{ \"priorityCustomerSupport\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-template>\n      <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n        <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\">\n          {{ selectableProduct.basePrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }},\n          {{ \"includesXUsers\" | i18n: selectableProduct.baseSeats }}\n          <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n            {{ (\"additionalUsers\" | i18n).toLowerCase() }}\n            {{ selectableProduct.seatPrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </ng-container>\n        </ng-container>\n      </span>\n      <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n        {{ \"costPerUser\" | i18n: (selectableProduct.seatPrice / 12 | currency: \"$\") }} /{{\n          \"month\" | i18n\n        }}\n      </span>\n      <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{ \"freeForever\" | i18n }}</span>\n    </label>\n  </div>\n  <div *ngIf=\"formGroup.controls['product'].value !== productTypes.Free\">\n    <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n      <h2 class=\"mt-5\">{{ \"users\" | i18n }}</h2>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <label for=\"additionalSeats\">{{ \"userSeats\" | i18n }}</label>\n          <input\n            id=\"additionalSeats\"\n            class=\"form-control\"\n            type=\"number\"\n            name=\"additionalSeats\"\n            formControlName=\"additionalSeats\"\n            placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n            required\n          />\n          <small class=\"text-muted form-text\">{{ \"userSeatsHowManyDesc\" | i18n }}</small>\n        </div>\n      </div>\n    </ng-container>\n    <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalSeats\">{{ \"additionalUserSeats\" | i18n }}</label>\n        <input\n          id=\"additionalSeats\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalSeats\"\n          formControlName=\"additionalSeats\"\n          placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"userSeatsAdditionalDesc\"\n            | i18n: selectedPlan.baseSeats:(seatPriceMonthly(selectedPlan) | currency: \"$\")\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n        <input\n          id=\"additionalStorage\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalStorageGb\"\n          formControlName=\"additionalStorage\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"additionalStorageIntervalDesc\"\n            | i18n\n              : \"1 GB\"\n              : (additionalStoragePriceMonthly(selectedPlan) | currency: \"$\")\n              : (\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n        <div class=\"form-check\">\n          <input\n            id=\"premiumAccess\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"premiumAccessAddon\"\n            formControlName=\"premiumAccessAddon\"\n          />\n          <label for=\"premiumAccess\" class=\"form-check-label bold\">{{\n            \"premiumAccess\" | i18n\n          }}</label>\n        </div>\n        <small class=\"text-muted form-text\">{{\n          \"premiumAccessDesc\" | i18n: (3.33 | currency: \"$\"):(\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n    <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"plan\"\n        id=\"interval{{ selectablePlan.type }}\"\n        [value]=\"selectablePlan.type\"\n        formControlName=\"plan\"\n      />\n      <label class=\"form-check-label\" for=\"interval{{ selectablePlan.type }}\">\n        <ng-container *ngIf=\"selectablePlan.isAnnual\">\n          {{ \"annually\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\">\n              <span style=\"text-decoration: line-through\">{{\n                selectablePlan.basePrice | currency: \"$\"\n              }}</span>\n              {{ \"freeWithSponsorship\" | i18n }}\n            </ng-container>\n            <ng-template #notAcceptingSponsorship>\n              {{ selectablePlan.basePrice | currency: \"$\" }}\n              /{{ \"year\" | i18n }}\n            </ng-template>\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"year\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"year\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"year\" | i18n }}\n          </small>\n        </ng-container>\n        <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n          {{ \"monthly\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ selectablePlan.basePrice | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small\n            *ngIf=\"\n              selectablePlan.hasPremiumAccessOption &&\n              formGroup.controls['premiumAccessAddon'].value\n            \"\n          >\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n        </ng-container>\n      </label>\n    </div>\n    <hr class=\"my-3\" />\n    <h2 class=\"spaced-header mb-4\">\n      {{ (createOrganization ? \"paymentInformation\" : \"billingInformation\") | i18n }}\n    </h2>\n    <small class=\"text-muted font-italic mb-3 d-block\">\n      {{ paymentDesc }}\n    </small>\n    <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    <div id=\"price\" class=\"my-4\">\n      <div class=\"text-muted text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"my-1 col-3 ml-0\" />\n      <p class=\"text-lg\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{\n          selectedPlanInterval | i18n\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"!createOrganization\">\n      <app-payment [showMethods]=\"false\"></app-payment>\n    </ng-container>\n  </div>\n  <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\n    <app-callout [type]=\"'error'\">{{ \"singleOrgBlockCreateMessage\" | i18n }}</app-callout>\n  </div>\n  <div class=\"mt-4\">\n    <bit-submit-button [loading]=\"form.loading\" [disabled]=\"!formGroup.valid\">{{\n      \"submit\" | i18n\n    }}</bit-submit-button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { OrganizationCreateRequest } from \"@bitwarden/common/models/request/organizationCreateRequest\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUpgradeRequest } from \"@bitwarden/common/models/request/organizationUpgradeRequest\";\nimport { ProviderOrganizationCreateRequest } from \"@bitwarden/common/models/request/provider/providerOrganizationCreateRequest\";\nimport { PlanResponse } from \"@bitwarden/common/models/response/planResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\ninterface OnSuccessArgs {\n  organizationId: string;\n}\n\n@Component({\n  selector: \"app-organization-plans\",\n  templateUrl: \"organization-plans.component.html\",\n})\nexport class OrganizationPlansComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n  @Input() organizationId: string;\n  @Input() showFree = true;\n  @Input() showCancel = false;\n  @Input() acceptingSponsorship = false;\n  @Input() product: ProductType = ProductType.Free;\n  @Input() plan: PlanType = PlanType.Free;\n  @Input() providerId: string;\n  @Output() onSuccess = new EventEmitter<OnSuccessArgs>();\n  @Output() onCanceled = new EventEmitter<void>();\n  @Output() onTrialBillingSuccess = new EventEmitter();\n\n  loading = true;\n  selfHosted = false;\n  productTypes = ProductType;\n  formPromise: Promise<string>;\n  singleOrgPolicyBlock = false;\n  isInTrialFlow = false;\n  discount = 0;\n\n  formGroup = this.formBuilder.group({\n    name: [\"\"],\n    billingEmail: [\"\", [Validators.email]],\n    businessOwned: [false],\n    premiumAccessAddon: [false],\n    additionalStorage: [0, [Validators.min(0), Validators.max(99)]],\n    additionalSeats: [0, [Validators.min(0), Validators.max(100000)]],\n    clientOwnerEmail: [\"\", [Validators.email]],\n    businessName: [\"\"],\n    plan: [this.plan],\n    product: [this.product],\n  });\n\n  plans: PlanResponse[];\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private messagingService: MessagingService,\n    private formBuilder: UntypedFormBuilder,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    if (!this.selfHosted) {\n      const plans = await this.apiService.getPlans();\n      this.plans = plans.data;\n      if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n        this.formGroup.controls.businessOwned.setValue(true);\n      }\n    }\n\n    if (this.providerId) {\n      this.formGroup.controls.businessOwned.setValue(true);\n      this.changedOwnedBusiness();\n    }\n\n    if (!this.createOrganization || this.acceptingSponsorship) {\n      this.formGroup.controls.product.setValue(ProductType.Families);\n      this.changedProduct();\n    }\n\n    if (this.createOrganization) {\n      this.formGroup.controls.name.addValidators(Validators.required);\n      this.formGroup.controls.billingEmail.addValidators(Validators.required);\n    }\n\n    this.loading = false;\n  }\n\n  get createOrganization() {\n    return this.organizationId == null;\n  }\n\n  get selectedPlan() {\n    return this.plans.find((plan) => plan.type === this.formGroup.controls.plan.value);\n  }\n\n  get selectedPlanInterval() {\n    return this.selectedPlan.isAnnual ? \"year\" : \"month\";\n  }\n\n  get selectableProducts() {\n    let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n    if (this.formGroup.controls.businessOwned.value) {\n      validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n    }\n\n    if (!this.showFree) {\n      validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n    }\n\n    validPlans = validPlans.filter(\n      (plan) =>\n        !plan.legacyYear &&\n        !plan.disabled &&\n        (plan.isAnnual || plan.product === this.productTypes.Free)\n    );\n\n    if (this.acceptingSponsorship) {\n      const familyPlan = this.plans.find((plan) => plan.type === PlanType.FamiliesAnnually);\n      this.discount = familyPlan.basePrice;\n      validPlans = [familyPlan];\n    }\n\n    return validPlans;\n  }\n\n  get selectablePlans() {\n    return this.plans?.filter(\n      (plan) =>\n        !plan.legacyYear && !plan.disabled && plan.product === this.formGroup.controls.product.value\n    );\n  }\n\n  additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.additionalStoragePricePerGb;\n    }\n    return selectedPlan.additionalStoragePricePerGb / 12;\n  }\n\n  seatPriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.seatPrice;\n    }\n    return selectedPlan.seatPrice / 12;\n  }\n\n  additionalStorageTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalStorageOption) {\n      return 0;\n    }\n\n    return (\n      plan.additionalStoragePricePerGb *\n      Math.abs(this.formGroup.controls.additionalStorage.value || 0)\n    );\n  }\n\n  seatTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalSeatsOption) {\n      return 0;\n    }\n\n    return plan.seatPrice * Math.abs(this.formGroup.controls.additionalSeats.value || 0);\n  }\n\n  get subtotal() {\n    let subTotal = this.selectedPlan.basePrice;\n    if (\n      this.selectedPlan.hasAdditionalSeatsOption &&\n      this.formGroup.controls.additionalSeats.value\n    ) {\n      subTotal += this.seatTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasAdditionalStorageOption &&\n      this.formGroup.controls.additionalStorage.value\n    ) {\n      subTotal += this.additionalStorageTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasPremiumAccessOption &&\n      this.formGroup.controls.premiumAccessAddon.value\n    ) {\n      subTotal += this.selectedPlan.premiumAccessOptionPrice;\n    }\n    return subTotal - this.discount;\n  }\n\n  get freeTrial() {\n    return this.selectedPlan.trialPeriodDays != null;\n  }\n\n  get taxCharges() {\n    return this.taxComponent != null && this.taxComponent.taxRate != null\n      ? (this.taxComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total() {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  get paymentDesc() {\n    if (this.acceptingSponsorship) {\n      return this.i18nService.t(\"paymentSponsored\");\n    } else if (this.freeTrial && this.createOrganization) {\n      return this.i18nService.t(\"paymentChargedWithTrial\");\n    } else {\n      return this.i18nService.t(\"paymentCharged\", this.i18nService.t(this.selectedPlanInterval));\n    }\n  }\n\n  changedProduct() {\n    this.formGroup.controls.plan.setValue(this.selectablePlans[0].type);\n    if (!this.selectedPlan.hasPremiumAccessOption) {\n      this.formGroup.controls.premiumAccessAddon.setValue(false);\n    }\n    if (!this.selectedPlan.hasAdditionalStorageOption) {\n      this.formGroup.controls.additionalStorage.setValue(0);\n    }\n    if (!this.selectedPlan.hasAdditionalSeatsOption) {\n      this.formGroup.controls.additionalSeats.setValue(0);\n    } else if (\n      !this.formGroup.controls.additionalSeats.value &&\n      !this.selectedPlan.baseSeats &&\n      this.selectedPlan.hasAdditionalSeatsOption\n    ) {\n      this.formGroup.controls.additionalSeats.setValue(1);\n    }\n  }\n\n  changedOwnedBusiness() {\n    if (!this.formGroup.controls.businessOwned.value || this.selectedPlan.canBeUsedByBusiness) {\n      return;\n    }\n    this.formGroup.controls.product.setValue(ProductType.Teams);\n    this.formGroup.controls.plan.setValue(PlanType.TeamsAnnually);\n    this.changedProduct();\n  }\n\n  changedCountry() {\n    this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== \"US\";\n    // Bank Account payments are only available for US customers\n    if (\n      this.paymentComponent.hideBank &&\n      this.paymentComponent.method === PaymentMethodType.BankAccount\n    ) {\n      this.paymentComponent.method = PaymentMethodType.Card;\n      this.paymentComponent.changeMethod();\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  async submit() {\n    this.singleOrgPolicyBlock = await this.userHasBlockingSingleOrgPolicy();\n\n    if (this.singleOrgPolicyBlock) {\n      return;\n    }\n\n    try {\n      const doSubmit = async (): Promise<string> => {\n        let orgId: string = null;\n        if (this.createOrganization) {\n          const shareKey = await this.cryptoService.makeShareKey();\n          const key = shareKey[0].encryptedString;\n          const collection = await this.cryptoService.encrypt(\n            this.i18nService.t(\"defaultCollection\"),\n            shareKey[1]\n          );\n          const collectionCt = collection.encryptedString;\n          const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n          if (this.selfHosted) {\n            orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n          } else {\n            orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            this.i18nService.t(\"organizationCreated\"),\n            this.i18nService.t(\"organizationReadyToGo\")\n          );\n        } else {\n          orgId = await this.updateOrganization(orgId);\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"organizationUpgraded\")\n          );\n        }\n\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n\n        if (!this.acceptingSponsorship && !this.isInTrialFlow) {\n          this.router.navigate([\"/organizations/\" + orgId]);\n        }\n\n        if (this.isInTrialFlow) {\n          this.onTrialBillingSuccess.emit({\n            orgId: orgId,\n            subLabelText: this.billingSubLabelText(),\n          });\n        }\n\n        return orgId;\n      };\n\n      this.formPromise = doSubmit();\n      const organizationId = await this.formPromise;\n      this.onSuccess.emit({ organizationId: organizationId });\n      this.messagingService.send(\"organizationCreated\", organizationId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async userHasBlockingSingleOrgPolicy() {\n    return this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  private async updateOrganization(orgId: string) {\n    const request = new OrganizationUpgradeRequest();\n    request.businessName = this.formGroup.controls.businessOwned.value\n      ? this.formGroup.controls.businessName.value\n      : null;\n    request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n    request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n    request.premiumAccessAddon =\n      this.selectedPlan.hasPremiumAccessOption && this.formGroup.controls.premiumAccessAddon.value;\n    request.planType = this.selectedPlan.type;\n    request.billingAddressCountry = this.taxComponent.taxInfo.country;\n    request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n    // Retrieve org info to backfill pub/priv key if necessary\n    const org = await this.organizationService.get(this.organizationId);\n    if (!org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    const result = await this.organizationApiService.upgrade(this.organizationId, request);\n    if (!result.success && result.paymentIntentClientSecret != null) {\n      await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n    }\n    return this.organizationId;\n  }\n\n  private async createCloudHosted(\n    key: string,\n    collectionCt: string,\n    orgKeys: [string, EncString],\n    orgKey: SymmetricCryptoKey\n  ) {\n    const request = new OrganizationCreateRequest();\n    request.key = key;\n    request.collectionName = collectionCt;\n    request.name = this.formGroup.controls.name.value;\n    request.billingEmail = this.formGroup.controls.billingEmail.value;\n    request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n    if (this.selectedPlan.type === PlanType.Free) {\n      request.planType = PlanType.Free;\n    } else {\n      const tokenResult = await this.paymentComponent.createPaymentToken();\n\n      request.paymentToken = tokenResult[0];\n      request.paymentMethodType = tokenResult[1];\n      request.businessName = this.formGroup.controls.businessOwned.value\n        ? this.formGroup.controls.businessName.value\n        : null;\n      request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n      request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n      request.premiumAccessAddon =\n        this.selectedPlan.hasPremiumAccessOption &&\n        this.formGroup.controls.premiumAccessAddon.value;\n      request.planType = this.selectedPlan.type;\n      request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n      request.billingAddressCountry = this.taxComponent.taxInfo.country;\n      if (this.taxComponent.taxInfo.includeTaxId) {\n        request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n        request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n        request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n        request.billingAddressCity = this.taxComponent.taxInfo.city;\n        request.billingAddressState = this.taxComponent.taxInfo.state;\n      }\n    }\n\n    if (this.providerId) {\n      const providerRequest = new ProviderOrganizationCreateRequest(\n        this.formGroup.controls.clientOwnerEmail.value,\n        request\n      );\n      const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n      providerRequest.organizationCreateRequest.key = (\n        await this.cryptoService.encrypt(orgKey.key, providerKey)\n      ).encryptedString;\n      const orgId = (\n        await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)\n      ).organizationId;\n\n      return orgId;\n    } else {\n      return (await this.organizationApiService.create(request)).id;\n    }\n  }\n\n  private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      throw new Error(this.i18nService.t(\"selectFile\"));\n    }\n\n    const fd = new FormData();\n    fd.append(\"license\", files[0]);\n    fd.append(\"key\", key);\n    fd.append(\"collectionName\", collectionCt);\n    const response = await this.organizationApiService.createLicense(fd);\n    const orgId = response.id;\n\n    await this.apiService.refreshIdentityToken();\n\n    // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n    const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    await this.organizationApiService.updateKeys(orgId, request);\n\n    return orgId;\n  }\n\n  private billingSubLabelText(): string {\n    const selectedPlan = this.selectedPlan;\n    const price = selectedPlan.basePrice === 0 ? selectedPlan.seatPrice : selectedPlan.basePrice;\n    let text = \"\";\n\n    if (selectedPlan.isAnnual) {\n      text += `${this.i18nService.t(\"annual\")} ($${price}/${this.i18nService.t(\"yr\")})`;\n    } else {\n      text += `${this.i18nService.t(\"monthly\")} ($${price}/${this.i18nService.t(\"monthAbbr\")})`;\n    }\n\n    return text;\n  }\n}\n","<form #form [formGroup]=\"formGroup\" [appApiAction]=\"formPromise\" (ngSubmit)=\"submit()\">\n  <div class=\"tw-container tw-mb-3\">\n    <div class=\"tw-mb-6\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"billingPlanLabel\" | i18n }}</h2>\n      <div class=\"tw-mb-1 tw-items-center\" *ngFor=\"let selectablePlan of selectablePlans\">\n        <label class=\"tw- tw-block tw-text-main\" for=\"interval{{ selectablePlan.type }}\">\n          <input\n            checked\n            class=\"tw-h-4 tw-w-4 tw-align-middle\"\n            id=\"interval{{ selectablePlan.type }}\"\n            name=\"plan\"\n            type=\"radio\"\n            [value]=\"selectablePlan.type\"\n            formControlName=\"plan\"\n          />\n          <ng-container *ngIf=\"selectablePlan.isAnnual\">\n            {{ \"annual\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"yr\" | i18n }}\n          </ng-container>\n          <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n            {{ \"monthly\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"monthAbbr\" | i18n }}\n          </ng-container>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"tw-mb-4\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"paymentType\" | i18n }}</h2>\n      <app-payment [hideCredit]=\"true\" [trialFlow]=\"true\"></app-payment>\n      <app-tax-info [trialFlow]=\"true\" (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    </div>\n\n    <div class=\"tw-flex tw-space-x-2\">\n      <bit-submit-button [loading]=\"form.loading\">{{ \"startTrial\" | i18n }}</bit-submit-button>\n\n      <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"stepBack()\">Back</button>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-billing\",\n  templateUrl: \"./billing.component.html\",\n})\nexport class BillingComponent extends OrganizationPlansComponent {\n  @Input() orgInfoForm: FormGroup;\n  @Output() previousStep = new EventEmitter();\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    router: Router,\n    syncService: SyncService,\n    policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    messagingService: MessagingService,\n    formBuilder: UntypedFormBuilder,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      apiService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      router,\n      syncService,\n      policyService,\n      organizationService,\n      logService,\n      messagingService,\n      formBuilder,\n      organizationApiService\n    );\n  }\n\n  async ngOnInit() {\n    const additionalSeats = this.product == ProductType.Families ? 0 : 1;\n    this.formGroup.patchValue({\n      name: this.orgInfoForm.get(\"name\")?.value,\n      billingEmail: this.orgInfoForm.get(\"email\")?.value,\n      additionalSeats: additionalSeats,\n      plan: this.plan,\n      product: this.product,\n    });\n    this.isInTrialFlow = true;\n    await super.ngOnInit();\n  }\n\n  stepBack() {\n    this.previousStep.emit();\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-default-content\",\n  templateUrl: \"default-content.component.html\",\n})\nexport class DefaultContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise1-content\",\n  templateUrl: \"enterprise1-content.component.html\",\n})\nexport class Enterprise1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise2-content\",\n  templateUrl: \"enterprise2-content.component.html\",\n})\nexport class Enterprise2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams1-content\",\n  templateUrl: \"teams1-content.component.html\",\n})\nexport class Teams1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams2-content\",\n  templateUrl: \"teams2-content.component.html\",\n})\nexport class Teams2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-cnet\",\n  templateUrl: \"logo-cnet.component.html\",\n})\nexport class LogoCnetComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/cnet-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"CNET Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    \"No more excuses; start using Bitwarden today. The identity you save could be your own. The\n    money definitely will be.\"\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-enterprise-content\",\n  templateUrl: \"cnet-enterprise-content.component.html\",\n})\nexport class CnetEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-individual-content\",\n  templateUrl: \"cnet-individual-content.component.html\",\n})\nexport class CnetIndividualContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Premium Account Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Secure your account with advanced two-step login</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-teams-content\",\n  templateUrl: \"cnet-teams-content.component.html\",\n})\nexport class CnetTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","<div *ngIf=\"accountCreateOnly\" class=\"\">\n  <h1 class=\"tw-mt-12 tw-text-center tw-text-xl\">{{ \"createAccount\" | i18n }}</h1>\n  <div\n    class=\"tw-min-w-xl tw-m-auto tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n  >\n    <app-register-form\n      [queryParamEmail]=\"email\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      [referenceDataValue]=\"referenceData\"\n    ></app-register-form>\n  </div>\n</div>\n<div *ngIf=\"!accountCreateOnly\">\n  <div class=\"tw-absolute tw--z-10 tw--mt-48 tw-h-[28rem] tw-w-full tw-bg-background-alt2\"></div>\n  <div class=\"tw-min-w-4xl tw-mx-auto tw-flex tw-max-w-screen-xl tw-gap-12 tw-px-4\">\n    <div class=\"tw-w-1/2\">\n      <img\n        alt=\"Bitwarden\"\n        style=\"height: 50px; width: 335px\"\n        class=\"tw-mt-6\"\n        src=\"../../images/register-layout/logo-horizontal-white.svg\"\n      />\n\n      <div class=\"tw-pt-12\">\n        <!-- Layout params are used by marketing to determine left-hand content -->\n        <app-default-content *ngIf=\"layout === 'default'\"></app-default-content>\n        <app-teams-content *ngIf=\"layout === 'teams'\"></app-teams-content>\n        <app-teams1-content *ngIf=\"layout === 'teams1'\"></app-teams1-content>\n        <app-teams2-content *ngIf=\"layout === 'teams2'\"></app-teams2-content>\n        <app-enterprise-content *ngIf=\"layout === 'enterprise'\"></app-enterprise-content>\n        <app-enterprise1-content *ngIf=\"layout === 'enterprise1'\"></app-enterprise1-content>\n        <app-enterprise2-content *ngIf=\"layout === 'enterprise2'\"></app-enterprise2-content>\n        <app-cnet-enterprise-content\n          *ngIf=\"layout === 'cnetcmpgnent'\"\n        ></app-cnet-enterprise-content>\n        <app-cnet-individual-content\n          *ngIf=\"layout === 'cnetcmpgnind'\"\n        ></app-cnet-individual-content>\n        <app-cnet-teams-content *ngIf=\"layout === 'cnetcmpgnteams'\"></app-cnet-teams-content>\n      </div>\n    </div>\n    <div class=\"tw-w-1/2\">\n      <div class=\"tw-pt-56\">\n        <div class=\"tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background\">\n          <div class=\"tw-flex tw-h-12 tw-w-full tw-items-center tw-rounded-t tw-bg-secondary-100\">\n            <h2 class=\"tw-mb-0 tw-pl-4 tw-text-base tw-font-bold tw-uppercase\">\n              Start your 7-Day free trial of Bitwarden for {{ org }}\n            </h2>\n          </div>\n          <app-vertical-stepper #stepper linear (selectionChange)=\"stepSelectionChange($event)\">\n            <app-vertical-step label=\"Create Account\" [editable]=\"false\" [subLabel]=\"email\">\n              <app-register-form\n                [isInTrialFlow]=\"true\"\n                (createdAccount)=\"createdAccount($event)\"\n                [referenceDataValue]=\"referenceData\"\n              ></app-register-form>\n            </app-vertical-step>\n            <app-vertical-step label=\"Organization Information\" [subLabel]=\"orgInfoSubLabel\">\n              <app-org-info [nameOnly]=\"true\" [formGroup]=\"orgInfoFormGroup\"></app-org-info>\n              <button\n                bitButton\n                buttonType=\"primary\"\n                [disabled]=\"orgInfoFormGroup.get('name').hasError('required')\"\n                cdkStepperNext\n              >\n                Next\n              </button>\n            </app-vertical-step>\n            <app-vertical-step label=\"Billing\" [subLabel]=\"billingSubLabel\">\n              <app-billing\n                *ngIf=\"stepper.selectedIndex === 2\"\n                [plan]=\"plan\"\n                [product]=\"product\"\n                [orgInfoForm]=\"orgInfoFormGroup\"\n                (previousStep)=\"previousStep()\"\n                (onTrialBillingSuccess)=\"billingSuccess($event)\"\n              ></app-billing>\n            </app-vertical-step>\n            <app-vertical-step label=\"Confirmation Details\" [applyBorder]=\"false\">\n              <app-trial-confirmation-details\n                [email]=\"email\"\n                [orgLabel]=\"orgLabel\"\n              ></app-trial-confirmation-details>\n              <div class=\"tw-mb-3 tw-flex\">\n                <button bitButton buttonType=\"primary\" (click)=\"navigateToOrgVault()\">\n                  Get Started\n                </button>\n                <button\n                  bitButton\n                  buttonType=\"secondary\"\n                  (click)=\"navigateToOrgInvite()\"\n                  class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n                >\n                  Invite Users\n                </button>\n              </div>\n            </app-vertical-step>\n          </app-vertical-stepper>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { StepperSelectionEvent } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\n\nimport { RouterService } from \"./../../core/router.service\";\nimport { VerticalStepperComponent } from \"./vertical-stepper/vertical-stepper.component\";\n\n@Component({\n  selector: \"app-trial\",\n  templateUrl: \"trial-initiation.component.html\",\n})\nexport class TrialInitiationComponent implements OnInit {\n  email = \"\";\n  org = \"\";\n  orgInfoSubLabel = \"\";\n  orgId = \"\";\n  orgLabel = \"\";\n  billingSubLabel = \"\";\n  layout = \"default\";\n  plan: PlanType;\n  product: ProductType;\n  accountCreateOnly = true;\n  policies: Policy[];\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  validOrgs: string[] = [\"teams\", \"enterprise\", \"families\"];\n  referenceData: ReferenceEventRequest;\n  @ViewChild(\"stepper\", { static: false }) verticalStepper: VerticalStepperComponent;\n\n  orgInfoFormGroup = this.formBuilder.group({\n    name: [\"\", [Validators.required]],\n    email: [\"\"],\n  });\n\n  private set referenceDataId(referenceId: string) {\n    if (referenceId != null) {\n      this.referenceData.id = referenceId;\n    } else {\n      this.referenceData.id = (\"; \" + document.cookie)\n        .split(\"; reference=\")\n        .pop()\n        .split(\";\")\n        .shift();\n    }\n\n    if (this.referenceData.id === \"\") {\n      this.referenceData.id = null;\n    }\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    protected router: Router,\n    private formBuilder: UntypedFormBuilder,\n    private titleCasePipe: TitleCasePipe,\n    private stateService: StateService,\n    private logService: LogService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private i18nService: I18nService,\n    private routerService: RouterService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n\n      this.referenceDataId = qParams.reference;\n\n      if (!qParams.org) {\n        return;\n      }\n\n      if (qParams.layout) {\n        this.layout = qParams.layout;\n      }\n\n      if (this.validOrgs.includes(qParams.org)) {\n        this.org = qParams.org;\n      } else {\n        this.org = \"families\";\n      }\n\n      this.referenceData.flow = qParams.org;\n\n      // Are they coming from an email for sponsoring a families organization\n      // After logging in redirect them to setup the families sponsorship\n      this.setupFamilySponsorship(qParams.sponsorshipToken);\n\n      this.orgLabel = this.titleCasePipe.transform(this.org);\n      this.accountCreateOnly = false;\n\n      if (this.org === \"families\") {\n        this.plan = PlanType.FamiliesAnnually;\n        this.product = ProductType.Families;\n      } else if (this.org === \"teams\") {\n        this.plan = PlanType.TeamsAnnually;\n        this.product = ProductType.Teams;\n      } else if (this.org === \"enterprise\") {\n        this.plan = PlanType.EnterpriseAnnually;\n        this.product = ProductType.Enterprise;\n      }\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        this.policies\n      );\n    }\n  }\n\n  stepSelectionChange(event: StepperSelectionEvent) {\n    // Set org info sub label\n    if (event.selectedIndex === 1 && this.orgInfoFormGroup.controls.name.value === \"\") {\n      this.orgInfoSubLabel =\n        \"Enter your \" + this.titleCasePipe.transform(this.org) + \" organization information\";\n    } else if (event.previouslySelectedIndex === 1) {\n      this.orgInfoSubLabel = this.orgInfoFormGroup.controls.name.value;\n    }\n\n    //set billing sub label\n    if (event.selectedIndex === 2) {\n      this.billingSubLabel = this.i18nService.t(\"billingTrialSubLabel\");\n    }\n  }\n\n  createdAccount(email: string) {\n    this.email = email;\n    this.orgInfoFormGroup.get(\"email\")?.setValue(email);\n    this.verticalStepper.next();\n  }\n\n  billingSuccess(event: any) {\n    this.orgId = event?.orgId;\n    this.billingSubLabel = event?.subLabelText;\n    this.verticalStepper.next();\n  }\n\n  navigateToOrgVault() {\n    this.router.navigate([\"organizations\", this.orgId, \"vault\"]);\n  }\n\n  navigateToOrgInvite() {\n    this.router.navigate([\"organizations\", this.orgId, \"manage\", \"people\"]);\n  }\n\n  previousStep() {\n    this.verticalStepper.previous();\n  }\n\n  private setupFamilySponsorship(sponsorshipToken: string) {\n    if (sponsorshipToken != null) {\n      const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n        queryParams: { plan: sponsorshipToken },\n      });\n      this.routerService.setPreviousUrl(route.toString());\n    }\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { TokenRequestTwoFactor } from \"@bitwarden/common/models/request/identityToken/tokenRequestTwoFactor\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenRequestTwoFactor(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{ \"twoStepOptions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-group list-group-flush-2fa\">\n          <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ p.name }}</h3>\n                {{ p.description }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-describedby]=\"p.name\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"choose(p)\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img class=\"recovery-code-img\" alt=\"rc logo\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ \"recoveryCodeTitle\" | i18n }}</h3>\n                {{ \"recoveryCodeDesc\" | i18n }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"recover()\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"container\"\n  ngNativeValidate\n  autocomplete=\"off\"\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div\n      class=\"col-5\"\n      [ngClass]=\"{\n        'col-9':\n          selectedProviderType === providerType.Duo ||\n          selectedProviderType === providerType.OrganizationDuo\n      }\"\n    >\n      <p class=\"lead text-center mb-4\">{{ title }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Email ||\n              selectedProviderType === providerType.Authenticator\n            \"\n          >\n            <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n              {{ \"enterVerificationCodeApp\" | i18n }}\n            </p>\n            <p *ngIf=\"selectedProviderType === providerType.Email\">\n              {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n            </p>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"text\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                inputmode=\"tel\"\n                appInputVerbatim\n              />\n              <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                <a\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"sendEmail(true)\"\n                  [appApiAction]=\"emailPromise\"\n                  *ngIf=\"selectedProviderType === providerType.Email\"\n                >\n                  {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n                </a>\n              </small>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n            <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n            <picture>\n              <source srcset=\"../../images/yubikey.avif\" type=\"image/avif\" />\n              <source srcset=\"../../images/yubikey.webp\" type=\"image/webp\" />\n              <img src=\"../../images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\" />\n            </picture>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"password\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\">\n            <div id=\"web-authn-frame\" class=\"mb-3\">\n              <iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe>\n            </div>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Duo ||\n              selectedProviderType === providerType.OrganizationDuo\n            \"\n          >\n            <div id=\"duo-frame\" class=\"mb-3\">\n              <iframe id=\"duo_iframe\"></iframe>\n            </div>\n          </ng-container>\n          <i\n            class=\"bwi bwi-spinner text-muted bwi-spin pull-right\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\"\n            aria-hidden=\"true\"\n          ></i>\n          <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              name=\"Remember\"\n              class=\"form-check-input\"\n              [(ngModel)]=\"remember\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">{{ \"rememberMe\" | i18n }}</label>\n          </div>\n          <ng-container *ngIf=\"selectedProviderType == null\">\n            <p>{{ \"noTwoStepProviders\" | i18n }}</p>\n            <p>{{ \"noTwoStepProviders2\" | i18n }}</p>\n          </ng-container>\n          <hr />\n          <div [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n              *ngIf=\"\n                selectedProviderType != null &&\n                selectedProviderType !== providerType.Duo &&\n                selectedProviderType !== providerType.OrganizationDuo &&\n                selectedProviderType !== providerType.WebAuthn\n              \"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n          <div class=\"text-center\">\n            <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{\n              \"useAnotherTwoStepMethod\" | i18n\n            }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { RouterService } from \"../core\";\n\nimport { TwoFactorOptionsComponent } from \"./two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  @ViewChild(\"twoFactorOptions\", { read: ViewContainerRef, static: true })\n  twoFactorOptionsModal: ViewContainerRef;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    private modalService: ModalService,\n    route: ActivatedRoute,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService,\n    private routerService: RouterService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async anotherMethod() {\n    const [modal] = await this.modalService.openViewRef(\n      TwoFactorOptionsComponent,\n      this.twoFactorOptionsModal,\n      (comp) => {\n        comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n          modal.close();\n          this.selectedProviderType = provider;\n          await this.init();\n        });\n        comp.onRecoverSelected.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async goAfterLogIn() {\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class PasswordRequest extends SecretVerificationRequest {\n  newMasterPasswordHash: string;\n  masterPasswordHint: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/passwordRequest\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdatePasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n  currentMasterPassword: string;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n\n  constructor(\n    protected router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async cancel() {\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    const secret: Verification = {\n      type: VerificationType.MasterPassword,\n      secret: this.currentMasterPassword,\n    };\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return false;\n    }\n\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create Request\n      const request = new PasswordRequest();\n      request.masterPasswordHash = await this.cryptoService.hashPassword(\n        this.currentMasterPassword,\n        null\n      );\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.key = encKey[1].encryptedString;\n\n      // Update user's password\n      this.apiService.postPassword(request);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"masterPasswordInvalidWarning\" | i18n }} </app-callout>\n          <app-callout\n            type=\"info\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            *ngIf=\"enforcedPolicyOptions\"\n          ></app-callout>\n\n          <form\n            #form\n            (ngSubmit)=\"submit()\"\n            [appApiAction]=\"formPromise\"\n            ngNativeValidate\n            autocomplete=\"off\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"currentMasterPassword\"\n                    type=\"password\"\n                    name=\"MasterPasswordHash\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\"\n                    required\n                    appInputVerbatim\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"newMasterPassword\"\n                    type=\"password\"\n                    name=\"NewMasterPasswordHash\"\n                    class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                  <app-password-strength\n                    [password]=\"masterPassword\"\n                    [email]=\"email\"\n                    [showText]=\"true\"\n                  ></app-password-strength>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"masterPasswordRetype\"\n                    type=\"password\"\n                    name=\"MasterPasswordRetype\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"masterPasswordRetype\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n              <i\n                class=\"fa fa-spinner fa-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"changeMasterPassword\" | i18n }}</span>\n            </button>\n            <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n              <span>{{ \"cancel\" | i18n }}</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { UpdatePasswordComponent as BaseUpdatePasswordComponent } from \"@bitwarden/angular/components/update-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\n@Component({\n  selector: \"app-update-password\",\n  templateUrl: \"update-password.component.html\",\n})\nexport class UpdatePasswordComponent extends BaseUpdatePasswordComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      userVerificationService,\n      logService\n    );\n  }\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/updateTempPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"updateMasterPasswordWarning\" | i18n }} </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    syncService: SyncService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export class VerifyEmailRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VerifyEmailRequest } from \"@bitwarden/common/models/request/verifyEmailRequest\";\n\n@Component({\n  selector: \"app-verify-email-token\",\n  templateUrl: \"verify-email-token.component.html\",\n})\nexport class VerifyEmailTokenComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null) {\n        try {\n          await this.apiService.postAccountVerifyEmailToken(\n            new VerifyEmailRequest(qParams.userId, qParams.token)\n          );\n          if (await this.stateService.getIsAuthenticated()) {\n            await this.apiService.refreshIdentityToken();\n          }\n          this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n          this.router.navigate([\"/\"]);\n          return;\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"emailVerifiedFailed\"));\n      this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","export class VerifyDeleteRecoverRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VerifyDeleteRecoverRequest } from \"@bitwarden/common/models/request/verifyDeleteRecoverRequest\";\n\n@Component({\n  selector: \"app-verify-recover-delete\",\n  templateUrl: \"verify-recover-delete.component.html\",\n})\nexport class VerifyRecoverDeleteComponent implements OnInit {\n  email: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private token: string;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n        this.userId = qParams.userId;\n        this.token = qParams.token;\n        this.email = qParams.email;\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    try {\n      const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n      this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n          <p class=\"text-center\">\n            <strong>{{ email }}</strong>\n          </p>\n          <p>{{ \"deleteRecoverConfirmDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-danger btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"deleteAccount\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HomeGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return this.router.createUrlTree([\"/login\"], { queryParams: route.queryParams });\n    }\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"/lock\"], { queryParams: route.queryParams });\n    }\n    return this.router.createUrlTree([\"/vault\"], { queryParams: route.queryParams });\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-frontend-layout\",\n  templateUrl: \"frontend-layout.component.html\",\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n    document.body.classList.add(\"layout_frontend\");\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n  &copy; {{ year }} Bitwarden Inc. <br />\n  {{ \"versionNumber\" | i18n: version }}\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n})\nexport class FooterComponent implements OnInit {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n  }\n}\n","<div class=\"container footer text-muted\">\n  <div class=\"row\">\n    <div class=\"col\">&copy; {{ year }} Bitwarden Inc.</div>\n    <div class=\"col text-center\"></div>\n    <div class=\"col text-right\">\n      {{ \"versionNumber\" | i18n: version }}\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnChanges, OnInit } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-avatar\",\n  template:\n    '<img *ngIf=\"src\" [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" ' +\n    \"[ngClass]=\\\"{'rounded-circle': circle}\\\">\",\n})\nexport class AvatarComponent implements OnChanges, OnInit {\n  @Input() data: string;\n  @Input() email: string;\n  @Input() size = 45;\n  @Input() charCount = 2;\n  @Input() textColor = \"#ffffff\";\n  @Input() fontSize = 20;\n  @Input() fontWeight = 300;\n  @Input() dynamic = false;\n  @Input() circle = false;\n\n  src: string;\n\n  constructor(\n    public sanitizer: DomSanitizer,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    if (!this.dynamic) {\n      this.generate();\n    }\n  }\n\n  ngOnChanges() {\n    if (this.dynamic) {\n      this.generate();\n    }\n  }\n\n  private async generate() {\n    const enableGravatars = await this.stateService.getEnableGravitars();\n    if (enableGravatars && this.email != null) {\n      const hashBytes = await this.cryptoFunctionService.hash(\n        this.email.toLowerCase().trim(),\n        \"md5\"\n      );\n      const hash = Utils.fromBufferToHex(hashBytes).toLowerCase();\n      this.src = \"https://www.gravatar.com/avatar/\" + hash + \"?s=\" + this.size + \"&r=pg&d=retro\";\n    } else {\n      let chars: string = null;\n      const upperData = this.data.toUpperCase();\n\n      if (this.charCount > 1) {\n        chars = this.getFirstLetters(upperData, this.charCount);\n      }\n      if (chars == null) {\n        chars = this.unicodeSafeSubstring(upperData, this.charCount);\n      }\n\n      // If the chars contain an emoji, only show it.\n      if (chars.match(Utils.regexpEmojiPresentation)) {\n        chars = chars.match(Utils.regexpEmojiPresentation)[0];\n      }\n\n      const charObj = this.getCharText(chars);\n      const color = this.stringToColor(upperData);\n      const svg = this.getSvg(this.size, color);\n      svg.appendChild(charObj);\n      const html = window.document.createElement(\"div\").appendChild(svg).outerHTML;\n      const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n      this.src = \"data:image/svg+xml;base64,\" + svgHtml;\n    }\n  }\n\n  private stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  private getFirstLetters(data: string, count: number): string {\n    const parts = data.split(\" \");\n    if (parts.length > 1) {\n      let text = \"\";\n      for (let i = 0; i < count; i++) {\n        text += this.unicodeSafeSubstring(parts[i], 1);\n      }\n      return text;\n    }\n    return null;\n  }\n\n  private getSvg(size: number, color: string): HTMLElement {\n    const svgTag = window.document.createElement(\"svg\");\n    svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svgTag.setAttribute(\"pointer-events\", \"none\");\n    svgTag.setAttribute(\"width\", size.toString());\n    svgTag.setAttribute(\"height\", size.toString());\n    svgTag.style.backgroundColor = color;\n    svgTag.style.width = size + \"px\";\n    svgTag.style.height = size + \"px\";\n    return svgTag;\n  }\n\n  private getCharText(character: string): HTMLElement {\n    const textTag = window.document.createElement(\"text\");\n    textTag.setAttribute(\"text-anchor\", \"middle\");\n    textTag.setAttribute(\"y\", \"50%\");\n    textTag.setAttribute(\"x\", \"50%\");\n    textTag.setAttribute(\"dy\", \"0.35em\");\n    textTag.setAttribute(\"pointer-events\", \"auto\");\n    textTag.setAttribute(\"fill\", this.textColor);\n    textTag.setAttribute(\n      \"font-family\",\n      '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n        'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"'\n    );\n    textTag.textContent = character;\n    textTag.style.fontWeight = this.fontWeight.toString();\n    textTag.style.fontSize = this.fontSize + \"px\";\n    return textTag;\n  }\n\n  private unicodeSafeSubstring(str: string, count: number) {\n    const characters = str.match(/./gu);\n    return characters != null ? characters.slice(0, count).join(\"\") : \"\";\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{ 'nav-background-alt': selfHosted }\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{ 'pageTitle' | i18n: 'Bitwarden' }}\">\n      <i class=\"bwi bwi-shield\" aria-hidden=\"true\"></i>\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/vault\">{{ \"vaults\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/sends\">{{ \"send\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/tools\">{{ \"tools\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/reports\">{{ \"reports\" | i18n }}</a>\n        </li>\n        <li *ngIf=\"organizations.length >= 1\" class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" [routerLink]=\"['/organizations', organizations[0].id]\">{{\n            \"organizations\" | i18n\n          }}</a>\n        </li>\n        <ng-container *ngIf=\"providers.length >= 1\">\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\">\n            <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{\n              \"provider\" | i18n\n            }}</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\">\n            <a class=\"nav-link\" routerLink=\"/providers\">{{ \"provider\" | i18n }}</a>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li>\n        <button\n          [bitMenuTriggerFor]=\"accountMenu\"\n          class=\"tw-border-0 tw-bg-transparent tw-text-alt2 tw-opacity-70 hover:tw-opacity-90\"\n        >\n          <i class=\"bwi bwi-user-circle bwi-lg\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-caret-down bwi-sm\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu class=\"dropdown-menu\" #accountMenu>\n          <div class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\">\n            <div\n              class=\"tw-flex tw-items-center tw-py-1 tw-px-4 tw-leading-tight tw-text-info\"\n              *ngIf=\"name\"\n              appStopProp\n            >\n              <app-avatar\n                [data]=\"name\"\n                [email]=\"email\"\n                size=\"25\"\n                fontSize=\"14\"\n                [circle]=\"true\"\n              ></app-avatar>\n              <div class=\"tw-ml-2 tw-block tw-overflow-hidden tw-whitespace-nowrap\">\n                <span>{{ \"loggedInAs\" | i18n }}</span>\n                <small class=\"tw-block tw-overflow-hidden tw-whitespace-nowrap tw-text-muted\">{{\n                  name\n                }}</small>\n              </div>\n            </div>\n            <bit-menu-divider></bit-menu-divider>\n            <a bitMenuItem routerLink=\"/settings/account\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"accountSettings\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/help/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-question-circle\" aria-hidden=\"true\"></i>\n              {{ \"getHelp\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"getApps\" | i18n }}\n            </a>\n            <bit-menu-divider></bit-menu-divider>\n            <button bitMenuItem type=\"button\" (click)=\"lock()\">\n              <i class=\"bwi bwi-fw bwi-lock\" aria-hidden=\"true\"></i>\n              {{ \"lockNow\" | i18n }}\n            </button>\n            <button bitMenuItem type=\"button\" (click)=\"logOut()\">\n              <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </bit-menu>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, NgZone, OnInit } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { canAccessOrgAdmin } from \"../organizations/navigation-permissions\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n})\nexport class NavbarComponent implements OnInit {\n  selfHosted = false;\n  name: string;\n  email: string;\n  providers: Provider[] = [];\n  organizations: Organization[] = [];\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private providerService: ProviderService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private i18nService: I18nService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.name = await this.tokenService.getName();\n    this.email = await this.tokenService.getEmail();\n    if (this.name == null || this.name.trim() === \"\") {\n      this.name = this.email;\n    }\n\n    // Ensure providers and organizations are loaded\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n    this.providers = await this.providerService.getAll();\n\n    this.organizations = await this.buildOrganizations();\n\n    this.broadcasterService.subscribe(this.constructor.name, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"organizationCreated\":\n            if (this.organizations.length < 1) {\n              this.organizations = await this.buildOrganizations();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  async buildOrganizations() {\n    const allOrgs = await this.organizationService.getAll();\n    return allOrgs.filter(canAccessOrgAdmin).sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  lock() {\n    this.messagingService.send(\"lockVault\");\n  }\n\n  logOut() {\n    this.messagingService.send(\"logout\");\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user-layout\",\n  templateUrl: \"user-layout.component.html\",\n})\nexport class UserLayoutComponent implements OnInit {\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","<div *ngIf=\"loaded && activeOrganization != null\" class=\"tw-flex\">\n  <button\n    class=\"tw-flex tw-items-center tw-border-none tw-bg-background-alt\"\n    type=\"button\"\n    id=\"pickerButton\"\n    [appA11yTitle]=\"'organizationPicker' | i18n\"\n    [bitMenuTriggerFor]=\"orgPickerMenu\"\n  >\n    <app-avatar\n      [data]=\"activeOrganization.name\"\n      size=\"45\"\n      [circle]=\"true\"\n      [dynamic]=\"true\"\n    ></app-avatar>\n    <div class=\"tw-flex\">\n      <div class=\"org-name tw-ml-3\">\n        <span>{{ activeOrganization.name }}</span>\n        <small class=\"tw-text-muted\">{{ \"organization\" | i18n }}</small>\n      </div>\n      <div class=\"tw-ml-3\">\n        <i class=\"bwi bwi-angle-down tw-text-main\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </button>\n  <div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-danger-500 tw-text-danger\"\n      *ngIf=\"!activeOrganization.enabled\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"organizationIsDisabled\" | i18n }}\n      </div>\n    </div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-info-500 tw-text-info\"\n      *ngIf=\"activeOrganization.isProviderUser\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"accessingUsingProvider\" | i18n: activeOrganization.providerName }}\n      </div>\n    </div>\n  </div>\n\n  <bit-menu #orgPickerMenu>\n    <ul aria-labelledby=\"pickerButton\" class=\"tw-m-0 tw-p-0\">\n      <li *ngFor=\"let org of organizations\" class=\"tw-flex tw-list-none tw-flex-col\" role=\"none\">\n        <a bitMenuItem [routerLink]=\"['/organizations', org.id]\">\n          <i\n            class=\"bwi bwi-check mr-2\"\n            [ngClass]=\"org.id === activeOrganization.id ? 'visible' : 'invisible'\"\n          >\n            <span class=\"tw-sr-only\">{{ \"currentOrganization\" | i18n }}</span>\n          </i>\n          {{ org.name }}\n        </a>\n      </li>\n      <bit-menu-divider></bit-menu-divider>\n      <li class=\"tw-list-none\" role=\"none\">\n        <a bitMenuItem routerLink=\"/create-organization\">\n          <i class=\"bwi bwi-plus mr-2\"></i>\n          {{ \"newOrganization\" | i18n }}</a\n        >\n      </li>\n    </ul>\n  </bit-menu>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { canAccessOrgAdmin } from \"../organizations/navigation-permissions\";\n\n@Component({\n  selector: \"app-organization-switcher\",\n  templateUrl: \"organization-switcher.component.html\",\n})\nexport class OrganizationSwitcherComponent implements OnInit {\n  constructor(private organizationService: OrganizationService, private i18nService: I18nService) {}\n\n  @Input() activeOrganization: Organization = null;\n  organizations: Organization[] = [];\n\n  loaded = false;\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .filter(canAccessOrgAdmin)\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    this.loaded = true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"organization\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <app-organization-switcher\n        class=\"my-auto pl-1\"\n        [activeOrganization]=\"organization\"\n      ></app-organization-switcher>\n      <ul class=\"nav nav-tabs\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-lock\" aria-hidden=\"true\"></i>\n            {{ \"vault\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showToolsTab\">\n          <a class=\"nav-link\" [routerLink]=\"toolsRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-wrench\" aria-hidden=\"true\"></i>\n            {{ \"tools\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport {\n  canAccessManageTab,\n  canAccessSettingsTab,\n  canAccessToolsTab,\n} from \"../navigation-permissions\";\n\nconst BroadcasterSubscriptionId = \"OrganizationLayoutComponent\";\n\n@Component({\n  selector: \"app-organization-layout\",\n  templateUrl: \"organization-layout.component.html\",\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n  organization: Organization;\n  businessTokenPromise: Promise<any>;\n  private organizationId: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.params.subscribe(async (params: any) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"updatedOrgLicense\":\n            await this.load();\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n  }\n\n  get showManageTab(): boolean {\n    return canAccessManageTab(this.organization);\n  }\n\n  get showToolsTab(): boolean {\n    return canAccessToolsTab(this.organization);\n  }\n\n  get showSettingsTab(): boolean {\n    return canAccessSettingsTab(this.organization);\n  }\n\n  get toolsRoute(): string {\n    return this.organization.canAccessImportExport\n      ? \"tools/import\"\n      : \"tools/exposed-passwords-report\";\n  }\n\n  get manageRoute(): string {\n    let route: string;\n    switch (true) {\n      case this.organization.canManageUsers:\n        route = \"manage/people\";\n        break;\n      case this.organization.canViewAssignedCollections || this.organization.canViewAllCollections:\n        route = \"manage/collections\";\n        break;\n      case this.organization.canManageGroups:\n        route = \"manage/groups\";\n        break;\n      case this.organization.canManagePolicies:\n        route = \"manage/policies\";\n        break;\n      case this.organization.canManageSso:\n        route = \"manage/sso\";\n        break;\n      case this.organization.canManageScim:\n        route = \"manage/scim\";\n        break;\n      case this.organization.canAccessEventLogs:\n        route = \"manage/events\";\n        break;\n    }\n    return route;\n  }\n}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"collectionAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n            appAutofocus\n            [disabled]=\"!this.canSave\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n            [disabled]=\"!this.canSave\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <ng-container *ngIf=\"accessGroups\">\n          <h3 class=\"mt-4 d-flex mb-0\">\n            {{ \"groupAccess\" | i18n }}\n            <div class=\"ml-auto\" *ngIf=\"groups && groups.length && this.canSave\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </h3>\n          <div *ngIf=\"!groups || !groups.length\">\n            {{ \"noGroupsInList\" | i18n }}\n          </div>\n          <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let g of groups; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.checked\"\n                    name=\"Groups[{{ i }}].Checked\"\n                    [disabled]=\"g.accessAll || !this.canSave\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(g)\">\n                  {{ g.name }}\n                  <ng-container *ngIf=\"g.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter text-muted bwi-fw\"\n                      title=\"{{ 'groupAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"groupAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.hidePasswords\"\n                    name=\"Groups[{{ i }}].HidePasswords\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.readOnly\"\n                    name=\"Groups[{{ i }}].ReadOnly\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"this.canSave\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"this.canDelete\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { CollectionRequest } from \"@bitwarden/common/models/request/collectionRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\n@Component({\n  selector: \"app-collection-add-edit\",\n  templateUrl: \"collection-add-edit.component.html\",\n})\nexport class CollectionAddEditComponent implements OnInit {\n  @Input() collectionId: string;\n  @Input() organizationId: string;\n  @Input() canSave: boolean;\n  @Input() canDelete: boolean;\n  @Output() onSavedCollection = new EventEmitter();\n  @Output() onDeletedCollection = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  accessGroups = false;\n  title: string;\n  name: string;\n  externalId: string;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  private orgKey: SymmetricCryptoKey;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    const organization = await this.organizationService.get(this.organizationId);\n    this.accessGroups = organization.useGroups;\n    this.editMode = this.loading = this.collectionId != null;\n    if (this.accessGroups) {\n      const groupsResponse = await this.apiService.getGroups(this.organizationId);\n      this.groups = groupsResponse.data\n        .map((r) => r)\n        .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    }\n    this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editCollection\");\n      try {\n        const collection = await this.apiService.getCollectionDetails(\n          this.organizationId,\n          this.collectionId\n        );\n        this.name = await this.cryptoService.decryptToUtf8(\n          new EncString(collection.name),\n          this.orgKey\n        );\n        this.externalId = collection.externalId;\n        if (collection.groups != null && this.groups.length > 0) {\n          collection.groups.forEach((s) => {\n            const group = this.groups.filter((g) => !g.accessAll && g.id === s.id);\n            if (group != null && group.length > 0) {\n              (group[0] as any).checked = true;\n              (group[0] as any).readOnly = s.readOnly;\n              (group[0] as any).hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addCollection\");\n    }\n\n    this.groups.forEach((g) => {\n      if (g.accessAll) {\n        (g as any).checked = true;\n      }\n    });\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    if (g.accessAll) {\n      return;\n    }\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n      (g as any).hidePasswords = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    if (this.orgKey == null) {\n      throw new Error(\"No encryption key for this organization.\");\n    }\n\n    const request = new CollectionRequest();\n    request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n    request.externalId = this.externalId;\n    request.groups = this.groups\n      .filter((g) => (g as any).checked && !g.accessAll)\n      .map(\n        (g) => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords)\n      );\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putCollection(\n          this.organizationId,\n          this.collectionId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.postCollection(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedCollectionId\" : \"createdCollectionId\", this.name)\n      );\n      this.onSavedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", this.name)\n      );\n      this.onDeletedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAccessTitle\">\n          {{ \"userAccess\" | i18n }}\n          <small>{{ entityName }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading || !users\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <cdk-virtual-scroll-viewport\n        itemSize=\"46\"\n        minBufferPx=\"600\"\n        maxBufferPx=\"1200\"\n        [style]=\"scrollViewportStyle\"\n      >\n        <div class=\"modal-body\" *ngIf=\"!loading && users && searchedUsers\">\n          <div class=\"d-flex\">\n            <div class=\"mr-3\">\n              <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n              <input\n                type=\"search\"\n                class=\"form-control form-control-sm\"\n                id=\"search\"\n                placeholder=\"{{ 'search' | i18n }}\"\n                name=\"SearchText\"\n                [(ngModel)]=\"searchText\"\n              />\n            </div>\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: !showSelected }\"\n                (click)=\"filterSelected(false)\"\n              >\n                {{ \"all\" | i18n }}\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: showSelected }\"\n                (click)=\"filterSelected(true)\"\n              >\n                {{ \"selected\" | i18n }}\n                <span bitBadge badgeType=\"info\" *ngIf=\"selectedCount\">{{ selectedCount }}</span>\n              </button>\n            </div>\n          </div>\n          <ng-container *ngIf=\"!searchedUsers.length\">\n            <hr />\n            {{ \"noUsersInList\" | i18n }}\n          </ng-container>\n          <table class=\"table table-hover table-list mb-0\" [hidden]=\"!searchedUsers.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                <th>{{ \"userType\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"hidePasswords\" | i18n }}\n                </th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"readOnly\" | i18n }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *cdkVirtualFor=\"let u of searchedUsers\" class=\"\">\n                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.checked\"\n                    name=\"{{ u.id.substr(0, 8) }}_Checked\"\n                    [disabled]=\"entity === 'collection' && u.accessAll\"\n                    (change)=\"selectedChanged(u)\"\n                    appStopProp\n                  />\n                </td>\n                <td width=\"30\" (click)=\"check(u)\">\n                  <app-avatar\n                    [data]=\"u | userName\"\n                    [email]=\"u.email\"\n                    size=\"25\"\n                    [circle]=\"true\"\n                    [fontSize]=\"14\"\n                  >\n                  </app-avatar>\n                </td>\n                <td>\n                  {{ u.email }}\n                  <span\n                    bitBadge\n                    badgeType=\"secondary\"\n                    *ngIf=\"u.status === organizationUserStatusType.Invited\"\n                    >{{ \"invited\" | i18n }}</span\n                  >\n                  <span\n                    bitBadge\n                    badgeType=\"warning\"\n                    *ngIf=\"u.status === organizationUserStatusType.Accepted\"\n                    >{{ \"accepted\" | i18n }}</span\n                  >\n                  <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n                </td>\n                <td *ngIf=\"entity === 'collection'\">\n                  <ng-container *ngIf=\"u.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter\"\n                      title=\"{{ 'userAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"userAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td>\n                  <span *ngIf=\"u.type === organizationUserType.Owner\">{{ \"owner\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Admin\">{{ \"admin\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Manager\">{{\n                    \"manager\" | i18n\n                  }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.User\">{{ \"user\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Custom\">{{ \"custom\" | i18n }}</span>\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.hidePasswords\"\n                    name=\"{{ u.id.substr(0, 8) }}_HidePasswords\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.readOnly\"\n                    name=\"{{ u.id.substr(0, 8) }}_ReadOnly\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </cdk-virtual-scroll-viewport>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\n\n@Component({\n  selector: \"app-entity-users\",\n  templateUrl: \"entity-users.component.html\",\n  providers: [SearchPipe],\n})\nexport class EntityUsersComponent implements OnInit {\n  @Input() entity: \"group\" | \"collection\";\n  @Input() entityId: string;\n  @Input() entityName: string;\n  @Input() organizationId: string;\n  @Output() onEditedUsers = new EventEmitter();\n\n  organizationUserType = OrganizationUserType;\n  organizationUserStatusType = OrganizationUserStatusType;\n\n  showSelected = false;\n  loading = true;\n  formPromise: Promise<any>;\n  selectedCount = 0;\n  searchText: string;\n\n  private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n  constructor(\n    private search: SearchPipe,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadUsers();\n    this.loading = false;\n  }\n\n  get users() {\n    if (this.showSelected) {\n      return this.allUsers.filter((u) => (u as any).checked);\n    } else {\n      return this.allUsers;\n    }\n  }\n\n  get searchedUsers() {\n    return this.search.transform(this.users, this.searchText, \"name\", \"email\", \"id\");\n  }\n\n  get scrollViewportStyle() {\n    return `min-height: 120px; height: ${120 + this.searchedUsers.length * 46}px`;\n  }\n\n  async loadUsers() {\n    const users = await this.apiService.getOrganizationUsers(this.organizationId);\n    this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    if (this.entity === \"group\") {\n      const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => u.id === s);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n          }\n        });\n      }\n    } else if (this.entity === \"collection\") {\n      const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n            (user[0] as any).readOnly = s.readOnly;\n            (user[0] as any).hidePasswords = s.hidePasswords;\n          }\n        });\n      }\n    }\n\n    this.allUsers.forEach((u) => {\n      if (this.entity === \"collection\" && u.accessAll) {\n        (u as any).checked = true;\n      }\n      if ((u as any).checked) {\n        this.selectedCount++;\n      }\n    });\n  }\n\n  check(u: OrganizationUserUserDetailsResponse) {\n    if (this.entity === \"collection\" && u.accessAll) {\n      return;\n    }\n    (u as any).checked = !(u as any).checked;\n    this.selectedChanged(u);\n  }\n\n  selectedChanged(u: OrganizationUserUserDetailsResponse) {\n    if ((u as any).checked) {\n      this.selectedCount++;\n    } else {\n      if (this.entity === \"collection\") {\n        (u as any).readOnly = false;\n        (u as any).hidePasswords = false;\n      }\n      this.selectedCount--;\n    }\n  }\n\n  filterSelected(showSelected: boolean) {\n    this.showSelected = showSelected;\n  }\n\n  async submit() {\n    try {\n      if (this.entity === \"group\") {\n        const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n        this.formPromise = this.apiService.putGroupUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      } else {\n        const selections = this.users\n          .filter((u) => (u as any).checked && !u.accessAll)\n          .map(\n            (u) =>\n              new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords)\n          );\n        this.formPromise = this.apiService.putCollectionUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedUsers\"));\n      this.onEditedUsers.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"collections\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"this.canCreate\"\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"add()\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newCollection\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging()\n      ? pagedCollections\n      : (collections | search: searchText:'name':'id')) as searchedCollections\n  \"\n>\n  <p *ngIf=\"!searchedCollections.length\">{{ \"noCollectionsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of searchedCollections\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\">\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"users(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item text-danger\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canDelete(c)\"\n                (click)=\"delete(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collectionResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\nimport { CollectionAddEditComponent } from \"./collection-add-edit.component\";\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@Component({\n  selector: \"app-org-manage-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organization: Organization;\n  canCreate = false;\n  organizationId: string;\n  collections: CollectionView[];\n  assignedCollections: CollectionView[];\n  pagedCollections: CollectionView[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedCollectionsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private collectionService: CollectionService,\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    this.canCreate = this.organization.canCreateNewCollections;\n\n    const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n      const collections = r.data\n        .filter((c) => c.organizationId === this.organizationId)\n        .map((d) => new Collection(new CollectionData(d as CollectionDetailsResponse)));\n      return await this.collectionService.decryptMany(collections);\n    };\n\n    if (this.organization.canViewAssignedCollections) {\n      const response = await this.apiService.getUserCollections();\n      this.assignedCollections = await decryptCollections(response);\n    }\n\n    if (this.organization.canViewAllCollections) {\n      const response = await this.apiService.getCollections(this.organizationId);\n      this.collections = await decryptCollections(response);\n    } else {\n      this.collections = this.assignedCollections;\n    }\n\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.collections || this.collections.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCollections.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n      pagedSize = this.pagedCollectionsCount;\n    }\n    if (this.collections.length > pagedLength) {\n      this.pagedCollections = this.pagedCollections.concat(\n        this.collections.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCollectionsCount = this.pagedCollections.length;\n    this.didScroll = this.pagedCollections.length > this.pageSize;\n  }\n\n  async edit(collection: CollectionView) {\n    const canCreate = collection == null && this.canCreate;\n    const canEdit = collection != null && this.canEdit(collection);\n    const canDelete = collection != null && this.canDelete(collection);\n\n    if (!(canCreate || canEdit || canDelete)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      CollectionAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.collectionId = collection != null ? collection.id : null;\n        comp.canSave = canCreate || canEdit;\n        comp.canDelete = canDelete;\n        comp.onSavedCollection.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedCollection.subscribe(() => {\n          modal.close();\n          this.removeCollection(collection);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(collection: CollectionView) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteCollection(this.organizationId, collection.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.removeCollection(collection);\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n    }\n  }\n\n  async users(collection: CollectionView) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"collection\";\n        comp.entityId = collection.id;\n        comp.entityName = collection.name;\n\n        comp.onEditedUsers.subscribe(() => {\n          this.load();\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.collections && this.collections.length > this.pageSize;\n  }\n\n  canEdit(collection: CollectionView) {\n    if (this.organization.canEditAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canEditAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  canDelete(collection: CollectionView) {\n    if (this.organization.canDeleteAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canDeleteAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private removeCollection(collection: CollectionView) {\n    const index = this.collections.indexOf(collection);\n    if (index > -1) {\n      this.collections.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventView {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: EventType;\n  installationId: string;\n\n  constructor(data: Required<EventView>) {\n    this.message = data.message;\n    this.humanReadableMessage = data.humanReadableMessage;\n    this.appIcon = data.appIcon;\n    this.appName = data.appName;\n    this.userId = data.userId;\n    this.userName = data.userName;\n    this.userEmail = data.userEmail;\n    this.date = data.date;\n    this.ip = data.ip;\n    this.type = data.type;\n    this.installationId = data.installationId;\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { EventView } from \"@bitwarden/common/models/view/eventView\";\n\nimport { EventService } from \"../core\";\n\n@Directive()\nexport abstract class BaseEventsComponent {\n  loading = true;\n  loaded = false;\n  events: EventView[];\n  start: string;\n  end: string;\n  dirtyDates = true;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  exportPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  abstract readonly exportFileName: string;\n\n  constructor(\n    protected eventService: EventService,\n    protected i18nService: I18nService,\n    protected exportService: ExportService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected fileDownloadService: FileDownloadService\n  ) {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n  }\n\n  async exportEvents() {\n    if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n      return;\n    }\n\n    this.loading = true;\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    try {\n      this.exportPromise = this.export(dates[0], dates[1]);\n\n      await this.exportPromise;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    this.exportPromise = null;\n    this.loading = false;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.appApiPromiseUnfulfilled()) {\n      return;\n    }\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    this.loading = true;\n    let events: EventView[] = [];\n    try {\n      const promise = this.loadAndParseEvents(\n        dates[0],\n        dates[1],\n        clearExisting ? null : this.continuationToken\n      );\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      const result = await promise;\n      this.continuationToken = result.continuationToken;\n      events = result.events;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.dirtyDates = false;\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n\n  protected abstract requestEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ): Promise<ListResponse<EventResponse>>;\n  protected abstract getUserName(r: EventResponse, userId: string): { name: string; email: string };\n\n  protected async loadAndParseEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ) {\n    const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user = this.getUserName(r, userId);\n        const userName = user != null ? user.name : this.i18nService.t(\"unknown\");\n\n        return new EventView({\n          message: eventInfo.message,\n          humanReadableMessage: eventInfo.humanReadableMessage,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: r.installationId != null ? `Installation: ${r.installationId}` : userName,\n          userEmail: user != null ? user.email : \"\",\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n          installationId: r.installationId,\n        });\n      })\n    );\n    return { continuationToken: response.continuationToken, events: events };\n  }\n\n  protected parseDates() {\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return null;\n    }\n    return dates;\n  }\n\n  protected appApiPromiseUnfulfilled() {\n    return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n  }\n\n  private async export(start: string, end: string) {\n    let continuationToken = this.continuationToken;\n    let events = [].concat(this.events);\n\n    while (continuationToken != null) {\n      const result = await this.loadAndParseEvents(start, end, continuationToken);\n      continuationToken = result.continuationToken;\n      events = events.concat(result.events);\n    }\n\n    const data = await this.exportService.getEventExport(events);\n    const fileName = this.exportService.getFileName(this.exportFileName, \"csv\");\n    this.fileDownloadService.download({\n      fileName,\n      blobData: data,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\nimport { BaseEventsComponent } from \"../../common/base.events.component\";\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-org-events\",\n  templateUrl: \"events.component.html\",\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"org-events\";\n  organizationId: string;\n  organization: Organization;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      if (this.organization == null || !this.organization.useEvents) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getOrganizationUsers(this.organizationId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n\n    if (this.organization.providerId != null) {\n      try {\n        const provider = await this.providerService.get(this.organization.providerId);\n        if (\n          provider != null &&\n          (await this.providerService.get(this.organization.providerId)).canManageUsers\n        ) {\n          const providerUsersResponse = await this.apiService.getProviderUsers(\n            this.organization.providerId\n          );\n          providerUsersResponse.data.forEach((u) => {\n            const name = this.userNamePipe.transform(u);\n            this.orgUsersUserIdMap.set(u.userId, {\n              name: `${name} (${this.organization.providerName})`,\n              email: u.email,\n            });\n          });\n        }\n      } catch (e) {\n        this.logService.warning(e);\n      }\n    }\n\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsOrganization(\n      this.organizationId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    if (userId == null) {\n      return null;\n    }\n\n    if (this.orgUsersUserIdMap.has(userId)) {\n      return this.orgUsersUserIdMap.get(userId);\n    }\n\n    if (r.providerId != null && r.providerId === this.organization.providerId) {\n      return {\n        name: this.organization.providerName,\n      };\n    }\n\n    return null;\n  }\n}\n","import { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class GroupRequest {\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: SelectionReadOnlyRequest[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-2\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"groupAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"groupAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              aria-hidden=\"true\"\n              title=\"{{ 'loading' | i18n }}\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { GroupRequest } from \"@bitwarden/common/models/request/groupRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-group-add-edit\",\n  templateUrl: \"group-add-edit.component.html\",\n})\nexport class GroupAddEditComponent implements OnInit {\n  @Input() groupId: string;\n  @Input() organizationId: string;\n  @Output() onSavedGroup = new EventEmitter();\n  @Output() onDeletedGroup = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  name: string;\n  externalId: string;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.groupId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editGroup\");\n      try {\n        const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n        this.access = group.accessAll ? \"all\" : \"selected\";\n        this.name = group.name;\n        this.externalId = group.externalId;\n        if (group.collections != null && this.collections != null) {\n          group.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addGroup\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  async submit() {\n    const request = new GroupRequest();\n    request.name = this.name;\n    request.externalId = this.externalId;\n    request.accessAll = this.access === \"all\";\n    if (!request.accessAll) {\n      request.collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n      } else {\n        this.formPromise = this.apiService.postGroup(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedGroupId\" : \"createdGroupId\", this.name)\n      );\n      this.onSavedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", this.name)\n      );\n      this.onDeletedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"groups\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newGroup\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedGroups : (groups | search: searchText:'name':'id')) as searchedGroups\n  \"\n>\n  <p *ngIf=\"!searchedGroups.length\">{{ \"noGroupsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedGroups.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let g of searchedGroups\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(g)\">{{ g.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\">\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\nimport { GroupAddEditComponent } from \"./group-add-edit.component\";\n\n@Component({\n  selector: \"app-org-groups\",\n  templateUrl: \"groups.component.html\",\n})\nexport class GroupsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  groups: GroupResponse[];\n  pagedGroups: GroupResponse[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedGroupsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getGroups(this.organizationId);\n    const groups = response.data != null && response.data.length > 0 ? response.data : [];\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.groups || this.groups.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedGroups.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n      pagedSize = this.pagedGroupsCount;\n    }\n    if (this.groups.length > pagedLength) {\n      this.pagedGroups = this.pagedGroups.concat(\n        this.groups.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedGroupsCount = this.pagedGroups.length;\n    this.didScroll = this.pagedGroups.length > this.pageSize;\n  }\n\n  async edit(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      GroupAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.groupId = group != null ? group.id : null;\n        comp.onSavedGroup.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedGroup.subscribe(() => {\n          modal.close();\n          this.removeGroup(group);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(group: GroupResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      group.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteGroup(this.organizationId, group.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", group.name)\n      );\n      this.removeGroup(group);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async users(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"group\";\n        comp.entityId = group.id;\n        comp.entityName = group.name;\n\n        comp.onEditedUsers.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedGroups = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.groups && this.groups.length > this.pageSize;\n  }\n\n  private removeGroup(group: GroupResponse) {\n    const index = this.groups.indexOf(group);\n    if (index > -1) {\n      this.groups.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"organization\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"collections\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"\n          >\n            {{ \"collections\" | i18n }}\n          </a>\n          <a\n            routerLink=\"groups\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageGroups\"\n          >\n            {{ \"groups\" | i18n }}\n          </a>\n          <a\n            routerLink=\"policies\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManagePolicies\"\n          >\n            {{ \"policies\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sso\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageSso\"\n          >\n            {{ \"singleSignOn\" | i18n }}\n          </a>\n          <a\n            routerLink=\"scim\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageScim\"\n          >\n            {{ \"scim\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canAccessEventLogs\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-manage\",\n  templateUrl: \"manage.component.html\",\n})\nexport class ManageComponent implements OnInit {\n  organization: Organization;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n    });\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class OrganizationUserConfirmRequest {\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-user-confirm\",\n  templateUrl: \"user-confirm.component.html\",\n})\nexport class UserConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() publicKey: Uint8Array;\n  @Output() onConfirmedUser = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      if (this.publicKey != null) {\n        const fingerprint = await this.cryptoService.getFingerprint(\n          this.userId,\n          this.publicKey.buffer\n        );\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    this.onConfirmedUser.emit();\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/providerUserResponse\";\n\nimport { UserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<\n  UserType extends ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse\n> {\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  get allCount() {\n    return this.activeUsers != null ? this.activeUsers.length : 0;\n  }\n\n  get invitedCount() {\n    return this.statusMap.has(this.userStatusType.Invited)\n      ? this.statusMap.get(this.userStatusType.Invited).length\n      : 0;\n  }\n\n  get acceptedCount() {\n    return this.statusMap.has(this.userStatusType.Accepted)\n      ? this.statusMap.get(this.userStatusType.Accepted).length\n      : 0;\n  }\n\n  get confirmedCount() {\n    return this.statusMap.has(this.userStatusType.Confirmed)\n      ? this.statusMap.get(this.userStatusType.Confirmed).length\n      : 0;\n  }\n\n  get revokedCount() {\n    return this.statusMap.has(this.userStatusType.Revoked)\n      ? this.statusMap.get(this.userStatusType.Revoked).length\n      : 0;\n  }\n\n  get showConfirmUsers(): boolean {\n    return (\n      this.activeUsers != null &&\n      this.statusMap != null &&\n      this.activeUsers.length > 1 &&\n      this.confirmedCount > 0 &&\n      this.confirmedCount < 3 &&\n      this.acceptedCount > 0\n    );\n  }\n\n  get showBulkConfirmUsers(): boolean {\n    return this.acceptedCount > 0;\n  }\n\n  abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n  abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n  loading = true;\n  statusMap = new Map<StatusType, UserType[]>();\n  status: StatusType;\n  users: UserType[] = [];\n  pagedUsers: UserType[] = [];\n  searchText: string;\n  actionPromise: Promise<void>;\n\n  protected allUsers: UserType[] = [];\n  protected activeUsers: UserType[] = [];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedUsersCount = 0;\n\n  constructor(\n    protected apiService: ApiService,\n    private searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cryptoService: CryptoService,\n    protected validationService: ValidationService,\n    protected modalService: ModalService,\n    private logService: LogService,\n    private searchPipe: SearchPipe,\n    protected userNamePipe: UserNamePipe,\n    protected stateService: StateService\n  ) {}\n\n  abstract edit(user: UserType): void;\n  abstract getUsers(): Promise<ListResponse<UserType>>;\n  abstract deleteUser(id: string): Promise<void>;\n  abstract revokeUser(id: string): Promise<void>;\n  abstract restoreUser(id: string): Promise<void>;\n  abstract reinviteUser(id: string): Promise<void>;\n  abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<void>;\n\n  async load() {\n    const response = await this.getUsers();\n    this.statusMap.clear();\n    this.activeUsers = [];\n    for (const status of Utils.iterateEnum(this.userStatusType)) {\n      this.statusMap.set(status, []);\n    }\n\n    this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n    this.allUsers.sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    this.allUsers.forEach((u) => {\n      if (!this.statusMap.has(u.status)) {\n        this.statusMap.set(u.status, [u]);\n      } else {\n        this.statusMap.get(u.status).push(u);\n      }\n      if (u.status !== this.userStatusType.Revoked) {\n        this.activeUsers.push(u);\n      }\n    });\n    this.filter(this.status);\n    this.loading = false;\n  }\n\n  filter(status: StatusType) {\n    this.status = status;\n    if (this.status != null) {\n      this.users = this.statusMap.get(this.status);\n    } else {\n      this.users = this.activeUsers;\n    }\n    // Reset checkbox selecton\n    this.selectAll(false);\n    this.resetPaging();\n  }\n\n  loadMore() {\n    if (!this.users || this.users.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedUsers.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n      pagedSize = this.pagedUsersCount;\n    }\n    if (this.users.length > pagedLength) {\n      this.pagedUsers = this.pagedUsers.concat(\n        this.users.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedUsersCount = this.pagedUsers.length;\n    this.didScroll = this.pagedUsers.length > this.pageSize;\n  }\n\n  checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n    (user as any).checked = select == null ? !(user as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n\n    const filteredUsers = this.searchPipe.transform(\n      this.users,\n      this.searchText,\n      \"name\",\n      \"email\",\n      \"id\"\n    );\n\n    const selectCount =\n      select && filteredUsers.length > MaxCheckedCount ? MaxCheckedCount : filteredUsers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkUser(filteredUsers[i], select);\n    }\n  }\n\n  async resetPaging() {\n    this.pagedUsers = [];\n    this.loadMore();\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  protected async removeUserConfirmationDialog(user: UserType) {\n    return this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(user),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  async remove(user: UserType) {\n    const confirmed = await this.removeUserConfirmationDialog(user);\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.deleteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(user))\n      );\n      this.removeUser(user);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async revoke(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.revokeWarningMessage(),\n      this.i18nService.t(\"revokeUserId\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.revokeUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(user: UserType) {\n    this.actionPromise = this.restoreUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async reinvite(user: UserType) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    this.actionPromise = this.reinviteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"hasBeenReinvited\", this.userNamePipe.transform(user))\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async confirm(user: UserType) {\n    function updateUser(self: BasePeopleComponent<UserType>) {\n      user.status = self.userStatusType.Confirmed;\n      const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n      if (mapIndex > -1) {\n        self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n        self.statusMap.get(self.userStatusType.Confirmed).push(user);\n      }\n    }\n\n    const confirmUser = async (publicKey: Uint8Array) => {\n      try {\n        this.actionPromise = this.confirmUser(user, publicKey);\n        await this.actionPromise;\n        updateUser(this);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(user))\n        );\n      } catch (e) {\n        this.validationService.showError(e);\n        throw e;\n      } finally {\n        this.actionPromise = null;\n      }\n    };\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n      if (autoConfirm == null || !autoConfirm) {\n        const [modal] = await this.modalService.openViewRef(\n          UserConfirmComponent,\n          this.confirmModalRef,\n          (comp) => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.userId = user != null ? user.userId : null;\n            comp.publicKey = publicKey;\n            comp.onConfirmedUser.subscribe(async () => {\n              try {\n                comp.formPromise = confirmUser(publicKey);\n                await comp.formPromise;\n                modal.close();\n              } catch (e) {\n                this.logService.error(e);\n              }\n            });\n          }\n        );\n        return;\n      }\n\n      try {\n        const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n        this.logService.info(`User's fingerprint: ${fingerprint.join(\"-\")}`);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      await confirmUser(publicKey);\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.users && this.users.length > this.pageSize;\n  }\n\n  protected revokeWarningMessage(): string {\n    return this.i18nService.t(\"revokeUserConfirmation\");\n  }\n\n  protected getCheckedUsers() {\n    return this.users.filter((u) => (u as any).checked);\n  }\n\n  protected removeUser(user: UserType) {\n    let index = this.users.indexOf(user);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      this.resetPaging();\n    }\n    if (this.statusMap.has(user.status)) {\n      index = this.statusMap.get(user.status).indexOf(user);\n      if (index > -1) {\n        this.statusMap.get(user.status).splice(index, 1);\n      }\n    }\n  }\n}\n","type OrganizationUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n  keys: OrganizationUserBulkRequestEntry[];\n\n  constructor(keys: OrganizationUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"confirmUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!loading && !done\">\n          <p>\n            {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n            <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n              {{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"fingerprint\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ fingerprints.get(user.id) }}\n              </td>\n            </tr>\n            <tr *ngFor=\"let user of excludedUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"!loading && done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { OrganizationUserBulkConfirmRequest } from \"@bitwarden/common/models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-confirm\",\n  templateUrl: \"bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent implements OnInit {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  excludedUsers: BulkUserDetails[];\n  filteredUsers: BulkUserDetails[];\n  publicKeys: Map<string, Uint8Array> = new Map();\n  fingerprints: Map<string, string> = new Map();\n  statuses: Map<string, string> = new Map();\n\n  loading = true;\n  done = false;\n  error: string;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.excludedUsers = this.users.filter((u) => !this.isAccepted(u));\n    this.filteredUsers = this.users.filter((u) => this.isAccepted(u));\n\n    if (this.filteredUsers.length <= 0) {\n      this.done = true;\n    }\n\n    const response = await this.getPublicKeys();\n\n    for (const entry of response.data) {\n      const publicKey = Utils.fromB64ToArray(entry.key);\n      const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n      if (fingerprint != null) {\n        this.publicKeys.set(entry.id, publicKey);\n        this.fingerprints.set(entry.id, fingerprint.join(\"-\"));\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const key = await this.getCryptoKey();\n      const userIdsWithKeys: any[] = [];\n      for (const user of this.filteredUsers) {\n        const publicKey = this.publicKeys.get(user.id);\n        if (publicKey == null) {\n          continue;\n        }\n        const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n        userIdsWithKeys.push({\n          id: user.id,\n          key: encryptedKey.encryptedString,\n        });\n      }\n      const response = await this.postConfirmRequest(userIdsWithKeys);\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkConfirmMessage\");\n        this.statuses.set(entry.id, error);\n      });\n\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n    this.loading = false;\n  }\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === OrganizationUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new OrganizationUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postOrganizationUsersPublicKey(this.organizationId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getOrgKey(this.organizationId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postOrganizationUserBulkConfirm(this.organizationId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"removeUsers\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\">\n            {{ removeUsersWarning }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"removeUsers\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-remove\",\n  templateUrl: \"bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(protected apiService: ApiService, protected i18nService: I18nService) {}\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.deleteUsers();\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkRemovedMessage\");\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async deleteUsers() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyOrganizationUsers(this.organizationId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeOrgUsersConfirmation\");\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ bulkTitle }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error && isRevoking\">\n            {{ \"revokeUsersWarning\" | i18n }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <app-avatar\n                  [data]=\"user | userName\"\n                  [email]=\"user.email\"\n                  size=\"25\"\n                  [circle]=\"true\"\n                  [fontSize]=\"14\"\n                >\n                </app-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ bulkTitle }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-restore-revoke\",\n  templateUrl: \"bulk-restore-revoke.component.html\",\n})\nexport class BulkRestoreRevokeComponent {\n  isRevoking: boolean;\n  organizationId: string;\n  users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    config: ModalConfig\n  ) {\n    this.isRevoking = config.data.isRevoking;\n    this.organizationId = config.data.organizationId;\n    this.users = config.data.users;\n  }\n\n  get bulkTitle() {\n    const titleKey = this.isRevoking ? \"revokeUsers\" : \"restoreUsers\";\n    return this.i18nService.t(titleKey);\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.performBulkUserAction();\n\n      const bulkMessage = this.isRevoking ? \"bulkRevokedMessage\" : \"bulkRestoredMessage\";\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(bulkMessage);\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async performBulkUserAction() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    if (this.isRevoking) {\n      return await this.apiService.revokeManyOrganizationUsers(this.organizationId, request);\n    } else {\n      return await this.apiService.restoreManyOrganizationUsers(this.organizationId, request);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"bulkConfirmStatus\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              <th>{{ \"status\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tr *ngFor=\"let item of users\">\n            <td width=\"30\">\n              <app-avatar\n                [data]=\"item.user | userName\"\n                [email]=\"item.user.email\"\n                size=\"25\"\n                [circle]=\"true\"\n                [fontSize]=\"14\"\n              ></app-avatar>\n            </td>\n            <td>\n              {{ item.user.email }}\n              <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{ item.user.name }}</small>\n            </td>\n            <td class=\"text-danger\" *ngIf=\"item.error\">\n              {{ item.message }}\n            </td>\n            <td *ngIf=\"!item.error\">\n              {{ item.message }}\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\n\nexport interface BulkUserDetails {\n  id: string;\n  name: string;\n  email: string;\n  status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n  user: BulkUserDetails;\n  error: boolean;\n  message: string;\n};\n\n@Component({\n  selector: \"app-bulk-status\",\n  templateUrl: \"bulk-status.component.html\",\n})\nexport class BulkStatusComponent {\n  users: BulkStatusEntry[];\n  loading = false;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"eventLogsTitle\">\n          {{ \"eventLogs\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loaded\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loaded\">\n        <div class=\"d-flex\">\n          <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"start\"\n              placeholder=\"{{ 'startDate' | i18n }}\"\n              [(ngModel)]=\"start\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"end\"\n              placeholder=\"{{ 'endDate' | i18n }}\"\n              [(ngModel)]=\"end\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n          </div>\n          <button\n            #refreshBtn\n            [appApiAction]=\"refreshPromise\"\n            type=\"button\"\n            class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\"\n            [disabled]=\"loaded && refreshBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-refresh bwi-fw\"\n              [ngClass]=\"{ 'bwi-spin': loaded && refreshBtn.loading }\"\n              aria-hidden=\"true\"\n            ></i>\n            {{ \"refresh\" | i18n }}\n          </button>\n        </div>\n        <hr />\n        <div *ngIf=\"!events || !events.length\">\n          {{ \"noEventsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n          <thead>\n            <tr>\n              <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n              <th class=\"border-top-0\" width=\"40\">\n                <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n              </th>\n              <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{ \"user\" | i18n }}</th>\n              <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let e of events\">\n              <td>{{ e.date | date: \"medium\" }}</td>\n              <td>\n                <i\n                  class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n                  title=\"{{ e.appName }}, {{ e.ip }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n              </td>\n              <td *ngIf=\"showUser\">\n                <span appA11yTitle=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n              </td>\n              <td [innerHTML]=\"e.message\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          #moreBtn\n          [appApiAction]=\"morePromise\"\n          type=\"button\"\n          class=\"btn btn-block btn-link btn-submit\"\n          (click)=\"loadEvents(false)\"\n          [disabled]=\"loaded && moreBtn.loading\"\n          *ngIf=\"continuationToken\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"loadMore\" | i18n }}</span>\n        </button>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\n\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-entity-events\",\n  templateUrl: \"entity-events.component.html\",\n})\nexport class EntityEventsComponent implements OnInit {\n  @Input() name: string;\n  @Input() entity: \"user\" | \"cipher\";\n  @Input() entityId: string;\n  @Input() organizationId: string;\n  @Input() providerId: string;\n  @Input() showUser = false;\n\n  loading = true;\n  loaded = false;\n  events: any[];\n  start: string;\n  end: string;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private orgUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private eventService: EventService,\n    private platformUtilsService: PlatformUtilsService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n    await this.load();\n  }\n\n  async load() {\n    if (this.showUser) {\n      const response = await this.apiService.getOrganizationUsers(this.organizationId);\n      response.data.forEach((u) => {\n        const name = this.userNamePipe.transform(u);\n        this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n        this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n      });\n    }\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.refreshPromise != null || this.morePromise != null) {\n      return;\n    }\n\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return;\n    }\n\n    this.loading = true;\n    let response: ListResponse<EventResponse>;\n    try {\n      let promise: Promise<any>;\n      if (this.entity === \"user\" && this.providerId) {\n        promise = this.apiService.getEventsProviderUser(\n          this.providerId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else if (this.entity === \"user\") {\n        promise = this.apiService.getEventsOrganizationUser(\n          this.organizationId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else {\n        promise = this.apiService.getEventsCipher(\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      }\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      response = await promise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.continuationToken = response.continuationToken;\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user =\n          this.showUser && userId != null && this.orgUsersUserIdMap.has(userId)\n            ? this.orgUsersUserIdMap.get(userId)\n            : null;\n        return {\n          message: eventInfo.message,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.showUser ? this.i18nService.t(\"unknown\") : null,\n          userEmail: user != null ? user.email : this.showUser ? \"\" : null,\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        };\n      })\n    );\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"resetPasswordTitle\">\n          {{ \"resetPassword\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\"\n          >{{ \"resetPasswordLoggedOutWarning\" | i18n: loggedOutWarningName }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          enforcedPolicyMessage=\"{{ 'resetPasswordMasterPasswordPolicyInEffect' | i18n }}\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col form-group\">\n            <div class=\"d-flex\">\n              <label for=\"newPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"ml-auto d-flex\">\n                <a\n                  href=\"#\"\n                  class=\"d-block mr-2 bwi-icon-above-input\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                  (click)=\"generatePassword()\"\n                >\n                  <i class=\"bwi bwi-lg bwi-fw bwi-refresh\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n            </div>\n            <div class=\"input-group mb-1\">\n              <input\n                id=\"newPassword\"\n                class=\"form-control text-monospace\"\n                appAutofocus\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"NewPassword\"\n                [(ngModel)]=\"newPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                  (click)=\"copy(newPassword)\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n            <app-password-strength\n              [password]=\"newPassword\"\n              [email]=\"email\"\n              [showText]=\"true\"\n              (passwordStrengthResult)=\"getStrengthResult($event)\"\n            >\n            </app-password-strength>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \"@angular/core\";\nimport zxcvbn from \"zxcvbn\";\n\nimport { PasswordStrengthComponent } from \"@bitwarden/angular/shared/components/password-strength/password-strength.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { OrganizationUserResetPasswordRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordRequest\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordComponent implements OnInit {\n  @Input() name: string;\n  @Input() email: string;\n  @Input() id: string;\n  @Input() organizationId: string;\n  @Output() onPasswordReset = new EventEmitter();\n  @ViewChild(PasswordStrengthComponent) passwordStrengthComponent: PasswordStrengthComponent;\n\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  newPassword: string = null;\n  showPassword = false;\n  passwordStrengthResult: zxcvbn.ZXCVBNResult;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    private cryptoService: CryptoService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // Get Enforced Policy Options\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  get loggedOutWarningName() {\n    return this.name != null ? this.name : this.i18nService.t(\"thisUser\");\n  }\n\n  async generatePassword() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    this.newPassword = await this.passwordGenerationService.generatePassword(options);\n    this.passwordStrengthComponent.updatePasswordStrength(this.newPassword);\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"newPassword\").focus();\n  }\n\n  copy(value: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  async submit() {\n    // Validation\n    if (this.newPassword == null || this.newPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    if (this.newPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.newPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    if (this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n    try {\n      this.formPromise = this.apiService\n        .getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordDetailsError\"));\n          }\n\n          const kdfType = response.kdf;\n          const kdfIterations = response.kdfIterations;\n          const resetPasswordKey = response.resetPasswordKey;\n          const encryptedPrivateKey = response.encryptedPrivateKey;\n\n          // Decrypt Organization's encrypted Private Key with org key\n          const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n          const decPrivateKey = await this.cryptoService.decryptToBytes(\n            new EncString(encryptedPrivateKey),\n            orgSymKey\n          );\n\n          // Decrypt User's Reset Password Key to get EncKey\n          const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n          const userEncKey = new SymmetricCryptoKey(decValue);\n\n          // Create new key and hash new password\n          const newKey = await this.cryptoService.makeKey(\n            this.newPassword,\n            this.email.trim().toLowerCase(),\n            kdfType,\n            kdfIterations\n          );\n          const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n          // Create new encKey for the User\n          const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n          // Create request\n          const request = new OrganizationUserResetPasswordRequest();\n          request.key = newEncKey[1].encryptedString;\n          request.newMasterPasswordHash = newPasswordHash;\n\n          // Change user's password\n          return this.apiService.putOrganizationUserResetPassword(\n            this.organizationId,\n            this.id,\n            request\n          );\n        });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"resetPasswordSuccess\")\n      );\n      this.onPasswordReset.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  getStrengthResult(result: zxcvbn.ZXCVBNResult) {\n    this.passwordStrengthResult = result;\n  }\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserInviteRequest {\n  emails: string[] = [];\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class OrganizationUserUpdateRequest {\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","<div class=\"form-group mb-0\">\n  <div class=\"form-check mt-1 form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [name]=\"pascalize(parentId)\"\n      [id]=\"parentId\"\n      [(ngModel)]=\"parentChecked\"\n      [indeterminate]=\"parentIndeterminate\"\n    />\n    <label class=\"form-check-label font-weight-normal\" [for]=\"parentId\">\n      {{ parentId | i18n }}\n    </label>\n  </div>\n  <div class=\"form-group form-group-child-check mb-0\">\n    <div class=\"form-check mt-1\" *ngFor=\"let c of checkboxes\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        [name]=\"pascalize(c.id)\"\n        [id]=\"c.id\"\n        [ngModel]=\"c.get()\"\n        (ngModelChange)=\"c.set($event)\"\n      />\n      <label class=\"form-check-label font-weight-normal\" [for]=\"c.id\">\n        {{ c.id | i18n }}\n      </label>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-nested-checkbox\",\n  templateUrl: \"nested-checkbox.component.html\",\n})\nexport class NestedCheckboxComponent {\n  @Input() parentId: string;\n  @Input() checkboxes: { id: string; get: () => boolean; set: (v: boolean) => void }[];\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  get parentIndeterminate() {\n    return !this.parentChecked && this.checkboxes.some((c) => c.get());\n  }\n\n  get parentChecked() {\n    return this.checkboxes.every((c) => c.get());\n  }\n\n  set parentChecked(value: boolean) {\n    this.checkboxes.forEach((c) => {\n      c.set(value);\n    });\n  }\n\n  pascalize(s: string) {\n    return Utils.camelToPascalCase(s);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n          <span bitBadge badgeType=\"secondary\" *ngIf=\"isRevoked\">{{ \"revoked\" | i18n }}</span>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/user-types-access-control/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeUser\"\n            [value]=\"organizationUserType.User\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeUser\">\n            {{ \"user\" | i18n }}\n            <small>{{ \"userDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeManager\"\n            [value]=\"organizationUserType.Manager\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeManager\">\n            {{ \"manager\" | i18n }}\n            <small>{{ \"managerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeAdmin\"\n            [value]=\"organizationUserType.Admin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeAdmin\">\n            {{ \"admin\" | i18n }}\n            <small>{{ \"adminDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeOwner\"\n            [value]=\"organizationUserType.Owner\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeOwner\">\n            {{ \"owner\" | i18n }}\n            <small>{{ \"ownerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeCustom\"\n            [value]=\"organizationUserType.Custom\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeCustom\">\n            {{ \"custom\" | i18n }}\n            <small>{{ \"customDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <ng-container *ngIf=\"customUserTypeSelected\">\n          <h3 class=\"mt-4 d-flex\">\n            {{ \"permissions\" | i18n }}\n          </h3>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Manager Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <app-nested-checkbox\n                  parentId=\"manageAssignedCollections\"\n                  [checkboxes]=\"manageAssignedCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">Admin Permissions</label>\n                <hr class=\"my-0 mr-2\" />\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessEventLogs\"\n                      id=\"accessEventLogs\"\n                      [(ngModel)]=\"permissions.accessEventLogs\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\">\n                      {{ \"accessEventLogs\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessImportExport\"\n                      id=\"accessImportExport\"\n                      [(ngModel)]=\"permissions.accessImportExport\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\">\n                      {{ \"accessImportExport\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessReports\"\n                      id=\"accessReports\"\n                      [(ngModel)]=\"permissions.accessReports\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessReports\">\n                      {{ \"accessReports\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <app-nested-checkbox\n                  parentId=\"manageAllCollections\"\n                  [checkboxes]=\"manageAllCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageGroups\"\n                      id=\"manageGroups\"\n                      [(ngModel)]=\"permissions.manageGroups\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\">\n                      {{ \"manageGroups\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageSso\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.manageSso\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageSso\">\n                      {{ \"manageSso\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"managePolicies\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.managePolicies\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\">\n                      {{ \"managePolicies\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageUsers\"\n                      id=\"manageUsers\"\n                      [(ngModel)]=\"permissions.manageUsers\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\">\n                      {{ \"manageUsers\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageResetPassword\"\n                      id=\"manageResetPassword\"\n                      [(ngModel)]=\"permissions.manageResetPassword\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\">\n                      {{ \"manageResetPassword\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-3\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"userAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"userAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"restore()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"restoreAccess\" | i18n }}</span>\n          </button>\n          <button\n            type=\"button\"\n            (click)=\"revoke()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && !isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"revokeAccess\" | i18n }}</span>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissionsApi\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collectionData\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { OrganizationUserInviteRequest } from \"@bitwarden/common/models/request/organizationUserInviteRequest\";\nimport { OrganizationUserUpdateRequest } from \"@bitwarden/common/models/request/organizationUserUpdateRequest\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selectionReadOnlyRequest\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collectionResponse\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Input() usesKeyConnector = false;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n  @Output() onRevokedUser = new EventEmitter();\n  @Output() onRestoredUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  isRevoked = false;\n  title: string;\n  emails: string;\n  type: OrganizationUserType = OrganizationUserType.User;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  organizationUserType = OrganizationUserType;\n\n  manageAllCollectionsCheckboxes = [\n    {\n      id: \"createNewCollections\",\n      get: () => this.permissions.createNewCollections,\n      set: (v: boolean) => (this.permissions.createNewCollections = v),\n    },\n    {\n      id: \"editAnyCollection\",\n      get: () => this.permissions.editAnyCollection,\n      set: (v: boolean) => (this.permissions.editAnyCollection = v),\n    },\n    {\n      id: \"deleteAnyCollection\",\n      get: () => this.permissions.deleteAnyCollection,\n      set: (v: boolean) => (this.permissions.deleteAnyCollection = v),\n    },\n  ];\n\n  manageAssignedCollectionsCheckboxes = [\n    {\n      id: \"editAssignedCollections\",\n      get: () => this.permissions.editAssignedCollections,\n      set: (v: boolean) => (this.permissions.editAssignedCollections = v),\n    },\n    {\n      id: \"deleteAssignedCollections\",\n      get: () => this.permissions.deleteAssignedCollections,\n      set: (v: boolean) => (this.permissions.deleteAssignedCollections = v),\n    },\n  ];\n\n  get customUserTypeSelected(): boolean {\n    return this.type === OrganizationUserType.Custom;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.organizationUserId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getOrganizationUser(\n          this.organizationId,\n          this.organizationUserId\n        );\n        this.access = user.accessAll ? \"all\" : \"selected\";\n        this.type = user.type;\n        this.isRevoked = user.status === OrganizationUserStatusType.Revoked;\n        if (user.type === OrganizationUserType.Custom) {\n          this.permissions = user.permissions;\n        }\n        if (user.collections != null && this.collections != null) {\n          user.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n    Object.assign(p, clearPermissions ? new PermissionsApi() : this.permissions);\n    return p;\n  }\n\n  handleDependentPermissions() {\n    // Manage Password Reset must have Manage Users enabled\n    if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n      this.permissions.manageUsers = true;\n      (document.getElementById(\"manageUsers\") as HTMLInputElement).checked = true;\n      this.platformUtilsService.showToast(\n        \"info\",\n        null,\n        this.i18nService.t(\"resetPasswordManageUsers\")\n      );\n    }\n  }\n\n  async submit() {\n    let collections: SelectionReadOnlyRequest[] = null;\n    if (this.access !== \"all\") {\n      collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        const request = new OrganizationUserUpdateRequest();\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.collections = collections;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        this.formPromise = this.apiService.putOrganizationUser(\n          this.organizationId,\n          this.organizationUserId,\n          request\n        );\n      } else {\n        const request = new OrganizationUserInviteRequest();\n        request.emails = [...new Set(this.emails.trim().split(/\\s*,\\s*/))];\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        request.collections = collections;\n        this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const message = this.usesKeyConnector\n      ? \"removeUserConfirmationKeyConnector\"\n      : \"removeOrgUserConfirmation\";\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(message),\n      this.i18nService.t(\"removeUserIdAccess\", this.name),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async revoke() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeUserConfirmation\"),\n      this.i18nService.t(\"revokeUserId\", this.name),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.apiService.revokeOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.name)\n      );\n      this.isRevoked = true;\n      this.onRevokedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async restore() {\n    if (!this.editMode) {\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.restoreOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.name)\n      );\n      this.isRevoked = false;\n      this.onRestoredUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class OrganizationUserUpdateGroupsRequest {\n  groupIds: string[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"groupAccessTitle\">\n          {{ \"groupAccess\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <p>{{ \"groupAccessUserDesc\" | i18n }}</p>\n        <div *ngIf=\"!groups || !groups.length\">\n          {{ \"noGroupsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n          <tbody>\n            <tr *ngFor=\"let g of groups; let i = index\">\n              <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"g.checked\"\n                  name=\"Groups[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td (click)=\"check(g)\">\n                {{ g.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { OrganizationUserUpdateGroupsRequest } from \"@bitwarden/common/models/request/organizationUserUpdateGroupsRequest\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/groupResponse\";\n\n@Component({\n  selector: \"app-user-groups\",\n  templateUrl: \"user-groups.component.html\",\n})\nexport class UserGroupsComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Output() onSavedUser = new EventEmitter();\n\n  loading = true;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const groupsResponse = await this.apiService.getGroups(this.organizationId);\n    const groups = groupsResponse.data.map((r) => r);\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n\n    try {\n      const userGroups = await this.apiService.getOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId\n      );\n      if (userGroups != null && this.groups != null) {\n        userGroups.forEach((ug) => {\n          const group = this.groups.filter((g) => g.id === ug);\n          if (group != null && group.length > 0) {\n            (group[0] as any).checked = true;\n          }\n        });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    const request = new OrganizationUserUpdateGroupsRequest();\n    request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\n\n    try {\n      this.formPromise = this.apiService.putOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedGroupsForUser\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"mt-2 d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Revoked }\"\n        (click)=\"filter(userStatusType.Revoked)\"\n      >\n        {{ \"revoked\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"revokedCount\">{{ revokedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkRestore()\">\n          <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n          {{ \"restoreAccess\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkRevoke()\">\n          <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n          {{ \"revokeAccess\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"usersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Revoked\">{{\n              \"revoked\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"showEnrolledStatus(u)\">\n              <i\n                class=\"bwi bwi-key\"\n                title=\"{{ 'enrolledPasswordReset' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"enrolledPasswordReset\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.Owner\">{{ \"owner\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Admin\">{{ \"admin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Manager\">{{ \"manager\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.User\">{{ \"user\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"resetPassword(u)\"\n                  *ngIf=\"allowResetPassword(u)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n                  {{ \"resetPassword\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"restore(u)\"\n                  *ngIf=\"u.status === userStatusType.Revoked\"\n                >\n                  <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"restoreAccess\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"revoke(u)\"\n                  *ngIf=\"u.status !== userStatusType.Revoked\"\n                >\n                  <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"revokeAccess\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #groupsTemplate></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #resetPasswordTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"@bitwarden/common/models/request/organizationUserConfirmRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { OrganizationUserBulkResponse } from \"@bitwarden/common/models/response/organizationUserBulkResponse\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organizationUserResponse\";\n\nimport { BasePeopleComponent } from \"../../common/base.people.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent } from \"./bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent } from \"./bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"./entity-events.component\";\nimport { ResetPasswordComponent } from \"./reset-password.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\nimport { UserGroupsComponent } from \"./user-groups.component\";\n\n@Component({\n  selector: \"app-org-people\",\n  templateUrl: \"people.component.html\",\n})\nexport class PeopleComponent\n  extends BasePeopleComponent<OrganizationUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n  @ViewChild(\"resetPasswordTemplate\", { read: ViewContainerRef, static: true })\n  resetPasswordModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = OrganizationUserType;\n  userStatusType = OrganizationUserStatusType;\n\n  organizationId: string;\n  status: OrganizationUserStatusType = null;\n  accessEvents = false;\n  accessGroups = false;\n  canResetPassword = false; // User permission (admin/custom)\n  orgUseResetPassword = false; // Org plan ability\n  orgHasKeys = false; // Org public/private keys\n  orgResetPasswordPolicyEnabled = false;\n  callingUserType: OrganizationUserType = null;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    private syncService: SyncService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      const organization = await this.organizationService.get(this.organizationId);\n      this.accessEvents = organization.useEvents;\n      this.accessGroups = organization.useGroups;\n      this.canResetPassword = organization.canManageUsersPassword;\n      this.orgUseResetPassword = organization.useResetPassword;\n      this.callingUserType = organization.type;\n      this.orgHasKeys = organization.hasPublicAndPrivateKeys;\n\n      // Backfill pub/priv key if necessary\n      if (this.canResetPassword && !this.orgHasKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n        const response = await this.organizationApiService.updateKeys(this.organizationId, request);\n        if (response != null) {\n          this.orgHasKeys = response.publicKey != null && response.privateKey != null;\n          await this.syncService.fullSync(true); // Replace oganizations with new data\n        } else {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n      }\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const resetPasswordPolicy = await this.policyApiService.getPolicyForOrganization(\n      PolicyType.ResetPassword,\n      this.organizationId\n    );\n    this.orgResetPasswordPolicyEnabled = resetPasswordPolicy?.enabled;\n    super.load();\n  }\n\n  getUsers(): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    return this.apiService.getOrganizationUsers(this.organizationId);\n  }\n\n  deleteUser(id: string): Promise<void> {\n    return this.apiService.deleteOrganizationUser(this.organizationId, id);\n  }\n\n  revokeUser(id: string): Promise<void> {\n    return this.apiService.revokeOrganizationUser(this.organizationId, id);\n  }\n\n  restoreUser(id: string): Promise<void> {\n    return this.apiService.restoreOrganizationUser(this.organizationId, id);\n  }\n\n  reinviteUser(id: string): Promise<void> {\n    return this.apiService.postOrganizationUserReinvite(this.organizationId, id);\n  }\n\n  async confirmUser(\n    user: OrganizationUserUserDetailsResponse,\n    publicKey: Uint8Array\n  ): Promise<void> {\n    const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n    const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n    const request = new OrganizationUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n  }\n\n  allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    // Hierarchy check\n    let callingUserHasPermission = false;\n\n    switch (this.callingUserType) {\n      case OrganizationUserType.Owner:\n        callingUserHasPermission = true;\n        break;\n      case OrganizationUserType.Admin:\n        callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n        break;\n      case OrganizationUserType.Custom:\n        callingUserHasPermission =\n          orgUser.type !== OrganizationUserType.Owner &&\n          orgUser.type !== OrganizationUserType.Admin;\n        break;\n    }\n\n    // Final\n    return (\n      this.canResetPassword &&\n      callingUserHasPermission &&\n      this.orgUseResetPassword &&\n      this.orgHasKeys &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled &&\n      orgUser.status === OrganizationUserStatusType.Confirmed\n    );\n  }\n\n  showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    return (\n      this.orgUseResetPassword &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled\n    );\n  }\n\n  async edit(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.usesKeyConnector = user?.usesKeyConnector;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n        comp.onRevokedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onRestoredUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  async groups(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserGroupsComponent,\n      this.groupsModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkRevoke() {\n    await this.bulkRevokeOrRestore(true);\n  }\n\n  async bulkRestore() {\n    await this.bulkRevokeOrRestore(false);\n  }\n\n  async bulkRevokeOrRestore(isRevoking: boolean) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const ref = this.modalService.open(BulkRestoreRevokeComponent, {\n      allowMultipleModals: true,\n      data: {\n        organizationId: this.organizationId,\n        users: this.getCheckedUsers(),\n        isRevoking: isRevoking,\n      },\n    });\n\n    await ref.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === OrganizationUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new OrganizationUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyOrganizationUserReinvite(\n        this.organizationId,\n        request\n      );\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async events(user: OrganizationUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.organizationId = this.organizationId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async resetPassword(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      ResetPasswordComponent,\n      this.resetPasswordModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.email = user != null ? user.email : null;\n        comp.organizationId = this.organizationId;\n        comp.id = user != null ? user.id : null;\n\n        comp.onPasswordReset.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  protected async removeUserConfirmationDialog(user: OrganizationUserUserDetailsResponse) {\n    const warningMessage = user.usesKeyConnector\n      ? this.i18nService.t(\"removeUserConfirmationKeyConnector\")\n      : this.i18nService.t(\"removeOrgUserConfirmation\");\n\n    return this.platformUtilsService.showDialog(\n      warningMessage,\n      this.i18nService.t(\"removeUserIdAccess\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  private async showBulkStatus(\n    users: OrganizationUserUserDetailsResponse[],\n    filteredUsers: OrganizationUserUserDetailsResponse[],\n    request: Promise<ListResponse<OrganizationUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyRequest {\n  type: PolicyType;\n  enabled: boolean;\n  data: any;\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport abstract class BasePolicy {\n  abstract name: string;\n  abstract description: string;\n  abstract type: PolicyType;\n  abstract component: any;\n\n  display(organization: Organization) {\n    return true;\n  }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n  @Input() policyResponse: PolicyResponse;\n  @Input() policy: BasePolicy;\n\n  enabled = new UntypedFormControl(false);\n  data: UntypedFormGroup = null;\n\n  ngOnInit(): void {\n    this.enabled.setValue(this.policyResponse.enabled);\n\n    if (this.policyResponse.data != null) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.data.patchValue(this.policyResponse.data ?? {});\n  }\n\n  buildRequestData() {\n    if (this.data != null) {\n      return this.data.value;\n    }\n\n    return null;\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n    const request = new PolicyRequest();\n    request.enabled = this.enabled.value;\n    request.type = this.policy.type;\n    request.data = this.buildRequestData();\n\n    return Promise.resolve(request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"policiesEditTitle\">\n          {{ \"editPolicy\" | i18n }} - {{ policy.name | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-body\" *ngIf=\"loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div [hidden]=\"loading\">\n          <p>{{ policy.description | i18n }}</p>\n          <ng-template #policyForm></ng-template>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { BasePolicy, BasePolicyComponent } from \"../policies/base-policy.component\";\n\n@Component({\n  selector: \"app-policy-edit\",\n  templateUrl: \"policy-edit.component.html\",\n})\nexport class PolicyEditComponent {\n  @Input() policy: BasePolicy;\n  @Input() organizationId: string;\n  @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n  @Output() onSavedPolicy = new EventEmitter();\n\n  @ViewChild(\"policyForm\", { read: ViewContainerRef, static: true })\n  policyFormRef: ViewContainerRef;\n\n  policyType = PolicyType;\n  loading = true;\n  enabled = false;\n  formPromise: Promise<any>;\n  defaultTypes: any[];\n  policyComponent: BasePolicyComponent;\n\n  private policyResponse: PolicyResponse;\n\n  constructor(\n    private policyApiService: PolicyApiServiceAbstraction,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private logService: LogService\n  ) {}\n\n  async ngAfterViewInit() {\n    await this.load();\n    this.loading = false;\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n    this.policyComponent = this.policyFormRef.createComponent(factory)\n      .instance as BasePolicyComponent;\n    this.policyComponent.policy = this.policy;\n    this.policyComponent.policyResponse = this.policyResponse;\n\n    this.cdr.detectChanges();\n  }\n\n  async load() {\n    try {\n      this.policyResponse = await this.policyApiService.getPolicy(\n        this.organizationId,\n        this.policy.type\n      );\n    } catch (e) {\n      if (e.statusCode === 404) {\n        this.policyResponse = new PolicyResponse({ Enabled: false });\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async submit() {\n    let request: PolicyRequest;\n    try {\n      request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.policyApiService.putPolicy(\n        this.organizationId,\n        this.policy.type,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedPolicyId\", this.i18nService.t(this.policy.name))\n      );\n      this.onSavedPolicy.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"policies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n  <tbody>\n    <tr *ngFor=\"let p of policies\">\n      <td *ngIf=\"p.display(organization)\">\n        <a href=\"#\" appStopClick (click)=\"edit(p)\">{{ p.name | i18n }}</a>\n        <span bitBadge badgeType=\"success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{\n          \"on\" | i18n\n        }}</span>\n        <small class=\"text-muted d-block\">{{ p.description | i18n }}</small>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nimport { PolicyListService } from \"../../core\";\nimport { BasePolicy } from \"../policies/base-policy.component\";\n\nimport { PolicyEditComponent } from \"./policy-edit.component\";\n\n@Component({\n  selector: \"app-org-policies\",\n  templateUrl: \"policies.component.html\",\n})\nexport class PoliciesComponent implements OnInit {\n  @ViewChild(\"editTemplate\", { read: ViewContainerRef, static: true })\n  editModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  policies: BasePolicy[];\n  organization: Organization;\n\n  private orgPolicies: PolicyResponse[];\n  private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyListService: PolicyListService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      this.policies = this.policyListService.getPolicies();\n\n      await this.load();\n\n      // Handle policies component launch from Event message\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        if (qParams.policyId != null) {\n          const policyIdFromEvents: string = qParams.policyId;\n          for (const orgPolicy of this.orgPolicies) {\n            if (orgPolicy.id === policyIdFromEvents) {\n              for (let i = 0; i < this.policies.length; i++) {\n                if (this.policies[i].type === orgPolicy.type) {\n                  this.edit(this.policies[i]);\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.policyApiService.getPolicies(this.organizationId);\n    this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n    this.orgPolicies.forEach((op) => {\n      this.policiesEnabledMap.set(op.type, op.enabled);\n    });\n\n    this.loading = false;\n  }\n\n  async edit(policy: BasePolicy) {\n    const [modal] = await this.modalService.openViewRef(\n      PolicyEditComponent,\n      this.editModalRef,\n      (comp) => {\n        comp.policy = policy;\n        comp.organizationId = this.organizationId;\n        comp.policiesEnabledMap = this.policiesEnabledMap;\n        comp.onSavedPolicy.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n}\n","import { OrganizationKeysRequest } from \"./organizationKeysRequest\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  identifier: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"apiKeyTitle\">{{ apiKeyTitle | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ apiKeyDescription | i18n }}</p>\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n\n        <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{ apiKeyWarning | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          title=\"{{ 'oauth2ClientCredentials' | i18n }}\"\n          icon=\"bwi bwi-key\"\n          *ngIf=\"clientSecret\"\n        >\n          <p class=\"mb-1\">\n            <strong>client_id:</strong><br />\n            <code>{{ clientId }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>client_secret:</strong><br />\n            <code>{{ clientSecret }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>scope:</strong><br />\n            <code>{{ scope }}</code>\n          </p>\n          <p class=\"mb-0\">\n            <strong>grant_type:</strong><br />\n            <code>{{ grantType }}</code>\n          </p>\n        </app-callout>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (isRotation ? \"rotateApiKey\" : \"viewApiKey\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/apiKeyResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-api-key\",\n  templateUrl: \"api-key.component.html\",\n})\nexport class ApiKeyComponent {\n  keyType: string;\n  isRotation: boolean;\n  postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  entityId: string;\n  scope: string;\n  grantType: string;\n  apiKeyTitle: string;\n  apiKeyWarning: string;\n  apiKeyDescription: string;\n\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientId: string;\n  clientSecret: string;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.postKey(this.entityId, request));\n      const response = await this.formPromise;\n      this.clientSecret = response.apiKey;\n      this.clientId = `${this.keyType}.${this.entityId}`;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-purge-vault\",\n  templateUrl: \"purge-vault.component.html\",\n})\nexport class PurgeVaultComponent {\n  @Input() organizationId?: string = null;\n\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private router: Router,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postPurgeCiphers(request, this.organizationId));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"vaultPurged\"));\n      if (this.organizationId != null) {\n        this.router.navigate([\"organizations\", this.organizationId, \"vault\"]);\n      } else {\n        this.router.navigate([\"vault\"]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"purgeVaultTitle\">{{ \"purgeVault\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ (organizationId ? \"purgeOrgVaultDesc\" : \"purgeVaultDesc\") | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"purgeVaultWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"purgeVault\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      *ngIf=\"loaded\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{ \"deleteOrganization\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{\n          \"deletingOrganizationIsPermanentWarning\" | i18n: organizationName\n        }}</app-callout>\n        <p id=\"organizationDeleteDescription\">\n          <ng-container\n            *ngIf=\"\n              deleteOrganizationRequestType === 'InvalidFamiliesForEnterprise';\n              else regularDelete\n            \"\n          >\n            {{ \"orgCreatedSponsorshipInvalid\" | i18n }}\n          </ng-container>\n          <ng-template #regularDelete>\n            <ng-container *ngIf=\"organizationContentSummary.totalItemCount > 0\">\n              {{ \"deletingOrganizationContentWarning\" | i18n: organizationName }}\n              <ul>\n                <li *ngFor=\"let type of organizationContentSummary.itemCountByType\">\n                  {{ type.count }} {{ type.localizationKey | i18n }}\n                </li>\n              </ul>\n              {{ \"deletingOrganizationActiveUserAccountsWarning\" | i18n }}\n            </ng-container>\n          </ng-template>\n        </p>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteOrganization\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nclass CountBasedLocalizationKey {\n  singular: string;\n  plural: string;\n\n  getKey(count: number) {\n    return count == 1 ? this.singular : this.plural;\n  }\n\n  constructor(singular: string, plural: string) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n}\n\nclass OrganizationContentSummaryItem {\n  count: number;\n  get localizationKey(): string {\n    return this.localizationKeyOptions.getKey(this.count);\n  }\n  private localizationKeyOptions: CountBasedLocalizationKey;\n  constructor(count: number, localizationKeyOptions: CountBasedLocalizationKey) {\n    this.count = count;\n    this.localizationKeyOptions = localizationKeyOptions;\n  }\n}\n\nclass OrganizationContentSummary {\n  totalItemCount = 0;\n  itemCountByType: OrganizationContentSummaryItem[] = [];\n}\n\n@Component({\n  selector: \"app-delete-organization\",\n  templateUrl: \"delete-organization.component.html\",\n})\nexport class DeleteOrganizationComponent implements OnInit {\n  organizationId: string;\n  loaded: boolean;\n  deleteOrganizationRequestType: \"InvalidFamiliesForEnterprise\" | \"RegularDelete\" = \"RegularDelete\";\n  organizationName: string;\n  organizationContentSummary: OrganizationContentSummary = new OrganizationContentSummary();\n  @Output() onSuccess: EventEmitter<void> = new EventEmitter();\n\n  masterPassword: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private cipherService: CipherService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.load();\n  }\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.organizationApiService.delete(this.organizationId, request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"organizationDeleted\"),\n        this.i18nService.t(\"organizationDeletedDesc\")\n      );\n      this.onSuccess.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async load() {\n    this.organizationName = (await this.organizationService.get(this.organizationId)).name;\n    this.organizationContentSummary = await this.buildOrganizationContentSummary();\n    this.loaded = true;\n  }\n\n  private async buildOrganizationContentSummary(): Promise<OrganizationContentSummary> {\n    const organizationContentSummary = new OrganizationContentSummary();\n    const organizationItems = (\n      await this.cipherService.getAllFromApiForOrganization(this.organizationId)\n    ).filter((item) => item.deletedDate == null);\n\n    if (organizationItems.length < 1) {\n      return organizationContentSummary;\n    }\n\n    organizationContentSummary.totalItemCount = organizationItems.length;\n    for (const cipherType of Utils.iterateEnum(CipherType)) {\n      const count = this.getOrganizationItemCountByType(organizationItems, cipherType);\n      if (count > 0) {\n        organizationContentSummary.itemCountByType.push(\n          new OrganizationContentSummaryItem(\n            count,\n            this.getOrganizationItemLocalizationKeysByType(CipherType[cipherType])\n          )\n        );\n      }\n    }\n\n    return organizationContentSummary;\n  }\n\n  private getOrganizationItemCountByType(items: CipherView[], type: CipherType) {\n    return items.filter((item) => item.type == type).length;\n  }\n\n  private getOrganizationItemLocalizationKeysByType(type: string): CountBasedLocalizationKey {\n    return new CountBasedLocalizationKey(`type${type}`, `type${type}Plural`);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myOrganization\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"identifier\">{{ \"identifier\" | i18n }}</label>\n        <input\n          id=\"identifier\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Identifier\"\n          [(ngModel)]=\"org.identifier\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ org.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </bit-submit-button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header border-0 mb-0\">\n  <h1>{{ \"taxInformation\" | i18n }}</h1>\n</div>\n<p>{{ \"taxInformationDesc\" | i18n }}</p>\n<div *ngIf=\"!org || loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #formTax\n  (ngSubmit)=\"submitTaxInfo()\"\n  [appApiAction]=\"taxFormPromise\"\n  ngNativeValidate\n>\n  <app-tax-info></app-tax-info>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"formTax.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organizationKeysRequest\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/models/request/organizationUpdateRequest\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organizationResponse\";\n\nimport { ApiKeyComponent } from \"../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../settings/purge-vault.component\";\nimport { TaxInfoComponent } from \"../../settings/tax-info.component\";\n\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n  @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n  selfHosted = false;\n  canManageBilling = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<boolean>;\n  taxFormPromise: Promise<unknown>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.canManageBilling = (\n        await this.organizationService.get(this.organizationId)\n      ).canManageBilling;\n      try {\n        this.org = await this.organizationApiService.get(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n      request.identifier = this.org.identifier;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.organizationApiService.save(this.organizationId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submitTaxInfo() {\n    this.taxFormPromise = this.taxInfo.submitTaxInfo();\n    await this.taxFormPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"taxInfoUpdated\"));\n  }\n\n  async deleteOrganization() {\n    await this.modalService.openViewRef(\n      DeleteOrganizationComponent,\n      this.deleteModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.onSuccess.subscribe(() => {\n          this.router.navigate([\"/\"]);\n        });\n      }\n    );\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.getOrCreateApiKey.bind(\n        this.organizationApiService\n      );\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.rotateApiKey.bind(this.organizationApiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","export enum TransactionType {\n  Charge = 0,\n  Credit = 1,\n  PromotionalCredit = 2,\n  ReferralCredit = 3,\n  Refund = 4,\n}\n","export class VerifyBankRequest {\n  amount1: number;\n  amount2: number;\n}\n","export class BitPayInvoiceRequest {\n  userId: string;\n  organizationId: string;\n  credit: boolean;\n  amount: number;\n  returnUrl: string;\n  name: string;\n  email: string;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"addCredit\" | i18n }}</h3>\n    <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-paypal\"\n          [value]=\"paymentMethodType.PayPal\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-paypal\">\n          <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n        >\n      </div>\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-bitcoin\"\n          [value]=\"paymentMethodType.BitPay\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n          <i class=\"bwi bwi-fw bwi-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <label for=\"creditAmount\">{{ \"amount\" | i18n }}</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n            <input\n              id=\"creditAmount\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"CreditAmount\"\n              [(ngModel)]=\"creditAmount\"\n              (blur)=\"formatAmount()\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      <small class=\"form-text text-muted\">{{ \"creditDelayed\" | i18n }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n<form #ppButtonForm action=\"{{ ppButtonFormAction }}\" method=\"post\" target=\"_top\">\n  <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n  <input type=\"hidden\" name=\"business\" value=\"{{ ppButtonBusinessId }}\" />\n  <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n  <input type=\"hidden\" name=\"no_note\" value=\"1\" />\n  <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n  <input type=\"hidden\" name=\"rm\" value=\"1\" />\n  <input type=\"hidden\" name=\"return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"cancel_return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n  <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\" />\n  <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\" />\n  <input type=\"hidden\" name=\"amount\" value=\"{{ creditAmount }}\" />\n  <input type=\"hidden\" name=\"custom\" value=\"{{ ppButtonCustomField }}\" />\n  <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\" />\n  <input type=\"hidden\" name=\"item_number\" value=\"{{ subject }}\" />\n</form>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PayPalConfig } from \"@bitwarden/common/abstractions/environment.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BitPayInvoiceRequest } from \"@bitwarden/common/models/request/bitPayInvoiceRequest\";\n\n@Component({\n  selector: \"app-add-credit\",\n  templateUrl: \"add-credit.component.html\",\n})\nexport class AddCreditComponent implements OnInit {\n  @Input() creditAmount: string;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.PayPal;\n  @Input() organizationId: string;\n  @Output() onAdded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(\"ppButtonForm\", { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n  paymentMethodType = PaymentMethodType;\n  ppButtonFormAction: string;\n  ppButtonBusinessId: string;\n  ppButtonCustomField: string;\n  ppLoading = false;\n  subject: string;\n  returnUrl: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private name: string;\n  private email: string;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n    this.ppButtonFormAction = payPalConfig.buttonAction;\n    this.ppButtonBusinessId = payPalConfig.businessId;\n  }\n\n  async ngOnInit() {\n    if (this.organizationId != null) {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"20.00\";\n      }\n      this.ppButtonCustomField = \"organization_id:\" + this.organizationId;\n      const org = await this.organizationService.get(this.organizationId);\n      if (org != null) {\n        this.subject = org.name;\n        this.name = org.name;\n      }\n    } else {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"10.00\";\n      }\n      this.userId = await this.stateService.getUserId();\n      this.subject = await this.stateService.getEmail();\n      this.email = this.subject;\n      this.ppButtonCustomField = \"user_id:\" + this.userId;\n    }\n    this.ppButtonCustomField += \",account_credit:1\";\n    this.returnUrl = window.location.href;\n  }\n\n  async submit() {\n    if (this.creditAmount == null || this.creditAmount === \"\") {\n      return;\n    }\n\n    if (this.method === PaymentMethodType.PayPal) {\n      this.ppButtonFormRef.nativeElement.submit();\n      this.ppLoading = true;\n      return;\n    }\n    if (this.method === PaymentMethodType.BitPay) {\n      try {\n        const req = new BitPayInvoiceRequest();\n        req.email = this.email;\n        req.name = this.name;\n        req.credit = true;\n        req.amount = this.creditAmountNumber;\n        req.organizationId = this.organizationId;\n        req.userId = this.userId;\n        req.returnUrl = this.returnUrl;\n        this.formPromise = this.apiService.postBitPayInvoice(req);\n        const bitPayUrl: string = await this.formPromise;\n        this.platformUtilsService.launchUri(bitPayUrl);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      return;\n    }\n    try {\n      this.onAdded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  formatAmount() {\n    try {\n      if (this.creditAmount != null && this.creditAmount !== \"\") {\n        const floatAmount = Math.abs(parseFloat(this.creditAmount));\n        if (floatAmount > 0) {\n          this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n            .toFixed(2)\n            .toString();\n          return;\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.creditAmount = \"\";\n  }\n\n  get creditAmountNumber(): number {\n    if (this.creditAmount != null && this.creditAmount !== \"\") {\n      try {\n        return parseFloat(this.creditAmount);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return null;\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../request/organizationTaxInfoUpdateRequest\";\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n}\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PaymentRequest } from \"@bitwarden/common/models/request/paymentRequest\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-adjust-payment\",\n  templateUrl: \"adjust-payment.component.html\",\n})\nexport class AdjustPaymentComponent {\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n  @Input() currentType?: PaymentMethodType;\n  @Input() organizationId: string;\n  @Output() onAdjusted = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  paymentMethodType = PaymentMethodType;\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new PaymentRequest();\n      this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n        request.paymentToken = result[0];\n        request.paymentMethodType = result[1];\n        request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n        request.country = this.taxInfoComponent.taxInfo.country;\n        if (this.organizationId == null) {\n          return this.apiService.postAccountPayment(request);\n        } else {\n          request.taxId = this.taxInfoComponent.taxInfo.taxId;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          request.line1 = this.taxInfoComponent.taxInfo.line1;\n          request.line2 = this.taxInfoComponent.taxInfo.line2;\n          request.city = this.taxInfoComponent.taxInfo.city;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          return this.organizationApiService.updatePayment(this.organizationId, request);\n        }\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedPaymentMethod\")\n      );\n      this.onAdjusted.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  changeCountry() {\n    if (this.taxInfoComponent.taxInfo.country === \"US\") {\n      this.paymentComponent.hideBank = !this.organizationId;\n    } else {\n      this.paymentComponent.hideBank = true;\n      if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n        this.paymentComponent.method = PaymentMethodType.Card;\n        this.paymentComponent.changeMethod();\n      }\n    }\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">\n      {{ (currentType != null ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n    </h3>\n    <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"page-header d-flex\">\n  <h1>\n    {{ \"billing\" | i18n }}\n  </h1>\n  <button\n    (click)=\"load()\"\n    class=\"btn btn-sm btn-outline-primary ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"addCredit()\"\n    *ngIf=\"!showAddCredit\"\n  >\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    [organizationId]=\"organizationId\"\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <app-callout\n      type=\"warning\"\n      title=\"{{ 'verifyBankAccount' | i18n }}\"\n      *ngIf=\"\n        paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\n      \"\n    >\n      <p>{{ \"verifyBankAccountDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}</p>\n      <form\n        #verifyForm\n        class=\"form-inline\"\n        (ngSubmit)=\"verifyBank()\"\n        [appApiAction]=\"verifyBankPromise\"\n        ngNativeValidate\n      >\n        <label class=\"sr-only\" for=\"verifyAmount1\">{{ \"amount\" | i18n: \"1\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount1\"\n            placeholder=\"xx\"\n            name=\"Amount1\"\n            [(ngModel)]=\"verifyAmount1\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <label class=\"sr-only\" for=\"verifyAmount2\">{{ \"amount\" | i18n: \"2\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount2\"\n            placeholder=\"xx\"\n            name=\"Amount2\"\n            [(ngModel)]=\"verifyAmount2\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          class=\"btn btn-outline-primary btn-submit\"\n          [disabled]=\"verifyForm.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"verifyBankAccount\" | i18n }}</span>\n        </button>\n      </form>\n    </app-callout>\n    <p>\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-credit-card': paymentSource.type === paymentMethodType.Card,\n          'bwi-bank': paymentSource.type === paymentMethodType.BankAccount,\n          'bwi-money': paymentSource.type === paymentMethodType.Check,\n          'bwi-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n          'bwi-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n          'bwi-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp\n        }\"\n      ></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"changePayment()\"\n    *ngIf=\"!showAdjustPayment\"\n  >\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    [organizationId]=\"organizationId\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n  <h2 class=\"spaced-header\">{{ \"invoices\" | i18n }}</h2>\n  <p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n    <tbody>\n      <tr *ngFor=\"let i of invoices\">\n        <td>{{ i.date | date: \"mediumDate\" }}</td>\n        <td>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td>{{ i.amount | currency: \"$\" }}</td>\n        <td>\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n  <p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n    <tbody>\n      <tr *ngFor=\"let t of transactions\">\n        <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-credit-card': t.paymentMethodType === paymentMethodType.Card,\n              'bwi-bank':\n                t.paymentMethodType === paymentMethodType.BankAccount ||\n                t.paymentMethodType === paymentMethodType.WireTransfer,\n              'bwi-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n              'bwi-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n            }\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { VerifyBankRequest } from \"@bitwarden/common/models/request/verifyBankRequest\";\nimport { BillingResponse } from \"@bitwarden/common/models/response/billingResponse\";\n\n@Component({\n  selector: \"app-org-billing\",\n  templateUrl: \"./organization-billing.component.html\",\n})\nexport class OrganizationBillingComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingResponse;\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n  organizationId: string;\n  verifyAmount1: number;\n  verifyAmount2: number;\n\n  verifyBankPromise: Promise<void>;\n\n  // TODO - Make sure to properly split out the billing/invoice and payment method/account during org admin refresh\n\n  constructor(\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    if (this.organizationId != null) {\n      this.billing = await this.organizationApiService.getBilling(this.organizationId);\n    }\n    this.loading = false;\n  }\n\n  async verifyBank() {\n    if (this.loading) {\n      return;\n    }\n\n    try {\n      const request = new VerifyBankRequest();\n      request.amount1 = this.verifyAmount1;\n      request.amount2 = this.verifyAmount2;\n      this.verifyBankPromise = this.organizationApiService.verifyBank(this.organizationId, request);\n      await this.verifyBankPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"verifiedBankAccount\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n}\n","export enum OrganizationApiKeyType {\n  Default = 0,\n  BillingSync = 1,\n  Scim = 2,\n}\n","export enum OrganizationConnectionType {\n  CloudBillingSync = 1,\n  Scim = 2,\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class BillingSyncConfigApi extends BaseResponse {\n  billingSyncKey: string;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.billingSyncKey = this.getResponseProperty(\"BillingSyncKey\");\n  }\n}\n","export class BillingSyncConfigRequest {\n  constructor(private billingSyncKey: string) {}\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\n\nimport { BillingSyncConfigRequest } from \"./billingSyncConfigRequest\";\nimport { ScimConfigRequest } from \"./scimConfigRequest\";\n\n/**API request config types for OrganizationConnectionRequest */\nexport type OrganizationConnectionRequestConfigs = BillingSyncConfigRequest | ScimConfigRequest;\n\nexport class OrganizationConnectionRequest {\n  constructor(\n    public organizationId: string,\n    public type: OrganizationConnectionType,\n    public enabled: boolean,\n    public config: OrganizationConnectionRequestConfigs\n  ) {}\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/models/api/billingSyncConfigApi\";\nimport { BillingSyncConfigRequest } from \"@bitwarden/common/models/request/billingSyncConfigRequest\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organizationConnectionRequest\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organizationConnectionResponse\";\n\n@Component({\n  selector: \"app-billing-sync-key\",\n  templateUrl: \"billing-sync-key.component.html\",\n})\nexport class BillingSyncKeyComponent {\n  entityId: string;\n  existingConnectionId: string;\n  billingSyncKey: string;\n  setParentConnection: (connection: OrganizationConnectionResponse<BillingSyncConfigApi>) => void;\n\n  formPromise: Promise<OrganizationConnectionResponse<BillingSyncConfigApi>> | Promise<void>;\n\n  constructor(private apiService: ApiService, private logService: LogService) {}\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.entityId,\n        OrganizationConnectionType.CloudBillingSync,\n        true,\n        new BillingSyncConfigRequest(this.billingSyncKey)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(\n          request,\n          BillingSyncConfigApi\n        );\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          BillingSyncConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this\n        .formPromise) as OrganizationConnectionResponse<BillingSyncConfigApi>;\n      this.existingConnectionId = response?.id;\n      this.billingSyncKey = response?.config?.billingSyncKey;\n      this.setParentConnection(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteConnection() {\n    this.formPromise = this.apiService.deleteOrganizationConnection(this.existingConnectionId);\n    await this.formPromise;\n    this.setParentConnection(null);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"billingSyncTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"billingSyncTitle\">{{ \"manageBillingSync\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"billingSyncKeyDesc\" | i18n }}</p>\n        <div class=\"form-group\">\n          <label for=\"billingSyncKey\"\n            >{{ \"billingSyncKey\" | i18n }} <small>(</small><small>{{ \"required\" | i18n }}</small\n            ><small>)</small></label\n          >\n          <input\n            id=\"billingSyncKey\"\n            type=\"input\"\n            name=\"billingSyncKey\"\n            class=\"form-control\"\n            [(ngModel)]=\"billingSyncKey\"\n            required\n            appAutofocus\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"deleteConnection()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            [disabled]=\"form.loading\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"form.loading\" aria-hidden=\"true\"></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationApiKeyRequest extends SecretVerificationRequest {\n  type: OrganizationApiKeyType = OrganizationApiKeyType.Default;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"billingSyncApiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"billingSyncApiKeyTitle\">\n          {{ (hasBillingToken ? \"viewBillingSyncToken\" : \"generateBillingSyncToken\") | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n        <ng-container *ngIf=\"clientSecret && showRotateScreen\">\n          <p>{{ \"rotateBillingSyncTokenTitle\" | i18n }}</p>\n          <app-callout type=\"warning\">\n            {{ \"rotateBillingSyncTokenWarning\" | i18n }}\n          </app-callout>\n        </ng-container>\n\n        <div *ngIf=\"clientSecret && !showRotateScreen\">\n          <p>{{ \"copyPasteBillingSync\" | i18n }}</p>\n          <label for=\"clientSecret\">Billing Sync Key</label>\n          <div class=\"input-group\">\n            <input\n              id=\"clientSecret\"\n              class=\"form-control text-monospace\"\n              type=\"text\"\n              [(ngModel)]=\"clientSecret\"\n              name=\"clientSecret\"\n              disabled\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                (click)=\"copy()\"\n                [appA11yTitle]=\"'copy' | i18n\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"small text-muted mt-2\" *ngIf=\"showLastSyncText\">\n            <b class=\"font-weight-semibold\">{{ \"lastSync\" | i18n }}:</b>\n            {{ lastSyncDate | date: \"medium\" }}\n          </div>\n          <div class=\"small text-danger mt-2\" *ngIf=\"showAwaitingSyncText\">\n            <i class=\"bwi bwi-error\"></i>\n            {{\n              (daysBetween === 1 ? \"awaitingSyncSingular\" : \"awaitingSyncPlural\")\n                | i18n: daysBetween\n            }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret || showRotateScreen\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading\"\n          ></i>\n          <span>\n            {{ submitButtonText }}\n          </span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          data-dismiss=\"modal\"\n          *ngIf=\"!showRotateScreen\"\n        >\n          {{ \"close\" | i18n }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          *ngIf=\"showRotateScreen\"\n          (click)=\"cancelRotate()\"\n        >\n          {{ \"cancel\" | i18n }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          *ngIf=\"clientSecret && !showRotateScreen\"\n          (click)=\"rotateToken()\"\n        >\n          {{ \"rotateToken\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organizationApiKeyRequest\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/apiKeyResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-billing-sync-api-key\",\n  templateUrl: \"billing-sync-api-key.component.html\",\n})\nexport class BillingSyncApiKeyComponent {\n  organizationId: string;\n  hasBillingToken: boolean;\n\n  showRotateScreen: boolean;\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientSecret?: string;\n  keyRevisionDate?: Date;\n  lastSyncDate?: Date = null;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  copy() {\n    this.platformUtilsService.copyToClipboard(this.clientSecret);\n  }\n\n  async submit() {\n    if (this.showRotateScreen) {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword, OrganizationApiKeyRequest)\n        .then((request) => {\n          request.type = OrganizationApiKeyType.BillingSync;\n          return this.organizationApiService.rotateApiKey(this.organizationId, request);\n        });\n      const response = await this.formPromise;\n      await this.load(response);\n      this.showRotateScreen = false;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"billingSyncApiKeyRotated\")\n      );\n    } else {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword, OrganizationApiKeyRequest)\n        .then((request) => {\n          request.type = OrganizationApiKeyType.BillingSync;\n          return this.organizationApiService.getOrCreateApiKey(this.organizationId, request);\n        });\n      const response = await this.formPromise;\n      await this.load(response);\n    }\n  }\n\n  async load(response: ApiKeyResponse) {\n    this.clientSecret = response.apiKey;\n    this.keyRevisionDate = response.revisionDate;\n    this.hasBillingToken = true;\n    const syncStatus = await this.apiService.getSponsorshipSyncStatus(this.organizationId);\n    this.lastSyncDate = syncStatus.lastSyncDate;\n  }\n\n  cancelRotate() {\n    this.showRotateScreen = false;\n  }\n\n  rotateToken() {\n    this.showRotateScreen = true;\n  }\n\n  private dayDiff(date1: Date, date2: Date): number {\n    const diffTime = Math.abs(date2.getTime() - date1.getTime());\n    return Math.round(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  get submitButtonText(): string {\n    if (this.showRotateScreen) {\n      return this.i18nService.t(\"rotateToken\");\n    }\n\n    return this.i18nService.t(this.hasBillingToken ? \"continue\" : \"generateToken\");\n  }\n\n  get showLastSyncText(): boolean {\n    // If the keyRevisionDate is later than the lastSyncDate we need to show\n    // a warning that they need to put the billing sync key in their self hosted install\n    return this.lastSyncDate && this.lastSyncDate > this.keyRevisionDate;\n  }\n\n  get showAwaitingSyncText(): boolean {\n    return this.lastSyncDate && this.lastSyncDate <= this.keyRevisionDate;\n  }\n\n  get daysBetween(): number {\n    return this.dayDiff(this.keyRevisionDate, new Date());\n  }\n}\n","export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StroageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency: \"$\" }} = {{ adjustedStorageTotal | currency: \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StorageRequest } from \"@bitwarden/common/models/request/storageRequest\";\nimport { PaymentResponse } from \"@bitwarden/common/models/response/paymentResponse\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<PaymentResponse | void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.organizationApiService.updateStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","export class OrganizationSubscriptionUpdateRequest {\n  constructor(public seatAdjustment: number, public maxAutoscaleSeats?: number) {}\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationSubscriptionUpdateRequest } from \"@bitwarden/common/models/request/organizationSubscriptionUpdateRequest\";\n\n@Component({\n  selector: \"app-adjust-subscription\",\n  templateUrl: \"adjust-subscription.component.html\",\n})\nexport class AdjustSubscription {\n  @Input() organizationId: string;\n  @Input() maxAutoscaleSeats: number;\n  @Input() currentSeatCount: number;\n  @Input() seatPrice = 0;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter();\n\n  formPromise: Promise<void>;\n  limitSubscription: boolean;\n  newSeatCount: number;\n  newMaxSeats: number;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  ngOnInit() {\n    this.limitSubscription = this.maxAutoscaleSeats != null;\n    this.newSeatCount = this.currentSeatCount;\n    this.newMaxSeats = this.maxAutoscaleSeats;\n  }\n\n  async submit() {\n    try {\n      const seatAdjustment = this.newSeatCount - this.currentSeatCount;\n      const request = new OrganizationSubscriptionUpdateRequest(seatAdjustment, this.newMaxSeats);\n      this.formPromise = this.organizationApiService.updateSubscription(\n        this.organizationId,\n        request\n      );\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"subscriptionUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.onAdjusted.emit();\n  }\n\n  limitSubscriptionChanged() {\n    if (!this.limitSubscription) {\n      this.newMaxSeats = null;\n    }\n  }\n\n  get adjustedSeatTotal(): number {\n    return this.newSeatCount * this.seatPrice;\n  }\n\n  get maxSeatTotal(): number {\n    return this.newMaxSeats * this.seatPrice;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"newSeatCount\">{{ \"subscriptionSeats\" | i18n }}</label>\n        <input\n          id=\"newSeatCount\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"NewSeatCount\"\n          [(ngModel)]=\"newSeatCount\"\n          min=\"0\"\n          step=\"1\"\n          required\n        />\n        <small class=\"d-block text-muted mb-4\">\n          <strong>{{ \"total\" | i18n }}:</strong> {{ newSeatCount || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ adjustedSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <div class=\"row mb-4\">\n      <div class=\"form-group col-sm\">\n        <div class=\"form-check\">\n          <input\n            id=\"limitSubscription\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"LimitSubscription\"\n            [(ngModel)]=\"limitSubscription\"\n            (change)=\"limitSubscriptionChanged()\"\n          />\n          <label for=\"limitSubscription\">{{ \"limitSubscription\" | i18n }}</label>\n        </div>\n        <small class=\"d-block text-muted\">{{ \"limitSubscriptionDesc\" | i18n }}</small>\n      </div>\n    </div>\n    <div class=\"row mb-4\" [hidden]=\"!limitSubscription\">\n      <div class=\"form-group col-sm\">\n        <label for=\"maxAutoscaleSeats\">{{ \"maxSeatLimit\" | i18n }}</label>\n        <input\n          id=\"maxAutoscaleSeats\"\n          class=\"form-control col-6\"\n          type=\"number\"\n          name=\"MaxAutoscaleSeats\"\n          [(ngModel)]=\"newMaxSeats\"\n          [min]=\"newSeatCount == null ? 1 : newSeatCount\"\n          step=\"1\"\n          [required]=\"limitSubscription\"\n        />\n        <small class=\"d-block text-muted\">\n          <strong>{{ \"maxSeatCost\" | i18n }}:</strong> {{ newMaxSeats || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ maxSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"save\" | i18n }}</span>\n    </button>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\n@Component({\n  selector: \"app-change-plan\",\n  templateUrl: \"change-plan.component.html\",\n})\nexport class ChangePlanComponent {\n  @Input() organizationId: string;\n  @Output() onChanged = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n  defaultUpgradePlan: PlanType = PlanType.FamiliesAnnually;\n  defaultUpgradeProduct: ProductType = ProductType.Families;\n\n  constructor(private logService: LogService) {}\n\n  async submit() {\n    try {\n      this.onChanged.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<div class=\"card card-org-plans\">\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h2 class=\"card-body-header\">{{ \"changeBillingPlan\" | i18n }}</h2>\n    <p class=\"mb-0\">{{ \"changeBillingPlanUpgrade\" | i18n }}</p>\n    <app-organization-plans\n      [showFree]=\"false\"\n      [showCancel]=\"true\"\n      [plan]=\"defaultUpgradePlan\"\n      [product]=\"defaultUpgradeProduct\"\n      [organizationId]=\"organizationId\"\n      (onCanceled)=\"cancel()\"\n    >\n    </app-organization-plans>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\n\n@Component({\n  selector: \"app-download-license\",\n  templateUrl: \"download-license.component.html\",\n})\nexport class DownloadLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onDownloaded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  installationId: string;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private fileDownloadService: FileDownloadService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    if (this.installationId == null || this.installationId === \"\") {\n      return;\n    }\n\n    try {\n      this.formPromise = this.organizationApiService.getLicense(\n        this.organizationId,\n        this.installationId\n      );\n      const license = await this.formPromise;\n      const licenseString = JSON.stringify(license, null, 2);\n      this.fileDownloadService.download({\n        fileName: \"bitwarden_organization_license.json\",\n        blobData: licenseString,\n      });\n      this.onDownloaded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"downloadLicense\" | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <div class=\"d-flex\">\n          <label for=\"installationId\">{{ \"enterInstallationId\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/licensing-on-premise/#organization-account-sharing\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"installationId\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"InstallationId\"\n          [(ngModel)]=\"installationId\"\n          required\n        />\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\n// Component is used so that the SVG can embed CSS color variables\n@Component({\n  selector: \"app-image-org-subscription-hidden\",\n  templateUrl: \"image-subscription-hidden.component.svg\",\n})\nexport class ImageSubscriptionHiddenComponent {}\n","<svg width=\"216\" height=\"231\" viewBox=\"0 0 216 231\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M133.356 85.6618C133.136 85.43 132.871 85.2457 132.577 85.1198C132.283 84.9939 131.968 84.93 131.648 84.9318H87.8482C87.5289 84.93 87.2113 84.9939 86.9175 85.1198C86.6237 85.2457 86.359 85.43 86.14 85.6618C85.9083 85.8808 85.7239 86.1473 85.598 86.4411C85.4721 86.7349 85.4082 87.0506 85.41 87.37V116.57C85.4192 118.793 85.8499 120.994 86.6802 123.056C87.4705 125.091 88.5326 127.011 89.8375 128.761C91.1789 130.515 92.6808 132.137 94.3233 133.612C95.8472 135.01 97.4532 136.318 99.1304 137.528C100.59 138.565 102.123 139.547 103.729 140.474C105.335 141.401 106.469 142.027 107.131 142.354C107.799 142.682 108.339 142.941 108.741 143.113C109.055 143.264 109.4 143.339 109.748 143.332C110.091 143.337 110.431 143.257 110.737 143.102C111.146 142.923 111.679 142.671 112.354 142.343C113.03 142.014 114.179 141.386 115.756 140.463C117.333 139.539 118.884 138.554 120.355 137.517C122.034 136.306 123.642 134.999 125.169 133.601C126.814 132.128 128.316 130.504 129.655 128.75C130.958 126.998 132.021 125.08 132.813 123.045C133.645 120.983 134.075 118.782 134.083 116.559V87.3591C134.085 87.0415 134.021 86.7276 133.895 86.4356C133.769 86.1436 133.586 85.8808 133.356 85.6618ZM127.71 116.836C127.71 127.421 109.748 136.514 109.748 136.514V91.1879H127.71V116.836Z\" fill=\"var(--color-secondary-700)\"/>\n  <path d=\"M24.6216 122.3C24.7144 123.4 25.6819 124.217 26.7825 124.125C27.8832 124.032 28.7002 123.064 28.6074 121.964L24.6216 122.3ZM151.501 45.7445C152.57 45.4679 153.213 44.3768 152.936 43.3074L148.429 25.8809C148.152 24.8115 147.061 24.1688 145.992 24.4454C144.922 24.722 144.28 25.8131 144.556 26.8825L148.563 42.3728L133.073 46.3793C132.003 46.6559 131.361 47.747 131.637 48.8164C131.914 49.8858 133.005 50.5285 134.074 50.2519L151.501 45.7445ZM28.6074 121.964C26.6788 99.0874 34.4658 75.5543 51.9661 58.054L49.1377 55.2256C30.7695 73.5938 22.5982 98.2999 24.6216 122.3L28.6074 121.964ZM51.9661 58.054C78.5404 31.4797 119.036 27.3026 149.985 45.5315L152.015 42.0849C119.534 22.9534 77.0327 27.3306 49.1377 55.2256L51.9661 58.054Z\" fill=\"var(--color-secondary-700)\"/>\n  <path d=\"M67.4747 185.062C66.4089 185.352 65.7801 186.451 66.0701 187.517L70.797 204.885C71.0871 205.951 72.1862 206.58 73.252 206.29C74.3179 205.999 74.9467 204.9 74.6567 203.834L70.455 188.396L85.8934 184.194C86.9592 183.904 87.5881 182.805 87.298 181.739C87.008 180.674 85.9088 180.045 84.843 180.335L67.4747 185.062ZM192.478 100.283C192.286 99.1952 191.248 98.4697 190.16 98.6625C189.072 98.8552 188.347 99.8931 188.54 100.981L192.478 100.283ZM166.138 172.225C139.813 198.55 99.8271 202.897 68.9932 185.255L67.0068 188.727C99.3669 207.242 141.333 202.687 168.966 175.054L166.138 172.225ZM188.54 100.981C192.985 126.07 185.516 152.847 166.138 172.225L168.966 175.054C189.307 154.713 197.142 126.603 192.478 100.283L188.54 100.981Z\" fill=\"var(--color-secondary-700)\"/>\n  <path d=\"M37.726 108.132C39.283 92.1931 46.1655 76.6765 58.3734 64.4686C75.2893 47.5527 98.5583 40.8618 120.5 44.396\" stroke=\"var(--color-secondary-700)\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <path d=\"M180.595 119.132C179.653 136.119 172.693 152.834 159.717 165.811C144.44 181.088 123.982 188.025 104 186.623\" stroke=\"var(--color-secondary-700)\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <rect x=\"153.5\" y=\"56.1317\" width=\"49\" height=\"34\" rx=\"2.5\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M153.5 63.6317V63.6317C153.5 66.9454 156.186 69.6317 159.5 69.6317H172.509M202.5 63.6317V63.6317C202.5 66.9454 199.814 69.6317 196.5 69.6317H183.491\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <mask id=\"path-8-inside-1_1000_26057\" fill=\"white\">\n    <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\"/>\n  </mask>\n  <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\" stroke=\"var(--color-secondary-700)\" stroke-width=\"6\" mask=\"url(#path-8-inside-1_1000_26057)\"/>\n  <path d=\"M187 54.6317C187 54.6317 187 53.6317 187 52.6317C187 51.6317 186.053 50.6317 185.105 50.6317C184.158 50.6317 171.842 50.6317 170.895 50.6317C169.947 50.6317 169 51.6317 169 52.6317C169 53.6317 169 54.6317 169 54.6317\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <circle cx=\"48\" cy=\"141\" r=\"10.5\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M64.9935 168.5H64.9126H64.8318H64.7512H64.6708H64.5905H64.5104H64.4304H64.3506H64.2709H64.1914H64.1121H64.0329H63.9538H63.8749H63.7962H63.7176H63.6392H63.5609H63.4828H63.4048H63.3269H63.2492H63.1717H63.0943H63.017H62.9399H62.8629H62.7861H62.7094H62.6329H62.5565H62.4802H62.4041H62.3281H62.2523H62.1766H62.101H62.0256H61.9503H61.8751H61.8001H61.7252H61.6504H61.5758H61.5013H61.4269H61.3527H61.2786H61.2046H61.1308H61.0571H60.9835H60.91H60.8367H60.7635H60.6904H60.6175H60.5446H60.4719H60.3993H60.3269H60.2545H60.1823H60.1102H60.0382H59.9664H59.8946H59.823H59.7515H59.6801H59.6088H59.5376H59.4666H59.3956H59.3248H59.2541H59.1835H59.113H59.0426H58.9724H58.9022H58.8322H58.7622H58.6924H58.6226H58.553H58.4835H58.4141H58.3448H58.2756H58.2065H58.1375H58.0686H57.9998H57.9311H57.8625H57.794H57.7256H57.6572H57.589H57.5209H57.4529H57.385H57.3172H57.2494H57.1818H57.1142H57.0468H56.9794H56.9121H56.8449H56.7779H56.7108H56.6439H56.5771H56.5103H56.4437H56.3771H56.3106H56.2442H56.1779H56.1117H56.0455H55.9794H55.9134H55.8475H55.7817H55.7159H55.6502H55.5846H55.5191H55.4537H55.3883H55.323H55.2578H55.1926H55.1275H55.0625H54.9976H54.9328H54.868H54.8032H54.7386H54.674H54.6095H54.5451H54.4807H54.4164H54.3521H54.2879H54.2238H54.1598H54.0958H54.0318H53.968H53.9042H53.8404H53.7767H53.7131H53.6495H53.586H53.5226H53.4592H53.3958H53.3325H53.2693H53.2061H53.143H53.0799H53.0169H52.9539H52.891H52.8281H52.7653H52.7025H52.6398H52.5771H52.5145H52.4519H52.3894H52.3269H52.2645H52.202H52.1397H52.0774H52.0151H51.9528H51.8907H51.8285H51.7664H51.7043H51.6423H51.5803H51.5183H51.4564H51.3945H51.3326H51.2708H51.209H51.1472H51.0855H51.0238H50.9621H50.9005H50.8389H50.7773H50.7157H50.6542H50.5927H50.5312H50.4698H50.4084H50.347H50.2856H50.2243H50.1629H50.1016H50.0404H49.9791H49.9178H49.8566H49.7954H49.7342H49.6731H49.6119H49.5508H49.4896H49.4285H49.3674H49.3064H49.2453H49.1842H49.1232H49.0622H49.0011H48.9401H48.8791H48.8181H48.7571H48.6962H48.6352H48.5742H48.5133H48.4523H48.3913H48.3304H48.2694H48.2085H48.1475H48.0866H48.0257H47.9647H47.9038H47.8428H47.7819H47.7209H47.6599H47.599H47.538H47.477H47.416H47.3551H47.2941H47.2331H47.172H47.111H47.05H46.9889H46.9279H46.8668H46.8057H46.7446H46.6835H46.6224H46.5612H46.5001H46.4389H46.3777H46.3165H46.2553H46.194H46.1328H46.0715H46.0102H45.9489H45.8875H45.8261H45.7647H45.7033H45.6418H45.5804H45.5189H45.4573H45.3958H45.3342H45.2726H45.2109H45.1493H45.0876H45.0258H44.9641H44.9023H44.8404H44.7786H44.7166H44.6547H44.5927H44.5307H44.4687H44.4066H44.3445H44.2823H44.2201H44.1578H44.0956H44.0332H43.9709H43.9084H43.846H43.7835H43.7209H43.6583H43.5957H43.533H43.4703H43.4075H43.3447H43.2818H43.2189H43.1559H43.0929H43.0298H42.9666H42.9034H42.8402H42.7769H42.7135H42.6501H42.5867H42.5231H42.4596H42.3959H42.3322H42.2685H42.2046H42.1408H42.0768H42.0128H41.9487H41.8846H41.8204H41.7562H41.6918H41.6274H41.563H41.4985H41.4339H41.3692H41.3045H41.2397H41.1748H41.1098H41.0448H40.9797H40.9146H40.8493H40.784H40.7186H40.6532H40.5876H40.522H40.4563H40.3905H40.3247H40.2588H40.1928H40.1267H40.0605H39.9942H39.9279H39.8615H39.795H39.7284H39.6617H39.5949H39.5281H39.4611H39.3941H39.327H39.2598H39.1925H39.1251H39.0576H38.9901H38.9224H38.8547H38.7868H38.7189H38.6508H38.5827H38.5145H38.4461H38.3777H38.3092H38.2406H38.1719H38.103H38.0341H37.9651H37.896H37.8267H37.7574H37.688H37.6184H37.5488H37.479H37.4092H37.3392H37.2691H37.199H37.1287H37.0583H36.9878H36.9171H36.8464H36.7755H36.7046H36.6335H36.5623H36.491H36.4196H36.3481H36.2764H36.2046H36.1328H36.0607H35.9886H35.9164H35.844H35.7715H35.6989H35.6262H35.5533H35.4803H35.4072H35.334H35.2606H35.1872H35.1135H35.0398H34.9659H34.8919H34.8178H34.7436H34.6692H34.5947H34.52H34.4452H34.3703H34.2952H34.2201H34.1447H34.0693H33.9937H33.9179H33.8421H33.7661H33.6899H33.6136H33.5372H33.4606H33.3839H33.3071H33.2301H33.1529H33.0756H32.9982H32.9206H32.8429H32.765H32.687H32.6088H32.5305H32.452H32.3734H32.2946H32.2157H32.1367H32.0574H31.978H31.8985H31.8188H31.739H31.659H31.5788H31.4985H31.418H31.3374H31.2566H31.1757H31.0946H31.0133H30.9318H30.8503H30.7685H30.6866H30.6045H30.5222H30.4398H30.3572H30.2745H30.1915C30.0489 168.5 29.9693 168.466 29.9164 168.433C29.8553 168.394 29.7779 168.322 29.702 168.192C29.5361 167.906 29.4608 167.48 29.5197 167.111C30.9235 158.322 38.6474 151.574 47.9925 151.574C57.3375 151.574 65.0615 158.322 66.4652 167.111C66.5751 167.799 66.4037 168.054 66.3124 168.149C66.1888 168.278 65.8364 168.5 64.9935 168.5Z\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <circle cx=\"20\" cy=\"141\" r=\"10.5\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M36.9935 168.5H36.9126H36.8318H36.7512H36.6708H36.5905H36.5104H36.4304H36.3506H36.2709H36.1914H36.1121H36.0329H35.9538H35.8749H35.7962H35.7176H35.6392H35.5609H35.4828H35.4048H35.3269H35.2492H35.1717H35.0943H35.017H34.9399H34.8629H34.7861H34.7094H34.6329H34.5565H34.4802H34.4041H34.3281H34.2523H34.1766H34.101H34.0256H33.9503H33.8751H33.8001H33.7252H33.6504H33.5758H33.5013H33.4269H33.3527H33.2786H33.2046H33.1308H33.0571H32.9835H32.91H32.8367H32.7635H32.6904H32.6175H32.5446H32.4719H32.3993H32.3269H32.2545H32.1823H32.1102H32.0382H31.9664H31.8946H31.823H31.7515H31.6801H31.6088H31.5376H31.4666H31.3956H31.3248H31.2541H31.1835H31.113H31.0426H30.9724H30.9022H30.8322H30.7622H30.6924H30.6226H30.553H30.4835H30.4141H30.3448H30.2756H30.2065H30.1375H30.0686H29.9998H29.9311H29.8625H29.794H29.7256H29.6572H29.589H29.5209H29.4529H29.385H29.3172H29.2494H29.1818H29.1142H29.0468H28.9794H28.9121H28.8449H28.7779H28.7108H28.6439H28.5771H28.5103H28.4437H28.3771H28.3106H28.2442H28.1779H28.1117H28.0455H27.9794H27.9134H27.8475H27.7817H27.7159H27.6502H27.5846H27.5191H27.4537H27.3883H27.323H27.2578H27.1926H27.1275H27.0625H26.9976H26.9328H26.868H26.8032H26.7386H26.674H26.6095H26.5451H26.4807H26.4164H26.3521H26.2879H26.2238H26.1598H26.0958H26.0318H25.968H25.9042H25.8404H25.7767H25.7131H25.6495H25.586H25.5226H25.4592H25.3958H25.3325H25.2693H25.2061H25.143H25.0799H25.0169H24.9539H24.891H24.8281H24.7653H24.7025H24.6398H24.5771H24.5145H24.4519H24.3894H24.3269H24.2645H24.202H24.1397H24.0774H24.0151H23.9528H23.8907H23.8285H23.7664H23.7043H23.6423H23.5803H23.5183H23.4564H23.3945H23.3326H23.2708H23.209H23.1472H23.0855H23.0238H22.9621H22.9005H22.8389H22.7773H22.7157H22.6542H22.5927H22.5312H22.4698H22.4084H22.347H22.2856H22.2243H22.1629H22.1016H22.0404H21.9791H21.9178H21.8566H21.7954H21.7342H21.6731H21.6119H21.5508H21.4896H21.4285H21.3674H21.3064H21.2453H21.1842H21.1232H21.0622H21.0011H20.9401H20.8791H20.8181H20.7571H20.6962H20.6352H20.5742H20.5133H20.4523H20.3913H20.3304H20.2694H20.2085H20.1475H20.0866H20.0257H19.9647H19.9038H19.8428H19.7819H19.7209H19.6599H19.599H19.538H19.477H19.416H19.3551H19.2941H19.2331H19.172H19.111H19.05H18.9889H18.9279H18.8668H18.8057H18.7446H18.6835H18.6224H18.5612H18.5001H18.4389H18.3777H18.3165H18.2553H18.194H18.1328H18.0715H18.0102H17.9489H17.8875H17.8261H17.7647H17.7033H17.6418H17.5804H17.5189H17.4573H17.3958H17.3342H17.2726H17.2109H17.1493H17.0876H17.0258H16.9641H16.9023H16.8404H16.7786H16.7166H16.6547H16.5927H16.5307H16.4687H16.4066H16.3445H16.2823H16.2201H16.1578H16.0956H16.0332H15.9709H15.9084H15.846H15.7835H15.7209H15.6583H15.5957H15.533H15.4703H15.4075H15.3447H15.2818H15.2189H15.1559H15.0929H15.0298H14.9666H14.9034H14.8402H14.7769H14.7135H14.6501H14.5867H14.5231H14.4596H14.3959H14.3322H14.2685H14.2046H14.1408H14.0768H14.0128H13.9487H13.8846H13.8204H13.7562H13.6918H13.6274H13.563H13.4985H13.4339H13.3692H13.3045H13.2397H13.1748H13.1098H13.0448H12.9797H12.9146H12.8493H12.784H12.7186H12.6532H12.5876H12.522H12.4563H12.3905H12.3247H12.2588H12.1928H12.1267H12.0605H11.9942H11.9279H11.8615H11.795H11.7284H11.6617H11.5949H11.5281H11.4611H11.3941H11.327H11.2598H11.1925H11.1251H11.0576H10.9901H10.9224H10.8547H10.7868H10.7189H10.6508H10.5827H10.5145H10.4461H10.3777H10.3092H10.2406H10.1719H10.103H10.0341H9.9651H9.89597H9.82674H9.75741H9.68798H9.61843H9.54879H9.47904H9.40918H9.33921H9.26914H9.19896H9.12867H9.05826H8.98775H8.91713H8.8464H8.77555H8.70459H8.63351H8.56232H8.49102H8.4196H8.34807H8.27641H8.20464H8.13276H8.06075H7.98862H7.91638H7.84401H7.77152H7.69891H7.62617H7.55332H7.48034H7.40723H7.334H7.26064H7.18716H7.11355H7.03981H6.96594H6.89195H6.81782H6.74356H6.66918H6.59466H6.52H6.44522H6.3703H6.29525H6.22006H6.14474H6.06928H5.99368H5.91795H5.84208H5.76607H5.68992H5.61363H5.5372H5.46062H5.38391H5.30705H5.23005H5.15291H5.07562H4.99819H4.92061H4.84288H4.76501H4.68699H4.60882H4.5305H4.45203H4.37342H4.29465H4.21573H4.13665H4.05743H3.97805H3.89851H3.81882H3.73898H3.65898H3.57882H3.49851H3.41804H3.33741H3.25662H3.17566H3.09455H3.01328H2.93185H2.85025H2.76849H2.68657H2.60448H2.52223H2.43981H2.35722H2.27447H2.19155C2.04893 168.5 1.96927 168.466 1.91645 168.433C1.85532 168.394 1.77792 168.322 1.702 168.192C1.53613 167.906 1.46078 167.48 1.51975 167.111C2.92347 158.322 10.6474 151.574 19.9925 151.574C29.3375 151.574 37.0615 158.322 38.4652 167.111C38.5751 167.799 38.4037 168.054 38.3124 168.149C38.1888 168.278 37.8364 168.5 36.9935 168.5Z\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <circle cx=\"34\" cy=\"154\" r=\"10.5\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n  <path d=\"M50.9935 181.5H50.9126H50.8318H50.7512H50.6708H50.5905H50.5104H50.4304H50.3506H50.2709H50.1914H50.1121H50.0329H49.9538H49.8749H49.7962H49.7176H49.6392H49.5609H49.4828H49.4048H49.3269H49.2492H49.1717H49.0943H49.017H48.9399H48.8629H48.7861H48.7094H48.6329H48.5565H48.4802H48.4041H48.3281H48.2523H48.1766H48.101H48.0256H47.9503H47.8751H47.8001H47.7252H47.6504H47.5758H47.5013H47.4269H47.3527H47.2786H47.2046H47.1308H47.0571H46.9835H46.91H46.8367H46.7635H46.6904H46.6175H46.5446H46.4719H46.3993H46.3269H46.2545H46.1823H46.1102H46.0382H45.9664H45.8946H45.823H45.7515H45.6801H45.6088H45.5376H45.4666H45.3956H45.3248H45.2541H45.1835H45.113H45.0426H44.9724H44.9022H44.8322H44.7622H44.6924H44.6226H44.553H44.4835H44.4141H44.3448H44.2756H44.2065H44.1375H44.0686H43.9998H43.9311H43.8625H43.794H43.7256H43.6572H43.589H43.5209H43.4529H43.385H43.3172H43.2494H43.1818H43.1142H43.0468H42.9794H42.9121H42.8449H42.7779H42.7108H42.6439H42.5771H42.5103H42.4437H42.3771H42.3106H42.2442H42.1779H42.1117H42.0455H41.9794H41.9134H41.8475H41.7817H41.7159H41.6502H41.5846H41.5191H41.4537H41.3883H41.323H41.2578H41.1926H41.1275H41.0625H40.9976H40.9328H40.868H40.8032H40.7386H40.674H40.6095H40.5451H40.4807H40.4164H40.3521H40.2879H40.2238H40.1598H40.0958H40.0318H39.968H39.9042H39.8404H39.7767H39.7131H39.6495H39.586H39.5226H39.4592H39.3958H39.3325H39.2693H39.2061H39.143H39.0799H39.0169H38.9539H38.891H38.8281H38.7653H38.7025H38.6398H38.5771H38.5145H38.4519H38.3894H38.3269H38.2645H38.202H38.1397H38.0774H38.0151H37.9528H37.8907H37.8285H37.7664H37.7043H37.6423H37.5803H37.5183H37.4564H37.3945H37.3326H37.2708H37.209H37.1472H37.0855H37.0238H36.9621H36.9005H36.8389H36.7773H36.7157H36.6542H36.5927H36.5312H36.4698H36.4084H36.347H36.2856H36.2243H36.1629H36.1016H36.0404H35.9791H35.9178H35.8566H35.7954H35.7342H35.6731H35.6119H35.5508H35.4896H35.4285H35.3674H35.3064H35.2453H35.1842H35.1232H35.0622H35.0011H34.9401H34.8791H34.8181H34.7571H34.6962H34.6352H34.5742H34.5133H34.4523H34.3913H34.3304H34.2694H34.2085H34.1475H34.0866H34.0257H33.9647H33.9038H33.8428H33.7819H33.7209H33.6599H33.599H33.538H33.477H33.416H33.3551H33.2941H33.2331H33.172H33.111H33.05H32.9889H32.9279H32.8668H32.8057H32.7446H32.6835H32.6224H32.5612H32.5001H32.4389H32.3777H32.3165H32.2553H32.194H32.1328H32.0715H32.0102H31.9489H31.8875H31.8261H31.7647H31.7033H31.6418H31.5804H31.5189H31.4573H31.3958H31.3342H31.2726H31.2109H31.1493H31.0876H31.0258H30.9641H30.9023H30.8404H30.7786H30.7166H30.6547H30.5927H30.5307H30.4687H30.4066H30.3445H30.2823H30.2201H30.1578H30.0956H30.0332H29.9709H29.9084H29.846H29.7835H29.7209H29.6583H29.5957H29.533H29.4703H29.4075H29.3447H29.2818H29.2189H29.1559H29.0929H29.0298H28.9666H28.9034H28.8402H28.7769H28.7135H28.6501H28.5867H28.5231H28.4596H28.3959H28.3322H28.2685H28.2046H28.1408H28.0768H28.0128H27.9487H27.8846H27.8204H27.7562H27.6918H27.6274H27.563H27.4985H27.4339H27.3692H27.3045H27.2397H27.1748H27.1098H27.0448H26.9797H26.9146H26.8493H26.784H26.7186H26.6532H26.5876H26.522H26.4563H26.3905H26.3247H26.2588H26.1928H26.1267H26.0605H25.9942H25.9279H25.8615H25.795H25.7284H25.6617H25.5949H25.5281H25.4611H25.3941H25.327H25.2598H25.1925H25.1251H25.0576H24.9901H24.9224H24.8547H24.7868H24.7189H24.6508H24.5827H24.5145H24.4461H24.3777H24.3092H24.2406H24.1719H24.103H24.0341H23.9651H23.896H23.8267H23.7574H23.688H23.6184H23.5488H23.479H23.4092H23.3392H23.2691H23.199H23.1287H23.0583H22.9878H22.9171H22.8464H22.7755H22.7046H22.6335H22.5623H22.491H22.4196H22.3481H22.2764H22.2046H22.1328H22.0607H21.9886H21.9164H21.844H21.7715H21.6989H21.6262H21.5533H21.4803H21.4072H21.334H21.2606H21.1872H21.1135H21.0398H20.9659H20.8919H20.8178H20.7436H20.6692H20.5947H20.52H20.4452H20.3703H20.2952H20.2201H20.1447H20.0693H19.9937H19.9179H19.8421H19.7661H19.6899H19.6136H19.5372H19.4606H19.3839H19.3071H19.2301H19.1529H19.0756H18.9982H18.9206H18.8429H18.765H18.687H18.6088H18.5305H18.452H18.3734H18.2946H18.2157H18.1367H18.0574H17.978H17.8985H17.8188H17.739H17.659H17.5788H17.4985H17.418H17.3374H17.2566H17.1757H17.0946H17.0133H16.9318H16.8503H16.7685H16.6866H16.6045H16.5222H16.4398H16.3572H16.2745H16.1915C16.045 181.5 15.9628 181.465 15.9092 181.432C15.8479 181.394 15.772 181.324 15.6978 181.198C15.5354 180.922 15.4617 180.509 15.5193 180.153C16.9196 171.496 24.6325 164.823 33.9925 164.823C43.3524 164.823 51.0654 171.496 52.4657 180.153C52.574 180.823 52.4052 181.064 52.319 181.152C52.1962 181.279 51.8413 181.5 50.9935 181.5Z\" fill=\"var(--color-background)\" stroke=\"var(--color-secondary-700)\" stroke-width=\"3\"/>\n</svg>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<void | unknown> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.organizationApiService.updateLicense(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedLicense\"));\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","<div class=\"page-header\">\n  <h1>\n    {{ \"subscription\" | i18n }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container *ngIf=\"firstLoaded && !userOrg.canManageBilling\">\n  <div class=\"tw-flex tw-flex-col tw-items-center tw-text-info\">\n    <app-image-org-subscription-hidden></app-image-org-subscription-hidden>\n    <p class=\"tw-font-bold\">{{ \"billingManagedByProvider\" | i18n: this.userOrg.providerName }}</p>\n    <p>{{ \"billingContactProviderForAssistance\" | i18n }}</p>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"sub\">\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</app-callout\n  >\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      #reinstateBtn\n      type=\"button\"\n      class=\"btn btn-outline-secondary btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </app-callout>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <dl>\n          <dt>{{ \"billingPlan\" | i18n }}</dt>\n          <dd>{{ sub.plan.name }}</dd>\n          <ng-container *ngIf=\"subscription\">\n            <dt>{{ \"status\" | i18n }}</dt>\n            <dd>\n              <span class=\"text-capitalize\">{{\n                isSponsoredSubscription ? \"sponsored\" : subscription.status || \"-\"\n              }}</span>\n              <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n                \"pendingCancellation\" | i18n\n              }}</span>\n            </dd>\n            <dt>{{ \"nextCharge\" | i18n }}</dt>\n            <dd>\n              {{\n                nextInvoice\n                  ? (nextInvoice.date | date: \"mediumDate\") +\n                    \", \" +\n                    (nextInvoice.amount | currency: \"$\")\n                  : \"-\"\n              }}\n            </dd>\n          </ng-container>\n        </dl>\n      </div>\n      <div class=\"col-8\" *ngIf=\"subscription\">\n        <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n        <table class=\"table\">\n          <tbody>\n            <tr *ngFor=\"let i of subscription.items\">\n              <td>\n                {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n                {{ i.amount | currency: \"$\" }}\n              </td>\n              <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <ng-container *ngIf=\"userOrg?.providerId != null\">\n        <div class=\"col-sm\">\n          <dl>\n            <dt>{{ \"provider\" | i18n }}</dt>\n            <dd>{{ \"yourProviderIs\" | i18n: userOrg.providerName }}</dd>\n          </dl>\n        </div>\n      </ng-container>\n    </div>\n    <ng-container>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"changePlan()\"\n        *ngIf=\"showChangePlanButton\"\n      >\n        {{ \"changeBillingPlan\" | i18n }}\n      </button>\n      <app-change-plan\n        [organizationId]=\"organizationId\"\n        (onChanged)=\"closeChangePlan(true)\"\n        (onCanceled)=\"closeChangePlan(false)\"\n        *ngIf=\"showChangePlan\"\n      ></app-change-plan>\n    </ng-container>\n    <h2 class=\"spaced-header\">{{ \"manageSubscription\" | i18n }}</h2>\n    <p class=\"mb-4\">{{ subscriptionDesc }}</p>\n    <ng-container\n      *ngIf=\"\n        subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\n      \"\n    >\n      <div class=\"mt-3\">\n        <app-adjust-subscription\n          [seatPrice]=\"seatPrice\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          [currentSeatCount]=\"seats\"\n          [maxAutoscaleSeats]=\"maxAutoscaleSeats\"\n          (onAdjusted)=\"subscriptionAdjusted()\"\n        >\n        </app-adjust-subscription>\n      </div>\n    </ng-container>\n    <button\n      #removeSponsorshipBtn\n      type=\"button\"\n      class=\"btn btn-outline-danger btn-submit\"\n      (click)=\"removeSponsorship()\"\n      [appApiAction]=\"removeSponsorshipPromise\"\n      [disabled]=\"removeSponsorshipBtn.loading\"\n      *ngIf=\"isSponsoredSubscription\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"removeSponsorship\" | i18n }}</span>\n    </button>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"storageGbPrice\"\n          [add]=\"adjustStorageAdd\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n    <!--Switch to i18n-->\n    <h2 class=\"spaced-header\">{{ \"selfHostingTitle\" | i18n }}</h2>\n    <p class=\"mb-4\">\n      {{ \"selfHostingEnterpriseOrganizationSectionCopy\" | i18n }}\n    </p>\n    <div class=\"d-flex\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"canDownloadLicense\"\n        [disabled]=\"showDownloadLicense\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary ml-1\"\n        (click)=\"manageBillingSync()\"\n        *ngIf=\"canManageBillingSync\"\n      >\n        {{ (hasBillingSyncToken ? \"manageBillingSync\" : \"setUpBillingSync\") | i18n }}\n      </button>\n    </div>\n    <div class=\"mt-3\" *ngIf=\"showDownloadLicense\">\n      <app-download-license\n        [organizationId]=\"organizationId\"\n        (onDownloaded)=\"closeDownloadLicense()\"\n        (onCanceled)=\"closeDownloadLicense()\"\n      ></app-download-license>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"additionalOptions\" | i18n }}</h2>\n    <p class=\"mb-4\">\n      {{ \"additionalOptionsDesc\" | i18n }}\n    </p>\n    <div class=\"d-flex\">\n      <button\n        #cancelBtn\n        type=\"button\"\n        class=\"btn btn-outline-danger btn-submit ml-1\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"selfHosted\">\n    <dl>\n      <dt>{{ \"billingPlan\" | i18n }}</dt>\n      <dd>{{ sub.plan.name }}</dd>\n      <dt>{{ \"expiration\" | i18n }}</dt>\n      <dd *ngIf=\"sub.expiration\">\n        {{ sub.expiration | date: \"mediumDate\" }}\n        <span *ngIf=\"isExpired\" class=\"text-danger ml-2\">\n          <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n          {{ \"licenseIsExpired\" | i18n }}\n        </span>\n      </dd>\n      <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n    </dl>\n    <div>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        href=\"https://vault.bitwarden.com\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        class=\"btn btn-outline-secondary\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          [organizationId]=\"organizationId\"\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        ></app-update-license>\n      </div>\n    </div>\n    <div *ngIf=\"showBillingSyncKey\">\n      <h2 class=\"mt-5\">\n        {{ \"billingSync\" | i18n }}\n      </h2>\n      <p>\n        {{ \"billingSyncDesc\" | i18n }}\n      </p>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"manageBillingSyncSelfHosted()\"\n      >\n        {{ \"manageBillingSync\" | i18n }}\n      </button>\n      <small class=\"form-text text-muted\" *ngIf=\"billingSyncSetUp\">\n        {{ \"lastSync\" | i18n }}:\n        <span *ngIf=\"userOrg.familySponsorshipLastSyncDate != null\">\n          {{ userOrg.familySponsorshipLastSyncDate | date: \"medium\" }}\n        </span>\n        <span *ngIf=\"userOrg.familySponsorshipLastSyncDate == null\">\n          {{ \"never\" | i18n | lowercase }}\n        </span>\n      </small>\n    </div>\n  </ng-container>\n</ng-container>\n<ng-template #setupBillingSyncTemplate></ng-template>\n<ng-template #rotateBillingSyncKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/models/api/billingSyncConfigApi\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organizationConnectionResponse\";\nimport { OrganizationSubscriptionResponse } from \"@bitwarden/common/models/response/organizationSubscriptionResponse\";\n\nimport { BillingSyncKeyComponent } from \"../../settings/billing-sync-key.component\";\n\nimport { BillingSyncApiKeyComponent } from \"./billing-sync-api-key.component\";\n\n@Component({\n  selector: \"app-org-subscription\",\n  templateUrl: \"organization-subscription.component.html\",\n})\nexport class OrganizationSubscriptionComponent implements OnInit {\n  @ViewChild(\"setupBillingSyncTemplate\", { read: ViewContainerRef, static: true })\n  setupBillingSyncModalRef: ViewContainerRef;\n\n  loading = false;\n  firstLoaded = false;\n  organizationId: string;\n  adjustSeatsAdd = true;\n  showAdjustSeats = false;\n  showAdjustSeatAutoscale = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  showBillingSyncKey = false;\n  showDownloadLicense = false;\n  showChangePlan = false;\n  sub: OrganizationSubscriptionResponse;\n  selfHosted = false;\n  hasBillingSyncToken: boolean;\n\n  userOrg: Organization;\n  existingBillingSyncConnection: OrganizationConnectionResponse<BillingSyncConfigApi>;\n\n  removeSponsorshipPromise: Promise<void>;\n  cancelPromise: Promise<void>;\n  reinstatePromise: Promise<void>;\n\n  @ViewChild(\"rotateBillingSyncKeyTemplate\", { read: ViewContainerRef, static: true })\n  billingSyncKeyViewContainerRef: ViewContainerRef;\n  billingSyncKeyRef: [ModalRef, BillingSyncKeyComponent];\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    this.userOrg = await this.organizationService.get(this.organizationId);\n    if (this.userOrg.canManageBilling) {\n      this.sub = await this.organizationApiService.getSubscription(this.organizationId);\n    }\n    const apiKeyResponse = await this.organizationApiService.getApiKeyInformation(\n      this.organizationId\n    );\n    this.hasBillingSyncToken = apiKeyResponse.data.some(\n      (i) => i.keyType === OrganizationApiKeyType.BillingSync\n    );\n\n    if (this.selfHosted) {\n      this.showBillingSyncKey = await this.apiService.getCloudCommunicationsEnabled();\n    }\n\n    if (this.showBillingSyncKey) {\n      this.existingBillingSyncConnection = await this.apiService.getOrganizationConnection(\n        this.organizationId,\n        OrganizationConnectionType.CloudBillingSync,\n        BillingSyncConfigApi\n      );\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.organizationApiService.reinstate(this.organizationId);\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.organizationApiService.cancel(this.organizationId);\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async changePlan() {\n    this.showChangePlan = !this.showChangePlan;\n  }\n\n  closeChangePlan(changed: boolean) {\n    this.showChangePlan = false;\n  }\n\n  downloadLicense() {\n    this.showDownloadLicense = !this.showDownloadLicense;\n  }\n\n  async manageBillingSync() {\n    const [ref] = await this.modalService.openViewRef(\n      BillingSyncApiKeyComponent,\n      this.setupBillingSyncModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.hasBillingToken = this.hasBillingSyncToken;\n      }\n    );\n    ref.onClosed.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  closeDownloadLicense() {\n    this.showDownloadLicense = false;\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(updated: boolean) {\n    this.showUpdateLicense = false;\n    if (updated) {\n      this.load();\n      this.messagingService.send(\"updatedOrgLicense\");\n    }\n  }\n\n  subscriptionAdjusted() {\n    this.load();\n  }\n\n  adjustStorage(add: boolean) {\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  async removeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeSponsorshipConfirmation\"),\n      this.i18nService.t(\"removeSponsorship\"),\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    try {\n      this.removeSponsorshipPromise = this.apiService.deleteRemoveSponsorship(this.organizationId);\n      await this.removeSponsorshipPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removeSponsorshipSuccess\")\n      );\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async manageBillingSyncSelfHosted() {\n    this.billingSyncKeyRef = await this.modalService.openViewRef(\n      BillingSyncKeyComponent,\n      this.billingSyncKeyViewContainerRef,\n      (comp) => {\n        comp.entityId = this.organizationId;\n        comp.existingConnectionId = this.existingBillingSyncConnection?.id;\n        comp.billingSyncKey = this.existingBillingSyncConnection?.config?.billingSyncKey;\n        comp.setParentConnection = (\n          connection: OrganizationConnectionResponse<BillingSyncConfigApi>\n        ) => {\n          this.existingBillingSyncConnection = connection;\n          this.billingSyncKeyRef[0].close();\n        };\n      }\n    );\n  }\n\n  get isExpired() {\n    return (\n      this.sub != null && this.sub.expiration != null && new Date(this.sub.expiration) < new Date()\n    );\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get billingInterval() {\n    const monthly = !this.sub.plan.isAnnual;\n    return monthly ? \"month\" : \"year\";\n  }\n\n  get storageGbPrice() {\n    return this.sub.plan.additionalStoragePricePerGb;\n  }\n\n  get seatPrice() {\n    return this.sub.plan.seatPrice;\n  }\n\n  get seats() {\n    return this.sub.seats;\n  }\n\n  get maxAutoscaleSeats() {\n    return this.sub.maxAutoscaleSeats;\n  }\n\n  get canAdjustSeats() {\n    return this.sub.plan.hasAdditionalSeatsOption;\n  }\n\n  get isSponsoredSubscription(): boolean {\n    return this.sub.subscription?.items.some((i) => i.sponsoredSubscriptionItem);\n  }\n\n  get canDownloadLicense() {\n    return (\n      (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n      (this.subscription != null && !this.subscription.cancelled)\n    );\n  }\n\n  get canManageBillingSync() {\n    return (\n      !this.selfHosted &&\n      (this.sub.planType === PlanType.EnterpriseAnnually ||\n        this.sub.planType === PlanType.EnterpriseMonthly ||\n        this.sub.planType === PlanType.EnterpriseAnnually2019 ||\n        this.sub.planType === PlanType.EnterpriseMonthly2019)\n    );\n  }\n\n  get subscriptionDesc() {\n    if (this.sub.planType === PlanType.Free) {\n      return this.i18nService.t(\"subscriptionFreePlan\", this.sub.seats.toString());\n    } else if (\n      this.sub.planType === PlanType.FamiliesAnnually ||\n      this.sub.planType === PlanType.FamiliesAnnually2019\n    ) {\n      if (this.isSponsoredSubscription) {\n        return this.i18nService.t(\"subscriptionSponsoredFamiliesPlan\", this.sub.seats.toString());\n      } else {\n        return this.i18nService.t(\"subscriptionFamiliesPlan\", this.sub.seats.toString());\n      }\n    } else if (this.sub.maxAutoscaleSeats === this.sub.seats && this.sub.seats != null) {\n      return this.i18nService.t(\"subscriptionMaxReached\", this.sub.seats.toString());\n    } else if (this.sub.maxAutoscaleSeats == null) {\n      return this.i18nService.t(\"subscriptionUserSeatsUnlimitedAutoscale\");\n    } else {\n      return this.i18nService.t(\n        \"subscriptionUserSeatsLimitedAutoscale\",\n        this.sub.maxAutoscaleSeats.toString()\n      );\n    }\n  }\n\n  get showChangePlanButton() {\n    return this.subscription == null && this.sub.planType === PlanType.Free && !this.showChangePlan;\n  }\n\n  get billingSyncSetUp() {\n    return this.existingBillingSyncConnection?.id != null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myOrganization\" | i18n }}\n          </a>\n          <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a\n            routerLink=\"billing\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"showBilling\"\n          >\n            {{ \"billing\" | i18n }}\n          </a>\n          <a\n            routerLink=\"two-factor\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"access2fa\"\n          >\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-org-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent {\n  access2fa = false;\n  showBilling: boolean;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      const organization = await this.organizationService.get(params.organizationId);\n      this.showBilling = !this.platformUtilsService.isSelfHost() && organization.canManageBilling;\n      this.access2fa = organization.use2fa;\n    });\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n  integrationKey: string;\n  secretKey: string;\n  host: string;\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n  type: TwoFactorProviderType;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { TwoFactorProviderRequest } from \"@bitwarden/common/models/request/twoFactorProviderRequest\";\nimport { AuthResponseBase } from \"@bitwarden/common/types/authResponse\";\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n  @Output() onUpdated = new EventEmitter<boolean>();\n\n  type: TwoFactorProviderType;\n  organizationId: string;\n  twoFactorProviderType = TwoFactorProviderType;\n  enabled = false;\n  authed = false;\n\n  protected hashedSecret: string;\n  protected verificationType: VerificationType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected userVerificationService: UserVerificationService\n  ) {}\n\n  protected auth(authResponse: AuthResponseBase) {\n    this.hashedSecret = authResponse.secret;\n    this.verificationType = authResponse.verificationType;\n    this.authed = true;\n  }\n\n  protected async enable(enableFunction: () => Promise<void>) {\n    try {\n      await enableFunction();\n      this.onUpdated.emit(true);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async disable(promise: Promise<unknown>) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepDisableDesc\"),\n      this.i18nService.t(\"disable\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const request = await this.buildRequestModel(TwoFactorProviderRequest);\n      request.type = this.type;\n      if (this.organizationId != null) {\n        promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n      } else {\n        promise = this.apiService.putTwoFactorDisable(request);\n      }\n      await promise;\n      this.enabled = false;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"twoStepDisabled\"));\n      this.onUpdated.emit(false);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async buildRequestModel<T extends SecretVerificationRequest>(\n    requestClass: new () => T\n  ) {\n    return this.userVerificationService.buildRequest(\n      {\n        secret: this.hashedSecret,\n        type: this.verificationType,\n      },\n      requestClass,\n      true\n    );\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\nimport { TwoFactorResponse } from \"@bitwarden/common/types/twoFactorResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-two-factor-verify\",\n  templateUrl: \"two-factor-verify.component.html\",\n})\nexport class TwoFactorVerifyComponent {\n  @Input() type: TwoFactorProviderType;\n  @Input() organizationId: string;\n  @Output() onAuthed = new EventEmitter<AuthResponse<TwoFactorResponse>>();\n\n  secret: Verification;\n  formPromise: Promise<TwoFactorResponse>;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async submit() {\n    let hashedSecret: string;\n\n    try {\n      this.formPromise = this.userVerificationService.buildRequest(this.secret).then((request) => {\n        hashedSecret =\n          this.secret.type === VerificationType.MasterPassword\n            ? request.masterPasswordHash\n            : request.otp;\n        return this.apiCall(request);\n      });\n\n      const response = await this.formPromise;\n      this.onAuthed.emit({\n        response: response,\n        secret: hashedSecret,\n        verificationType: this.secret.type,\n      });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n    switch (this.type) {\n      case -1 as TwoFactorProviderType:\n        return this.apiService.getTwoFactorRecover(request);\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        if (this.organizationId != null) {\n          return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n        } else {\n          return this.apiService.getTwoFactorDuo(request);\n        }\n      case TwoFactorProviderType.Email:\n        return this.apiService.getTwoFactorEmail(request);\n      case TwoFactorProviderType.WebAuthn:\n        return this.apiService.getTwoFactorWebAuthn(request);\n      case TwoFactorProviderType.Authenticator:\n        return this.apiService.getTwoFactorAuthenticator(request);\n      case TwoFactorProviderType.Yubikey:\n        return this.apiService.getTwoFactorYubiKey(request);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"modal-body\">\n    <p>{{ \"twoStepLoginAuthDesc\" | i18n }}</p>\n    <app-user-verification [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\">\n    </app-user-verification>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"continue\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n      {{ \"close\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faDuoTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>Duo</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <strong>{{ \"twoFactorDuoIntegrationKey\" | i18n }}:</strong> {{ ikey }}\n            <br />\n            <strong>{{ \"twoFactorDuoSecretKey\" | i18n }}:</strong> {{ skey }}\n            <br />\n            <strong>{{ \"twoFactorDuoApiHostname\" | i18n }}:</strong> {{ host }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <p>{{ \"twoFactorDuoDesc\" | i18n }}</p>\n            <div class=\"form-group\">\n              <label for=\"ikey\">{{ \"twoFactorDuoIntegrationKey\" | i18n }}</label>\n              <input\n                id=\"ikey\"\n                type=\"text\"\n                name=\"IntegrationKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"ikey\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"skey\">{{ \"twoFactorDuoSecretKey\" | i18n }}</label>\n              <input\n                id=\"skey\"\n                type=\"password\"\n                name=\"SecretKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"skey\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"host\">{{ \"twoFactorDuoApiHostname\" | i18n }}</label>\n              <input\n                id=\"host\"\n                type=\"text\"\n                name=\"Host\"\n                class=\"form-control\"\n                [(ngModel)]=\"host\"\n                placeholder=\"{{ 'ex' | i18n }} api-xxxxxxxx.duosecurity.com\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorDuoRequest } from \"@bitwarden/common/models/request/updateTwoFactorDuoRequest\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/models/response/twoFactorDuoResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-duo\",\n  templateUrl: \"two-factor-duo.component.html\",\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Duo;\n  ikey: string;\n  skey: string;\n  host: string;\n  formPromise: Promise<TwoFactorDuoResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorDuoResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n    request.integrationKey = this.ikey;\n    request.secretKey = this.skey;\n    request.host = this.host;\n\n    return super.enable(async () => {\n      if (this.organizationId != null) {\n        this.formPromise = this.apiService.putTwoFactorOrganizationDuo(\n          this.organizationId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.putTwoFactorDuo(request);\n      }\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private processResponse(response: TwoFactorDuoResponse) {\n    this.ikey = response.integrationKey;\n    this.skey = response.secretKey;\n    this.host = response.host;\n    this.enabled = response.enabled;\n  }\n}\n","export class DeviceVerificationRequest {\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(unknownDeviceVerificationEnabled: boolean) {\n    this.unknownDeviceVerificationEnabled = unknownDeviceVerificationEnabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n  token: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"authenticatorAppTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorDesc\" | i18n }}</p>\n            <p>\n              <strong>1. {{ \"twoStepAuthenticatorDownloadApp\" | i18n }}</strong>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              <p>{{ \"twoStepLoginProviderEnabled\" | i18n }}</p>\n              {{ \"twoStepAuthenticatorReaddDesc\" | i18n }}\n            </app-callout>\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorNeedApp\" | i18n }}</p>\n          </ng-container>\n          <ul class=\"bwi-ul\">\n            <li>\n              <i class=\"bwi bwi-li bwi-apple\"></i>{{ \"iosDevices\" | i18n }}:\n              <a\n                href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-android\"></i>{{ \"androidDevices\" | i18n }}:\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.authy.authy\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-windows\"></i>{{ \"windowsDevices\" | i18n }}:\n              <a\n                href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Microsoft Authenticator</a\n              >\n            </li>\n          </ul>\n          <p>{{ \"twoStepAuthenticatorAppsRecommended\" | i18n }}</p>\n          <p *ngIf=\"!enabled\">\n            <strong>2. {{ \"twoStepAuthenticatorScanCode\" | i18n }}</strong>\n          </p>\n          <hr *ngIf=\"enabled\" />\n          <p class=\"text-center\" [ngClass]=\"{ 'mb-0': enabled }\">\n            <canvas id=\"qr\"></canvas><br />\n            <code appA11yTitle=\"{{ 'key' | i18n }}\">{{ key }}</code>\n          </p>\n          <ng-container *ngIf=\"!enabled\">\n            <label for=\"token\">3. {{ \"twoStepAuthenticatorEnterCode\" | i18n }}</label>\n            <input\n              id=\"token\"\n              type=\"text\"\n              name=\"Token\"\n              class=\"form-control\"\n              [(ngModel)]=\"token\"\n              required\n              appInputVerbatim\n            />\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"@bitwarden/common/models/request/updateTwoFactorAuthenticatorRequest\";\nimport { TwoFactorAuthenticatorResponse } from \"@bitwarden/common/models/response/twoFactorAuthenticatorResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n// NOTE: There are additional options available but these are just the ones we are current using.\n// See: https://github.com/neocotic/qrious#examples\ninterface QRiousOptions {\n  element: HTMLElement;\n  value: string;\n  size: number;\n}\n\ndeclare global {\n  interface Window {\n    QRious: new (options: QRiousOptions) => unknown;\n  }\n}\n\n@Component({\n  selector: \"app-two-factor-authenticator\",\n  templateUrl: \"two-factor-authenticator.component.html\",\n})\nexport class TwoFactorAuthenticatorComponent\n  extends TwoFactorBaseComponent\n  implements OnInit, OnDestroy\n{\n  type = TwoFactorProviderType.Authenticator;\n  key: string;\n  token: string;\n  formPromise: Promise<TwoFactorAuthenticatorResponse>;\n\n  private qrScript: HTMLScriptElement;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    userVerificationService: UserVerificationService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n    this.qrScript = window.document.createElement(\"script\");\n    this.qrScript.src = \"scripts/qrious.min.js\";\n    this.qrScript.async = true;\n  }\n\n  ngOnInit() {\n    window.document.body.appendChild(this.qrScript);\n  }\n\n  ngOnDestroy() {\n    window.document.body.removeChild(this.qrScript);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorAuthenticatorResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n    request.token = this.token;\n    request.key = this.key;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorAuthenticatorResponse) {\n    this.token = null;\n    this.enabled = response.enabled;\n    this.key = response.key;\n    const email = await this.stateService.getEmail();\n    window.setTimeout(() => {\n      new window.QRious({\n        element: document.getElementById(\"qr\"),\n        value:\n          \"otpauth://totp/Bitwarden:\" +\n          encodeURIComponent(email) +\n          \"?secret=\" +\n          encodeURIComponent(this.key) +\n          \"&issuer=Bitwarden\",\n        size: 160,\n      });\n    }, 100);\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n  token: string;\n  email: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faEmailTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"emailTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <strong>{{ \"email\" | i18n }}:</strong> {{ email }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <p class=\"d-flex\">\n              <span class=\"mr-3\">{{ \"twoFactorEmailDesc\" | i18n }}</span>\n              <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\" />\n            </p>\n            <div class=\"form-group\">\n              <label for=\"email\">1. {{ \"twoFactorEmailEnterEmail\" | i18n }}</label>\n              <input\n                id=\"email\"\n                type=\"text\"\n                name=\"Email\"\n                class=\"form-control\"\n                [(ngModel)]=\"email\"\n                required\n                inputmode=\"email\"\n                appInputVerbatim=\"false\"\n              />\n            </div>\n            <div class=\"mb-3 d-flex\">\n              <button\n                #sendBtn\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\"\n                (click)=\"sendEmail()\"\n                [appApiAction]=\"emailPromise\"\n                [disabled]=\"sendBtn.loading\"\n              >\n                <i\n                  class=\"bwi bwi-spinner bwi-spin\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span>{{ \"sendEmail\" | i18n }}</span>\n              </button>\n              <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                {{ \"verificationCodeEmailSent\" | i18n: sentEmail }}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"token\">2. {{ \"twoFactorEmailEnterCode\" | i18n }}</label>\n              <input\n                id=\"token\"\n                type=\"text\"\n                name=\"Token\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/twoFactorEmailRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"@bitwarden/common/models/request/updateTwoFactorEmailRequest\";\nimport { TwoFactorEmailResponse } from \"@bitwarden/common/models/response/twoFactorEmailResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-email\",\n  templateUrl: \"two-factor-email.component.html\",\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Email;\n  email: string;\n  token: string;\n  sentEmail: string;\n  formPromise: Promise<TwoFactorEmailResponse>;\n  emailPromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorEmailResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  async sendEmail() {\n    try {\n      const request = await this.buildRequestModel(TwoFactorEmailRequest);\n      request.email = this.email;\n      this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n      await this.emailPromise;\n      this.sentEmail = this.email;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n    request.email = this.email;\n    request.token = this.token;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorEmail(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorEmailResponse) {\n    this.token = null;\n    this.email = response.email;\n    this.enabled = response.enabled;\n    if (!this.enabled && (this.email == null || this.email === \"\")) {\n      this.email = await this.stateService.getEmail();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faRecoveryTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"recoveryCodeTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <ng-container *ngIf=\"authed\">\n        <div class=\"modal-body text-center\">\n          <ng-container *ngIf=\"code\">\n            <p>{{ \"twoFactorRecoveryYourCode\" | i18n }}:</p>\n            <code class=\"text-lg\">{{ code }}</code>\n          </ng-container>\n          <ng-container *ngIf=\"!code\">\n            {{ \"twoFactorRecoveryNoCode\" | i18n }}\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">\n            {{ \"printCode\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorRecoverResponse } from \"@bitwarden/common/models/response/twoFactorRescoverResponse\";\n\n@Component({\n  selector: \"app-two-factor-recovery\",\n  templateUrl: \"two-factor-recovery.component.html\",\n})\nexport class TwoFactorRecoveryComponent {\n  type = -1;\n  code: string;\n  authed: boolean;\n  twoFactorProviderType = TwoFactorProviderType;\n\n  constructor(private i18nService: I18nService) {}\n\n  auth(authResponse: any) {\n    this.authed = true;\n    this.processResponse(authResponse.response);\n  }\n\n  print() {\n    const w = window.open();\n    w.document.write(\n      '<div style=\"font-size: 18px; text-align: center;\">' +\n        \"<p>\" +\n        this.i18nService.t(\"twoFactorRecoveryYourCode\") +\n        \":</p>\" +\n        \"<code style=\\\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\\\">\" +\n        this.code +\n        \"</code></div>\" +\n        '<p style=\"text-align: center;\">' +\n        new Date() +\n        \"</p>\"\n    );\n    w.onafterprint = () => w.close();\n    w.print();\n  }\n\n  private formatString(s: string) {\n    if (s == null) {\n      return null;\n    }\n    return s\n      .replace(/(.{4})/g, \"$1 \")\n      .trim()\n      .toUpperCase();\n  }\n\n  private processResponse(response: TwoFactorRecoverResponse) {\n    this.code = this.formatString(response.code);\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n  deviceResponse: PublicKeyCredential;\n  name: string;\n  id: number;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faU2fTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"webAuthnTitle\" | i18n }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorWebAuthnWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorWebAuthnSupportWeb\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\" />\n          <ul class=\"bwi-ul\">\n            <li\n              *ngFor=\"let k of keys; let i = index\"\n              #removeKeyBtn\n              [appApiAction]=\"k.removePromise\"\n            >\n              <i class=\"bwi bwi-li bwi-key\"></i>\n              <strong *ngIf=\"!k.configured || !k.name\">{{ \"webAuthnkeyX\" | i18n: i + 1 }}</strong>\n              <strong *ngIf=\"k.configured && k.name\">{{ k.name }}</strong>\n              <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\">\n                <ng-container *ngIf=\"k.migrated\">\n                  <span>{{ \"webAuthnMigrated\" | i18n }}</span>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                <i\n                  class=\"bwi bwi-spin bwi-spinner text-muted bwi-fw\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  *ngIf=\"removeKeyBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                -\n                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{ \"remove\" | i18n }}</a>\n              </ng-container>\n            </li>\n          </ul>\n          <hr />\n          <p>{{ \"twoFactorWebAuthnAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorU2fGiveName\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fPlugInReadKey\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fSaveForm\" | i18n }}</li>\n          </ol>\n          <div class=\"row\">\n            <div class=\"form-group col-6\">\n              <label for=\"name\">{{ \"name\" | i18n }}</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"Name\"\n                class=\"form-control\"\n                [(ngModel)]=\"name\"\n                [disabled]=\"!keyIdAvailable\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            (click)=\"readKey()\"\n            class=\"btn btn-outline-secondary mr-2\"\n            [disabled]=\"readKeyBtn.loading || webAuthnListening || !keyIdAvailable\"\n            #readKeyBtn\n            [appApiAction]=\"challengePromise\"\n          >\n            {{ \"readKey\" | i18n }}\n          </button>\n          <ng-container *ngIf=\"readKeyBtn.loading\">\n            <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n          </ng-container>\n          <ng-container *ngIf=\"!readKeyBtn.loading\">\n            <ng-container *ngIf=\"webAuthnListening\">\n              <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fWaiting\" | i18n }}...\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnResponse\">\n              <i class=\"bwi bwi-check-circle text-success\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fClickSave\" | i18n }}\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnError\">\n              <i class=\"bwi bwi-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fProblemReadingTryAgain\" | i18n }}\n            </ng-container>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"form.loading || !webAuthnResponse\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              *ngIf=\"form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!form.loading\">{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"@bitwarden/common/models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"@bitwarden/common/models/request/updateTwoFactorWebAuthnRequest\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"@bitwarden/common/models/response/twoFactorWebAuthnResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  id: number;\n  name: string;\n  configured: boolean;\n  migrated?: boolean;\n  removePromise: Promise<TwoFactorWebAuthnResponse> | null;\n}\n\n@Component({\n  selector: \"app-two-factor-webauthn\",\n  templateUrl: \"two-factor-webauthn.component.html\",\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.WebAuthn;\n  name: string;\n  keys: Key[];\n  keyIdAvailable: number = null;\n  keysConfiguredCount = 0;\n  webAuthnError: boolean;\n  webAuthnListening: boolean;\n  webAuthnResponse: PublicKeyCredential;\n  challengePromise: Promise<ChallengeResponse>;\n  formPromise: Promise<TwoFactorWebAuthnResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorWebAuthnResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n      // Should never happen.\n      return Promise.reject();\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n    request.deviceResponse = this.webAuthnResponse;\n    request.id = this.keyIdAvailable;\n    request.name = this.name;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  disable() {\n    return super.disable(this.formPromise);\n  }\n\n  async remove(key: Key) {\n    if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n      return;\n    }\n    const name = key.name != null ? key.name : this.i18nService.t(\"webAuthnkeyX\", key.id as any);\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeU2fConfirmation\"),\n      name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n    request.id = key.id;\n    try {\n      key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n      const response = await key.removePromise;\n      key.removePromise = null;\n      await this.processResponse(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async readKey() {\n    if (this.keyIdAvailable == null) {\n      return;\n    }\n    const request = await this.buildRequestModel(SecretVerificationRequest);\n    try {\n      this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n      const challenge = await this.challengePromise;\n      this.readDevice(challenge);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private readDevice(webAuthnChallenge: ChallengeResponse) {\n    // eslint-disable-next-line\n    console.log(\"listening for key...\");\n    this.resetWebAuthn(true);\n\n    navigator.credentials\n      .create({\n        publicKey: webAuthnChallenge,\n      })\n      .then((data: PublicKeyCredential) => {\n        this.ngZone.run(() => {\n          this.webAuthnListening = false;\n          this.webAuthnResponse = data;\n        });\n      })\n      .catch((err) => {\n        // eslint-disable-next-line\n        console.error(err);\n        this.resetWebAuthn(false);\n        // TODO: Should we display the actual error?\n        this.webAuthnError = true;\n      });\n  }\n\n  private resetWebAuthn(listening = false) {\n    this.webAuthnResponse = null;\n    this.webAuthnError = false;\n    this.webAuthnListening = listening;\n  }\n\n  private processResponse(response: TwoFactorWebAuthnResponse) {\n    this.resetWebAuthn();\n    this.keys = [];\n    this.keyIdAvailable = null;\n    this.name = null;\n    this.keysConfiguredCount = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (response.keys != null) {\n        const key = response.keys.filter((k) => k.id === i);\n        if (key.length > 0) {\n          this.keysConfiguredCount++;\n          this.keys.push({\n            id: i,\n            name: key[0].name,\n            configured: true,\n            migrated: key[0].migrated,\n            removePromise: null,\n          });\n          continue;\n        }\n      }\n      this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n      if (this.keyIdAvailable == null) {\n        this.keyIdAvailable = i;\n      }\n    }\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>YubiKey</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorYubikeyWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorYubikeySupportUsb\" | i18n }}</li>\n              <li>{{ \"twoFactorYubikeySupportMobile\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\" />\n          <p>{{ \"twoFactorYubikeyAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorYubikeyPlugIn\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySelectKey\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeyTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySaveForm\" | i18n }}</li>\n          </ol>\n          <hr />\n          <div class=\"row\">\n            <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n              <label for=\"key{{ i + 1 }}\">{{ \"yubikeyX\" | i18n: i + 1 }}</label>\n              <input\n                id=\"key{{ i + 1 }}\"\n                type=\"password\"\n                name=\"Key{{ i + 1 }}\"\n                class=\"form-control\"\n                [(ngModel)]=\"k.key\"\n                *ngIf=\"!k.existingKey\"\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                <span class=\"mr-2\">{{ k.existingKey }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link text-danger ml-auto\"\n                  (click)=\"remove(k)\"\n                  appA11yTitle=\"{{ 'remove' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <strong class=\"d-block mb-2\">{{ \"nfcSupport\" | i18n }}</strong>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\" />\n            <label class=\"form-check-label\" for=\"nfc\">{{\n              \"twoFactorYubikeySupportsNfc\" | i18n\n            }}</label>\n          </div>\n          <small class=\"form-text text-muted\">{{ \"twoFactorYubikeySupportsNfcDesc\" | i18n }}</small>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"@bitwarden/common/models/request/updateTwoFactorYubioOtpRequest\";\nimport { TwoFactorYubiKeyResponse } from \"@bitwarden/common/models/response/twoFactorYubiKeyResponse\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  key: string;\n  existingKey: string;\n}\n\n@Component({\n  selector: \"app-two-factor-yubikey\",\n  templateUrl: \"two-factor-yubikey.component.html\",\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Yubikey;\n  keys: Key[];\n  nfc = false;\n\n  formPromise: Promise<TwoFactorYubiKeyResponse>;\n  disablePromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorYubiKeyResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n    request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n    request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n    request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n    request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n    request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n    request.nfc = this.nfc;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"yubikeysUpdated\"));\n    });\n  }\n\n  disable() {\n    return super.disable(this.disablePromise);\n  }\n\n  remove(key: Key) {\n    key.existingKey = null;\n    key.key = null;\n  }\n\n  private processResponse(response: TwoFactorYubiKeyResponse) {\n    this.enabled = response.enabled;\n    this.keys = [\n      { key: response.key1, existingKey: this.padRight(response.key1) },\n      { key: response.key2, existingKey: this.padRight(response.key2) },\n      { key: response.key3, existingKey: this.padRight(response.key3) },\n      { key: response.key4, existingKey: this.padRight(response.key4) },\n      { key: response.key5, existingKey: this.padRight(response.key5) },\n    ];\n    this.nfc = response.nfc || !response.enabled;\n  }\n\n  private padRight(str: string, character = \"•\", size = 44) {\n    if (str == null || character == null || str.length >= size) {\n      return str;\n    }\n    const max = (size - str.length) / character.length;\n    for (let i = 0; i < max; i++) {\n      str += character;\n    }\n    return str;\n  }\n}\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n/**\n * Hides the element if the user has premium.\n */\n@Directive({\n  selector: \"[appNotPremium]\",\n})\nexport class NotPremiumDirective implements OnInit {\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const premium = await this.stateService.getCanAccessPremium();\n\n    if (premium) {\n      this.viewContainer.clear();\n    } else {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Component({\n  selector: \"app-premium-badge\",\n  template: `\n    <button type=\"button\" *appNotPremium bitBadge badgeType=\"success\" (click)=\"premiumRequired()\">\n      {{ \"premium\" | i18n }}\n    </button>\n  `,\n})\nexport class PremiumBadgeComponent {\n  constructor(private messagingService: MessagingService) {}\n\n  premiumRequired() {\n    this.messagingService.send(\"premiumRequired\");\n  }\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"twoStepLogin\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<p *ngIf=\"organizationId\">{{ \"twoStepLoginOrganizationDesc\" | i18n }}</p>\n<bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</bit-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</bit-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n<form *ngIf=\"!loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h2 class=\"mt-5 spaced-header\">\n        {{ \"deviceVerification\" | i18n }}\n      </h2>\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"enableDeviceVerification\"\n            name=\"enableDeviceVerification\"\n            disabled=\"{{ !isDeviceVerificationSectionEnabled }}\"\n            [(ngModel)]=\"enableDeviceVerification\"\n          />\n          <label class=\"form-check-label\" for=\"enableDeviceVerification\">\n            {{ \"enableDeviceVerification\" | i18n }}\n          </label>\n        </div>\n        <small class=\"form-text text-muted\">{{ \"deviceVerificationDesc\" | i18n }}</small>\n      </div>\n      <bit-submit-button [loading]=\"form.loading\" *ngIf=\"isDeviceVerificationSectionEnabled\">\n        {{ \"save\" | i18n }}\n      </bit-submit-button>\n    </div>\n  </div>\n</form>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component, OnInit, Type, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { DeviceVerificationRequest } from \"@bitwarden/common/models/request/deviceVerificationRequest\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { TwoFactorAuthenticatorComponent } from \"./two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./two-factor-recovery.component\";\nimport { TwoFactorWebAuthnComponent } from \"./two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./two-factor-yubikey.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent implements OnInit {\n  @ViewChild(\"recoveryTemplate\", { read: ViewContainerRef, static: true })\n  recoveryModalRef: ViewContainerRef;\n  @ViewChild(\"authenticatorTemplate\", { read: ViewContainerRef, static: true })\n  authenticatorModalRef: ViewContainerRef;\n  @ViewChild(\"yubikeyTemplate\", { read: ViewContainerRef, static: true })\n  yubikeyModalRef: ViewContainerRef;\n  @ViewChild(\"duoTemplate\", { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n  @ViewChild(\"emailTemplate\", { read: ViewContainerRef, static: true })\n  emailModalRef: ViewContainerRef;\n  @ViewChild(\"webAuthnTemplate\", { read: ViewContainerRef, static: true })\n  webAuthnModalRef: ViewContainerRef;\n\n  organizationId: string;\n  providers: any[] = [];\n  canAccessPremium: boolean;\n  showPolicyWarning = false;\n  loading = true;\n  enableDeviceVerification: boolean;\n  isDeviceVerificationSectionEnabled: boolean;\n  modal: ModalRef;\n  formPromise: Promise<any>;\n\n  constructor(\n    protected apiService: ApiService,\n    protected modalService: ModalService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    try {\n      const deviceVerificationSettings = await this.apiService.getDeviceVerificationSettings();\n      this.isDeviceVerificationSectionEnabled =\n        deviceVerificationSettings.isDeviceVerificationSectionEnabled;\n      this.enableDeviceVerification = deviceVerificationSettings.unknownDeviceVerificationEnabled;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    for (const key in TwoFactorProviders) {\n      // eslint-disable-next-line\n      if (!TwoFactorProviders.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const p = (TwoFactorProviders as any)[key];\n      if (this.filterProvider(p.type)) {\n        continue;\n      }\n\n      this.providers.push({\n        type: p.type,\n        name: p.name,\n        description: p.description,\n        enabled: false,\n        premium: p.premium,\n        sort: p.sort,\n      });\n    }\n\n    this.providers.sort((a: any, b: any) => a.sort - b.sort);\n    await this.load();\n  }\n\n  async load() {\n    this.loading = true;\n    const providerList = await this.getTwoFactorProviders();\n    providerList.data.forEach((p) => {\n      this.providers.forEach((p2) => {\n        if (p.type === p2.type) {\n          p2.enabled = p.enabled;\n        }\n      });\n    });\n    this.evaluatePolicies();\n    this.loading = false;\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.Authenticator: {\n        const authComp = await this.openModal(\n          this.authenticatorModalRef,\n          TwoFactorAuthenticatorComponent\n        );\n        authComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Yubikey: {\n        const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n        yubiComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Duo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Duo);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Email: {\n        const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n        emailComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Email);\n        });\n        break;\n      }\n      case TwoFactorProviderType.WebAuthn: {\n        const webAuthnComp = await this.openModal(\n          this.webAuthnModalRef,\n          TwoFactorWebAuthnComponent\n        );\n        webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  recoveryCode() {\n    this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorProviders();\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type === TwoFactorProviderType.OrganizationDuo;\n  }\n\n  protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n    const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n    this.modal = modal;\n\n    return childComponent;\n  }\n\n  protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n    if (!enabled && this.modal != null) {\n      this.modal.close();\n    }\n    this.providers.forEach((p) => {\n      if (p.type === type) {\n        p.enabled = enabled;\n      }\n    });\n    this.evaluatePolicies();\n  }\n\n  private async evaluatePolicies() {\n    if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n      this.showPolicyWarning = await this.policyService.policyAppliesToUser(\n        PolicyType.TwoFactorAuthentication\n      );\n    } else {\n      this.showPolicyWarning = false;\n    }\n  }\n\n  async submit() {\n    try {\n      if (this.enableDeviceVerification) {\n        const email = await this.stateService.getEmail();\n        const confirmed = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\n            \"areYouSureYouWantToEnableDeviceVerificationTheVerificationCodeEmailsWillArriveAtX\",\n            email\n          ),\n          this.i18nService.t(\"deviceVerification\"),\n          this.i18nService.t(\"yes\"),\n          this.i18nService.t(\"no\"),\n          \"warning\"\n        );\n        if (!confirmed) {\n          return;\n        }\n      }\n\n      this.formPromise = this.apiService.putDeviceVerificationSettings(\n        new DeviceVerificationRequest(this.enableDeviceVerification)\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedDeviceVerification\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { TwoFactorDuoComponent } from \"../../settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../settings/two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService\n  ) {\n    super(\n      apiService,\n      modalService,\n      messagingService,\n      policyService,\n      stateService,\n      platformUtilsService,\n      i18nService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CardView } from \"@bitwarden/common/models/view/cardView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identityView\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\nimport { LoginView } from \"@bitwarden/common/models/view/loginView\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secureNoteView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"cardBrandMir\"), value: \"Mir\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { FieldView } from \"@bitwarden/common/models/view/fieldView\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<ng-container>\n  <h3 class=\"mt-4\">{{ \"customFields\" | i18n }}</h3>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n    <div\n      role=\"group\"\n      class=\"row\"\n      cdkDrag\n      *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n      attr.aria-label=\"{{ f.name }}\"\n    >\n      <div class=\"col-5 form-group\">\n        <div class=\"d-flex\">\n          <label for=\"fieldName{{ i }}\">{{ \"name\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/custom-fields/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"fieldName{{ i }}\"\n          type=\"text\"\n          name=\"Field.Name{{ i }}\"\n          [(ngModel)]=\"f.name\"\n          class=\"form-control\"\n          appInputVerbatim\n          [disabled]=\"cipher.isDeleted || viewOnly\"\n        />\n      </div>\n      <div class=\"col-7 form-group\">\n        <label for=\"fieldValue{{ i }}\">{{ \"value\" | i18n }}</label>\n        <div class=\"d-flex align-items-center\">\n          <!-- Text -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              appInputVerbatim\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', 'Field')\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Hidden -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              type=\"{{ f.showValue ? 'text' : 'password' }}\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              class=\"form-control text-monospace\"\n              appInputVerbatim\n              autocomplete=\"new-password\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleFieldValue(f)\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n                >\n                </i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Linked -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\">\n            <select\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              class=\"form-control\"\n              [(ngModel)]=\"f.linkedId\"\n              *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            >\n              <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"flex-fill\">\n            <!-- Boolean -->\n            <input\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"f.value\"\n              *ngIf=\"f.type === fieldType.Boolean\"\n              appTrueFalseValue\n              trueValue=\"true\"\n              falseValue=\"false\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-danger ml-2\"\n            (click)=\"removeField(f)\"\n            appA11yTitle=\"{{ 'remove' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-muted cursor-move\"\n            appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-hamburger bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Add new custom field -->\n  <a\n    href=\"#\"\n    appStopClick\n    (click)=\"addField()\"\n    class=\"d-inline-block mb-2\"\n    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n  >\n    <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomField\" | i18n }}\n  </a>\n  <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n    <div class=\"col-5\">\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  @Input() viewOnly: boolean;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"cipherAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"cipher\">\n        <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\">\n          {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n        </app-callout>\n        <div class=\"row\" *ngIf=\"!editMode && !viewOnly\">\n          <div class=\"col-6 form-group\">\n            <label for=\"type\">{{ \"whatTypeOfItem\" | i18n }}</label>\n            <select\n              id=\"type\"\n              name=\"Type\"\n              [(ngModel)]=\"cipher.type\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted\"\n              appAutofocus\n            >\n              <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"cipher.name\"\n              required\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n          </div>\n          <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n            <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n            <select\n              id=\"folder\"\n              name=\"FolderId\"\n              [(ngModel)]=\"cipher.folderId\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n            </select>\n          </div>\n        </div>\n        <!-- Login -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginUsername\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Login.Username\"\n                  [(ngModel)]=\"cipher.login.username\"\n                  appInputVerbatim\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n                    (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 form-group\">\n              <div class=\"d-flex\">\n                <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n                  <a\n                    href=\"#\"\n                    class=\"d-block mr-2 bwi-icon-above-input\"\n                    appStopClick\n                    appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                    (click)=\"generatePassword()\"\n                    *ngIf=\"cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-generate\" aria-hidden=\"true\"></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    #checkPasswordBtn\n                    appStopClick\n                    appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                    (click)=\"checkPassword()\"\n                    [appApiAction]=\"checkPasswordPromise\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-check-circle\"\n                      [hidden]=\"checkPasswordBtn.loading\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-spinner bwi-spin\"\n                      aria-hidden=\"true\"\n                      [hidden]=\"!checkPasswordBtn.loading\"\n                      title=\"{{ 'loading' | i18n }}\"\n                    ></i>\n                  </a>\n                </div>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginPassword\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Login.Password\"\n                  [(ngModel)]=\"cipher.login.password\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePassword()\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                    (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"tw-flex tw-flex-row\">\n            <div class=\"tw-mb-4 tw-w-1/2\">\n              <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n              <input\n                id=\"loginTotp\"\n                type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n                name=\"Login.Totp\"\n                class=\"form-control text-monospace\"\n                [(ngModel)]=\"cipher.login.totp\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n              />\n            </div>\n            <div class=\"tw-mb-4 tw-ml-4 tw-flex tw-w-1/2 tw-items-end\" [ngClass]=\"{ low: totpLow }\">\n              <div\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n                *ngIf=\"!cipher.login.totp || (cipher.login.totp && !canAccessPremium)\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec tw-text-muted\">15</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle-muted inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        opacity=\"0.25\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': 40 }\"\n                      ></circle>\n                      <circle\n                        class=\"totp-circle-muted outer\"\n                        opacity=\"0.25\"\n                        r=\"14\"\n                        cy=\"16\"\n                        cx=\"16\"\n                      ></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-3 tw-ml-2 tw-text-muted\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >--- ---</span\n                >\n                <i class=\"bwi bwi-lg bwi-clone tw-text-muted\" aria-hidden=\"true\"></i>\n              </div>\n              <div class=\"tw-pb-2\" *ngIf=\"!cipher.login.totp || !totpCode\">\n                <app-premium-badge\n                  *ngIf=\"!organization && !cipher.organizationId\"\n                  class=\"ml-3\"\n                ></app-premium-badge>\n                <a\n                  href=\"#\"\n                  appStopClick\n                  bitBadge\n                  badgeType=\"primary\"\n                  class=\"tw-ml-4\"\n                  (click)=\"upgradeOrganization()\"\n                  *ngIf=\"\n                    (organization && !organization.useTotp) ||\n                    (!organization &&\n                      !canAccessPremium &&\n                      cipher.organizationId &&\n                      !cipher.organizationUseTotp)\n                  \"\n                >\n                  {{ \"upgrade\" | i18n }}\n                </a>\n              </div>\n              <div\n                *ngIf=\"cipher.login.totp && totpCode && canAccessPremium\"\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec\">{{ totpSec }}</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                      ></circle>\n                      <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-2 tw-ml-2 tw-mt-1\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >{{ totpCodeFormatted }}</span\n                >\n                <button\n                  type=\"button\"\n                  class=\"tw-items-center tw-border-none tw-bg-transparent tw-text-primary-500\"\n                  appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n                  (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"cipher.login.hasUris\">\n            <div\n              role=\"group\"\n              class=\"row\"\n              *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n              attr.aria-label=\"{{ 'uriPosition' | i18n: i + 1 }}\"\n            >\n              <div class=\"col-7 form-group\">\n                <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n                <div class=\"input-group\">\n                  <input\n                    class=\"form-control\"\n                    id=\"loginUri{{ i }}\"\n                    type=\"text\"\n                    name=\"Login.Uris[{{ i }}].Uri\"\n                    [(ngModel)]=\"u.uri\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                    placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                    appInputVerbatim\n                  />\n                  <div class=\"input-group-append\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'launch' | i18n }}\"\n                      (click)=\"launch(u)\"\n                      [disabled]=\"!u.canLaunch\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n                      (click)=\"copy(u.uri, 'uri', 'URI')\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-5 form-group\">\n                <div class=\"d-flex\">\n                  <label for=\"loginUriMatch{{ i }}\">\n                    {{ \"matchDetection\" | i18n }}\n                  </label>\n                  <a\n                    class=\"ml-auto\"\n                    href=\"https://bitwarden.com/help/uri-match-detection/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                  >\n                    <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n                <div class=\"d-flex\">\n                  <select\n                    class=\"form-control overflow-hidden\"\n                    id=\"loginUriMatch{{ i }}\"\n                    name=\"Login.Uris[{{ i }}].Match\"\n                    [(ngModel)]=\"u.match\"\n                    (change)=\"loginUriMatchChanged(u)\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                  >\n                    <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">\n                      {{ o.name }}\n                    </option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link text-danger ml-2\"\n                    (click)=\"removeUri(u)\"\n                    appA11yTitle=\"{{ 'remove' | i18n }}\"\n                    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n                  >\n                    <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <a\n            href=\"#\"\n            appStopClick\n            (click)=\"addUri()\"\n            class=\"d-inline-block mb-3\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly\"\n          >\n            <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n          </a>\n        </ng-container>\n        <!-- Card -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n              <input\n                id=\"cardCardholderName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.CardCardholderName\"\n                [(ngModel)]=\"cipher.card.cardholderName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n              <select\n                id=\"cardBrand\"\n                class=\"form-control\"\n                name=\"Card.Brand\"\n                [(ngModel)]=\"cipher.card.brand\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardNumber\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                  name=\"Card.Number\"\n                  [(ngModel)]=\"cipher.card.number\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardNumber()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{\n                        'bwi-eye': !showCardNumber,\n                        'bwi-eye-slash': showCardNumber\n                      }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n                    (click)=\"copy(cipher.card.number, 'number', 'Number')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n              <select\n                id=\"cardExpMonth\"\n                class=\"form-control\"\n                name=\"Card.ExpMonth\"\n                [(ngModel)]=\"cipher.card.expMonth\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n              <input\n                id=\"cardExpYear\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.ExpYear\"\n                [(ngModel)]=\"cipher.card.expYear\"\n                placeholder=\"{{ 'ex' | i18n }} 2019\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardCode\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                  name=\"Card.Code\"\n                  [(ngModel)]=\"cipher.card.code\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardCode()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'securityCode' | i18n }}\"\n                    (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!-- Identity -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n              <select\n                id=\"idTitle\"\n                class=\"form-control\"\n                name=\"Identity.Title\"\n                [(ngModel)]=\"cipher.identity.title\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                  {{ o.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n              <input\n                id=\"idFirstName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.FirstName\"\n                [(ngModel)]=\"cipher.identity.firstName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n              <input\n                id=\"idMiddleName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.MiddleName\"\n                [(ngModel)]=\"cipher.identity.middleName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n              <input\n                id=\"idLastName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LastName\"\n                [(ngModel)]=\"cipher.identity.lastName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"idUsername\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Username\"\n                [(ngModel)]=\"cipher.identity.username\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n              <input\n                id=\"idCompany\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Company\"\n                [(ngModel)]=\"cipher.identity.company\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n              <input\n                id=\"idSsn\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.SSN\"\n                [(ngModel)]=\"cipher.identity.ssn\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n              <input\n                id=\"idPassportNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PassportNumber\"\n                [(ngModel)]=\"cipher.identity.passportNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n              <input\n                id=\"idLicenseNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LicenseNumber\"\n                [(ngModel)]=\"cipher.identity.licenseNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n              <input\n                id=\"idEmail\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"email\"\n                name=\"Identity.Email\"\n                [(ngModel)]=\"cipher.identity.email\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n              <input\n                id=\"idPhone\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"tel\"\n                name=\"Identity.Phone\"\n                [(ngModel)]=\"cipher.identity.phone\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n              <input\n                id=\"idAddress1\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address1\"\n                [(ngModel)]=\"cipher.identity.address1\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n              <input\n                id=\"idAddress2\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address2\"\n                [(ngModel)]=\"cipher.identity.address2\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n              <input\n                id=\"idAddress3\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address3\"\n                [(ngModel)]=\"cipher.identity.address3\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n              <input\n                id=\"idCity\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.City\"\n                [(ngModel)]=\"cipher.identity.city\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n              <input\n                id=\"idState\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.State\"\n                [(ngModel)]=\"cipher.identity.state\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n              <input\n                id=\"idPostalCode\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PostalCode\"\n                [(ngModel)]=\"cipher.identity.postalCode\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n              <input\n                id=\"idCountry\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Country\"\n                [(ngModel)]=\"cipher.identity.country\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n            </div>\n          </div>\n        </ng-container>\n        <div class=\"form-group\">\n          <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [disabled]=\"cipher.isDeleted || viewOnly\"\n            class=\"form-control\"\n          ></textarea>\n        </div>\n        <app-vault-add-edit-custom-fields\n          [cipher]=\"cipher\"\n          [thisCipherType]=\"cipher.type\"\n          [viewOnly]=\"viewOnly\"\n          [copy]=\"copy.bind(this)\"\n        ></app-vault-add-edit-custom-fields>\n        <ng-container *ngIf=\"allowOwnershipAssignment()\">\n          <h3 class=\"mt-4\">{{ \"ownership\" | i18n }}</h3>\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n              <select\n                id=\"organizationId\"\n                class=\"form-control\"\n                name=\"OrganizationId\"\n                [(ngModel)]=\"cipher.organizationId\"\n                (change)=\"organizationChanged()\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n          <h3 class=\"mt-4\">{{ \"collections\" | i18n }}</h3>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <ng-container *ngIf=\"collections && collections.length\">\n            <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"c.checked\"\n                id=\"collection-{{ i }}\"\n                name=\"Collection[{{ i }}].Checked\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n              <label class=\"form-check-label\" for=\"collection-{{ i }}\">{{ c.name }}</label>\n            </div>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"editMode\">\n          <div class=\"small text-muted mt-4\">\n            <div>\n              <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n              {{ cipher.revisionDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"showRevisionDate\">\n              <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n              {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"hasPasswordHistory\">\n              <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n              <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{ 'view' | i18n }}\">\n                {{ cipher.passwordHistory.length }}\n              </a>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n              <div *ngFor=\"let ph of cipher.passwordHistory\">\n                {{ ph.lastUsedDate | date: \"short\" }} -\n                <span class=\"generated-wrapper text-monospace ml-2\">{{ ph.password }}</span>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"canUseReprompt\">\n          <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [ngModel]=\"reprompt\"\n              (change)=\"repromptChanged()\"\n              id=\"passwordPrompt\"\n              name=\"passwordPrompt\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            />\n            <label class=\"form-check-label\" for=\"passwordPrompt\">{{\n              \"passwordPrompt\" | i18n\n            }}</label>\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (cipher?.isDeleted ? \"restore\" : \"save\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ (viewOnly ? \"close\" : \"cancel\") | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\">\n          <button\n            *ngIf=\"!organization && !cipher.isDeleted\"\n            type=\"button\"\n            (click)=\"toggleFavorite()\"\n            class=\"btn btn-link\"\n            appA11yTitle=\"{{ (cipher.favorite ? 'unfavorite' : 'favorite') | i18n }}\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              [ngClass]=\"{ 'bwi-star-f': cipher.favorite, 'bwi-star': !cipher.favorite }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ (cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n }}\"\n            *ngIf=\"editMode && !cloneMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  showRevisionDate = false;\n  hasPasswordHistory = false;\n  viewingPasswordHistory = false;\n  viewOnly = false;\n\n  protected totpInterval: number;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    protected totpService: TotpService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected messagingService: MessagingService,\n    eventService: EventService,\n    protected policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n    this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n    this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n    this.cleanUp();\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (this.cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = window.setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n  }\n\n  toggleFavorite() {\n    this.cipher.favorite = !this.cipher.favorite;\n  }\n\n  launch(uri: LoginUriView) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (this.editMode) {\n      if (typeI18nKey === \"password\") {\n        this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n      } else if (typeI18nKey === \"securityCode\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n      } else if (aType === \"H_Field\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n      }\n    }\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      const options = (await this.passwordGenerationService.getOptions())[0];\n      this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n    }\n    return confirmed;\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", {\n      organizationId: this.cipher.organizationId,\n    });\n  }\n\n  showGetPremium() {\n    if (this.canAccessPremium) {\n      return;\n    }\n    if (this.cipher.organizationUseTotp) {\n      this.upgradeOrganization();\n    } else {\n      this.premiumRequired();\n    }\n  }\n\n  viewHistory() {\n    this.viewingPasswordHistory = !this.viewingPasswordHistory;\n  }\n\n  protected cleanUp() {\n    if (this.totpInterval) {\n      window.clearInterval(this.totpInterval);\n    }\n  }\n\n  protected async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  protected allowOwnershipAssignment() {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCreateRequest } from \"@bitwarden/common/models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"@bitwarden/common/models/request/cipherRequest\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../../vault/add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  organization: Organization;\n  originalCipher: Cipher = null;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  protected allowOwnershipAssignment() {\n    if (\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    ) {\n      if (this.organization != null) {\n        return this.cloneMode && this.organization.canEditAnyCollection;\n      } else {\n        return !this.editMode || this.cloneMode;\n      }\n    }\n    return false;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    const data = new CipherData(response);\n    this.originalCipher = new Cipher(data);\n    return new Cipher(data);\n  }\n\n  protected encryptCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.encryptCipher();\n    }\n    return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n  }\n\n  protected async saveCipher(cipher: Cipher) {\n    if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n      return super.saveCipher(cipher);\n    }\n    if (this.editMode && !this.cloneMode) {\n      const request = new CipherRequest(cipher);\n      return this.apiService.putCipherAdmin(this.cipherId, request);\n    } else {\n      const request = new CipherCreateRequest(cipher);\n      return this.apiService.postCipherAdmin(request);\n    }\n  }\n\n  protected async deleteCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher();\n    }\n    return this.cipher.isDeleted\n      ? this.apiService.deleteCipherAdmin(this.cipherId)\n      : this.apiService.putDeleteCipherAdmin(this.cipherId);\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { AddEditComponent as OrgAddEditComponent } from \"../../organizations/vault/add-edit.component\";\nimport { AddEditComponent } from \"../../vault/add-edit.component\";\n\n@Directive()\nexport class CipherReportComponent {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n\n  loading = false;\n  hasLoaded = false;\n  ciphers: CipherView[] = [];\n  organization: Organization;\n\n  constructor(\n    private modalService: ModalService,\n    protected messagingService: MessagingService,\n    public requiresPaid: boolean,\n    private stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async load() {\n    this.loading = true;\n    await this.setCiphers();\n    this.loading = false;\n    this.hasLoaded = true;\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (!(await this.repromptCipher(cipher))) {\n      return;\n    }\n\n    const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      type,\n      this.cipherAddEditModalRef,\n      (comp: OrgAddEditComponent | AddEditComponent) => {\n        if (this.organization != null) {\n          (comp as OrgAddEditComponent).organization = this.organization;\n          comp.organizationId = this.organization.id;\n        }\n\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  protected async checkAccess(): Promise<boolean> {\n    if (this.organization != null) {\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      if (this.requiresPaid && !this.organization.useTotp) {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected async setCiphers() {\n    this.ciphers = [];\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n  Mir: \"card-mir\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<bit-submit-button [loading]=\"loading\" (click)=\"load()\">\n  {{ \"checkExposedPasswords\" | i18n }}\n</bit-submit-button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  exposedPasswordMap = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  ngOnInit() {\n    this.checkAccess();\n  }\n\n  async load() {\n    if (await this.checkAccess()) {\n      super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const exposedPasswordCiphers: CipherView[] = [];\n    const promises: Promise<void>[] = [];\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n        if (exposedCount > 0) {\n          exposedPasswordCiphers.push(c);\n          this.exposedPasswordMap.set(c.id, exposedCount);\n        }\n      });\n      promises.push(promise);\n    });\n    await Promise.all(promises);\n    this.ciphers = exposedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent } from \"../../reports/pages/exposed-passwords-report.component\";\n\n@Component({\n  selector: \"app-org-exposed-passwords-report\",\n  templateUrl: \"../../reports/pages/exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      auditService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await this.checkAccess();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              bitBadge\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n  services = new Map<string, string>();\n  cipherDocs = new Map<string, string>();\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    try {\n      await this.load2fa();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (this.services.size > 0) {\n      const allCiphers = await this.getAllCiphers();\n      const inactive2faCiphers: CipherView[] = [];\n      const promises: Promise<void>[] = [];\n      const docs = new Map<string, string>();\n      allCiphers.forEach((c) => {\n        if (\n          c.type !== CipherType.Login ||\n          (c.login.totp != null && c.login.totp !== \"\") ||\n          !c.login.hasUris ||\n          c.isDeleted\n        ) {\n          return;\n        }\n        for (let i = 0; i < c.login.uris.length; i++) {\n          const u = c.login.uris[i];\n          if (u.uri != null && u.uri !== \"\") {\n            const uri = u.uri.replace(\"www.\", \"\");\n            const domain = Utils.getDomain(uri);\n            if (domain != null && this.services.has(domain)) {\n              if (this.services.get(domain) != null) {\n                docs.set(c.id, this.services.get(domain));\n              }\n              inactive2faCiphers.push(c);\n            }\n          }\n        }\n      });\n      await Promise.all(promises);\n      this.ciphers = inactive2faCiphers;\n      this.cipherDocs = docs;\n    }\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  private async load2fa() {\n    if (this.services.size > 0) {\n      return;\n    }\n    const response = await fetch(new Request(\"https://2fa.directory/api/v3/totp.json\"));\n    if (response.status !== 200) {\n      throw new Error();\n    }\n    const responseJson = await response.json();\n    for (const service of responseJson) {\n      const serviceData = service[1];\n      if (serviceData.domain == null) {\n        continue;\n      }\n      if (serviceData.documentation == null) {\n        continue;\n      }\n      if (serviceData[\"additional-domains\"] != null) {\n        for (const additionalDomain of serviceData[\"additional-domains\"]) {\n          this.services.set(additionalDomain, serviceData.documentation);\n        }\n      }\n      this.services.set(serviceData.domain, serviceData.documentation);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent } from \"../../reports/pages/inactive-two-factor-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"../../reports/pages/inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      modalService,\n      messagingService,\n      stateService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordUseMap: Map<string, number>;\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const ciphersWithPasswords: CipherView[] = [];\n    this.passwordUseMap = new Map<string, number>();\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      ciphersWithPasswords.push(c);\n      if (this.passwordUseMap.has(c.login.password)) {\n        this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n      } else {\n        this.passwordUseMap.set(c.login.password, 1);\n      }\n    });\n    const reusedPasswordCiphers = ciphersWithPasswords.filter(\n      (c) =>\n        this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1\n    );\n    this.ciphers = reusedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from an organization view\n    return true;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent } from \"../../reports/pages/reused-passwords-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"../../reports/pages/reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"container page-content\">\n  <ng-container *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"row\">\n      <div class=\"col-3\">\n        <div class=\"card mb-4\" *ngIf=\"organization.canAccessImportExport\">\n          <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n          <div class=\"list-group list-group-flush\">\n            <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"importData\" | i18n }}\n            </a>\n            <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"exportVault\" | i18n }}\n            </a>\n          </div>\n        </div>\n        <div class=\"card\" *ngIf=\"organization.canAccessReports\">\n          <div class=\"card-header d-flex\">\n            {{ \"reports\" | i18n }}\n            <div class=\"ml-auto\">\n              <a\n                href=\"#\"\n                appStopClick\n                bitBadge\n                *ngIf=\"!accessReports\"\n                (click)=\"upgradeOrganization()\"\n              >\n                {{ \"upgrade\" | i18n }}\n              </a>\n            </div>\n          </div>\n          <div class=\"list-group list-group-flush\">\n            <a\n              routerLink=\"exposed-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"exposedPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"reused-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"reusedPasswordsReport\" | i18n }}\n            </a>\n            <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"weakPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"unsecured-websites-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"unsecuredWebsitesReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"inactive-two-factor-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"inactive2faReport\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-9\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent {\n  organization: Organization;\n  accessReports = false;\n  loading = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private messagingService: MessagingService\n  ) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      this.accessReports = this.organization.useTotp;\n      this.loading = false;\n    });\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const unsecuredCiphers = allCiphers.filter((c) => {\n      if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n        return false;\n      }\n      return c.login.uris.some((u) => u.uri != null && u.uri.indexOf(\"http://\") === 0);\n    });\n    this.ciphers = unsecuredCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent } from \"../../reports/pages/unsecured-websites-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"../../reports/pages/unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge [badgeType]=\"passwordStrengthMap.get(c.id)[1]\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordStrengthMap = new Map<string, [string, string]>();\n\n  private passwordStrengthCache = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const weakPasswordCiphers: CipherView[] = [];\n    const isUserNameNotEmpty = (c: CipherView): boolean => {\n      return c.login.username != null && c.login.username.trim() !== \"\";\n    };\n    const getCacheKey = (c: CipherView): string => {\n      return c.login.password + \"_____\" + (isUserNameNotEmpty(c) ? c.login.username : \"\");\n    };\n\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const hasUserName = isUserNameNotEmpty(c);\n      const cacheKey = getCacheKey(c);\n      if (!this.passwordStrengthCache.has(cacheKey)) {\n        let userInput: string[] = [];\n        if (hasUserName) {\n          const atPosition = c.login.username.indexOf(\"@\");\n          if (atPosition > -1) {\n            userInput = userInput\n              .concat(\n                c.login.username\n                  .substr(0, atPosition)\n                  .trim()\n                  .toLowerCase()\n                  .split(/[^A-Za-z0-9]/)\n              )\n              .filter((i) => i.length >= 3);\n          } else {\n            userInput = c.login.username\n              .trim()\n              .toLowerCase()\n              .split(/[^A-Za-z0-9]/)\n              .filter((i) => i.length >= 3);\n          }\n        }\n        const result = this.passwordGenerationService.passwordStrength(\n          c.login.password,\n          userInput.length > 0 ? userInput : null\n        );\n        this.passwordStrengthCache.set(cacheKey, result.score);\n      }\n      const score = this.passwordStrengthCache.get(cacheKey);\n      if (score != null && score <= 2) {\n        this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n        weakPasswordCiphers.push(c);\n      }\n    });\n    weakPasswordCiphers.sort((a, b) => {\n      return (\n        this.passwordStrengthCache.get(getCacheKey(a)) -\n        this.passwordStrengthCache.get(getCacheKey(b))\n      );\n    });\n    this.ciphers = weakPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n\n  private scoreKey(score: number): [string, string] {\n    switch (score) {\n      case 4:\n        return [\"strong\", \"success\"];\n      case 3:\n        return [\"good\", \"primary\"];\n      case 2:\n        return [\"weak\", \"warning\"];\n      default:\n        return [\"veryWeak\", \"danger\"];\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent } from \"../../reports/pages/weak-passwords-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"../../reports/pages/weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      passwordGenerationService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { GetOrgNameFromIdPipe } from \"./get-organization-name.pipe\";\n\n@NgModule({\n  declarations: [GetOrgNameFromIdPipe],\n  exports: [GetOrgNameFromIdPipe],\n})\nexport class PipesModule {}\n","import { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\n\nexport class VaultService {\n  calculateSearchBarLocalizationString(vaultFilter: VaultFilter): string {\n    if (vaultFilter.status === \"favorites\") {\n      return \"searchFavorites\";\n    }\n    if (vaultFilter.status === \"trash\") {\n      return \"searchTrash\";\n    }\n    if (vaultFilter.cipherType != null) {\n      return \"searchType\";\n    }\n    if (vaultFilter.selectedFolderId != null && vaultFilter.selectedFolderId != \"none\") {\n      return \"searchFolder\";\n    }\n    if (vaultFilter.selectedCollection) {\n      return \"searchCollection\";\n    }\n    if (vaultFilter.selectedOrganizationId != null) {\n      return \"searchOrganization\";\n    }\n    if (vaultFilter.myVaultOnly) {\n      return \"searchMyVault\";\n    }\n\n    return \"searchVault\";\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\nimport { LooseComponentsModule } from \"../../shared/loose-components.module\";\nimport { VaultFilterModule } from \"../vault-filter/vault-filter.module\";\n\nimport { PipesModule } from \"./pipes/pipes.module\";\nimport { VaultService } from \"./vault.service\";\n\n@NgModule({\n  imports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  exports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  providers: [\n    {\n      provide: VaultService,\n      useClass: VaultService,\n    },\n  ],\n})\nexport class VaultSharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultFilterSharedModule } from \"../../../vault/vault-filter/shared/vault-filter-shared.module\";\n\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollection = false; // This is needed because of how the \"Unassigned\" collection works. It has a null id.\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollection = false;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.status === \"favorites\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.status === \"trash\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolder && this.selectedFolderId == null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.selectedFolder && this.selectedFolderId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.selectedFolderId;\n      }\n      if (this.selectedCollection && this.selectedCollectionId == null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.organizationId != null &&\n          (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n      }\n      if (this.selectedCollection && this.selectedCollectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.includes(this.selectedCollectionId);\n      }\n      if (this.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.selectedOrganizationId;\n      }\n      if (this.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const encBuf = await EncArrayBuffer.fromResponse(response);\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"attachmentsTitle\">\n          {{ \"attachments\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n          <tbody>\n            <tr *ngFor=\"let a of cipher.attachments\">\n              <td class=\"table-list-icon\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i>\n                <i\n                  class=\"bwi bwi-spinner bwi-lg bwi-fw bwi-spin\"\n                  *ngIf=\"a.downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </td>\n              <td class=\"wrap\">\n                <div class=\"d-flex\">\n                  <a href=\"#\" appStopClick (click)=\"download(a)\">{{ a.fileName }}</a>\n                  <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                    <a\n                      href=\"https://bitwarden.com/help/attachments/#fixing-old-attachments\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <i\n                        class=\"bwi bwi-exclamation-triangle text-warning\"\n                        title=\"{{ 'attachmentFixDesc' | i18n }}\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span class=\"sr-only\">{{ \"attachmentFixDesc\" | i18n }}</span></a\n                    >\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                      (click)=\"reupload(a)\"\n                      #reuploadBtn\n                      [appApiAction]=\"reuploadPromises[a.id]\"\n                      [disabled]=\"reuploadBtn.loading\"\n                    >\n                      {{ \"fix\" | i18n }}\n                    </button>\n                  </div>\n                </div>\n                <small>{{ a.sizeName }}</small>\n              </td>\n              <td class=\"table-list-options\" *ngIf=\"!viewOnly\">\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'delete' | i18n }}\"\n                  (click)=\"delete(a)\"\n                  #deleteBtn\n                  [appApiAction]=\"deletePromises[a.id]\"\n                  [disabled]=\"deleteBtn.loading\"\n                >\n                  <i\n                    class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                    [hidden]=\"deleteBtn.loading\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <i\n                    class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                    [hidden]=\"!deleteBtn.loading\"\n                    title=\"{{ 'loading' | i18n }}\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!viewOnly\">\n          <h3>{{ \"newAttachment\" | i18n }}</h3>\n          <label for=\"file\" class=\"sr-only\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n          <small class=\"form-text text-muted\">{{ \"maxFileSize\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.showFixOldAttachments(attachment)) {\n      await this.reuploadCipherAttachment(attachment, false);\n    }\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.cipher.organizationId == null;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"../../vault/attachments.component\";\n\n@Component({\n  selector: \"app-org-vault-attachments\",\n  templateUrl: \"../../vault/attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  organization: Organization;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      stateService,\n      platformUtilsService,\n      apiService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n      await super.reuploadCipherAttachment(attachment, true);\n    }\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(\n      this.cipherDomain,\n      file,\n      this.organization.canEditAnyCollection\n    );\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipherAttachment(attachmentId);\n    }\n    return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.organization.canEditAnyCollection;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-org-badge\",\n  templateUrl: \"organization-name-badge.component.html\",\n})\nexport class OrganizationNameBadgeComponent implements OnInit {\n  @Input() organizationName: string;\n  @Input() profileName: string;\n\n  @Output() onOrganizationClicked = new EventEmitter<string>();\n\n  color: string;\n  textColor: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit(): void {\n    if (this.organizationName == null || this.organizationName === \"\") {\n      this.organizationName = this.i18nService.t(\"me\");\n      this.color = this.stringToColor(this.profileName.toUpperCase());\n    }\n    if (this.color == null) {\n      this.color = this.stringToColor(this.organizationName.toUpperCase());\n    }\n    this.textColor = this.pickTextColorBasedOnBgColor();\n  }\n\n  // This value currently isn't stored anywhere, only calculated in the app-avatar component\n  // Once we are allowing org colors to be changed and saved, change this out\n  private stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  // There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n  // https://stackoverflow.com/a/3943023/6869691\n  private pickTextColorBasedOnBgColor() {\n    const color = this.color.charAt(0) === \"#\" ? this.color.substring(1, 7) : this.color;\n    const r = parseInt(color.substring(0, 2), 16); // hexToR\n    const g = parseInt(color.substring(2, 4), 16); // hexToG\n    const b = parseInt(color.substring(4, 6), 16); // hexToB\n    return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? \"black !important\" : \"white !important\";\n  }\n\n  emitOnOrganizationClicked() {\n    this.onOrganizationClicked.emit();\n  }\n}\n","<button\n  bitBadge\n  [style.color]=\"textColor\"\n  [style.background-color]=\"color\"\n  appA11yTitle=\"{{ organizationName }}\"\n  (click)=\"emitOnOrganizationClicked()\"\n>\n  {{ organizationName | ellipsis: 13 }}\n</button>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Pipe({\n  name: \"orgNameFromId\",\n  pure: true,\n})\nexport class GetOrgNameFromIdPipe implements PipeTransform {\n  transform(value: string, organizations: Organization[]) {\n    const orgName = organizations.find((o) => o.id === value)?.name;\n    return orgName;\n  }\n}\n","<ng-container *ngIf=\"isPaging() ? pagedCiphers : ciphers as filteredCiphers\">\n  <table\n    class=\"table table-hover table-list table-ciphers\"\n    *ngIf=\"filteredCiphers.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of filteredCiphers\">\n        <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\">\n          <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp />\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"table-list-icon\">\n          <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\">\n          <a\n            appStopProp\n            [routerLink]=\"[]\"\n            [queryParams]=\"{ itemId: c.id }\"\n            queryParamsHandling=\"merge\"\n            title=\"{{ 'editItem' | i18n }}\"\n            >{{ c.name }}</a\n          >\n          <ng-container *ngIf=\"c.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip\"\n              appStopProp\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            <ng-container *ngIf=\"showFixOldAttachments(c)\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-warning\"\n                appStopProp\n                title=\"{{ 'attachmentsNeedFix' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachmentsNeedFix\" | i18n }}</span>\n            </ng-container>\n          </ng-container>\n          <br />\n          <small appStopProp>{{ c.subTitle }}</small>\n        </td>\n        <td *ngIf=\"organizations.length > 0 && !organization\" class=\"tw-w-28\">\n          <app-org-badge\n            organizationName=\"{{ c.organizationId | orgNameFromId: organizations }}\"\n            profileName=\"{{ profileName }}\"\n            (onOrganizationClicked)=\"onOrganizationClicked(c.organizationId)\"\n          >\n          </app-org-badge>\n        </td>\n        <td class=\"table-list-options\">\n          <button\n            [bitMenuTriggerFor]=\"cipherOptions\"\n            class=\"tw-border-none tw-bg-transparent tw-text-main\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          >\n            <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <bit-menu #cipherOptions>\n            <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n              <button bitMenuItem (click)=\"copy(c, c.login.username, 'username', 'Username')\">\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyUsername\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.password, 'password', 'Password')\"\n                *ngIf=\"c.viewPassword\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyPassword\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\"\n                *ngIf=\"displayTotpCopyButton(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyVerificationCode\" | i18n }}\n              </button>\n              <button bitMenuItem *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\">\n                <i class=\"bwi bwi-fw bwi-share-square\" aria-hidden=\"true\"></i>\n                {{ \"launch\" | i18n }}\n              </button>\n            </ng-container>\n            <button bitMenuItem (click)=\"attachments(c)\">\n              <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n              {{ \"attachments\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n              (click)=\"clone(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-files\" aria-hidden=\"true\"></i>\n              {{ \"clone\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"!organization && !c.organizationId && !c.isDeleted\"\n              (click)=\"share(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n              {{ \"moveToOrganization\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && !c.isDeleted\" (click)=\"collections(c)\">\n              <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n              {{ \"collections\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\">\n              <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n              {{ \"eventLogs\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"restore(c)\" *ngIf=\"c.isDeleted\">\n              <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n              {{ \"restore\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"delete(c)\">\n              <span class=\"tw-text-danger\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ (c.isDeleted ? \"permanentlyDelete\" : \"delete\") | i18n }}\n              </span>\n            </button>\n          </bit-menu>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\">\n    <ng-container *ngIf=\"!loaded\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n        <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"@bitwarden/angular/components/ciphers.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nconst MaxCheckedCount = 500;\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n  @Input() showAddNew = true;\n  @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n  @Output() onShareClicked = new EventEmitter<CipherView>();\n  @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n  @Output() onCloneClicked = new EventEmitter<CipherView>();\n  @Output() onOrganzationBadgeClicked = new EventEmitter<string>();\n\n  pagedCiphers: CipherView[] = [];\n  pageSize = 200;\n  cipherType = CipherType;\n  actionPromise: Promise<any>;\n  userHasPremiumAccess = false;\n  organizations: Organization[] = [];\n  profileName: string;\n\n  private didScroll = false;\n  private pagedCiphersCount = 0;\n  private refreshing = false;\n\n  constructor(\n    searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cipherService: CipherService,\n    protected eventService: EventService,\n    protected totpService: TotpService,\n    protected stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private tokenService: TokenService\n  ) {\n    super(searchService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  // load() is called after the page loads and the first sync has completed.\n  // Do not use ngOnInit() for anything that requires sync data.\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    await super.load(filter, deleted);\n    this.profileName = await this.tokenService.getName();\n    this.organizations = await this.organizationService.getAll();\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  loadMore() {\n    if (this.ciphers.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCiphers.length;\n    let pagedSize = this.pageSize;\n    if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n      pagedSize = this.pagedCiphersCount;\n    }\n    if (this.ciphers.length > pagedLength) {\n      this.pagedCiphers = this.pagedCiphers.concat(\n        this.ciphers.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCiphersCount = this.pagedCiphers.length;\n    this.didScroll = this.pagedCiphers.length > this.pageSize;\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter, this.deleted);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.ciphers.length > this.pageSize;\n  }\n\n  async resetPaging() {\n    this.pagedCiphers = [];\n    this.loadMore();\n  }\n\n  async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n    this.resetPaging();\n  }\n\n  launch(uri: string) {\n    this.platformUtilsService.launchUri(uri);\n  }\n\n  async attachments(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onAttachmentsClicked.emit(c);\n  }\n\n  async share(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onShareClicked.emit(c);\n  }\n\n  collections(c: CipherView) {\n    this.onCollectionsClicked.emit(c);\n  }\n\n  async clone(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onCloneClicked.emit(c);\n  }\n\n  async delete(c: CipherView): Promise<boolean> {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    if (this.actionPromise != null) {\n      return;\n    }\n    const permanent = c.isDeleted;\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        permanent ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(permanent ? \"permanentlyDeleteItem\" : \"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.deleteCipher(c.id, permanent);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(permanent ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(c: CipherView): Promise<boolean> {\n    if (this.actionPromise != null || !c.isDeleted) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.cipherService.restoreWithServer(c.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.repromptCipher(cipher))\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n    const selectCount =\n      select && this.ciphers.length > MaxCheckedCount ? MaxCheckedCount : this.ciphers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkCipher(this.ciphers[i], select);\n    }\n  }\n\n  checkCipher(c: CipherView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  getSelected(): CipherView[] {\n    if (this.ciphers == null) {\n      return [];\n    }\n    return this.ciphers.filter((c) => !!(c as any).checked);\n  }\n\n  getSelectedIds(): string[] {\n    return this.getSelected().map((c) => c.id);\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (await this.repromptCipher(cipher)) {\n      super.selectCipher(cipher);\n    }\n  }\n\n  onOrganizationClicked(organizationId: string) {\n    this.onOrganzationBadgeClicked.emit(organizationId);\n  }\n\n  protected deleteCipher(id: string, permanent: boolean) {\n    return permanent\n      ? this.cipherService.deleteWithServer(id)\n      : this.cipherService.softDeleteWithServer(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return c.hasOldAttachments && c.organizationId == null;\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"../../vault/ciphers.component\";\n\n@Component({\n  selector: \"app-org-vault-ciphers\",\n  templateUrl: \"../../vault/ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n  @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n  organization: Organization;\n  accessEvents = false;\n\n  protected allCiphers: CipherView[] = [];\n\n  constructor(\n    searchService: SearchService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cipherService: CipherService,\n    eventService: EventService,\n    totpService: TotpService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    stateService: StateService,\n    organizationService: OrganizationService,\n    tokenService: TokenService,\n    private apiService: ApiService\n  ) {\n    super(\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cipherService,\n      eventService,\n      totpService,\n      stateService,\n      passwordRepromptService,\n      logService,\n      organizationService,\n      tokenService\n    );\n  }\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    if (this.organization.canEditAnyCollection) {\n      this.accessEvents = this.organization.useEvents;\n      this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    } else {\n      this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(\n        (c) => c.organizationId === this.organization.id\n      );\n    }\n    await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    if (this.organization.canViewAllCollections) {\n      await super.applyFilter(filter);\n    } else {\n      const f = (c: CipherView) =>\n        c.organizationId === this.organization.id && (filter == null || filter(c));\n      await super.applyFilter(f);\n    }\n  }\n\n  async search(timeout: number = null) {\n    await super.search(timeout, this.allCiphers);\n  }\n  events(c: CipherView) {\n    this.onEventsClicked.emit(c);\n  }\n\n  protected deleteCipher(id: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher(id, this.deleted);\n    }\n    return this.deleted\n      ? this.apiService.deleteCipherAdmin(id)\n      : this.apiService.putDeleteCipherAdmin(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return this.organization.canEditAnyCollection && c.hasOldAttachments;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"collectionsTitle\">\n          {{ \"collections\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"collectionsDesc\" | i18n }}</p>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCollectionsRequest } from \"@bitwarden/common/models/request/cipherCollectionsRequest\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"../../vault/collections.component\";\n\n@Component({\n  selector: \"app-org-vault-collections\",\n  templateUrl: \"../../vault/collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    this.allowSelectNone = true;\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canViewAllCollections) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected loadCipherCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCipherCollections();\n    }\n    return this.collectionIds;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected saveCollections() {\n    if (this.organization.canEditAnyCollection) {\n      const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n      return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n    } else {\n      return super.saveCollections();\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\nimport { VaultFilterService } from \"../services/vault-filter.service\";\n\n@Directive()\nexport class VaultFilterComponent implements OnInit {\n  @Input() activeFilter: VaultFilter = new VaultFilter();\n  @Input() hideFolders = false;\n  @Input() hideCollections = false;\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Input() hideOrganizations = false;\n\n  @Output() onFilterChange = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter<never>();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  isLoaded = false;\n  collapsedFilterNodes: Set<string>;\n  organizations: Organization[];\n  activePersonalOwnershipPolicy: boolean;\n  activeSingleOrganizationPolicy: boolean;\n  collections: DynamicTreeNode<CollectionView>;\n  folders$: Observable<DynamicTreeNode<FolderView>>;\n\n  constructor(protected vaultFilterService: VaultFilterService) {}\n\n  get displayCollections() {\n    return this.collections?.fullList != null && this.collections.fullList.length > 0;\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.collapsedFilterNodes = await this.vaultFilterService.buildCollapsedFilterNodes();\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    if (this.organizations != null && this.organizations.length > 0) {\n      this.activePersonalOwnershipPolicy =\n        await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n      this.activeSingleOrganizationPolicy =\n        await this.vaultFilterService.checkForSingleOrganizationPolicy();\n    }\n    this.folders$ = await this.vaultFilterService.buildNestedFolders();\n    this.collections = await this.initCollections();\n    this.isLoaded = true;\n  }\n\n  // overwritten in web for organization vaults\n  async initCollections() {\n    return await this.vaultFilterService.buildCollections();\n  }\n\n  async toggleFilterNodeCollapseState(node: ITreeNodeObject) {\n    if (this.collapsedFilterNodes.has(node.id)) {\n      this.collapsedFilterNodes.delete(node.id);\n    } else {\n      this.collapsedFilterNodes.add(node.id);\n    }\n    await this.vaultFilterService.storeCollapsedFilterNodes(this.collapsedFilterNodes);\n  }\n\n  async applyFilter(filter: VaultFilter) {\n    if (filter.refreshCollectionsAndFolders) {\n      await this.reloadCollectionsAndFolders(filter);\n      filter = await this.pruneInvalidatedFilterSelections(filter);\n    }\n    this.onFilterChange.emit(filter);\n  }\n\n  async reloadCollectionsAndFolders(filter: VaultFilter) {\n    this.folders$ = await this.vaultFilterService.buildNestedFolders(filter.selectedOrganizationId);\n    this.collections = filter.myVaultOnly\n      ? null\n      : await this.vaultFilterService.buildCollections(filter.selectedOrganizationId);\n  }\n\n  async reloadOrganizations() {\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    this.activePersonalOwnershipPolicy =\n      await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n    this.activeSingleOrganizationPolicy =\n      await this.vaultFilterService.checkForSingleOrganizationPolicy();\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  protected async pruneInvalidatedFilterSelections(filter: VaultFilter): Promise<VaultFilter> {\n    filter = await this.pruneInvalidFolderSelection(filter);\n    filter = this.pruneInvalidCollectionSelection(filter);\n    return filter;\n  }\n\n  protected async pruneInvalidFolderSelection(filter: VaultFilter): Promise<VaultFilter> {\n    if (\n      filter.selectedFolder &&\n      !(await firstValueFrom(this.folders$))?.hasId(filter.selectedFolderId)\n    ) {\n      filter.selectedFolder = false;\n      filter.selectedFolderId = null;\n    }\n    return filter;\n  }\n\n  protected pruneInvalidCollectionSelection(filter: VaultFilter): VaultFilter {\n    if (\n      filter.myVaultOnly ||\n      (filter.selectedCollection &&\n        filter.selectedCollectionId != null &&\n        !this.collections?.hasId(filter.selectedCollectionId))\n    ) {\n      filter.selectedCollection = false;\n      filter.selectedCollectionId = null;\n    }\n    return filter;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class CollectionFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() collectionNodes: DynamicTreeNode<CollectionView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly collectionsGrouping: TopLevelTreeNode = {\n    id: \"collections\",\n    name: \"collections\",\n  };\n\n  get collections() {\n    return this.collectionNodes?.fullList;\n  }\n\n  get nestedCollections() {\n    return this.collectionNodes?.nestedList;\n  }\n\n  get show() {\n    return !this.hide && this.collections != null && this.collections.length > 0;\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  applyFilter(collection: CollectionView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedCollection = true;\n    this.activeFilter.selectedCollectionId = collection.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <div class=\"filter-heading\">\n    <button\n      (click)=\"toggleCollapse(collectionsGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(collectionsGrouping)\"\n      aria-controls=\"collection-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n      class=\"toggle-button\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(collectionsGrouping),\n          'bwi-angle-down': !isCollapsed(collectionsGrouping)\n        }\"\n        aria-hidden=\"true\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ collectionsGrouping.name | i18n }}</h3>\n  </div>\n  <ul id=\"collection-filters\" *ngIf=\"!isCollapsed(collectionsGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveCollections let-collections>\n      <li\n        *ngFor=\"let c of collections\"\n        [ngClass]=\"{\n          active: c.node.id === activeFilter.selectedCollectionId && activeFilter.selectedCollection\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            class=\"toggle-button\"\n            *ngIf=\"c.children.length\"\n            (click)=\"toggleCollapse(c.node)\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            [attr.aria-expanded]=\"!isCollapsed(c.node)\"\n            [attr.aria-controls]=\"c.node.name + '_children'\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(c.node),\n                'bwi-angle-down': !isCollapsed(c.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(c.node)\">\n            <i\n              *ngIf=\"c.children.length === 0\"\n              class=\"bwi bwi-collection bwi-fw\"\n              aria-hidden=\"true\"\n            ></i\n            >&nbsp;{{ c.node.name }}\n          </button>\n        </span>\n        <ul\n          [id]=\"c.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"c.children.length && !isCollapsed(c.node)\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: c.children }\"\n          >\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: nestedCollections }\"\n    >\n    </ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { CollectionFilterComponent as BaseCollectionFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/collection-filter.component\";\n\n@Component({\n  selector: \"app-collection-filter\",\n  templateUrl: \"collection-filter.component.html\",\n})\nexport class CollectionFilterComponent extends BaseCollectionFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class FolderFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() folderNodes: DynamicTreeNode<FolderView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  get folders() {\n    return this.folderNodes?.fullList;\n  }\n\n  get nestedFolders() {\n    return this.folderNodes?.nestedList;\n  }\n\n  readonly foldersGrouping: TopLevelTreeNode = {\n    id: \"folders\",\n    name: \"folders\",\n  };\n\n  applyFilter(folder: FolderView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedFolder = true;\n    this.activeFilter.selectedFolderId = folder.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <div class=\"filter-heading\">\n    <button\n      class=\"toggle-button\"\n      (click)=\"toggleCollapse(foldersGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(foldersGrouping)\"\n      aria-controls=\"folder-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        aria-hidden=\"true\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(foldersGrouping),\n          'bwi-angle-down': !isCollapsed(foldersGrouping)\n        }\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ \"folders\" | i18n }}</h3>\n    <button\n      class=\"text-muted ml-auto add-button\"\n      (click)=\"addFolder()\"\n      appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <ul id=\"folder-filters\" *ngIf=\"!isCollapsed(foldersGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveFolders let-folders>\n      <li\n        *ngFor=\"let f of folders\"\n        [ngClass]=\"{\n          active: f.node.id === activeFilter.selectedFolderId && activeFilter.selectedFolder\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            *ngIf=\"f.children.length\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            (click)=\"toggleCollapse(f.node)\"\n            [attr.aria-expanded]=\"!isCollapsed(f.node)\"\n            [attr.aria-controls]=\"f.node.name + '_children'\"\n            class=\"toggle-button\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(f.node),\n                'bwi-angle-down': !isCollapsed(f.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(f.node)\">\n            <i *ngIf=\"f.children.length === 0\" class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i\n            >&nbsp;{{ f.node.name }}\n          </button>\n          <button\n            class=\"edit-button\"\n            (click)=\"editFolder(f.node)\"\n            appA11yTitle=\"{{ 'editFolder' | i18n }}\"\n            *ngIf=\"f.node.id\"\n          >\n            <i class=\"bwi bwi-pencil bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </span>\n        <ul\n          [id]=\"f.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"f.children.length && !isCollapsed(f.node)\"\n        >\n          <ng-container *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: f.children }\">\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: nestedFolders }\"\n    ></ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { FolderFilterComponent as BaseFolderFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/folder-filter.component\";\n\n@Component({\n  selector: \"app-folder-filter\",\n  templateUrl: \"folder-filter.component.html\",\n})\nexport class FolderFilterComponent extends BaseFolderFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherStatus } from \"../models/cipher-status.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class StatusFilterComponent {\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Input() activeFilter: VaultFilter;\n\n  get show() {\n    return !(this.hideFavorites && this.hideTrash);\n  }\n\n  applyFilter(cipherStatus: CipherStatus) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.status = cipherStatus;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <ul class=\"filter-options\">\n    <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.status === 'all' }\">\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('all')\">\n          <i class=\"bwi bwi-fw bwi-filter\" aria-hidden=\"true\"></i>&nbsp;{{ \"allItems\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideFavorites\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'favorites' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('favorites')\">\n          <i class=\"bwi bwi-fw bwi-star\" aria-hidden=\"true\"></i>&nbsp;{{ \"favorites\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideTrash\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'trash' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('trash')\">\n          <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>&nbsp;{{ \"trash\" | i18n }}\n        </button>\n      </span>\n    </li>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { StatusFilterComponent as BaseStatusFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/status-filter.component\";\n\n@Component({\n  selector: \"app-status-filter\",\n  templateUrl: \"status-filter.component.html\",\n})\nexport class StatusFilterComponent extends BaseStatusFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\n\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class TypeFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() selectedCipherType: CipherType = null;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly typesNode: TopLevelTreeNode = {\n    id: \"types\",\n    name: \"types\",\n  };\n\n  cipherTypeEnum = CipherType; // used in the template\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.typesNode.id);\n  }\n\n  applyFilter(cipherType: CipherType) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.cipherType = cipherType;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.typesNode);\n  }\n}\n","<div class=\"filter-heading\">\n  <button\n    class=\"toggle-button\"\n    [attr.aria-expanded]=\"!isCollapsed\"\n    aria-controls=\"type-filters\"\n    (click)=\"toggleCollapse()\"\n    title=\"{{ 'toggleCollapse' | i18n }}\"\n  >\n    <i\n      class=\"bwi bwi-fw\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{\n        'bwi-angle-right': isCollapsed,\n        'bwi-angle-down': !isCollapsed\n      }\"\n    ></i>\n  </button>\n  <h3>&nbsp;{{ \"types\" | i18n }}</h3>\n</div>\n<ul id=\"type-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Login }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Login)\">\n        <i class=\"bwi bwi-fw bwi-globe\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeLogin\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Card }\">\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Card)\">\n        <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeCard\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Identity }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Identity)\">\n        <i class=\"bwi bwi-fw bwi-id-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeIdentity\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.SecureNote }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.SecureNote)\">\n        <i class=\"bwi bwi-fw bwi-sticky-note\" aria-hidden=\"true\"></i>&nbsp;{{\n          \"typeSecureNote\" | i18n\n        }}\n      </button>\n    </span>\n  </li>\n</ul>\n","import { Component } from \"@angular/core\";\n\nimport { TypeFilterComponent as BaseTypeFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/type-filter.component\";\n\n@Component({\n  selector: \"app-type-filter\",\n  templateUrl: \"type-filter.component.html\",\n})\nexport class TypeFilterComponent extends BaseTypeFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/treeNode\";\n\nimport { DisplayMode } from \"../models/display-mode\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class OrganizationFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() organizations: Organization[];\n  @Input() activeFilter: VaultFilter;\n  @Input() activePersonalOwnershipPolicy: boolean;\n  @Input() activeSingleOrganizationPolicy: boolean;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  get displayMode(): DisplayMode {\n    let displayMode: DisplayMode = \"organizationMember\";\n    if (this.organizations == null || this.organizations.length < 1) {\n      displayMode = \"noOrganizations\";\n    } else if (this.activePersonalOwnershipPolicy && !this.activeSingleOrganizationPolicy) {\n      displayMode = \"personalOwnershipPolicy\";\n    } else if (!this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationPolicy\";\n    } else if (this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationAndPersonalOwnershipPolicies\";\n    }\n\n    return displayMode;\n  }\n\n  get hasActiveFilter() {\n    return this.activeFilter.myVaultOnly || this.activeFilter.selectedOrganizationId != null;\n  }\n\n  readonly organizationGrouping: TopLevelTreeNode = {\n    id: \"vaults\",\n    name: \"allVaults\",\n  };\n\n  async applyOrganizationFilter(organization: Organization) {\n    this.activeFilter.selectedOrganizationId = organization.id;\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  async applyMyVaultFilter() {\n    this.activeFilter.selectedOrganizationId = null;\n    this.activeFilter.myVaultOnly = true;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  clearFilter() {\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.selectedOrganizationId = null;\n    this.applyFilter(new VaultFilter(this.activeFilter));\n  }\n\n  private applyFilter(filter: VaultFilter) {\n    this.onFilterChange.emit(filter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.organizationGrouping);\n  }\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.organizationGrouping.id);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-enroll-master-password-reset\",\n  templateUrl: \"enroll-master-password-reset.component.html\",\n})\nexport class EnrollMasterPasswordReset {\n  organization: Organization;\n\n  verification: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private modalRef: ModalRef,\n    config: ModalConfig,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.organization = config.data.organization;\n  }\n\n  async submit() {\n    let toastStringRef = \"withdrawPasswordResetSuccess\";\n\n    this.formPromise = this.userVerificationService\n      .buildRequest(this.verification, OrganizationUserResetPasswordEnrollmentRequest)\n      .then(async (request) => {\n        // Set variables\n        let keyString: string = null;\n\n        // Retrieve Public Key\n        const orgKeys = await this.organizationApiService.getKeys(this.organization.id);\n        if (orgKeys == null) {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n\n        const publicKey = Utils.fromB64ToArray(orgKeys.publicKey);\n\n        // RSA Encrypt user's encKey.key with organization public key\n        const encKey = await this.cryptoService.getEncKey();\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        keyString = encryptedKey.encryptedString;\n        toastStringRef = \"enrollPasswordResetSuccess\";\n\n        // Create request and execute enrollment\n        request.resetPasswordKey = keyString;\n        await this.apiService.putOrganizationUserResetPasswordEnrollment(\n          this.organization.id,\n          this.organization.userId,\n          request\n        );\n\n        await this.syncService.fullSync(true);\n      });\n    try {\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(toastStringRef));\n      this.modalRef.close();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div\n  class=\"modal fade\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"enrollMasterPasswordResetTitle\"\n>\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"enrollMasterPasswordResetTitle\">\n          {{ \"enrollPasswordReset\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">\n          {{ \"resetPasswordEnrollmentWarning\" | i18n }}\n        </app-callout>\n        <app-user-verification [(ngModel)]=\"verification\" name=\"secret\"> </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <bit-submit-button [loading]=\"form.loading\">\n          {{ \"submit\" | i18n }}\n        </bit-submit-button>\n        <button\n          bitButton\n          buttonType=\"secondary\"\n          type=\"button\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span>\n            {{ \"cancel\" | i18n }}\n          </span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { AfterContentInit, Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-link-sso\",\n  templateUrl: \"link-sso.component.html\",\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n  @Input() organization: Organization;\n  returnUri = \"/settings/organizations\";\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    authService: AuthService,\n    router: Router,\n    route: ActivatedRoute,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    this.returnUri = \"/settings/organizations\";\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngAfterContentInit() {\n    this.identifier = this.organization.identifier;\n  }\n}\n","<a\n  class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main tw-no-underline hover:tw-bg-secondary-100 hover:tw-no-underline focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n  href=\"#\"\n  appStopClick\n  (click)=\"submit(returnUri, true)\"\n>\n  <i class=\"bwi bwi-fw bwi-link\" aria-hidden=\"true\"></i>\n  {{ \"linkSso\" | i18n }}\n</a>\n","<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted tw-m-2\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<div\n  *ngIf=\"loaded\"\n  class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\"\n  [appApiAction]=\"actionPromise\"\n>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && !organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n    {{ \"enrollPasswordReset\" | i18n }}\n  </button>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n    {{ \"withdrawPasswordReset\" | i18n }}\n  </button>\n  <ng-container *ngIf=\"organization.useSso && organization.identifier\">\n    <button\n      *ngIf=\"organization.ssoBound; else linkSso\"\n      class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n      (click)=\"unlinkSso(organization)\"\n    >\n      <i class=\"bwi bwi-fw bwi-chain-broken\" aria-hidden=\"true\"></i>\n      {{ \"unlinkSso\" | i18n }}\n    </button>\n    <ng-template #linkSso>\n      <app-link-sso [organization]=\"organization\"> </app-link-sso>\n    </ng-template>\n  </ng-container>\n  <button\n    class=\"text-danger tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"leave(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n    {{ \"leave\" | i18n }}\n  </button>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\n\nimport { EnrollMasterPasswordReset } from \"../../../organizations/users/enroll-master-password-reset.component\";\n\n@Component({\n  selector: \"app-organization-options\",\n  templateUrl: \"organization-options.component.html\",\n})\nexport class OrganizationOptionsComponent {\n  actionPromise: Promise<void | boolean>;\n  policies: Policy[];\n  loaded = false;\n\n  @Input() organization: Organization;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private modalService: ModalService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.policies = await this.policyService.getAll(PolicyType.ResetPassword);\n    this.loaded = true;\n  }\n\n  allowEnrollmentChanges(org: Organization): boolean {\n    if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n      const policy = this.policies.find((p) => p.organizationId === org.id);\n      if (policy != null && policy.enabled) {\n        return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n      }\n    }\n\n    return false;\n  }\n\n  showEnrolledStatus(org: Organization): boolean {\n    return (\n      org.useResetPassword &&\n      org.resetPasswordEnrolled &&\n      this.policies.some((p) => p.organizationId === org.id && p.enabled)\n    );\n  }\n\n  async unlinkSso(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"unlinkSsoConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, \"Unlinked SSO\");\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async leave(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.organizationApiService.leave(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async toggleResetPasswordEnrollment(org: Organization) {\n    if (!this.organization.resetPasswordEnrolled) {\n      this.modalService.open(EnrollMasterPasswordReset, {\n        allowMultipleModals: true,\n        data: {\n          organization: org,\n        },\n      });\n    } else {\n      // Remove reset password\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = \"ignored\";\n      request.resetPasswordKey = null;\n      this.actionPromise = this.apiService.putOrganizationUserResetPasswordEnrollment(\n        this.organization.id,\n        this.organization.userId,\n        request\n      );\n      try {\n        await this.actionPromise;\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"withdrawPasswordResetSuccess\")\n        );\n        this.syncService.fullSync(true);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <ng-container [ngSwitch]=\"displayMode\">\n    <ng-container *ngSwitchCase=\"'noOrganizations'\">\n      <ul class=\"filter-options\">\n        <li class=\"filter-option active\">\n          <span class=\"filter-buttons\">\n            <button class=\"filter-button\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'personalOwnershipPolicy'\">\n      <div class=\"filter-heading\">\n        <button\n          (click)=\"toggleCollapse()\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          class=\"toggle-button\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button class=\"filter-button\" (click)=\"applyOrganizationFilter(organization)\">\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <ng-container *ngIf=\"organization.id === activeFilter.selectedOrganizationId\">\n              <button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options ml-auto\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </ng-container>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'singleOrganizationAndPersonalOwnershipPolicies'\">\n      <div class=\"filter-heading\">\n        <button class=\"filter-button active\">\n          <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n          {{ organizations[0].name }}\n        </button>\n      </div>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <div class=\"filter-heading\">\n        <button\n          class=\"toggle-button\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          (click)=\"toggleCollapse()\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.myVaultOnly }\">\n          <span class=\"filter-buttons\">\n            <button class=\"filter-button\" (click)=\"applyMyVaultFilter()\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              [ngClass]=\"{ 'disabled-organization': !organization.enabled }\"\n              (click)=\"applyOrganizationFilter(organization)\"\n            >\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <span class=\"ml-auto\">\n              <i\n                *ngIf=\"!organization.enabled\"\n                class=\"org-options bwi bwi-fw bwi-exclamation-triangle text-danger\"\n                aria-label=\"{{ 'organizationIsDisabled' | i18n }}\"\n                appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n              ></i\n              ><button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </span>\n          </span>\n        </li>\n        <li class=\"filter-option\" *ngIf=\"!(displayMode === 'singleOrganizationPolicy')\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n  </ng-container>\n  <hr />\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationFilterComponent as BaseOrganizationFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/organization-filter.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-filter\",\n  templateUrl: \"organization-filter.component.html\",\n})\nexport class OrganizationFilterComponent extends BaseOrganizationFilterComponent {\n  displayText = \"allVaults\";\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {\n    super();\n  }\n\n  async applyOrganizationFilter(organization: Organization) {\n    if (organization.enabled) {\n      //proceed with default behaviour for enabled organizations\n      super.applyOrganizationFilter(organization);\n    } else {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n    }\n  }\n}\n","<div class=\"card vault-filters\">\n  <div class=\"container loading-spinner\" *ngIf=\"!isLoaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <div *ngIf=\"isLoaded\">\n    <div class=\"card-header d-flex\">\n      {{ \"filters\" | i18n }}\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/searching-vault/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"card-body\">\n      <input\n        type=\"search\"\n        placeholder=\"{{ (searchPlaceholder | i18n) || ('searchVault' | i18n) }}\"\n        id=\"search\"\n        class=\"form-control\"\n        [(ngModel)]=\"searchText\"\n        (input)=\"searchTextChanged()\"\n        autocomplete=\"off\"\n        appAutofocus\n      />\n      <app-organization-filter\n        [hide]=\"hideOrganizations\"\n        [activeFilter]=\"activeFilter\"\n        [collapsedFilterNodes]=\"collapsedFilterNodes\"\n        [organizations]=\"organizations\"\n        [activePersonalOwnershipPolicy]=\"activePersonalOwnershipPolicy\"\n        [activeSingleOrganizationPolicy]=\"activeSingleOrganizationPolicy\"\n        (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n        (onFilterChange)=\"applyFilter($event)\"\n      ></app-organization-filter>\n      <div class=\"filter\">\n        <app-status-filter\n          [hideFavorites]=\"hideFavorites\"\n          [hideTrash]=\"hideTrash\"\n          [activeFilter]=\"activeFilter\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-status-filter>\n      </div>\n      <div class=\"filter\">\n        <app-type-filter\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-type-filter>\n      </div>\n      <div class=\"filter\">\n        <app-folder-filter\n          [hide]=\"hideFolders\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [folderNodes]=\"folders$ | async\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n          (onAddFolder)=\"addFolder()\"\n          (onEditFolder)=\"editFolder($event)\"\n        ></app-folder-filter>\n      </div>\n      <div class=\"filter\">\n        <app-collection-filter\n          [hide]=\"hideCollections\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [collectionNodes]=\"collections\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-collection-filter>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/vault-filter.component\";\n\nimport { VaultFilterService } from \"./shared/vault-filter.service\";\n\n@Component({\n  selector: \"./app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  @Output() onSearchTextChanged = new EventEmitter<string>();\n\n  searchPlaceholder: string;\n  searchText = \"\";\n\n  constructor(protected vaultFilterService: VaultFilterService) {\n    // This empty constructor is required to provide the web vaultFilterService subclass to super()\n    // TODO: refactor this to use proper dependency injection\n    super(vaultFilterService);\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.vaultFilterService.collapsedFilterNodes$.subscribe((nodes) => {\n      this.collapsedFilterNodes = nodes;\n    });\n  }\n\n  searchTextChanged() {\n    this.onSearchTextChanged.emit(this.searchText);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"../../../vault/vault-filter/vault-filter.component\";\n\n@Component({\n  selector: \"app-organization-vault-filter\",\n  templateUrl: \"../../../vault/vault-filter/vault-filter.component.html\",\n})\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  hideOrganizations = true;\n  hideFavorites = true;\n  hideFolders = true;\n\n  organization: Organization;\n\n  async initCollections() {\n    if (this.organization.canEditAnyCollection) {\n      return await this.vaultFilterService.buildAdminCollections(this.organization.id);\n    }\n    return await this.vaultFilterService.buildCollections(this.organization.id);\n  }\n\n  async reloadCollectionsAndFolders() {\n    this.collections = await this.initCollections();\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherBulkDeleteRequest } from \"@bitwarden/common/models/request/cipherBulkDeleteRequest\";\n\n@Component({\n  selector: \"app-vault-bulk-delete\",\n  templateUrl: \"bulk-delete.component.html\",\n})\nexport class BulkDeleteComponent {\n  @Input() cipherIds: string[] = [];\n  @Input() permanent = false;\n  @Input() organization: Organization;\n  @Output() onDeleted = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async submit() {\n    if (!this.organization || !this.organization.canEditAnyCollection) {\n      await this.deleteCiphers();\n    } else {\n      await this.deleteCiphersAdmin();\n    }\n\n    await this.formPromise;\n\n    this.onDeleted.emit();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(this.permanent ? \"permanentlyDeletedItems\" : \"deletedItems\")\n    );\n  }\n\n  private async deleteCiphers() {\n    if (this.permanent) {\n      this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n    } else {\n      this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n    }\n  }\n\n  private async deleteCiphersAdmin() {\n    const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n    if (this.permanent) {\n      this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n    } else {\n      this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteSelectedTitle\">\n          {{ (permanent ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{\n          (permanent ? \"permanentlyDeleteSelectedItemsDesc\" : \"deleteSelectedItemsDesc\")\n            | i18n: cipherIds.length\n        }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-danger btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (permanent ? \"permanentlyDelete\" : \"delete\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedTitle\">\n          {{ \"moveSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveSelectedItemsDesc\" | i18n: cipherIds.length }}</p>\n        <div class=\"form-group\">\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\">\n            <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Component({\n  selector: \"app-vault-bulk-move\",\n  templateUrl: \"bulk-move.component.html\",\n})\nexport class BulkMoveComponent implements OnInit {\n  @Input() cipherIds: string[] = [];\n  @Output() onMoved = new EventEmitter();\n\n  folderId: string = null;\n  folders$: Observable<FolderView[]>;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService\n  ) {}\n\n  async ngOnInit() {\n    this.folders$ = this.folderService.folderViews$;\n    this.folderId = (await firstValueFrom(this.folders$))[0].id;\n  }\n\n  async submit() {\n    this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n    await this.formPromise;\n    this.onMoved.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"movedItems\"));\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-bulk-restore\",\n  templateUrl: \"bulk-restore.component.html\",\n})\nexport class BulkRestoreComponent {\n  @Input() cipherIds: string[] = [];\n  @Output() onRestored = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async submit() {\n    this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n    await this.formPromise;\n    this.onRestored.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItems\"));\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"restoreSelectedTitle\">\n          {{ \"restoreSelected\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"restoreSelectedItemsDesc\" | i18n: cipherIds.length }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"restore\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"moveSelectedToOrgTitle\">\n          {{ \"moveSelectedToOrg\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveManyToOrgDesc\" | i18n }}</p>\n        <p>\n          {{\n            \"moveSelectedItemsCountDesc\"\n              | i18n: this.ciphers.length:shareableCiphers.length:nonShareableCount\n          }}\n        </p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-bulk-share\",\n  templateUrl: \"bulk-share.component.html\",\n})\nexport class BulkShareComponent implements OnInit {\n  @Input() ciphers: CipherView[] = [];\n  @Input() organizationId: string;\n  @Output() onShared = new EventEmitter();\n\n  nonShareableCount = 0;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n  shareableCiphers: CipherView[] = [];\n  formPromise: Promise<any>;\n\n  private writeableCollections: CollectionView[] = [];\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.shareableCiphers = this.ciphers.filter(\n      (c) => !c.hasOldAttachments && c.organizationId == null\n    );\n    this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n    this.organizations = await this.organizationService.getAll();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  filterCollections() {\n    this.selectAll(false);\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit() {\n    const checkedCollectionIds = this.collections\n      .filter((c) => (c as any).checked)\n      .map((c) => c.id);\n    try {\n      this.formPromise = this.cipherService.shareManyWithServer(\n        this.shareableCiphers,\n        this.organizationId,\n        checkedCollectionIds\n      );\n      await this.formPromise;\n      this.onShared.emit();\n      const orgName =\n        this.organizations.find((o) => o.id === this.organizationId)?.name ??\n        this.i18nService.t(\"organization\");\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"movedItemsToOrg\", orgName)\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n\n  get canSave() {\n    if (\n      this.shareableCiphers != null &&\n      this.shareableCiphers.length > 0 &&\n      this.collections != null\n    ) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"dropdown mr-2\" appListDropdown>\n  <button\n    class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n    type=\"button\"\n    id=\"bulkActionsButton\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n    appA11yTitle=\"{{ 'options' | i18n }}\"\n  >\n    <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n  </button>\n  <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkMove()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i>\n      {{ \"moveSelected\" | i18n }}\n    </button>\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkShare()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n      {{ \"moveSelectedToOrg\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\">\n      <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n      {{ \"restoreSelected\" | i18n }}\n    </button>\n    <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\n      <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n      {{ (deleted ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n    </button>\n    <div class=\"dropdown-divider\"></div>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n      <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n      {{ \"selectAll\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n      <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n      {{ \"unselectAll\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-template #bulkDeleteTemplate></ng-template>\n<ng-template #bulkRestoreTemplate></ng-template>\n<ng-template #bulkMoveTemplate></ng-template>\n<ng-template #bulkShareTemplate></ng-template>\n","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BulkDeleteComponent } from \"./bulk-delete.component\";\nimport { BulkMoveComponent } from \"./bulk-move.component\";\nimport { BulkRestoreComponent } from \"./bulk-restore.component\";\nimport { BulkShareComponent } from \"./bulk-share.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\n\n@Component({\n  selector: \"app-vault-bulk-actions\",\n  templateUrl: \"bulk-actions.component.html\",\n})\nexport class BulkActionsComponent {\n  @Input() ciphersComponent: CiphersComponent;\n  @Input() deleted: boolean;\n  @Input() organization: Organization;\n\n  @ViewChild(\"bulkDeleteTemplate\", { read: ViewContainerRef, static: true })\n  bulkDeleteModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRestoreTemplate\", { read: ViewContainerRef, static: true })\n  bulkRestoreModalRef: ViewContainerRef;\n  @ViewChild(\"bulkMoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkMoveModalRef: ViewContainerRef;\n  @ViewChild(\"bulkShareTemplate\", { read: ViewContainerRef, static: true })\n  bulkShareModalRef: ViewContainerRef;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async bulkDelete() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkDeleteComponent,\n      this.bulkDeleteModalRef,\n      (comp) => {\n        comp.permanent = this.deleted;\n        comp.cipherIds = selectedIds;\n        comp.organization = this.organization;\n        comp.onDeleted.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkRestore() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRestoreComponent,\n      this.bulkRestoreModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        comp.onRestored.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkShare() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    if (selectedCiphers.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkShareComponent,\n      this.bulkShareModalRef,\n      (comp) => {\n        comp.ciphers = selectedCiphers;\n        comp.onShared.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkMove() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkMoveComponent,\n      this.bulkMoveModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        comp.onMoved.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  selectAll(select: boolean) {\n    this.ciphersComponent.selectAll(select);\n  }\n\n  private async promptPassword() {\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    const notProtected = !selectedCiphers.find(\n      (cipher) => cipher.reprompt !== CipherRepromptType.None\n    );\n\n    return notProtected || (await this.passwordRepromptService.showPasswordPrompt());\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-organization-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-organization-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"deleted\"\n            [organization]=\"organization\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm ml-auto\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!deleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"bwi bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-org-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onEventsClicked)=\"viewEvents($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-org-vault-ciphers>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { VaultService } from \"../../vault/shared/vault.service\";\nimport { EntityEventsComponent } from \"../manage/entity-events.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\n\nconst BroadcasterSubscriptionId = \"OrgVaultComponent\";\n\n@Component({\n  selector: \"app-org-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true })\n  vaultFilterComponent: VaultFilterComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n\n  organization: Organization;\n  collectionId: string = null;\n  type: CipherType = null;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  // This is a hack to avoid redundant api calls that fetch OrganizationVaultFilterComponent collections\n  // When it makes sense to do so we should leverage some other communication method for change events that isn't directly tied to the query param for organizationId\n  // i.e. exposing the VaultFiltersService to the OrganizationSwitcherComponent to make relevant updates from a change event instead of just depending on the router\n  firstLoaded = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private messagingService: MessagingService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  ngOnInit() {\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n    this.route.parent.params.subscribe(async (params: any) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.vaultFilterComponent.organization = this.organization;\n      this.ciphersComponent.organization = this.organization;\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.ciphersComponent.searchText = this.vaultFilterComponent.searchText = qParams.search;\n        if (!this.organization.canViewAllCollections) {\n          await this.syncService.fullSync(false);\n          this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n              switch (message.command) {\n                case \"syncCompleted\":\n                  if (message.successfully) {\n                    await Promise.all([\n                      this.vaultFilterComponent.reloadCollectionsAndFolders(),\n                      this.ciphersComponent.refresh(),\n                    ]);\n                    this.changeDetectorRef.detectChanges();\n                  }\n                  break;\n              }\n            });\n          });\n        }\n\n        if (this.firstLoaded) {\n          await this.vaultFilterComponent.reloadCollectionsAndFolders();\n        }\n        this.firstLoaded = true;\n\n        await this.ciphersComponent.reload();\n\n        if (qParams.viewEvents != null) {\n          const cipher = this.ciphersComponent.ciphers.filter((c) => c.id === qParams.viewEvents);\n          if (cipher.length > 0) {\n            this.viewEvents(cipher[0]);\n          }\n        }\n\n        this.route.queryParams.subscribe(async (params) => {\n          const cipherId = getCipherIdFromParams(params);\n          if (cipherId) {\n            if (\n              // Handle users with implicit collection access since they use the admin endpoint\n              this.organization.canEditAnyCollection ||\n              (await this.cipherService.get(cipherId)) != null\n            ) {\n              this.editCipherId(cipherId);\n            } else {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorOccurred\"),\n                this.i18nService.t(\"unknownCipher\")\n              );\n              this.router.navigate([], {\n                queryParams: { cipherId: null, itemId: null },\n                queryParamsHandling: \"merge\",\n              });\n            }\n          }\n        });\n      });\n    });\n  }\n\n  get deleted(): boolean {\n    return this.activeFilter.status === \"trash\";\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.ciphersComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n    await this.ciphersComponent.reload(\n      this.activeFilter.buildFilter(),\n      vaultFilter.status === \"trash\"\n    );\n    this.vaultFilterComponent.searchPlaceholder =\n      this.vaultService.calculateSearchBarLocalizationString(this.activeFilter);\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n      this.messagingService.send(\"upgradeOrganization\", { organizationId: cipher.organizationId });\n      return;\n    }\n\n    let madeAttachmentChanges = false;\n\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        if (this.organization.canEditAnyCollection) {\n          comp.collectionIds = cipher.collectionIds;\n          comp.collections = this.vaultFilterComponent.collections.fullList.filter(\n            (c) => !c.readOnly && c.id != null\n          );\n        }\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.organizationId = this.organization.id;\n    component.type = this.type;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    if (this.collectionId != null) {\n      component.collectionIds = [this.collectionId];\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipherId;\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n    component.organizationId = this.organization.id;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n    // in the add-edit componenet\n    component.collectionIds = cipher.collectionIds;\n  }\n\n  async viewEvents(cipher: CipherView) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = cipher.name;\n      comp.organizationId = this.organization.id;\n      comp.entityId = cipher.id;\n      comp.showUser = true;\n      comp.entity = \"cipher\";\n    });\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        type: this.activeFilter.cipherType,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.deleted ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultSharedModule } from \"../../vault/shared/vault-shared.module\";\n\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { VaultFilterModule } from \"./vault-filter/vault-filter.module\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule, VaultFilterModule],\n  declarations: [VaultComponent, CiphersComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"./guards/org-permissions.guard\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { CollectionsComponent } from \"./manage/collections.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { GroupsComponent } from \"./manage/groups.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { PoliciesComponent } from \"./manage/policies.component\";\nimport {\n  canAccessOrgAdmin,\n  canAccessManageTab,\n  canAccessSettingsTab,\n  canAccessToolsTab,\n} from \"./navigation-permissions\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { OrganizationBillingComponent } from \"./settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"./settings/organization-subscription.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { TwoFactorSetupComponent } from \"./settings/two-factor-setup.component\";\nimport { ExposedPasswordsReportComponent } from \"./tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent } from \"./tools/reused-passwords-report.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./tools/weak-passwords-report.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \":organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    data: {\n      organizationPermissions: canAccessOrgAdmin,\n    },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"vault\" },\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessToolsTab,\n        },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"import\",\n          },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/org-import-export.module\").then(\n                (m) => m.OrganizationImportExportModule\n              ),\n          },\n          {\n            path: \"exposed-passwords-report\",\n            component: ExposedPasswordsReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"exposedPasswordsReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"inactive-two-factor-report\",\n            component: InactiveTwoFactorReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"inactive2faReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"reused-passwords-report\",\n            component: ReusedPasswordsReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"reusedPasswordsReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"unsecured-websites-report\",\n            component: UnsecuredWebsitesReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"unsecuredWebsitesReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"weak-passwords-report\",\n            component: WeakPasswordsReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"weakPasswordsReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n        ],\n      },\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessManageTab,\n        },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"people\",\n          },\n          {\n            path: \"collections\",\n            component: CollectionsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"collections\",\n              organizationPermissions: (org: Organization) =>\n                org.canCreateNewCollections ||\n                org.canEditAnyCollection ||\n                org.canDeleteAnyCollection ||\n                org.canEditAssignedCollections ||\n                org.canDeleteAssignedCollections,\n            },\n          },\n          {\n            path: \"events\",\n            component: EventsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"eventLogs\",\n              organizationPermissions: (org: Organization) => org.canAccessEventLogs,\n            },\n          },\n          {\n            path: \"groups\",\n            component: GroupsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"groups\",\n              organizationPermissions: (org: Organization) => org.canManageGroups,\n            },\n          },\n          {\n            path: \"people\",\n            component: PeopleComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"people\",\n              organizationPermissions: (org: Organization) =>\n                org.canManageUsers || org.canManageUsersPassword,\n            },\n          },\n          {\n            path: \"policies\",\n            component: PoliciesComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"policies\",\n              organizationPermissions: (org: Organization) => org.canManagePolicies,\n            },\n          },\n        ],\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: { organizationPermissions: canAccessSettingsTab },\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myOrganization\" } },\n          {\n            path: \"two-factor\",\n            component: TwoFactorSetupComponent,\n            data: { titleId: \"twoStepLogin\" },\n          },\n          {\n            path: \"billing\",\n            component: OrganizationBillingComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"billing\",\n              organizationPermissions: (org: Organization) => org.canManageBilling,\n            },\n          },\n          {\n            path: \"subscription\",\n            component: OrganizationSubscriptionComponent,\n            data: { titleId: \"subscription\" },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","export enum PlanSponsorshipType {\n  FamiliesForEnterprise = 0,\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"../../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-family-sponsorship\",\n  templateUrl: \"accept-family-sponsorship.component.html\",\n})\nexport class AcceptFamilySponsorshipComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/setup/families-for-enterprise\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    if (!qParams.register) {\n      this.router.navigate([\"/login\"], { queryParams: { email: qParams.email } });\n    } else {\n      this.router.navigate([\"/register\"], { queryParams: { email: qParams.email } });\n    }\n  }\n}\n","import { PlanSponsorshipType } from \"../../../enums/planSponsorshipType\";\n\nexport class OrganizationSponsorshipRedeemRequest {\n  planSponsorshipType: PlanSponsorshipType;\n  sponsoredOrganizationId: string;\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"sponsoredFamiliesOffer\" | i18n }}</h1>\n  </div>\n  <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\">\n    <span>{{ \"badToken\" | i18n }}</span>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"!loading && !badToken\"\n  >\n    <p>\n      <span>{{ \"acceptBitwardenFamiliesHelp\" | i18n }}</span>\n    </p>\n    <div class=\"form-group col-6\">\n      <label for=\"availableSponsorshipOrg\">{{ \"sponsoredFamiliesSelectOffer\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedFamilyOrganizationId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\" disabled>-- {{ \"select\" | i18n }} --</option>\n        <option value=\"createNew\">{{ \"newFamiliesOrganization\" | i18n }}</option>\n        <option *ngFor=\"let o of existingFamilyOrganizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div *ngIf=\"showNewOrganization\" class=\"col-12\">\n      <app-organization-plans></app-organization-plans>\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\">\n      <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"acceptOffer\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSponsorshipRedeemRequest } from \"@bitwarden/common/models/request/organization/organizationSponsorshipRedeemRequest\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\nimport { DeleteOrganizationComponent } from \"../settings/delete-organization.component\";\n\n@Component({\n  selector: \"families-for-enterprise-setup\",\n  templateUrl: \"families-for-enterprise-setup.component.html\",\n})\nexport class FamiliesForEnterpriseSetupComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: false })\n  set organizationPlansComponent(value: OrganizationPlansComponent) {\n    if (!value) {\n      return;\n    }\n\n    value.plan = PlanType.FamiliesAnnually;\n    value.product = ProductType.Families;\n    value.acceptingSponsorship = true;\n    value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n  }\n\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  loading = true;\n  badToken = false;\n  formPromise: Promise<any>;\n\n  token: string;\n  existingFamilyOrganizations: Organization[];\n\n  showNewOrganization = false;\n  _organizationPlansComponent: OrganizationPlansComponent;\n  _selectedFamilyOrganizationId = \"\";\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService,\n    private organizationService: OrganizationService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.token == null;\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"sponsoredFamiliesAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.token = qParams.token;\n\n      await this.syncService.fullSync(true);\n      this.badToken = !(await this.apiService.postPreValidateSponsorshipToken(this.token));\n      this.loading = false;\n\n      this.existingFamilyOrganizations = (await this.organizationService.getAll()).filter(\n        (o) => o.planProductType === ProductType.Families\n      );\n\n      if (this.existingFamilyOrganizations.length === 0) {\n        this.selectedFamilyOrganizationId = \"createNew\";\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  get selectedFamilyOrganizationId() {\n    return this._selectedFamilyOrganizationId;\n  }\n\n  set selectedFamilyOrganizationId(value: string) {\n    this._selectedFamilyOrganizationId = value;\n    this.showNewOrganization = value === \"createNew\";\n  }\n\n  private async doSubmit(organizationId: string) {\n    try {\n      const request = new OrganizationSponsorshipRedeemRequest();\n      request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n      request.sponsoredOrganizationId = organizationId;\n\n      await this.apiService.postRedeemSponsorship(this.token, request);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"sponsoredFamiliesOfferRedeemed\")\n      );\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      if (this.showNewOrganization) {\n        await this.modalService.openViewRef(\n          DeleteOrganizationComponent,\n          this.deleteModalRef,\n          (comp) => {\n            comp.organizationId = organizationId;\n            comp.deleteOrganizationRequestType = \"InvalidFamiliesForEnterprise\";\n            comp.onSuccess.subscribe(() => {\n              this.router.navigate([\"/\"]);\n            });\n          }\n        );\n      }\n      this.validationService.showError(this.i18nService.t(\"sponsorshipTokenHasExpired\"));\n    }\n  }\n\n  private async onOrganizationCreateSuccess(value: any) {\n    // Use newly created organization id\n    await this.doSubmit(value.organizationId);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HasPremiumGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    if (!userHasPremium) {\n      this.messagingService.send(\"premiumRequired\");\n    }\n\n    // Prevent trapping the user on the login page, since that's an awful UX flow\n    if (!userHasPremium && this.router.url === \"/login\") {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    return userHasPremium;\n  }\n}\n","export enum ReportVariant {\n  Enabled = \"Enabled\",\n  RequiresPremium = \"RequiresPremium\",\n  RequiresUpgrade = \"RequiresUpgrade\",\n}\n","import { ReportEntry } from \"./models/report-entry\";\n\nexport enum ReportType {\n  ExposedPasswords = \"exposedPasswords\",\n  ReusedPasswords = \"reusedPasswords\",\n  WeakPasswords = \"weakPasswords\",\n  UnsecuredWebsites = \"unsecuredWebsites\",\n  Inactive2fa = \"inactive2fa\",\n  DataBreach = \"dataBreach\",\n}\n\ntype ReportWithoutVariant = Omit<ReportEntry, \"variant\">;\n\nexport const reports: Record<ReportType, ReportWithoutVariant> = {\n  [ReportType.ExposedPasswords]: {\n    title: \"exposedPasswordsReport\",\n    description: \"exposedPasswordsReportDesc\",\n    route: \"exposed-passwords-report\",\n    icon: \"reportExposedPasswords\",\n  },\n  [ReportType.ReusedPasswords]: {\n    title: \"reusedPasswordsReport\",\n    description: \"reusedPasswordsReportDesc\",\n    route: \"reused-passwords-report\",\n    icon: \"reportReusedPasswords\",\n  },\n  [ReportType.WeakPasswords]: {\n    title: \"weakPasswordsReport\",\n    description: \"weakPasswordsReportDesc\",\n    route: \"weak-passwords-report\",\n    icon: \"reportWeakPasswords\",\n  },\n  [ReportType.UnsecuredWebsites]: {\n    title: \"unsecuredWebsitesReport\",\n    description: \"unsecuredWebsitesReportDesc\",\n    route: \"unsecured-websites-report\",\n    icon: \"reportUnsecuredWebsites\",\n  },\n  [ReportType.Inactive2fa]: {\n    title: \"inactive2faReport\",\n    description: \"inactive2faReportDesc\",\n    route: \"inactive-two-factor-report\",\n    icon: \"reportInactiveTwoFactor\",\n  },\n  [ReportType.DataBreach]: {\n    title: \"dataBreachReport\",\n    description: \"breachDesc\",\n    route: \"breach-report\",\n    icon: \"reportBreach\",\n  },\n};\n","<div class=\"page-header\">\n  <h1>{{ \"dataBreachReport\" | i18n }}</h1>\n</div>\n<p>{{ \"breachDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"username\">{{ \"username\" | i18n }}</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        name=\"Username\"\n        class=\"form-control\"\n        [(ngModel)]=\"username\"\n        required\n      />\n      <small class=\"form-text text-muted\">{{ \"breachCheckUsernameEmail\" | i18n }}</small>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"checkBreaches\" | i18n }}\n  </bit-submit-button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n  <p *ngIf=\"error\">{{ \"reportError\" | i18n }}...</p>\n  <ng-container *ngIf=\"!error\">\n    <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!breachedAccounts.length\">\n      {{ \"breachUsernameNotFound\" | i18n: checkedUsername }}\n    </app-callout>\n    <app-callout type=\"danger\" title=\"{{ 'breachFound' | i18n }}\" *ngIf=\"breachedAccounts.length\">\n      {{ \"breachUsernameFound\" | i18n: checkedUsername:breachedAccounts.length }}\n    </app-callout>\n    <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n      <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n        <div class=\"row\">\n          <div class=\"col-2 text-center\">\n            <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\" />\n          </div>\n          <div class=\"col-7\">\n            <h3 class=\"text-lg\">{{ a.title }}</h3>\n            <p [innerHTML]=\"a.description\"></p>\n            <p class=\"mb-1\">{{ \"compromisedData\" | i18n }}:</p>\n            <ul>\n              <li *ngFor=\"let d of a.dataClasses\">{{ d }}</li>\n            </ul>\n          </div>\n          <div class=\"col-3\">\n            <dl>\n              <dt>{{ \"website\" | i18n }}</dt>\n              <dd>{{ a.domain }}</dd>\n              <dt>{{ \"affectedUsers\" | i18n }}</dt>\n              <dd>{{ a.pwnCount | number }}</dd>\n              <dt>{{ \"breachOccurred\" | i18n }}</dt>\n              <dd>{{ a.breachDate | date: \"mediumDate\" }}</dd>\n              <dt>{{ \"breachReported\" | i18n }}</dt>\n              <dd>{{ a.addedDate | date: \"mediumDate\" }}</dd>\n            </dl>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { BreachAccountResponse } from \"@bitwarden/common/models/response/breachAccountResponse\";\n\n@Component({\n  selector: \"app-breach-report\",\n  templateUrl: \"breach-report.component.html\",\n})\nexport class BreachReportComponent implements OnInit {\n  error = false;\n  username: string;\n  checkedUsername: string;\n  breachedAccounts: BreachAccountResponse[] = [];\n  formPromise: Promise<BreachAccountResponse[]>;\n\n  constructor(private auditService: AuditService, private stateService: StateService) {}\n\n  async ngOnInit() {\n    this.username = await this.stateService.getEmail();\n  }\n\n  async submit() {\n    this.error = false;\n    this.username = this.username.toLowerCase();\n    try {\n      this.formPromise = this.auditService.breachedAccounts(this.username);\n      this.breachedAccounts = await this.formPromise;\n    } catch {\n      this.error = true;\n    }\n    this.checkedUsername = this.username;\n  }\n}\n","export const IconSvg = {\n  reportExposedPasswords: `\n      <svg width=\"101\" height=\"77\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.374 50.192a26.42 26.42 0 0 0 9.111 1.608c14.34 0 25.965-11.372 25.965-25.4 0-.337-.007-.673-.02-1.008h25.299v34.85H32.374v-10.05Z\" fill=\"currentColor\" />\n        <path d=\"M15.805 26.4c0 14.028 11.625 25.4 25.965 25.4s25.964-11.372 25.964-25.4C67.734 12.372 56.11 1 41.77 1 27.43 1 15.805 12.372 15.805 26.4Z\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M27.914 47.849a1 1 0 0 0-2 0h2Zm68.288-26.792a2.12 2.12 0 0 1 2.14 2.11h2c0-2.253-1.83-4.11-4.14-4.11v2Zm2.14 2.11v40.552h2V23.167h-2Zm0 40.552c0 1.172-.958 2.11-2.14 2.11v2c2.25 0 4.14-1.798 4.14-4.11h-2Zm-2.14 2.11H30.054v2h66.148v-2Zm-66.148 0a2.12 2.12 0 0 1-2.14-2.11h-2a4.12 4.12 0 0 0 4.14 4.11v-2Zm-2.14-2.11V47.85h-2v15.87h2Zm39.254-42.662h29.034v-2H67.168v2Z\" fill=\"#fff\" />\n        <path d=\"M67.203 25.56h25.64v34.85H32.487V50.011\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <path d=\"M47.343 76h31.571\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M57.557 66.83V76M67.771 66.83V76\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <path d=\"m20.995 42.873-3.972 3.972-14.61 14.61a3.413 3.413 0 0 0 0 4.826v0a3.413 3.413 0 0 0 4.827 0l14.61-14.61 3.972-3.972\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M86.037 32.488H71.845M86.037 37.81H76.28M71.845 37.81h-6.652M86.037 43.132h-6.209M74.95 43.132H61.2M86.037 48.454H71.845M66.967 48.454h-7.54M86.037 53.776H66.08M61.201 53.776h-11.53M44.793 53.776h-7.096\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n        <rect width=\"40.801\" height=\"9.757\" rx=\"4\" transform=\"matrix(-1 0 0 1 61.201 14.748)\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M16.852 33.375h28.375a4 4 0 0 1 4 4v1.757a4 4 0 0 1-4 4H22.174M66.523 33.375h-3.539a4 4 0 0 0-4 4v3.761c0 1.102.894 1.996 1.996 1.996v0\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n      </svg>\n    `,\n  reportReusedPasswords: `\n    <svg width=\"102\" height=\"102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M57.983 15.06a35.664 35.664 0 0 1 14.531 6.27c16.164 11.78 19.585 34.613 7.643 51a37.227 37.227 0 0 1-6.81 7.138m-32.842 6.697a35.708 35.708 0 0 1-11.239-5.495c-16.163-11.78-19.585-34.613-7.642-51a37.55 37.55 0 0 1 3.295-3.929\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path d=\"M93.909 64.598H7.72c-.708 0-1.275-.662-1.275-1.49V40.273c0-.828.567-1.49 1.275-1.49H93.91c.708 0 1.275.663 1.275 1.49v22.837c.047.827-.567 1.49-1.275 1.49Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path d=\"M21.532 52.186v-5.965M21.532 52.187l5.748-1.844M21.532 52.186l3.524 4.881M21.531 52.186l-3.47 4.881M21.532 52.187l-5.694-1.844M40.944 52.186v-5.965M40.944 52.187l5.694-1.844M40.944 52.187l3.525 4.88M40.944 52.187l-3.525 4.88M40.944 52.187l-5.694-1.844M54.849 57.337h11.294M74.21 57.337h11.295M41.75 83l.71 4.75-4.75.71M58.664 18.66 56 14.665 59.996 12\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    </svg>\n    `,\n  reportWeakPasswords: `\n      <svg width=\"78\" height=\"78\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M66.493 64.415V77H9.979V64.324M9.979 44.065V32.106h56.514v12.148\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <path d=\"M75.44 64.852H2.085c-.603 0-1.085-.555-1.085-1.25V44.448c0-.694.482-1.25 1.085-1.25H75.44c.603 0 1.085.556 1.085 1.25v19.156c.04.694-.482 1.25-1.085 1.25Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M13.84 54.56v-5.077M13.84 54.56l4.893-1.57M13.84 54.56l3 4.153M13.84 54.56l-2.954 4.153M13.84 54.56l-4.846-1.57M30.363 54.56v-5.077M30.363 54.56l4.846-1.57M30.363 54.56l3 4.153M30.363 54.56l-3 4.153M30.363 54.56l-4.846-1.57M42.197 59.042h9.506M58.57 59.042h9.507\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        <path d=\"M20.863 31.364c-.274-5.285 0-15.817 1.093-18.863 1.276-3.554 6.233-10.826 15.856-11.482 4.83-.273 15.2 2.296 18.043 14.763\" stroke=\"#fff\" stroke-width=\"2\" />\n      </svg>\n    `,\n  reportUnsecuredWebsites: `\n      <svg width=\"113\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M1.71 12.983h110.362v55.11a6 6 0 0 1-6 6H7.711a6 6 0 0 1-6-6v-55.11Z\" fill=\"currentColor\" />\n        <rect x=\"1\" y=\"1.073\" width=\"110.5\" height=\"73.454\" rx=\"9\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M89.48 8.048V7.47M96.363 8.048V7.47M103.246 8.048V7.47\" stroke=\"#fff\" stroke-width=\"4\" stroke-linecap=\"round\" />\n        <path d=\"M0 12.983h111.217\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"m93.236 44.384-18.42-11.026 2.93 21.266 5.582-5.237 4.27 6.46 2.98-1.971-4.26-6.446 6.918-3.046Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n        <rect width=\"96.673\" height=\"6.886\" rx=\"3.443\" transform=\"matrix(-1 0 0 1 104.373 18.721)\" stroke=\"#fff\" />\n      </svg>\n    `,\n  reportInactiveTwoFactor: `\n      <svg width=\"42\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" d=\"M1 13.121h39.595v48.758H1z\" />\n        <rect x=\"1\" y=\"1\" width=\"39.595\" height=\"73\" rx=\"8\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M12.344 8.091h16.907M18.907 67.424h3.025M31.503 32.515c-2.047-4.337-6.717-7.061-11.73-6.414a11.356 11.356 0 0 0-9.125 7.126M10.816 42.016c2.047 4.337 6.718 7.062 11.73 6.414 4.346-.562 7.8-3.51 9.213-7.358\" />\n        <path d=\"m33.584 29.293-1.295 4.625-4.625-1.295M8.523 44.725l1.441-4.581 4.582 1.441\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      </svg>\n    `,\n  reportBreach: `\n      <svg width=\"58\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M39.569 74H13.007a7 7 0 0 1-7-7V31.077a7 7 0 0 1 7-7h19.101a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.912V67a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M44.576 69.055H18.015a7 7 0 0 1-7-7V26.132a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.911v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M50 63.698H23.439a7 7 0 0 1-7-7V20.775a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.575A7 7 0 0 1 57 28.35v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"M44.648 13.599v3.95a8 8 0 0 0 8 8h4.518\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M23.533 37.736H49.49M23.533 46.802H49.49M23.533 42.269H49.49M23.533 55.456H49.49M23.533 50.923H49.49\" />\n        <path d=\"M1 16.483C1 7.944 8.013 1 16.69 1c8.678 0 15.691 6.944 15.691 15.483 0 8.54-7.013 15.484-15.69 15.484C8.012 31.967 1 25.023 1 16.484Z\" fill=\"#518FFF\" stroke=\"#fff\" stroke-width=\"2\" />\n        <path d=\"m16.562 7.979.1 11.538\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n        <ellipse rx=\"1.252\" ry=\"1.236\" transform=\"rotate(-.479 2802.219 -1964.476) skewX(.012)\" fill=\"#fff\" />\n      </svg>\n    `,\n};\n\nexport type Icon = keyof typeof IconSvg;\n","import { Component, HostBinding, Input } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { Icon, IconSvg } from \"./icons\";\n\n@Component({\n  selector: \"bit-icon\",\n  template: ``,\n})\nexport class BitIconComponent {\n  @Input() icon: Icon;\n\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  @HostBinding(\"innerHtml\")\n  protected get innerHtml() {\n    const svg = IconSvg[this.icon];\n    if (svg == null) {\n      return \"Unknown icon\";\n    }\n\n    return this.domSanitizer.bypassSecurityTrustHtml(IconSvg[this.icon]);\n  }\n}\n","<a\n  class=\"tw-block tw-h-full tw-w-72 tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 !tw-text-main tw-transition-all hover:tw-scale-105 hover:tw-no-underline focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2\"\n  [routerLink]=\"route\"\n>\n  <div class=\"tw-relative\">\n    <div\n      class=\"tw-flex tw-h-28 tw-bg-background-alt2 tw-text-center tw-text-primary-300\"\n      [ngClass]=\"{ 'tw-grayscale': disabled }\"\n    >\n      <div class=\"tw-m-auto\"><bit-icon [icon]=\"icon\"></bit-icon></div>\n    </div>\n    <div class=\"tw-p-5\" [ngClass]=\"{ 'tw-grayscale': disabled }\">\n      <h3 class=\"tw-mb-4 tw-text-xl tw-font-bold\">{{ title }}</h3>\n      <p class=\"tw-mb-0\">{{ description }}</p>\n    </div>\n    <span\n      bitBadge\n      badgeType=\"success\"\n      class=\"tw-absolute tw-left-2 tw-top-2 tw-leading-none\"\n      *ngIf=\"disabled\"\n    >\n      <ng-container *ngIf=\"requiresPremium\">{{ \"premium\" | i18n }}</ng-container>\n      <ng-container *ngIf=\"!requiresPremium\">{{ \"upgrade\" | i18n }}</ng-container>\n    </span>\n  </div>\n</a>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportVariant } from \"../models/report-variant\";\n\n@Component({\n  selector: \"app-report-card\",\n  templateUrl: \"report-card.component.html\",\n})\nexport class ReportCardComponent {\n  @Input() title: string;\n  @Input() description: string;\n  @Input() route: string;\n  @Input() icon: string;\n  @Input() variant: ReportVariant;\n\n  protected get disabled() {\n    return this.variant != ReportVariant.Enabled;\n  }\n\n  protected get requiresPremium() {\n    return this.variant == ReportVariant.RequiresPremium;\n  }\n}\n","<div class=\"tw-inline-grid tw-grid-cols-3 tw-gap-4\">\n  <div *ngFor=\"let report of reports\">\n    <app-report-card\n      [title]=\"report.title | i18n\"\n      [description]=\"report.description | i18n\"\n      [route]=\"report.route\"\n      [variant]=\"report.variant\"\n      [icon]=\"report.icon\"\n    ></app-report-card>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportEntry } from \"../models/report-entry\";\n\n@Component({\n  selector: \"app-report-list\",\n  templateUrl: \"report-list.component.html\",\n})\nexport class ReportListComponent {\n  @Input() reports: ReportEntry[];\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ReportEntry } from \"../models/report-entry\";\nimport { ReportVariant } from \"../models/report-variant\";\nimport { reports, ReportType } from \"../reports\";\n\n@Component({\n  selector: \"app-reports-home\",\n  templateUrl: \"reports-home.component.html\",\n})\nexport class ReportsHomeComponent implements OnInit {\n  reports: ReportEntry[];\n\n  constructor(private stateService: StateService) {}\n\n  async ngOnInit(): Promise<void> {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    const reportRequiresPremium = userHasPremium\n      ? ReportVariant.Enabled\n      : ReportVariant.RequiresPremium;\n\n    this.reports = [\n      {\n        ...reports[ReportType.ExposedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.ReusedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.WeakPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.UnsecuredWebsites],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.Inactive2fa],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.DataBreach],\n        variant: ReportVariant.Enabled,\n      },\n    ];\n  }\n}\n","<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n\n  <div class=\"row mt-4\">\n    <div class=\"col\">\n      <a bitButton routerLink=\"./\" *ngIf=\"!homepage\">\n        <i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i>\n        {{ \"backToReports\" | i18n }}\n      </a>\n    </div>\n  </div>\n</div>\n","<div class=\"page-header\">\n  <h1>{{ \"reports\" | i18n }}</h1>\n</div>\n\n<p>{{ \"reportsDesc\" | i18n }}</p>\n\n<app-report-list [reports]=\"reports\"></app-report-list>\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-reports-layout\",\n  templateUrl: \"reports-layout.component.html\",\n})\nexport class ReportsLayoutComponent implements OnDestroy {\n  homepage = true;\n  subscription: Subscription;\n\n  constructor(router: Router) {\n    this.subscription = router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event) => {\n        this.homepage = (event as NavigationEnd).url == \"/reports\";\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\n\nimport { HasPremiumGuard } from \"../shared/guards/has-premium.guard\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportsLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: \"\", pathMatch: \"full\", component: ReportsHomeComponent, data: { homepage: true } },\n      {\n        path: \"breach-report\",\n        component: BreachReportComponent,\n        data: { titleId: \"dataBreachReport\" },\n      },\n      {\n        path: \"reused-passwords-report\",\n        component: ReusedPasswordsReportComponent,\n        data: { titleId: \"reusedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"unsecured-websites-report\",\n        component: UnsecuredWebsitesReportComponent,\n        data: { titleId: \"unsecuredWebsitesReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"weak-passwords-report\",\n        component: WeakPasswordsReportComponent,\n        data: { titleId: \"weakPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"exposed-passwords-report\",\n        component: ExposedPasswordsReportComponent,\n        data: { titleId: \"exposedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"inactive-two-factor-report\",\n        component: InactiveTwoFactorReportComponent,\n        data: { titleId: \"inactive2faReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportsRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportCardComponent } from \"./report-card/report-card.component\";\nimport { ReportListComponent } from \"./report-list/report-list.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\nimport { ReportsRoutingModule } from \"./reports-routing.module\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule, ReportsRoutingModule],\n  declarations: [\n    BreachReportComponent,\n    ExposedPasswordsReportComponent,\n    InactiveTwoFactorReportComponent,\n    ReportCardComponent,\n    ReportListComponent,\n    ReportsLayoutComponent,\n    ReportsHomeComponent,\n    ReusedPasswordsReportComponent,\n    UnsecuredWebsitesReportComponent,\n    WeakPasswordsReportComponent,\n    WeakPasswordsReportComponent,\n  ],\n})\nexport class ReportsModule {}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccess } from \"../domain/sendAccess\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccessResponse } from \"../response/sendAccessResponse\";\nimport { SendAccessView } from \"../view/sendAccessView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-12\">\n      <h1 class=\"lead text-center mb-4\">Bitwarden Send</h1>\n    </div>\n    <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\">\n      <p>{{ \"sendCreatorIdentifier\" | i18n: creatorIdentifier }}</p>\n    </div>\n    <div class=\"col-8\" *ngIf=\"hideEmail\">\n      <app-callout type=\"warning\" title=\"{{ 'warning' | i18n }}\">\n        {{ \"viewSendHiddenEmailWarning\" | i18n }}\n        <a href=\"https://bitwarden.com/help/receive-send/\" target=\"_blank\">{{\n          \"learnMore\" | i18n\n        }}</a\n        >.\n      </app-callout>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-5\">\n      <div class=\"card d-block\">\n        <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\n          <p>{{ \"sendProtectedPassword\" | i18n }}</p>\n          <p>{{ \"sendProtectedPasswordDontKnow\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"password\" | i18n }}</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"Password\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"password\"\n              required\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && unavailable\">\n          {{ \"sendAccessUnavailable\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && error\">\n          {{ \"unexpectedError\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\n          <p class=\"text-center\">\n            <b>{{ send.name }}</b>\n          </p>\n          <hr />\n          <!-- Text -->\n          <ng-container *ngIf=\"send.type === sendType.Text\">\n            <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{\n              \"sendHiddenByDefault\" | i18n\n            }}</app-callout>\n            <div class=\"form-group\">\n              <textarea\n                id=\"text\"\n                rows=\"8\"\n                name=\"Text\"\n                [(ngModel)]=\"sendText\"\n                class=\"form-control\"\n                readonly\n              ></textarea>\n            </div>\n            <button\n              class=\"btn btn-block btn-link\"\n              type=\"button\"\n              (click)=\"toggleText()\"\n              *ngIf=\"send.text.hidden\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showText, 'bwi-eye-slash': showText }\"\n              ></i>\n              {{ \"toggleVisibility\" | i18n }}\n            </button>\n            <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\n              <i class=\"bwi bwi-copy\" aria-hidden=\"true\"></i> {{ \"copyValue\" | i18n }}\n            </button>\n          </ng-container>\n          <!-- File -->\n          <ng-container *ngIf=\"send.type === sendType.File\">\n            <p>{{ send.file.fileName }}</p>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              (click)=\"download()\"\n              *ngIf=\"!downloading\"\n            >\n              <i class=\"bwi bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"downloadFile\" | i18n }} ({{ send.file.sizeName }})\n            </button>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              *ngIf=\"downloading\"\n              disabled=\"true\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </ng-container>\n          <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">\n            Expires: {{ expirationDate | date: \"medium\" }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 text-center mt-5 text-muted\">\n      <p class=\"mb-0\">\n        {{ \"sendAccessTaglineProductDesc\" | i18n }}<br />\n        {{ \"sendAccessTaglineLearnMore\" | i18n }}\n        <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\"\n          >Bitwarden Send</a\n        >\n        {{ \"sendAccessTaglineOr\" | i18n }}\n        <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{\n          \"sendAccessTaglineSignUp\" | i18n\n        }}</a>\n        {{ \"sendAccessTaglineTryToday\" | i18n }}\n      </p>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SEND_KDF_ITERATIONS } from \"@bitwarden/common/enums/kdfType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { SendAccess } from \"@bitwarden/common/models/domain/sendAccess\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { SendAccessRequest } from \"@bitwarden/common/models/request/sendAccessRequest\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { SendAccessResponse } from \"@bitwarden/common/models/response/sendAccessResponse\";\nimport { SendAccessView } from \"@bitwarden/common/models/view/sendAccessView\";\n\n@Component({\n  selector: \"app-send-access\",\n  templateUrl: \"access.component.html\",\n})\nexport class AccessComponent implements OnInit {\n  send: SendAccessView;\n  sendType = SendType;\n  downloading = false;\n  loading = true;\n  passwordRequired = false;\n  formPromise: Promise<SendAccessResponse>;\n  password: string;\n  showText = false;\n  unavailable = false;\n  error = false;\n  hideEmail = false;\n\n  private id: string;\n  private key: string;\n  private decKey: SymmetricCryptoKey;\n  private accessRequest: SendAccessRequest;\n\n  constructor(\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private fileDownloadService: FileDownloadService\n  ) {}\n\n  get sendText() {\n    if (this.send == null || this.send.text == null) {\n      return null;\n    }\n    return this.showText ? this.send.text.text : this.send.text.maskedText;\n  }\n\n  get expirationDate() {\n    if (this.send == null || this.send.expirationDate == null) {\n      return null;\n    }\n    return this.send.expirationDate;\n  }\n\n  get creatorIdentifier() {\n    if (this.send == null || this.send.creatorIdentifier == null) {\n      return null;\n    }\n    return this.send.creatorIdentifier;\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(async (params) => {\n      this.id = params.sendId;\n      this.key = params.key;\n      if (this.key == null || this.id == null) {\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async download() {\n    if (this.send == null || this.decKey == null) {\n      return;\n    }\n\n    if (this.downloading) {\n      return;\n    }\n\n    const downloadData = await this.apiService.getSendFileDownloadData(\n      this.send,\n      this.accessRequest\n    );\n\n    if (Utils.isNullOrWhitespace(downloadData.url)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingSendFile\"));\n      return;\n    }\n\n    this.downloading = true;\n    const response = await fetch(new Request(downloadData.url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      this.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, this.decKey);\n      this.fileDownloadService.download({\n        fileName: this.send.file.fileName,\n        blobData: decBuf,\n        downloadMethod: \"save\",\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    this.downloading = false;\n  }\n\n  copyText() {\n    this.platformUtilsService.copyToClipboard(this.send.text.text);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendTypeText\"))\n    );\n  }\n\n  toggleText() {\n    this.showText = !this.showText;\n  }\n\n  async load() {\n    this.unavailable = false;\n    this.error = false;\n    this.hideEmail = false;\n    const keyArray = Utils.fromUrlB64ToArray(this.key);\n    this.accessRequest = new SendAccessRequest();\n    if (this.password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        this.password,\n        keyArray,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n    }\n    try {\n      let sendResponse: SendAccessResponse = null;\n      if (this.loading) {\n        sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n      } else {\n        this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n        sendResponse = await this.formPromise;\n      }\n      this.passwordRequired = false;\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(keyArray);\n      this.send = await sendAccess.decrypt(this.decKey);\n      this.showText = this.send.text != null ? !this.send.text.hidden : true;\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          this.passwordRequired = true;\n        } else if (e.statusCode === 404) {\n          this.unavailable = true;\n        } else {\n          this.error = true;\n        }\n      }\n    }\n    this.loading = false;\n    this.hideEmail =\n      this.creatorIdentifier == null &&\n      !this.passwordRequired &&\n      !this.loading &&\n      !this.unavailable;\n  }\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new UntypedFormGroup({\n    selectedDeletionDatePreset: new UntypedFormControl(),\n    selectedExpirationDatePreset: new UntypedFormControl(),\n    defaultDeletionDateTime: new UntypedFormControl(),\n    defaultExpirationDateTime: new UntypedFormControl(),\n    fallbackDeletionDate: new UntypedFormControl(),\n    fallbackDeletionTime: new UntypedFormControl(),\n    fallbackExpirationDate: new UntypedFormControl(),\n    fallbackExpirationTime: new UntypedFormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as UntypedFormControl;\n  }\n\n  get selectedExpirationDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as UntypedFormControl;\n  }\n\n  get defaultDeletionDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as UntypedFormControl;\n  }\n\n  get defaultExpirationDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as UntypedFormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/sendFileView\";\nimport { SendTextView } from \"@bitwarden/common/models/view/sendTextView\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\">\n  <div class=\"col-6 form-group\">\n    <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n    <ng-template #deletionDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <ng-container *ngSwitchCase=\"'firefox'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <input\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              type=\"time\"\n              name=\"DeletionTimeDate\"\n              formControlName=\"fallbackDeletionTime\"\n              required\n              placeholder=\"HH:MM AM/PM\"\n              [readOnly]=\"disableSend\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'safari'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <select\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              [required]=\"!editMode\"\n              formControlName=\"fallbackDeletionTime\"\n              name=\"SafariDeletionTime\"\n            >\n              <option\n                *ngFor=\"let o of safariDeletionTimePresetOptions\"\n                [ngValue]=\"o.twentyFourHour\"\n              >\n                {{ o.twelveHour }}\n              </option>\n            </select>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"deletionDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"DeletionDate\"\n            formControlName=\"defaultDeletionDateTime\"\n            required\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"deletionDate\"\n        name=\"SelectedDeletionDatePreset\"\n        formControlName=\"selectedDeletionDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"deletionDateDesc\" | i18n }}</div>\n  </div>\n  <div class=\"col-6 form-group\">\n    <div class=\"d-flex\">\n      <label for=\"expirationDate\">{{ \"expirationDate\" | i18n }}</label>\n      <a\n        href=\"#\"\n        appStopClick\n        (click)=\"clearExpiration()\"\n        class=\"ml-auto\"\n        *ngIf=\"editMode && !disabled\"\n      >\n        {{ \"clear\" | i18n }}\n      </a>\n    </div>\n    <ng-template #expirationDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n        <!-- non-default cases are not showing up -->\n        <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            [required]=\"!editMode\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"expirationDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"ExpirationDate\"\n            formControlName=\"defaultExpirationDateTime\"\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"expirationDate\"\n        name=\"SelectedExpirationDatePreset\"\n        formControlName=\"selectedExpirationDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"expirationDateDesc\" | i18n }}</div>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"sendAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"send\">\n        <app-callout *ngIf=\"disableSend\">\n          <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n        </app-callout>\n        <app-callout *ngIf=\"!disableSend && disableHideEmail\">\n          <span>{{ \"sendOptionsPolicyInEffect\" | i18n }}</span>\n          <ul class=\"mb-0\">\n            <li>{{ \"sendDisableHideEmailInEffect\" | i18n }}</li>\n          </ul>\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"send.name\"\n              required\n              [readOnly]=\"disableSend\"\n            />\n            <small class=\"form-text text-muted\">{{ \"sendNameDesc\" | i18n }}</small>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!editMode\">\n          <div class=\"col-6 form-group\">\n            <label>{{ \"whatTypeOfSend\" | i18n }}</label>\n            <div class=\"form-check\" *ngFor=\"let o of typeOptions\">\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                [(ngModel)]=\"send.type\"\n                name=\"Type_{{ o.value }}\"\n                id=\"type_{{ o.value }}\"\n                [value]=\"o.value\"\n                (change)=\"typeChanged(o)\"\n                [checked]=\"send.type === o.value\"\n              />\n              <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n                {{ o.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <!-- Text -->\n        <ng-container *ngIf=\"send.type === sendType.Text\">\n          <div class=\"form-group\">\n            <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n            <textarea\n              id=\"text\"\n              name=\"Text.Text\"\n              rows=\"6\"\n              [(ngModel)]=\"send.text.text\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <small class=\"form-text text-muted\">{{ \"sendTextDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.text.hidden\"\n                id=\"text-hidden\"\n                name=\"Text.Hidden\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"text-hidden\">{{\n                \"textHiddenByDefault\" | i18n\n              }}</label>\n            </div>\n          </div>\n        </ng-container>\n        <!-- File -->\n        <ng-container *ngIf=\"send.type === sendType.File\">\n          <div class=\"form-group\">\n            <div *ngIf=\"editMode\">\n              <strong class=\"d-block\">{{ \"file\" | i18n }}</strong>\n              {{ send.file.fileName }} ({{ send.file.sizeName }})\n            </div>\n            <div *ngIf=\"!editMode\">\n              <label for=\"file\">{{ \"file\" | i18n }}</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n                name=\"file\"\n                required\n                [disabled]=\"disableSend\"\n              />\n              <small class=\"form-text text-muted\"\n                >{{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}</small\n              >\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-5\">{{ \"share\" | i18n }}</h3>\n        <div class=\"form-group\" *ngIf=\"link\">\n          <label for=\"link\">{{ \"sendLinkLabel\" | i18n }}</label>\n          <input\n            type=\"text\"\n            readonly\n            id=\"link\"\n            name=\"Link\"\n            [(ngModel)]=\"link\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [(ngModel)]=\"copyLink\"\n              id=\"copy-link\"\n              name=\"CopyLink\"\n            />\n            <label class=\"form-check-label\" for=\"copy-link\">{{\n              \"copySendLinkOnSave\" | i18n\n            }}</label>\n          </div>\n        </div>\n        <div\n          id=\"options-header\"\n          class=\"section-header d-flex flex-row align-items-center mt-5\"\n          (click)=\"toggleOptions()\"\n        >\n          <h3 class=\"mb-0 mr-2\">{{ \"options\" | i18n }}</h3>\n          <a class=\"mb-1\" href=\"#\" appStopClick role=\"button\">\n            <i\n              class=\"bwi\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-angle-down': !showOptions, 'bwi-chevron-up': showOptions }\"\n            ></i>\n          </a>\n        </div>\n        <div id=\"options\" [hidden]=\"!showOptions\">\n          <app-send-efflux-dates\n            [initialDeletionDate]=\"send.deletionDate\"\n            [initialExpirationDate]=\"send.expirationDate\"\n            [editMode]=\"editMode\"\n            [disabled]=\"disableSend\"\n            (datesChanged)=\"setDates($event)\"\n          >\n          </app-send-efflux-dates>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"maxAccessCount\">{{ \"maxAccessCount\" | i18n }}</label>\n              <input\n                id=\"maxAccessCount\"\n                class=\"form-control\"\n                type=\"number\"\n                name=\"MaxAccessCount\"\n                [(ngModel)]=\"send.maxAccessCount\"\n                min=\"1\"\n                [readOnly]=\"disableSend\"\n              />\n              <div class=\"form-text text-muted small\">{{ \"maxAccessCountDesc\" | i18n }}</div>\n            </div>\n            <div class=\"col-6 form-group\" *ngIf=\"editMode\">\n              <label for=\"accessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n              <input\n                id=\"accessCount\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"AccessCount\"\n                readonly\n                [(ngModel)]=\"send.accessCount\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"password\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Password\"\n                  [(ngModel)]=\"password\"\n                  [readOnly]=\"disableSend\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePasswordVisible()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-text text-muted small\">{{ \"sendPasswordDesc\" | i18n }}</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <div class=\"form-text text-muted small\">{{ \"sendNotesDesc\" | i18n }}</div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.hideEmail\"\n                id=\"hideEmail\"\n                name=\"HideEmail\"\n                [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"hideEmail\">\n                {{ \"hideEmail\" | i18n }}\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.disabled\"\n                id=\"disabled\"\n                name=\"Disabled\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"disabled\">{{ \"disableThisSend\" | i18n }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [ngClass]=\"{ loading: form.loading }\"\n          [disabled]=\"form.loading || disableSend\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"send\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n    // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n    return new Promise((resolve) => {\n      window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-3 groupings\">\n      <div class=\"card vault-filters\">\n        <div class=\"card-header d-flex\">\n          {{ \"filters\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <input\n            type=\"search\"\n            placeholder=\"{{ searchPlaceholder || ('searchSends' | i18n) }}\"\n            id=\"search\"\n            class=\"form-control\"\n            [(ngModel)]=\"searchText\"\n            (input)=\"searchTextChanged()\"\n            autocomplete=\"off\"\n            appAutofocus\n          />\n          <div class=\"filter\">\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedAll }\">\n                <span class=\"filter-buttons\">\n                  <button bitButton class=\"filter-button\" appStopClick (click)=\"selectAll()\">\n                    <i class=\"bwi bwi-fw bwi-filter\"></i>{{ \"allSends\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"filter\">\n            <div class=\"filter-heading\">\n              <h3>{{ \"types\" | i18n }}</h3>\n            </div>\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.Text }\">\n                <span class=\"filter-buttons\">\n                  <button\n                    bitButton\n                    class=\"filter-button\"\n                    appStopClick\n                    (click)=\"selectType(sendType.Text)\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-file-text\"></i>{{ \"sendTypeText\" | i18n }}\n                  </button>\n                </span>\n              </li>\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.File }\">\n                <span class=\"filter-buttons\">\n                  <button\n                    bitButton\n                    class=\"filter-button\"\n                    appStopClick\n                    (click)=\"selectType(sendType.File)\"\n                  >\n                    <i class=\"bwi bwi-fw bwi-file\"></i>{{ \"sendTypeFile\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"send\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addSend()\"\n            [disabled]=\"disableSend\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <!--Listing Table-->\n      <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\n        <tbody>\n          <tr *ngFor=\"let s of filteredSends\">\n            <td class=\"table-list-icon\">\n              <div class=\"icon\" aria-hidden=\"true\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type == sendType.File\"></i>\n                <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type == sendType.Text\"></i>\n              </div>\n            </td>\n            <td class=\"reduced-lh wrap\">\n              <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{ s.name }}</a>\n              <ng-container *ngIf=\"s.disabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle\"\n                  appStopProp\n                  title=\"{{ 'disabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.password\">\n                <i\n                  class=\"bwi bwi-key\"\n                  appStopProp\n                  title=\"{{ 'password' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"password\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.maxAccessCountReached\">\n                <i\n                  class=\"bwi bwi-ban\"\n                  appStopProp\n                  title=\"{{ 'maxAccessCountReached' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.expired\">\n                <i\n                  class=\"bwi bwi-clock\"\n                  appStopProp\n                  title=\"{{ 'expired' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.pendingDelete\">\n                <i\n                  class=\"bwi bwi-trash\"\n                  appStopProp\n                  title=\"{{ 'pendingDeletion' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n              </ng-container>\n              <br />\n              <small appStopProp>{{ s.deletionDate | date: \"medium\" }}</small>\n            </td>\n            <td class=\"table-list-options\">\n              <button\n                [bitMenuTriggerFor]=\"sendOptions\"\n                class=\"tw-border-none tw-bg-transparent tw-text-main\"\n                type=\"button\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu #sendOptions>\n                <button bitMenuItem (click)=\"copy(s)\">\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copySendLink\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"removePassword\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"delete(s)\">\n                  <span class=\"tw-text-danger\">\n                    <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                    {{ \"delete\" | i18n }}\n                  </span>\n                </button>\n              </bit-menu>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\n        <ng-container *ngIf=\"!loaded\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n          <img class=\"no-items-image\" aria-hidden=\"true\" />\n          <p>{{ \"noSendsInList\" | i18n }}</p>\n          <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\">\n            <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #sendAddEdit></ng-template>\n","import { Component, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\n\nconst BroadcasterSubscriptionId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send\",\n  templateUrl: \"send.component.html\",\n})\nexport class SendComponent extends BaseSendComponent {\n  @ViewChild(\"sendAddEdit\", { read: ViewContainerRef, static: true })\n  sendAddEditModalRef: ViewContainerRef;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    searchService: SearchService,\n    policyService: PolicyService,\n    private modalService: ModalService,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n\n    // Broadcaster subscription - load if sync completes in the background\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n\n    const component = await this.editSend(null);\n    component.type = this.type;\n  }\n\n  async editSend(send: SendView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.sendAddEditModalRef,\n      (comp) => {\n        comp.sendId = send == null ? null : send.id;\n        comp.onSavedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        comp.onDeletedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-deauthorize-sessions\",\n  templateUrl: \"deauthorize-sessions.component.html\",\n})\nexport class DeauthorizeSessionsComponent {\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postSecurityStamp(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"sessionsDeauthorized\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deAuthTitle\">{{ \"deauthorizeSessions\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deauthorizeSessionsDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deauthorizeSessionsWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deauthorizeSessions\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { AccountService } from \"@bitwarden/common/abstractions/account/account.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-delete-account\",\n  templateUrl: \"delete-account.component.html\",\n})\nexport class DeleteAccountComponent {\n  formPromise: Promise<void>;\n\n  deleteForm = this.formBuilder.group({\n    verification: undefined as Verification | undefined,\n  });\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private formBuilder: FormBuilder,\n    private accountService: AccountService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const verification = this.deleteForm.get(\"verification\").value;\n      this.formPromise = this.accountService.delete(verification);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      [formGroup]=\"deleteForm\"\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"deleteAccountTitle\">{{ \"deleteAccount\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deleteAccountDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n        <app-user-verification ngDefaultControl formControlName=\"verification\" name=\"verification\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteAccount\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n  newEmail: string;\n  masterPasswordHash: string;\n}\n","import { EmailTokenRequest } from \"./emailTokenRequest\";\n\nexport class EmailRequest extends EmailTokenRequest {\n  newMasterPasswordHash: string;\n  token: string;\n  key: string;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\">\n    {{ \"changeEmailTwoFactorWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          [readonly]=\"tokenSent\"\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newEmail\">{{ \"newEmail\" | i18n }}</label>\n        <input\n          id=\"newEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"NewEmail\"\n          [(ngModel)]=\"newEmail\"\n          required\n          [readonly]=\"tokenSent\"\n          inputmode=\"email\"\n          appInputVerbatim=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"tokenSent\">\n    <hr />\n    <p>{{ \"changeEmailDesc\" | i18n: newEmail }}</p>\n    <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"token\">{{ \"code\" | i18n }}</label>\n          <input\n            id=\"token\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Token\"\n            [(ngModel)]=\"token\"\n            required\n            appInputVerbatim\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span *ngIf=\"!tokenSent\">{{ \"continue\" | i18n }}</span>\n    <span *ngIf=\"tokenSent\">{{ \"changeEmail\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { EmailRequest } from \"@bitwarden/common/models/request/emailRequest\";\nimport { EmailTokenRequest } from \"@bitwarden/common/models/request/emailTokenRequest\";\n\n@Component({\n  selector: \"app-change-email\",\n  templateUrl: \"change-email.component.html\",\n})\nexport class ChangeEmailComponent implements OnInit {\n  masterPassword: string;\n  newEmail: string;\n  token: string;\n  tokenSent = false;\n  showTwoFactorEmailWarning = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n    this.showTwoFactorEmailWarning = twoFactorProviders.data.some(\n      (p) => p.type === TwoFactorProviderType.Email && p.enabled\n    );\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    this.newEmail = this.newEmail.trim().toLowerCase();\n    if (!this.tokenSent) {\n      const request = new EmailTokenRequest();\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      try {\n        this.formPromise = this.apiService.postEmailToken(request);\n        await this.formPromise;\n        this.tokenSent = true;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const request = new EmailRequest();\n      request.token = this.token;\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.newEmail,\n        kdf,\n        kdfIterations\n      );\n      request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        newKey\n      );\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n      request.key = newEncKey[1].encryptedString;\n      try {\n        this.formPromise = this.apiService.postEmail(request);\n        await this.formPromise;\n        this.reset();\n        this.platformUtilsService.showToast(\n          \"success\",\n          this.i18nService.t(\"emailChanged\"),\n          this.i18nService.t(\"logBackIn\")\n        );\n        this.messagingService.send(\"logout\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n\n  reset() {\n    this.token = this.newEmail = this.masterPassword = null;\n    this.tokenSent = false;\n  }\n}\n","export class UpdateProfileRequest {\n  name: string;\n  masterPasswordHint: string;\n  culture = \"en-US\"; // deprecated\n\n  constructor(name: string, masterPasswordHint: string) {\n    this.name = name;\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"profile && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Email\"\n          [(ngModel)]=\"profile.email\"\n          readonly\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"mb-3\">\n        <app-avatar\n          data=\"{{ profile | userName }}\"\n          [email]=\"profile.email\"\n          dynamic=\"true\"\n          size=\"75\"\n          fontSize=\"35\"\n        >\n        </app-avatar>\n      </div>\n      <hr />\n      <p *ngIf=\"fingerprint\">\n        {{ \"yourAccountsFingerprint\" | i18n }}:\n        <a\n          href=\"https://bitwarden.com/help/fingerprint-phrase/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i></a\n        ><br />\n        <code>{{ fingerprint }}</code>\n      </p>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UpdateProfileRequest } from \"@bitwarden/common/models/request/updateProfileRequest\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profileResponse\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"profile.component.html\",\n})\nexport class ProfileComponent implements OnInit {\n  loading = true;\n  profile: ProfileResponse;\n  fingerprint: string;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.profile = await this.apiService.getProfile();\n    this.loading = false;\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    if (fingerprint != null) {\n      this.fingerprint = fingerprint.join(\"-\");\n    }\n  }\n\n  async submit() {\n    try {\n      const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n      this.formPromise = this.apiService.putProfile(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"accountUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myAccount\" | i18n }}</h1>\n</div>\n<app-profile></app-profile>\n<ng-container *ngIf=\"showChangeEmail\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeEmail\" | i18n }}</h1>\n  </div>\n  <app-change-email></app-change-email>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button bitButton buttonType=\"danger\" (click)=\"deauthorizeSessions()\">\n      {{ \"deauthorizeSessions\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"deleteAccount()\">\n      {{ \"deleteAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { DeauthorizeSessionsComponent } from \"./deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./delete-account.component\";\nimport { PurgeVaultComponent } from \"./purge-vault.component\";\n\n@Component({\n  selector: \"app-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deauthorizeSessionsTemplate\", { read: ViewContainerRef, static: true })\n  deauthModalRef: ViewContainerRef;\n  @ViewChild(\"purgeVaultTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"deleteAccountTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  showChangeEmail = true;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeEmail = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async deauthorizeSessions() {\n    await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n  }\n\n  async deleteAccount() {\n    await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.plan === \"families\") {\n        this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n        this.orgPlansComponent.product = ProductType.Families;\n      } else if (qParams.plan === \"teams\") {\n        this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n        this.orgPlansComponent.product = ProductType.Teams;\n      } else if (qParams.plan === \"enterprise\") {\n        this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n        this.orgPlansComponent.product = ProductType.Enterprise;\n      }\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"page-header\">\n        <h1>{{ \"newOrganization\" | i18n }}</h1>\n      </div>\n      <p>{{ \"newOrganizationDesc\" | i18n }}</p>\n      <app-organization-plans></app-organization-plans>\n    </div>\n  </div>\n</div>\n","export class UpdateDomainsRequest {\n  equivalentDomains: string[][];\n  excludedGlobalEquivalentDomains: number[];\n}\n","<div class=\"page-header\">\n  <h1>{{ \"domainRules\" | i18n }}</h1>\n</div>\n<p>{{ \"domainRulesDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <h2>{{ \"customEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n      <div class=\"flex-fill\">\n        <label for=\"customDomain_{{ i }}\" class=\"sr-only\">{{\n          \"customDomainX\" | i18n: i + 1\n        }}</label>\n        <textarea\n          class=\"form-control\"\n          name=\"CustomDomain[{{ i }}]\"\n          id=\"customDomain_{{ i }}\"\n          [(ngModel)]=\"custom[i]\"\n          placeholder=\"{{ 'ex' | i18n }} google.com, gmail.com\"\n          required\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-link text-danger ml-2\"\n        (click)=\"remove(i)\"\n        appA11yTitle=\"{{ 'remove' | i18n }}\"\n      >\n        <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomDomain\" | i18n }}\n    </button>\n    <small class=\"text-muted d-block mb-3\">{{ \"newCustomDomainDesc\" | i18n }}</small>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <h2 class=\"spaced-header\">{{ \"globalEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n    <tbody>\n      <tr *ngFor=\"let d of global\">\n        <td [ngClass]=\"{ 'table-list-strike': d.excluded }\">{{ d.domains }}</td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"!d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                {{ \"exclude\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-plus\" aria-hidden=\"true\"></i>\n                {{ \"include\" | i18n }}\n              </a>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                <i class=\"bwi bwi-fw bwi-cut\" aria-hidden=\"true\"></i>\n                {{ \"customize\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UpdateDomainsRequest } from \"@bitwarden/common/models/request/updateDomainsRequest\";\n\n@Component({\n  selector: \"app-domain-rules\",\n  templateUrl: \"domain-rules.component.html\",\n})\nexport class DomainRulesComponent implements OnInit {\n  loading = true;\n  custom: string[] = [];\n  global: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const response = await this.apiService.getSettingsDomains();\n    this.loading = false;\n    if (response.equivalentDomains != null) {\n      this.custom = response.equivalentDomains.map((d) => d.join(\", \"));\n    }\n    if (response.globalEquivalentDomains != null) {\n      this.global = response.globalEquivalentDomains.map((d) => {\n        return {\n          domains: d.domains.join(\", \"),\n          excluded: d.excluded,\n          key: d.type,\n        };\n      });\n    }\n  }\n\n  toggleExcluded(globalDomain: any) {\n    globalDomain.excluded = !globalDomain.excluded;\n  }\n\n  customize(globalDomain: any) {\n    globalDomain.excluded = true;\n    this.custom.push(globalDomain.domains);\n  }\n\n  remove(index: number) {\n    this.custom.splice(index, 1);\n  }\n\n  add() {\n    this.custom.push(\"\");\n  }\n\n  async submit() {\n    const request = new UpdateDomainsRequest();\n    request.excludedGlobalEquivalentDomains = this.global\n      .filter((d) => d.excluded)\n      .map((d) => d.key);\n    if (request.excludedGlobalEquivalentDomains.length === 0) {\n      request.excludedGlobalEquivalentDomains = null;\n    }\n    request.equivalentDomains = this.custom\n      .filter((d) => d != null && d.trim() !== \"\")\n      .map((d) => d.split(\",\").map((d2) => d2.trim()));\n    if (request.equivalentDomains.length === 0) {\n      request.equivalentDomains = null;\n    }\n\n    try {\n      this.formPromise = this.apiService.putSettingsDomains(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"domainsUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  indexTrackBy(index: number, obj: any): any {\n    return index;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\n\n@Component({\n  selector: \"emergency-access-attachments\",\n  templateUrl: \"../vault/attachments.component.html\",\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = true;\n  canAccessAttachments = true;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async init() {\n    // Do nothing since cipher is already decoded\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return false;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../vault/add-edit.component.html\",\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  viewOnly = true;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async load() {\n    this.title = this.i18nService.t(\"viewItem\");\n  }\n\n  protected async loadCipher() {\n    return Promise.resolve(this.originalCipher);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"vault\" | i18n }}</h1>\n</div>\n<div class=\"mt-4\">\n  <ng-container *ngIf=\"ciphers.length\">\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\">\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\">\n                  <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                  {{ \"attachments\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #attachments></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipherData\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessViewResponse } from \"@bitwarden/common/models/response/emergencyAccessResponse\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { EmergencyAccessAttachmentsComponent } from \"./emergency-access-attachments.component\";\nimport { EmergencyAddEditComponent } from \"./emergency-add-edit.component\";\n\n@Component({\n  selector: \"emergency-access-view\",\n  templateUrl: \"emergency-access-view.component.html\",\n})\nexport class EmergencyAccessViewComponent implements OnInit {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n\n  id: string;\n  ciphers: CipherView[] = [];\n  loaded = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private modalService: ModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe((qParams) => {\n      if (qParams.id == null) {\n        return this.router.navigate([\"settings/emergency-access\"]);\n      }\n\n      this.id = qParams.id;\n\n      this.load();\n    });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    // eslint-disable-next-line\n    const [_, childComponent] = await this.modalService.openViewRef(\n      EmergencyAddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.cipher = cipher;\n      }\n    );\n\n    return childComponent;\n  }\n\n  async load() {\n    const response = await this.apiService.postEmergencyAccessView(this.id);\n    this.ciphers = await this.getAllCiphers(response);\n    this.loaded = true;\n  }\n\n  async viewAttachments(cipher: CipherView) {\n    await this.modalService.openViewRef(\n      EmergencyAccessAttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipher = cipher;\n        comp.emergencyAccessId = this.id;\n      }\n    );\n  }\n\n  protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n    const ciphers = response.ciphers;\n\n    const decCiphers: CipherView[] = [];\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    const promises: any[] = [];\n    ciphers.forEach((cipherResponse) => {\n      const cipherData = new CipherData(cipherResponse);\n      const cipher = new Cipher(cipherData);\n      promises.push(cipher.decrypt(oldEncKey).then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n    return decCiphers;\n  }\n}\n","export enum EmergencyAccessStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  RecoveryInitiated = 3,\n  RecoveryApproved = 4,\n}\n","export enum EmergencyAccessType {\n  View = 0,\n  Takeover = 1,\n}\n","export class EmergencyAccessConfirmRequest {\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessInviteRequest {\n  email: string;\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessUpdateRequest {\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n  keyEncrypted?: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          <app-premium-badge *ngIf=\"readOnly\"></app-premium-badge>\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteEmergencyContactDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"email\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n            />\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userAccess\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/emergency-access/#user-access\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeView\"\n            [value]=\"emergencyAccessType.View\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeView\">\n            {{ \"view\" | i18n }}\n            <small>{{ \"viewDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeTakeover\"\n            [value]=\"emergencyAccessType.Takeover\"\n            [(ngModel)]=\"type\"\n            [disabled]=\"readOnly\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeTakeover\">\n            {{ \"takeover\" | i18n }}\n            <small>{{ \"takeoverDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-group col-6 mt-4\">\n          <label for=\"waitTime\">{{ \"waitTime\" | i18n }}</label>\n          <select\n            id=\"waitTime\"\n            name=\"waitTime\"\n            [(ngModel)]=\"waitTime\"\n            class=\"form-control\"\n            [disabled]=\"readOnly\"\n          >\n            <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n          <small class=\"text-muted\">{{ \"waitTimeDesc\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <bit-submit-button [loading]=\"loading || form.loading\" [disabled]=\"readOnly\">\n          {{ \"save\" | i18n }}\n        </bit-submit-button>\n        <button bitButton buttonType=\"secondary\" type=\"button\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            bitButton\n            buttonType=\"danger\"\n            type=\"button\"\n            (click)=\"delete()\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { EmergencyAccessInviteRequest } from \"@bitwarden/common/models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergencyAccessUpdateRequest\";\n\n@Component({\n  selector: \"emergency-access-add-edit\",\n  templateUrl: \"emergency-access-add-edit.component.html\",\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() emergencyAccessId: string;\n  @Output() onSaved = new EventEmitter();\n  @Output() onDeleted = new EventEmitter();\n\n  loading = true;\n  readOnly = false;\n  editMode = false;\n  title: string;\n  email: string;\n  type: EmergencyAccessType = EmergencyAccessType.View;\n\n  formPromise: Promise<any>;\n\n  emergencyAccessType = EmergencyAccessType;\n  waitTimes: { name: string; value: number }[];\n  waitTime: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.emergencyAccessId != null;\n\n    this.waitTimes = [\n      { name: this.i18nService.t(\"oneDay\"), value: 1 },\n      { name: this.i18nService.t(\"days\", \"2\"), value: 2 },\n      { name: this.i18nService.t(\"days\", \"7\"), value: 7 },\n      { name: this.i18nService.t(\"days\", \"14\"), value: 14 },\n      { name: this.i18nService.t(\"days\", \"30\"), value: 30 },\n      { name: this.i18nService.t(\"days\", \"90\"), value: 90 },\n    ];\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editEmergencyContact\");\n      try {\n        const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n        this.type = emergencyAccess.type;\n        this.waitTime = emergencyAccess.waitTimeDays;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteEmergencyContact\");\n      this.waitTime = this.waitTimes[2].value;\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new EmergencyAccessUpdateRequest();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n      } else {\n        const request = new EmergencyAccessInviteRequest();\n        request.email = this.email.trim();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n      }\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSaved.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    this.onDeleted.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"emergency-access-confirm\",\n  templateUrl: \"emergency-access-confirm.component.html\",\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() emergencyAccessId: string;\n  @Input() formPromise: Promise<any>;\n  @Output() onConfirmed = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n\n  constructor(\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n      if (publicKeyResponse != null) {\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    try {\n      this.onConfirmed.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class EmergencyAccessPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ \"takeover\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                name=\"NewMasterPasswordHash\"\n                class=\"form-control mb-1\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <app-password-strength\n                [password]=\"masterPassword\"\n                [email]=\"email\"\n                [showText]=\"true\"\n                (passwordStrengthResult)=\"getStrengthResult($event)\"\n              >\n              </app-password-strength>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"password\"\n                name=\"MasterPasswordRetype\"\n                class=\"form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { EmergencyAccessPasswordRequest } from \"@bitwarden/common/models/request/emergencyAccessPasswordRequest\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\n@Component({\n  selector: \"emergency-access-takeover\",\n  templateUrl: \"emergency-access-takeover.component.html\",\n})\nexport class EmergencyAccessTakeoverComponent extends ChangePasswordComponent implements OnInit {\n  @Output() onDone = new EventEmitter();\n  @Input() emergencyAccessId: string;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() kdf: KdfType;\n  @Input() kdfIterations: number;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n    if (response.data != null && response.data.length > 0) {\n      const policies = response.data.map(\n        (policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse))\n      );\n      this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(\n        policies\n      );\n    }\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(\n      this.emergencyAccessId\n    );\n\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    if (oldEncKey == null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"unexpectedError\")\n      );\n      return;\n    }\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      takeoverResponse.kdf,\n      takeoverResponse.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n    const request = new EmergencyAccessPasswordRequest();\n    request.newMasterPasswordHash = masterPasswordHash;\n    request.key = encKey[1].encryptedString;\n\n    this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n    try {\n      this.onDone.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"emergencyAccess\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"emergencyAccessDesc\" | i18n }}\n  <a href=\"https://bitwarden.com/help/emergency-access/\" target=\"_blank\" rel=\"noopener\">\n    {{ \"learnMore\" | i18n }}.\n  </a>\n</p>\n\n<p *ngIf=\"isOrganizationOwner\">\n  <b>{{ \"warning\" | i18n }}:</b> {{ \"emergencyAccessOwnerWarning\" | i18n }}\n</p>\n\n<div class=\"page-header d-flex\">\n  <h2>\n    {{ \"trustedEmergencyContacts\" | i18n }}\n    <app-premium-badge></app-premium-badge>\n  </h2>\n  <div class=\"ml-auto d-flex\">\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      type=\"button\"\n      (click)=\"invite()\"\n      [disabled]=\"!canAccessPremium\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-plus bwi-fw\"></i>\n      {{ \"addEmergencyContact\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of trustedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.email }}</a>\n        <span\n          bitBadge\n          badgeType=\"secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{\n          \"emergencyAccessRecoveryApproved\" | i18n\n        }}</span>\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"trustedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #trustedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n            (click)=\"reinvite(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"resendInvitation\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n            (click)=\"confirm(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"confirm\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n            (click)=\"approve(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"approve\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryInitiated ||\n              c.status === emergencyAccessStatusType.RecoveryApproved\n            \"\n            (click)=\"reject(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"reject\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!trustedContacts || !trustedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noTrustedContacts\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<div class=\"page-header spaced-header\">\n  <h2>{{ \"designatedEmergencyContacts\" | i18n }}</h2>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of grantedContacts; let i = index\">\n      <td width=\"30\">\n        <app-avatar\n          [data]=\"c | userName\"\n          [email]=\"c.email\"\n          size=\"25\"\n          [circle]=\"true\"\n          [fontSize]=\"14\"\n        >\n        </app-avatar>\n      </td>\n      <td>\n        <span>{{ c.email }}</span>\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{\n          \"invited\" | i18n\n        }}</span>\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"grantedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #grantedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"\n            (click)=\"requestAccess(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"requestAccess\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.Takeover\n            \"\n            (click)=\"takeover(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n            {{ \"takeover\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.View\n            \"\n            [routerLink]=\"c.id\"\n          >\n            <i class=\"bwi bwi-fw bwi-eye\" aria-hidden=\"true\"></i>\n            {{ \"view\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!grantedContacts || !grantedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noGrantedAccess\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<ng-template #addEdit></ng-template>\n<ng-template #takeoverTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EmergencyAccessConfirmRequest } from \"@bitwarden/common/models/request/emergencyAccessConfirmRequest\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n} from \"@bitwarden/common/models/response/emergencyAccessResponse\";\n\nimport { EmergencyAccessAddEditComponent } from \"./emergency-access-add-edit.component\";\nimport { EmergencyAccessConfirmComponent } from \"./emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./emergency-access-takeover.component\";\n\n@Component({\n  selector: \"emergency-access\",\n  templateUrl: \"emergency-access.component.html\",\n})\nexport class EmergencyAccessComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"takeoverTemplate\", { read: ViewContainerRef, static: true })\n  takeoverModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  loaded = false;\n  canAccessPremium: boolean;\n  trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n  grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n  emergencyAccessType = EmergencyAccessType;\n  emergencyAccessStatusType = EmergencyAccessStatusType;\n  actionPromise: Promise<any>;\n  isOrganizationOwner: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const orgs = await this.organizationService.getAll();\n    this.isOrganizationOwner = orgs.some((o) => o.isOwner);\n    this.load();\n  }\n\n  async load() {\n    this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n    this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    this.loaded = true;\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  async edit(details: EmergencyAccessGranteeDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.emergencyAccessId = details?.id;\n        comp.readOnly = !this.canAccessPremium;\n        comp.onSaved.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeleted.subscribe(() => {\n          modal.close();\n          this.remove(details);\n        });\n      }\n    );\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n    if (this.actionPromise != null) {\n      return;\n    }\n    this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n    await this.actionPromise;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenReinvited\", contact.email)\n    );\n    this.actionPromise = null;\n  }\n\n  async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n    function updateUser() {\n      contact.status = EmergencyAccessStatusType.Confirmed;\n    }\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n    if (autoConfirm == null || !autoConfirm) {\n      const [modal] = await this.modalService.openViewRef(\n        EmergencyAccessConfirmComponent,\n        this.confirmModalRef,\n        (comp) => {\n          comp.name = this.userNamePipe.transform(contact);\n          comp.emergencyAccessId = contact.id;\n          comp.userId = contact?.granteeId;\n          comp.onConfirmed.subscribe(async () => {\n            modal.close();\n\n            comp.formPromise = this.doConfirmation(contact);\n            await comp.formPromise;\n\n            updateUser();\n            this.platformUtilsService.showToast(\n              \"success\",\n              null,\n              this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n            );\n          });\n        }\n      );\n      return;\n    }\n\n    this.actionPromise = this.doConfirmation(contact);\n    await this.actionPromise;\n    updateUser();\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n    );\n    this.actionPromise = null;\n  }\n\n  async remove(\n    details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse\n  ) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteEmergencyAccess(details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(details))\n      );\n\n      if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n        this.removeGrantee(details);\n      } else {\n        this.removeGrantor(details);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"requestAccessConfirmation\", details.waitTimeDays.toString()),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"requestAccess\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessInitiate(details.id);\n\n    details.status = EmergencyAccessStatusType.RecoveryInitiated;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"requestSent\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async approve(details: EmergencyAccessGranteeDetailsResponse) {\n    const type = this.i18nService.t(\n      details.type === EmergencyAccessType.View ? \"view\" : \"takeover\"\n    );\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"approveAccessConfirmation\", this.userNamePipe.transform(details), type),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"approve\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessApprove(details.id);\n    details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyApproved\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async reject(details: EmergencyAccessGranteeDetailsResponse) {\n    await this.apiService.postEmergencyAccessReject(details.id);\n    details.status = EmergencyAccessStatusType.Confirmed;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyRejected\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessTakeoverComponent,\n      this.takeoverModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.email = details.email;\n        comp.emergencyAccessId = details != null ? details.id : null;\n\n        comp.onDone.subscribe(() => {\n          modal.close();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"passwordResetFor\", this.userNamePipe.transform(details))\n          );\n        });\n      }\n    );\n  }\n\n  private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n    const index = this.trustedContacts.indexOf(details);\n    if (index > -1) {\n      this.trustedContacts.splice(index, 1);\n    }\n  }\n\n  private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n    const index = this.grantedContacts.indexOf(details);\n    if (index > -1) {\n      this.grantedContacts.splice(index, 1);\n    }\n  }\n\n  // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n  private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n    const encKey = await this.cryptoService.getEncKey();\n    const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n    const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n    try {\n      this.logService.debug(\n        \"User's fingerprint: \" +\n          (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join(\"-\")\n      );\n    } catch {\n      // Ignore errors since it's just a debug message\n    }\n\n    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n    const request = new EmergencyAccessConfirmRequest();\n    request.key = encryptedKey.encryptedString;\n    await this.apiService.postEmergencyAccessConfirm(details.id, request);\n  }\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  UntypedFormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.get(\"custom.hours\")?.value * 60 + this.form.get(\"custom.minutes\")?.value;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n    <small class=\"form-text text-muted\">{{ \"vaultTimeoutDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\">\n    <label for=\"customVaultTimeout\">{{ \"customVaultTimeout\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n\n    <small *ngIf=\"!exceedsMinimumTimout\" class=\"tw-text-danger\">\n      <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i> {{ \"vaultCustomTimeoutMinimum\" | i18n }}\n    </small>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<div class=\"page-header\">\n  <h1>{{ \"preferences\" | i18n }}</h1>\n</div>\n<p>{{ \"preferencesDesc\" | i18n }}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>{{ \"vaultTimeoutAction\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLock\"\n        value=\"lock\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n        {{ \"lock\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLockDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLogOut\"\n        value=\"logOut\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n        (ngModelChange)=\"vaultTimeoutActionChanged($event)\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n        {{ \"logOut\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLogOutDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <div class=\"d-flex\">\n          <label for=\"locale\">{{ \"language\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/localization/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n          <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"languageDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFavicons\"\n        name=\"enableFavicons\"\n        [(ngModel)]=\"enableFavicons\"\n      />\n      <label class=\"form-check-label\" for=\"enableFavicons\">\n        {{ \"enableFavicon\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/website-icons/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"faviconDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableGravatars\"\n        name=\"enableGravatars\"\n        [(ngModel)]=\"enableGravatars\"\n      />\n      <label class=\"form-check-label\" for=\"enableGravatars\">\n        {{ \"enableGravatars\" | i18n }}\n      </label>\n      <a\n        href=\"https://gravatar.com/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableGravatarsDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFullWidth\"\n        name=\"enableFullWidth\"\n        [(ngModel)]=\"enableFullWidth\"\n      />\n      <label class=\"form-check-label\" for=\"enableFullWidth\">\n        {{ \"enableFullWidth\" | i18n }}\n      </label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableFullWidthDesc\" | i18n }}</small>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n        <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\">\n          <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"themeDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormControl } from \"@angular/forms\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-preferences\",\n  templateUrl: \"preferences.component.html\",\n})\nexport class PreferencesComponent implements OnInit {\n  vaultTimeoutAction = \"lock\";\n  enableFavicons: boolean;\n  enableGravatars: boolean;\n  enableFullWidth: boolean;\n  theme: ThemeType;\n  locale: string;\n  vaultTimeouts: { name: string; value: number }[];\n  localeOptions: any[];\n  themeOptions: any[];\n\n  vaultTimeout: UntypedFormControl = new UntypedFormControl(null);\n\n  private startingLocale: string;\n  private startingTheme: ThemeType;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private themingService: AbstractThemingService\n  ) {\n    this.vaultTimeouts = [\n      { name: i18nService.t(\"oneMinute\"), value: 1 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: i18nService.t(\"oneHour\"), value: 60 },\n      { name: i18nService.t(\"fourHours\"), value: 240 },\n      { name: i18nService.t(\"onRefresh\"), value: -1 },\n    ];\n    if (this.platformUtilsService.isDev()) {\n      this.vaultTimeouts.push({ name: i18nService.t(\"never\"), value: null });\n    }\n\n    const localeOptions: any[] = [];\n    i18nService.supportedTranslationLocales.forEach((locale) => {\n      let name = locale;\n      if (i18nService.localeNames.has(locale)) {\n        name += \" - \" + i18nService.localeNames.get(locale);\n      }\n      localeOptions.push({ name: name, value: locale });\n    });\n    localeOptions.sort(Utils.getSortFunction(i18nService, \"name\"));\n    localeOptions.splice(0, 0, { name: i18nService.t(\"default\"), value: null });\n    this.localeOptions = localeOptions;\n    this.themeOptions = [\n      { name: i18nService.t(\"themeLight\"), value: ThemeType.Light },\n      { name: i18nService.t(\"themeDark\"), value: ThemeType.Dark },\n      { name: i18nService.t(\"themeSystem\"), value: ThemeType.System },\n    ];\n  }\n\n  async ngOnInit() {\n    this.vaultTimeout.setValue(await this.vaultTimeoutService.getVaultTimeout());\n    this.vaultTimeoutAction = await this.stateService.getVaultTimeoutAction();\n    this.enableFavicons = !(await this.stateService.getDisableFavicon());\n    this.enableGravatars = await this.stateService.getEnableGravitars();\n    this.enableFullWidth = await this.stateService.getEnableFullWidth();\n\n    this.locale = (await this.stateService.getLocale()) ?? null;\n    this.startingLocale = this.locale;\n\n    this.theme = await this.stateService.getTheme();\n    this.startingTheme = this.theme;\n  }\n\n  async submit() {\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutRangeError\")\n      );\n      return;\n    }\n\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    await this.stateService.setDisableFavicon(!this.enableFavicons);\n    await this.stateService.setEnableGravitars(this.enableGravatars);\n    await this.stateService.setEnableFullWidth(this.enableFullWidth);\n    this.messagingService.send(\"setFullWidth\");\n    if (this.theme !== this.startingTheme) {\n      await this.themingService.updateConfiguredTheme(this.theme);\n      this.startingTheme = this.theme;\n    }\n    await this.stateService.setLocale(this.locale);\n    if (this.locale !== this.startingLocale) {\n      window.location.reload();\n    } else {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"preferencesUpdated\")\n      );\n    }\n  }\n\n  async vaultTimeoutActionChanged(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutAction = \"lock\";\n        return;\n      }\n    }\n    this.vaultTimeoutAction = newValue;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nimport { FolderRequest } from \"./folderRequest\";\n\nexport class FolderWithIdRequest extends FolderRequest {\n  id: string;\n\n  constructor(folder: Folder) {\n    super(folder);\n    this.id = folder.id;\n  }\n}\n","import { Send } from \"../domain/send\";\n\nimport { SendRequest } from \"./sendRequest\";\n\nexport class SendWithIdRequest extends SendRequest {\n  id: string;\n\n  constructor(send: Send) {\n    super(send);\n    this.id = send.id;\n  }\n}\n","import { CipherWithIdRequest } from \"./cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"./folderWithIdRequest\";\nimport { SendWithIdRequest } from \"./sendWithIdRequest\";\n\nexport class UpdateKeyRequest {\n  ciphers: CipherWithIdRequest[] = [];\n  folders: FolderWithIdRequest[] = [];\n  sends: SendWithIdRequest[] = [];\n  masterPasswordHash: string;\n  privateKey: string;\n  key: string;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"changeMasterPassword\" | i18n }}</h1>\n</div>\n\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<app-callout\n  type=\"info\"\n  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n  *ngIf=\"enforcedPolicyOptions\"\n>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n        <input\n          id=\"currentMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"currentMasterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n        <input\n          id=\"newMasterPassword\"\n          type=\"password\"\n          name=\"NewMasterPasswordHash\"\n          class=\"form-control mb-1\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n        <app-password-strength\n          [password]=\"masterPassword\"\n          [email]=\"email\"\n          [showText]=\"true\"\n          (passwordStrengthResult)=\"getStrengthResult($event)\"\n        >\n        </app-password-strength>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n        <input\n          id=\"masterPasswordRetype\"\n          type=\"password\"\n          name=\"MasterPasswordRetype\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPasswordRetype\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"masterPasswordHint\">{{ \"masterPassHintLabel\" | i18n }}</label>\n    <input\n      id=\"masterPasswordHint\"\n      class=\"form-control\"\n      maxlength=\"50\"\n      type=\"text\"\n      name=\"MasterPasswordHint\"\n      [(ngModel)]=\"masterPasswordHint\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"rotateEncKey\"\n        name=\"RotateEncKey\"\n        [(ngModel)]=\"rotateEncKey\"\n        (change)=\"rotateEncKeyClicked()\"\n      />\n      <label class=\"form-check-label\" for=\"rotateEncKey\">\n        {{ \"rotateAccountEncKey\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"changeMasterPassword\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipherWithIdRequest\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergencyAccessUpdateRequest\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folderWithIdRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/passwordRequest\";\nimport { SendWithIdRequest } from \"@bitwarden/common/models/request/sendWithIdRequest\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"change-password.component.html\",\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n  rotateEncKey = false;\n  currentMasterPassword: string;\n  masterPasswordHint: string;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private syncService: SyncService,\n    private apiService: ApiService,\n    private sendService: SendService,\n    private organizationService: OrganizationService,\n    private keyConnectorService: KeyConnectorService,\n    private router: Router,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      this.router.navigate([\"/settings/security/two-factor\"]);\n    }\n\n    this.masterPasswordHint = (await this.apiService.getProfile()).masterPasswordHint;\n    await super.ngOnInit();\n  }\n\n  async rotateEncKeyClicked() {\n    if (this.rotateEncKey) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      let hasOldAttachments = false;\n      if (ciphers != null) {\n        for (let i = 0; i < ciphers.length; i++) {\n          if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n            hasOldAttachments = true;\n            break;\n          }\n        }\n      }\n\n      if (hasOldAttachments) {\n        const learnMore = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"oldAttachmentsNeedFixDesc\"),\n          null,\n          this.i18nService.t(\"learnMore\"),\n          this.i18nService.t(\"close\"),\n          \"warning\"\n        );\n        if (learnMore) {\n          this.platformUtilsService.launchUri(\n            \"https://bitwarden.com/help/attachments/#add-storage-space\"\n          );\n        }\n        this.rotateEncKey = false;\n        return;\n      }\n\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateEncryptionKeyWarning\") +\n          \" \" +\n          this.i18nService.t(\"updateEncryptionKeyExportWarning\") +\n          \" \" +\n          this.i18nService.t(\"rotateEncKeyConfirmation\"),\n        this.i18nService.t(\"rotateEncKeyTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        this.rotateEncKey = false;\n      }\n    }\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    await super.submit();\n  }\n\n  async setupSubmitActions() {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n\n    if (this.rotateEncKey) {\n      await this.syncService.fullSync(true);\n    }\n\n    return super.setupSubmitActions();\n  }\n\n  async performSubmitActions(\n    newMasterPasswordHash: string,\n    newKey: SymmetricCryptoKey,\n    newEncKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const request = new PasswordRequest();\n    request.masterPasswordHash = await this.cryptoService.hashPassword(\n      this.currentMasterPassword,\n      null\n    );\n    request.masterPasswordHint = this.masterPasswordHint;\n    request.newMasterPasswordHash = newMasterPasswordHash;\n    request.key = newEncKey[1].encryptedString;\n\n    try {\n      if (this.rotateEncKey) {\n        this.formPromise = this.apiService.postPassword(request).then(() => {\n          return this.updateKey(newKey, request.newMasterPasswordHash);\n        });\n      } else {\n        this.formPromise = this.apiService.postPassword(request);\n      }\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = masterPasswordHash;\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    const sends = await this.sendService.getAll();\n    await Promise.all(\n      sends.map(async (send) => {\n        const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n        send.key = (await this.cryptoService.encrypt(cryptoKey, encKey[0])) ?? send.key;\n        request.sends.push(new SendWithIdRequest(send));\n      })\n    );\n\n    await this.apiService.postAccountKey(request);\n\n    await this.updateEmergencyAccesses(encKey[0]);\n\n    await this.updateAllResetPasswordKeys(encKey[0], masterPasswordHash);\n  }\n\n  private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n    const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n    const allowedStatuses = [\n      EmergencyAccessStatusType.Confirmed,\n      EmergencyAccessStatusType.RecoveryInitiated,\n      EmergencyAccessStatusType.RecoveryApproved,\n    ];\n\n    const filteredAccesses = emergencyAccess.data.filter((d) => allowedStatuses.includes(d.status));\n\n    for (const details of filteredAccesses) {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      const updateRequest = new EmergencyAccessUpdateRequest();\n      updateRequest.type = details.type;\n      updateRequest.waitTimeDays = details.waitTimeDays;\n      updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n      await this.apiService.putEmergencyAccess(details.id, updateRequest);\n    }\n  }\n\n  private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey, masterPasswordHash: string) {\n    const orgs = await this.organizationService.getAll();\n\n    for (const org of orgs) {\n      // If not already enrolled, skip\n      if (!org.resetPasswordEnrolled) {\n        continue;\n      }\n\n      // Retrieve public key\n      const response = await this.organizationApiService.getKeys(org.id);\n      const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n      // Re-enroll - encrpyt user's encKey.key with organization public key\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Create/Execute request\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = masterPasswordHash;\n      request.resetPasswordKey = encryptedKey.encryptedString;\n\n      await this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n    }\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { PasswordRequest } from \"./passwordRequest\";\n\nexport class KdfRequest extends PasswordRequest {\n  kdf: KdfType;\n  kdfIterations: number;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"encKeySettings\" | i18n }}</h1>\n</div>\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"kdfMasterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"kdfMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdf\">{{ \"kdfAlgorithm\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://en.wikipedia.org/wiki/Key_derivation_function\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\n          <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://bitwarden.com/help/what-encryption-is-used/#pbkdf2\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <input\n          id=\"kdfIterations\"\n          type=\"number\"\n          min=\"5000\"\n          max=\"2000000\"\n          name=\"KdfIterations\"\n          class=\"form-control\"\n          [(ngModel)]=\"kdfIterations\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"small form-text text-muted\">\n          <p>{{ \"kdfIterationsDesc\" | i18n: (recommendedKdfIterations | number) }}</p>\n          <strong>{{ \"warning\" | i18n }}</strong\n          >: {{ \"kdfIterationsWarning\" | i18n: (50000 | number) }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"changeKdf\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { KdfRequest } from \"@bitwarden/common/models/request/kdfRequest\";\n\n@Component({\n  selector: \"app-change-kdf\",\n  templateUrl: \"change-kdf.component.html\",\n})\nexport class ChangeKdfComponent implements OnInit {\n  masterPassword: string;\n  kdfIterations: number;\n  kdf = KdfType.PBKDF2_SHA256;\n  kdfOptions: any[] = [];\n  formPromise: Promise<any>;\n  recommendedKdfIterations = DEFAULT_KDF_ITERATIONS;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.kdfOptions = [{ name: \"PBKDF2 SHA-256\", value: KdfType.PBKDF2_SHA256 }];\n  }\n\n  async ngOnInit() {\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    const request = new KdfRequest();\n    request.kdf = this.kdf;\n    request.kdfIterations = this.kdfIterations;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n    const email = await this.stateService.getEmail();\n    const newKey = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email,\n      this.kdf,\n      this.kdfIterations\n    );\n    request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      newKey\n    );\n    const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n    request.key = newEncKey[1].encryptedString;\n    try {\n      this.formPromise = this.apiService.postAccountKdf(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"encKeySettingsChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<app-change-kdf *ngIf=\"showChangeKdf\"></app-change-kdf>\n<div\n  [ngClass]=\"{ 'tabbed-header': !showChangeKdf, 'secondary-header': showChangeKdf }\"\n  class=\"border-0 mb-0\"\n>\n  <h1>{{ \"apiKey\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"userApiKeyDesc\" | i18n }}\n</p>\n<button bitButton buttonType=\"secondary\" (click)=\"viewUserApiKey()\">\n  {{ \"viewApiKey\" | i18n }}\n</button>\n<button bitButton buttonType=\"secondary\" (click)=\"rotateUserApiKey()\">\n  {{ \"rotateApiKey\" | i18n }}\n</button>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ApiKeyComponent } from \"./api-key.component\";\n\n@Component({\n  selector: \"app-security-keys\",\n  templateUrl: \"security-keys.component.html\",\n})\nexport class SecurityKeysComponent implements OnInit {\n  @ViewChild(\"viewUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  viewUserApiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateUserApiKeyModalRef: ViewContainerRef;\n\n  showChangeKdf = true;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeKdf = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async viewUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"userApiKeyDesc\";\n    });\n  }\n\n  async rotateUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.isRotation = true;\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\">\n  <ul class=\"nav nav-tabs\">\n    <ng-container *ngIf=\"showChangePassword\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"change-password\" routerLinkActive=\"active\">\n          {{ \"masterPassword\" | i18n }}\n        </a>\n      </li>\n    </ng-container>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"two-factor\" routerLinkActive=\"active\">\n        {{ \"twoStepLogin\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"security-keys\" routerLinkActive=\"active\">\n        {{ \"keys\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\n\n@Component({\n  selector: \"app-security\",\n  templateUrl: \"security.component.html\",\n})\nexport class SecurityComponent {\n  showChangePassword = true;\n\n  constructor(private keyConnectorService: KeyConnectorService) {}\n\n  async ngOnInit() {\n    this.showChangePassword = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ChangePasswordComponent } from \"./change-password.component\";\nimport { SecurityKeysComponent } from \"./security-keys.component\";\nimport { SecurityComponent } from \"./security.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SecurityComponent,\n    data: { titleId: \"security\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"change-password\" },\n      {\n        path: \"change-password\",\n        component: ChangePasswordComponent,\n        data: { titleId: \"masterPassword\" },\n      },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"security-keys\",\n        component: SecurityKeysComponent,\n        data: { titleId: \"keys\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SecurityRoutingModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"accountSettings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a routerLink=\"security\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"security\" | i18n }}\n          </a>\n          <a routerLink=\"preferences\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"preferences\" | i18n }}\n          </a>\n          <a\n            routerLink=\"subscription\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!hideSubscription\"\n          >\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"domainRules\" | i18n }}\n          </a>\n          <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"emergencyAccess\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sponsored-families\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"hasFamilySponsorshipAvailable\"\n          >\n            {{ \"sponsoredFamilies\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { StateService } from \"../core\";\n\nconst BroadcasterSubscriptionId = \"SettingsComponent\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  premium: boolean;\n  selfHosted: boolean;\n  hasFamilySponsorshipAvailable: boolean;\n  hideSubscription: boolean;\n\n  constructor(\n    private tokenService: TokenService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"purchasedPremium\":\n            await this.load();\n            break;\n          default:\n        }\n      });\n    });\n\n    this.selfHosted = await this.platformUtilsService.isSelfHost();\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.premium = await this.stateService.getHasPremiumPersonally();\n    this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();\n    const hasPremiumFromOrg = await this.stateService.getHasPremiumFromOrganization();\n    let billing = null;\n    if (!this.selfHosted) {\n      billing = await this.apiService.getUserBillingHistory();\n    }\n    this.hideSubscription =\n      !this.premium && hasPremiumFromOrg && (this.selfHosted || billing?.hasNoHistory);\n  }\n}\n","import { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\n\nexport function notAllowedValueAsync(\n  valueGetter: () => Promise<string>,\n  caseInsensitive = false\n): AsyncValidatorFn {\n  return async (control: AbstractControl): Promise<ValidationErrors | null> => {\n    let notAllowedValue = await valueGetter();\n    let controlValue = control.value;\n    if (caseInsensitive) {\n      notAllowedValue = notAllowedValue.toLowerCase();\n      controlValue = controlValue.toLowerCase();\n    }\n\n    if (controlValue === notAllowedValue) {\n      return {\n        notAllowedValue: true,\n      };\n    }\n  };\n}\n","<td>\n  {{ sponsoringOrg.familySponsorshipFriendlyName }}\n</td>\n<td>{{ sponsoringOrg.name }}</td>\n<td>\n  <span [ngClass]=\"statusClass\">{{ statusMessage }}</span>\n</td>\n<td class=\"table-action-right\">\n  <div class=\"dropdown\" appListDropdown>\n    <button\n      *ngIf=\"!sponsoringOrg.familySponsorshipToDelete\"\n      class=\"btn btn-outline-secondary dropdown-toggle\"\n      type=\"button\"\n      id=\"dropdownMenuButton\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n      appA11yTitle=\"{{ 'options' | i18n }}\"\n    >\n      <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n      <button\n        #resendEmailBtn\n        *ngIf=\"!isSelfHosted && !sponsoringOrg.familySponsorshipValidUntil\"\n        [appApiAction]=\"resendEmailPromise\"\n        class=\"dropdown-item btn-submit\"\n        [disabled]=\"resendEmailBtn.loading\"\n        (click)=\"resendEmail()\"\n        [attr.aria-label]=\"'resendEmailLabel' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"resendEmail\" | i18n }}</span>\n      </button>\n      <button\n        #revokeSponsorshipBtn\n        [appApiAction]=\"revokeSponsorshipPromise\"\n        class=\"dropdown-item text-danger btn-submit\"\n        [disabled]=\"revokeSponsorshipBtn.loading\"\n        (click)=\"revokeSponsorship()\"\n        [attr.aria-label]=\"'revokeAccount' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"remove\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</td>\n","import { formatDate } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output, OnInit } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"[sponsoring-org-row]\",\n  templateUrl: \"sponsoring-org-row.component.html\",\n})\nexport class SponsoringOrgRowComponent implements OnInit {\n  @Input() sponsoringOrg: Organization = null;\n  @Input() isSelfHosted = false;\n\n  @Output() sponsorshipRemoved = new EventEmitter();\n\n  statusMessage = \"loading\";\n  statusClass: \"text-success\" | \"text-danger\" = \"text-success\";\n\n  revokeSponsorshipPromise: Promise<any>;\n  resendEmailPromise: Promise<any>;\n\n  private locale = \"\";\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.locale = await firstValueFrom(this.i18nService.locale$);\n\n    this.setStatus(\n      this.isSelfHosted,\n      this.sponsoringOrg.familySponsorshipToDelete,\n      this.sponsoringOrg.familySponsorshipValidUntil,\n      this.sponsoringOrg.familySponsorshipLastSyncDate\n    );\n  }\n\n  async revokeSponsorship() {\n    try {\n      this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n      await this.revokeSponsorshipPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.revokeSponsorshipPromise = null;\n  }\n\n  async resendEmail() {\n    this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n    await this.resendEmailPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailSent\"));\n    this.resendEmailPromise = null;\n  }\n\n  get isSentAwaitingSync() {\n    return this.isSelfHosted && !this.sponsoringOrg.familySponsorshipLastSyncDate;\n  }\n\n  private async doRevokeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeSponsorshipConfirmation\"),\n      `${this.i18nService.t(\"remove\")} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reclaimedFreePlan\"));\n    this.sponsorshipRemoved.emit();\n  }\n\n  private setStatus(\n    selfHosted: boolean,\n    toDelete?: boolean,\n    validUntil?: Date,\n    lastSyncDate?: Date\n  ) {\n    /*\n     * Possible Statuses:\n     * Requested (self-hosted only)\n     * Sent\n     * Active\n     * RequestRevoke\n     * RevokeWhenExpired\n     */\n\n    if (toDelete && validUntil) {\n      // They want to delete but there is a valid until date which means there is an active sponsorship\n      this.statusMessage = this.i18nService.t(\n        \"revokeWhenExpired\",\n        formatDate(validUntil, \"MM/dd/yyyy\", this.locale)\n      );\n      this.statusClass = \"text-danger\";\n    } else if (toDelete) {\n      // They want to delete and we don't have a valid until date so we can\n      // this should only happen on a self-hosted install\n      this.statusMessage = this.i18nService.t(\"requestRemoved\");\n      this.statusClass = \"text-danger\";\n    } else if (validUntil) {\n      // They don't want to delete and they have a valid until date\n      // that means they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"active\");\n      this.statusClass = \"text-success\";\n    } else if (selfHosted && lastSyncDate) {\n      // We are on a self-hosted install and it has been synced but we have not gotten\n      // a valid until date so we can't know if they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else if (!selfHosted) {\n      // We are in cloud and all other status checks have been false therefore we have\n      // sent the request but it hasn't been accepted yet\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else {\n      // We are on a self-hosted install and we have not synced yet\n      this.statusMessage = this.i18nService.t(\"requested\");\n      this.statusClass = \"text-success\";\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"sponsoredFamilies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading\">\n  <p>\n    {{ \"sponsoredFamiliesEligible\" | i18n }}\n  </p>\n  <div>\n    {{ \"sponsoredFamiliesInclude\" | i18n }}:\n    <ul class=\"inset-list\">\n      <li>{{ \"sponsoredFamiliesPremiumAccess\" | i18n }}</li>\n      <li>{{ \"sponsoredFamiliesSharedCollections\" | i18n }}</li>\n    </ul>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    [formGroup]=\"sponsorshipForm\"\n    ngNativeValidate\n    *ngIf=\"anyOrgsAvailable\"\n  >\n    <div class=\"form-group col-7\">\n      <label for=\"availableSponsorshipOrg\">{{ \"familiesSponsoringOrgSelect\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        formControlName=\"selectedSponsorshipOrgId\"\n        class=\"form-control\"\n        required\n      >\n        <option disabled=\"true\" value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option *ngFor=\"let o of availableSponsorshipOrgs\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"form-group col-7\">\n      <label for=\"sponsorshipEmail\">{{ \"sponsoredFamiliesEmail\" | i18n }}:</label>\n      <input\n        id=\"sponsorshipEmail\"\n        class=\"form-control\"\n        inputmode=\"email\"\n        formControlName=\"sponsorshipEmail\"\n        name=\"sponsorshipEmail\"\n        required\n        [attr.aria-invalid]=\"sponsorshipEmailControl.invalid\"\n      />\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.notAllowedValue\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"cannotSponsorSelf\" | i18n }}\n      </small>\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.email\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"invalidEmail\" | i18n }}\n      </small>\n    </div>\n    <div class=\"form-group col-7\">\n      <button class=\"btn btn-primary btn-submit mt-2\" type=\"submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"redeem\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n  <ng-container *ngIf=\"anyActiveSponsorships\">\n    <div class=\"border-bottom\">\n      <table class=\"table table-hover table-list\">\n        <thead>\n          <tr>\n            <th>{{ \"recipient\" | i18n }}</th>\n            <th>{{ \"sponsoringOrg\" | i18n }}</th>\n            <th>{{ \"status\" | i18n }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let o of activeSponsorshipOrgs\">\n            <tr\n              sponsoring-org-row\n              [sponsoringOrg]=\"o\"\n              [isSelfHosted]=\"isSelfHosted\"\n              (sponsorshipRemoved)=\"load(true)\"\n            ></tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <small>{{ \"sponsoredFamiliesLeaveCopy\" | i18n }}</small>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from \"@angular/forms\";\n\nimport { notAllowedValueAsync } from \"@bitwarden/angular/validators/notAllowedValueAsync.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-sponsored-families\",\n  templateUrl: \"sponsored-families.component.html\",\n})\nexport class SponsoredFamiliesComponent implements OnInit {\n  loading = false;\n\n  availableSponsorshipOrgs: Organization[] = [];\n  activeSponsorshipOrgs: Organization[] = [];\n\n  // Conditional display properties\n  formPromise: Promise<any>;\n\n  sponsorshipForm: UntypedFormGroup;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private formBuilder: UntypedFormBuilder,\n    private stateService: StateService\n  ) {\n    this.sponsorshipForm = this.formBuilder.group({\n      selectedSponsorshipOrgId: [\n        \"\",\n        {\n          validators: [Validators.required],\n        },\n      ],\n      sponsorshipEmail: [\n        \"\",\n        {\n          validators: [Validators.email],\n          asyncValidators: [\n            notAllowedValueAsync(async () => await this.stateService.getEmail(), true),\n          ],\n          updateOn: \"blur\",\n        },\n      ],\n    });\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async submit() {\n    this.formPromise = this.apiService.postCreateSponsorship(\n      this.sponsorshipForm.value.selectedSponsorshipOrgId,\n      {\n        sponsoredEmail: this.sponsorshipForm.value.sponsorshipEmail,\n        planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n        friendlyName: this.sponsorshipForm.value.sponsorshipEmail,\n      }\n    );\n\n    await this.formPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"sponsorshipCreated\"));\n    this.formPromise = null;\n    this.resetForm();\n    await this.load(true);\n  }\n\n  async load(forceReload = false) {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    if (forceReload) {\n      await this.syncService.fullSync(true);\n    }\n\n    const allOrgs = await this.organizationService.getAll();\n    this.availableSponsorshipOrgs = allOrgs.filter((org) => org.familySponsorshipAvailable);\n\n    this.activeSponsorshipOrgs = allOrgs.filter(\n      (org) => org.familySponsorshipFriendlyName !== null\n    );\n\n    if (this.availableSponsorshipOrgs.length === 1) {\n      this.sponsorshipForm.patchValue({\n        selectedSponsorshipOrgId: this.availableSponsorshipOrgs[0].id,\n      });\n    }\n    this.loading = false;\n  }\n\n  get sponsorshipEmailControl() {\n    return this.sponsorshipForm.controls[\"sponsorshipEmail\"];\n  }\n\n  private async resetForm() {\n    this.sponsorshipForm.reset();\n  }\n\n  get anyActiveSponsorships(): boolean {\n    return this.activeSponsorshipOrgs.length > 0;\n  }\n\n  get anyOrgsAvailable(): boolean {\n    return this.availableSponsorshipOrgs.length > 0;\n  }\n\n  get isSelfHosted(): boolean {\n    return this.platformUtilsService.isSelfHost();\n  }\n}\n","<div class=\"tabbed-header d-flex\">\n  <h1>\n    {{ \"paymentMethod\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\">\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <p>\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-credit-card': paymentSource.type === paymentMethodType.Card,\n          'bwi-bank': paymentSource.type === paymentMethodType.BankAccount,\n          'bwi-money': paymentSource.type === paymentMethodType.Check,\n          'bwi-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n          'bwi-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n          'bwi-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp\n        }\"\n      ></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button bitButton buttonType=\"secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\">\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BillingPaymentResponse } from \"@bitwarden/common/models/response/billingPaymentResponse\";\n\n@Component({\n  selector: \"app-payment-method\",\n  templateUrl: \"payment-method.component.html\",\n})\nexport class PaymentMethodComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingPaymentResponse;\n  paymentMethodType = PaymentMethodType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingPayment();\n    this.loading = false;\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n}\n","<div *ngIf=\"selfHosted\" class=\"page-header\">\n  <h1>{{ \"subscription\" | i18n }}</h1>\n</div>\n<div *ngIf=\"!selfHosted\" class=\"tabbed-header\">\n  <h1>{{ \"goPremium\" | i18n }}</h1>\n</div>\n<bit-callout\n  type=\"info\"\n  *ngIf=\"canAccessPremium\"\n  title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n  icon=\"bwi bwi-star-f\"\n>\n  {{ \"alreadyPremiumFromOrg\" | i18n }}\n</bit-callout>\n<bit-callout type=\"success\">\n  <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n  <ul class=\"bwi-ul\">\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpStorage\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTwoStep\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpEmergency\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpReports\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTotp\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpSupport\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpFuture\" | i18n }}\n    </li>\n  </ul>\n  <p class=\"text-lg\" [ngClass]=\"{ 'mb-0': !selfHosted }\">\n    {{ \"premiumPrice\" | i18n: (premiumPrice | currency: \"$\") }}\n  </p>\n  <a\n    bitButton\n    href=\"https://vault.bitwarden.com/#/settings/premium\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    buttonType=\"secondary\"\n    *ngIf=\"selfHosted\"\n  >\n    {{ \"purchasePremium\" | i18n }}\n  </a>\n</bit-callout>\n<ng-container *ngIf=\"selfHosted\">\n  <p>{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\"\n      }}</small>\n    </div>\n    <bit-submit-button [loading]=\"form.loading\">\n      {{ \"submit\" | i18n }}\n    </bit-submit-button>\n  </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n  <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n      <input\n        id=\"additionalStorage\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"AdditionalStorageGb\"\n        [(ngModel)]=\"additionalStorage\"\n        min=\"0\"\n        max=\"99\"\n        step=\"1\"\n        placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n      />\n      <small class=\"text-muted form-text\">{{\n        \"additionalStorageIntervalDesc\"\n          | i18n: \"1 GB\":(storageGbPrice | currency: \"$\"):(\"year\" | i18n)\n      }}</small>\n    </div>\n  </div>\n  <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n  {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n  {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n  {{ storageGbPrice | currency: \"$\" }} =\n  {{ additionalStorageTotal | currency: \"$\" }}\n  <hr class=\"my-3\" />\n  <h2 class=\"spaced-header mb-4\">{{ \"paymentInformation\" | i18n }}</h2>\n  <app-payment [hideBank]=\"true\"></app-payment>\n  <app-tax-info></app-tax-info>\n  <div id=\"price\" class=\"my-4\">\n    <div class=\"text-muted text-sm\">\n      {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n      <br />\n      <ng-container>\n        {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n      </ng-container>\n    </div>\n    <hr class=\"my-1 col-3 ml-0\" />\n    <p class=\"text-lg\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n  </div>\n  <small class=\"text-muted font-italic\">{{ \"paymentChargedAnnually\" | i18n }}</small>\n  <bit-submit-button [loading]=\"form.loading\">\n    {{ \"submit\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium = false;\n  selfHosted = false;\n  premiumPrice = 10;\n  storageGbPrice = 4;\n  additionalStorage = 0;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const premiumPersonally = await this.stateService.getHasPremiumPersonally();\n    if (premiumPersonally) {\n      this.router.navigate([\"/settings/subscription/user-subscription\"]);\n      return;\n    }\n  }\n\n  async submit() {\n    let files: FileList = null;\n    if (this.selfHosted) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n    }\n\n    try {\n      if (this.selfHosted) {\n        if (!this.tokenService.getEmailVerified()) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            this.i18nService.t(\"errorOccurred\"),\n            this.i18nService.t(\"verifyEmailFirst\")\n          );\n          return;\n        }\n\n        const fd = new FormData();\n        fd.append(\"license\", files[0]);\n        this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n          return this.finalizePremium();\n        });\n      } else {\n        this.formPromise = this.paymentComponent\n          .createPaymentToken()\n          .then((result) => {\n            const fd = new FormData();\n            fd.append(\"paymentMethodType\", result[1].toString());\n            if (result[0] != null) {\n              fd.append(\"paymentToken\", result[0]);\n            }\n            fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n            fd.append(\"country\", this.taxInfoComponent.taxInfo.country);\n            fd.append(\"postalCode\", this.taxInfoComponent.taxInfo.postalCode);\n            return this.apiService.postPremium(fd);\n          })\n          .then((paymentResponse) => {\n            if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n              return this.paymentComponent.handleStripeCardPayment(\n                paymentResponse.paymentIntentClientSecret,\n                () => this.finalizePremium()\n              );\n            } else {\n              return this.finalizePremium();\n            }\n          });\n      }\n      await this.formPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"premiumUpdated\"));\n    this.messagingService.send(\"purchasedPremium\");\n    this.router.navigate([\"/settings/subscription/user-subscription\"]);\n  }\n\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null\n      ? (this.taxInfoComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\" *ngIf=\"!selfHosted\">\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [routerLink]=\"subscriptionRoute\" routerLinkActive=\"active\">\n        {{ \"subscription\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"payment-method\" routerLinkActive=\"active\">\n        {{ \"paymentMethod\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"billing-history\" routerLinkActive=\"active\">\n        {{ \"billingHistory\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-subscription\",\n  templateUrl: \"subscription.component.html\",\n})\nexport class SubscriptionComponent {\n  hasPremium: boolean;\n  selfHosted: boolean;\n\n  constructor(\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.hasPremium = await this.stateService.getHasPremiumPersonally();\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  get subscriptionRoute(): string {\n    return this.hasPremium ? \"user-subscription\" : \"premium\";\n  }\n}\n","<div class=\"tabbed-header d-flex\">\n  <h1>\n    {{ \"billingHistory\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ \"invoices\" | i18n }}</h2>\n  <p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n    <tbody>\n      <tr *ngFor=\"let i of invoices\">\n        <td>{{ i.date | date: \"mediumDate\" }}</td>\n        <td>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td>{{ i.amount | currency: \"$\" }}</td>\n        <td>\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n  <p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n    <tbody>\n      <tr *ngFor=\"let t of transactions\">\n        <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-credit-card': t.paymentMethodType === paymentMethodType.Card,\n              'bwi-bank':\n                t.paymentMethodType === paymentMethodType.BankAccount ||\n                t.paymentMethodType === paymentMethodType.WireTransfer,\n              'bwi-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n              'bwi-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n            }\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billingHistoryResponse\";\n\n@Component({\n  selector: \"app-user-billing\",\n  templateUrl: \"user-billing-history.component.html\",\n})\nexport class UserBillingHistoryComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  billing: BillingHistoryResponse;\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingHistory();\n    this.loading = false;\n  }\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n}\n","<div\n  [ngClass]=\"{\n    'page-header': selfHosted,\n    'tabbed-header': !selfHosted\n  }\"\n>\n  <h1>\n    {{ title }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</bit-callout\n  >\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      bitButton\n      type=\"button\"\n      buttonType=\"secondary\"\n      #reinstateBtn\n      class=\"btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </bit-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"row\" *ngIf=\"!selfHosted\">\n    <div class=\"col-4\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"text-capitalize\">{{ (subscription && subscription.status) || \"-\" }}</span>\n          <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (nextInvoice.date | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"col-8\" *ngIf=\"subscription\">\n      <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n      <table class=\"table\">\n        <tbody>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        href=\"https://vault.bitwarden.com/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        >\n        </app-update-license>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"d-flex\">\n      <button\n        bitButton\n        type=\"button\"\n        buttonType=\"secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        bitButton\n        #cancelBtn\n        type=\"button\"\n        buttonType=\"danger\"\n        class=\"btn-submit tw-ml-auto\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            bitButton\n            type=\"button\"\n            buttonType=\"secondary\"\n            class=\"tw-ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"4\"\n          [add]=\"adjustStorageAdd\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SubscriptionResponse } from \"@bitwarden/common/models/response/subscriptionResponse\";\n\n@Component({\n  selector: \"app-user-subscription\",\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService,\n    private fileDownloadService: FileDownloadService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.stateService.getHasPremiumPersonally()) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      this.router.navigate([\"/settings/subscription/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postCancelPremium();\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.fileDownloadService.download({\n      fileName: \"bitwarden_premium_license.json\",\n      blobData: licenseString,\n    });\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(load: boolean) {\n    this.showUpdateLicense = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  adjustStorage(add: boolean) {\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(add ? \"addStorage\" : \"removeStorage\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get usingInAppPurchase() {\n    return this.sub != null ? this.sub.usingInAppPurchase : false;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.selfHosted ? \"subscription\" : \"premiumMembership\");\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { PaymentMethodComponent } from \"./payment-method.component\";\nimport { PremiumComponent } from \"./premium.component\";\nimport { SubscriptionComponent } from \"./subscription.component\";\nimport { UserBillingHistoryComponent } from \"./user-billing-history.component\";\nimport { UserSubscriptionComponent } from \"./user-subscription.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SubscriptionComponent,\n    data: { titleId: \"subscription\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"premium\" },\n      {\n        path: \"user-subscription\",\n        component: UserSubscriptionComponent,\n        data: { titleId: \"premiumMembership\" },\n      },\n      {\n        path: \"premium\",\n        component: PremiumComponent,\n        data: { titleId: \"goPremium\" },\n      },\n      {\n        path: \"payment-method\",\n        component: PaymentMethodComponent,\n        data: { titleId: \"paymentMethod\" },\n      },\n      {\n        path: \"billing-history\",\n        component: UserBillingHistoryComponent,\n        data: { titleId: \"billingHistory\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubscriptionRoutingModule {}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.forwardOptions = [\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      { name: \"FastMail\", value: \"fastmail\" },\n      { name: \"DuckDuckGo\", value: \"duckduckgo\" },\n    ];\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"passHistoryTitle\">{{ \"passwordHistory\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"history.length\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n            <div class=\"password-row\">\n              <div\n                class=\"text-monospace generated-wrapper\"\n                [innerHTML]=\"h.password | colorPassword\"\n                appSelectCopy\n              ></div>\n              <small class=\"text-muted\">{{ h.date | date: \"medium\" }}</small>\n            </div>\n            <div class=\"ml-auto\">\n              <button\n                class=\"btn btn-link\"\n                appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                (click)=\"copy(h.password)\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!history.length\">\n        {{ \"noPasswordsInList\" | i18n }}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"clear()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'clear' | i18n }}\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"generator\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n  {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n</app-callout>\n<div class=\"card card-generated bg-light my-4\">\n  <div class=\"card-body\">\n    <div\n      *ngIf=\"type === 'password'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"password | colorPassword\"\n      appSelectCopy\n    ></div>\n    <div\n      *ngIf=\"type === 'username'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"username | colorPassword\"\n      appSelectCopy\n    ></div>\n  </div>\n</div>\n<div class=\"form-group\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n  <label id=\"typeHeading\" class=\"d-block\">{{ \"whatWouldYouLikeToGenerate\" | i18n }}</label>\n  <div class=\"form-check form-check-inline\" *ngFor=\"let o of typeOptions\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      [(ngModel)]=\"type\"\n      name=\"Type\"\n      id=\"type_{{ o.value }}\"\n      [value]=\"o.value\"\n      (change)=\"typeChanged()\"\n      [checked]=\"type === o.value\"\n    />\n    <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n      {{ o.name }}\n    </label>\n  </div>\n</div>\n<ng-container *ngIf=\"type === 'password'\">\n  <div aria-labelledby=\"passwordTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <label id=\"passwordTypeHeading\" class=\"d-block\">{{ \"passwordType\" | i18n }}</label>\n    <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"passwordOptions.type\"\n        name=\"PasswordType\"\n        id=\"passwordType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"savePasswordOptions()\"\n        [checked]=\"passwordOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"passwordType_{{ o.value }}\">\n        {{ o.name }}\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"passwordOptions.type === 'passphrase'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n        <input\n          id=\"num-words\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"3\"\n          max=\"20\"\n          [(ngModel)]=\"passwordOptions.numWords\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n        <input\n          id=\"word-separator\"\n          class=\"form-control\"\n          type=\"text\"\n          maxlength=\"1\"\n          [(ngModel)]=\"passwordOptions.wordSeparator\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"capitalize\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.capitalize\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n        />\n        <label for=\"capitalize\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"include-number\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.includeNumber\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n        />\n        <label for=\"include-number\" class=\"form-check-label\">{{ \"includeNumber\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"length\">{{ \"length\" | i18n }}</label>\n        <input\n          id=\"length\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"5\"\n          max=\"128\"\n          [(ngModel)]=\"passwordOptions.length\"\n          (blur)=\"savePasswordOptions()\"\n          (change)=\"lengthChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n        <input\n          id=\"min-number\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minNumber\"\n          (change)=\"minNumberChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n        <input\n          id=\"min-special\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minSpecial\"\n          (change)=\"minSpecialChanged()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"uppercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.uppercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useUppercase\"\n          attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n        />\n        <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"lowercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.lowercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useLowercase\"\n          attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n        />\n        <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"numbers\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.number\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useNumbers\"\n          attr.aria-label=\"{{ 'numbers' | i18n }}\"\n        />\n        <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"special\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.special\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useSpecial\"\n          attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n        />\n        <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"ambiguous\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"avoidAmbiguous\"\n        />\n        <label for=\"ambiguous\" class=\"form-check-label\">{{ \"ambiguous\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"d-flex\">\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n        {{ \"regeneratePassword\" | i18n }}\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n        {{ \"copyPassword\" | i18n }}\n      </button>\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"history()\"\n        appA11yTitle=\"{{ 'passwordHistory' | i18n }}\"\n      >\n        <i class=\"bwi bwi-clock bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'username'\">\n  <div aria-labelledby=\"usernameTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <div class=\"d-block\">\n      <label id=\"usernameTypeHeading\">{{ \"usernameType\" | i18n }}</label>\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/generator/#username-types\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"form-check\" *ngFor=\"let o of usernameTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"usernameOptions.type\"\n        name=\"UsernameType\"\n        id=\"usernameType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"saveUsernameOptions()\"\n        [checked]=\"usernameOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"usernameType_{{ o.value }}\">\n        {{ o.name }}\n        <div class=\"small text-muted\">{{ o.desc }}</div>\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'forwarded'\">\n    <div class=\"form-group\">\n      <label class=\"d-block\">{{ \"service\" | i18n }}</label>\n      <div class=\"form-check\" *ngFor=\"let o of forwardOptions\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          [(ngModel)]=\"usernameOptions.forwardedService\"\n          name=\"ForwardType\"\n          id=\"forwardtype_{{ o.value }}\"\n          [value]=\"o.value\"\n          (change)=\"saveUsernameOptions()\"\n          [checked]=\"usernameOptions.forwardedService === o.value\"\n        />\n        <label class=\"form-check-label\" for=\"forwardtype_{{ o.value }}\">\n          {{ o.name }}\n        </label>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n      <div class=\"form-group col-4\">\n        <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"simplelogin-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'duckduckgo'\">\n      <div class=\"form-group col-4\">\n        <label for=\"duckduckgo-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"duckduckgo-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          name=\"DuckDudkGoApiKey\"\n          [(ngModel)]=\"usernameOptions.forwardedDuckDuckGoToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"anonaddy-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n        <input\n          id=\"anonaddy-domain\"\n          class=\"form-control\"\n          type=\"text\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n      <div class=\"form-group col-4\">\n        <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"firefox-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'fastmail'\">\n      <div class=\"form-group col-4\">\n        <label for=\"fastmail-apiToken\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"fastmail-apiToken\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFastmailApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"fastmail-accountId\">{{ \"accountId\" | i18n }}</label>\n        <input\n          id=\"fastmail-accountId\"\n          class=\"form-control\"\n          type=\"text\"\n          [(ngModel)]=\"usernameOptions.forwardedFastmailAccountId\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n    <div class=\"form-group col-4\">\n      <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n      <input\n        id=\"subaddress-email\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.subaddressEmail\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'catchall'\">\n    <div class=\"form-group col-4\">\n      <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n      <input\n        id=\"catchall-domain\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.catchallDomain\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'word'\">\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            id=\"capitalizeUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n          <label for=\"capitalizeUsername\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n        </div>\n        <div class=\"form-check\">\n          <input\n            id=\"includeNumberUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n          <label for=\"includeNumberUsername\" class=\"form-check-label\">{{\n            \"includeNumber\" | i18n\n          }}</label>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <div #form [appApiAction]=\"usernameGeneratingPromise\">\n    <button\n      type=\"button\"\n      class=\"btn btn-submit btn-primary\"\n      (click)=\"regenerate()\"\n      [disabled]=\"form.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"regenerateUsername\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n      {{ \"copyUsername\" | i18n }}\n    </button>\n  </div>\n</ng-container>\n<ng-template #historyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./password-generator-history.component\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  @ViewChild(\"historyTemplate\", { read: ViewContainerRef, static: true })\n  historyModalRef: ViewContainerRef;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    route: ActivatedRoute,\n    private modalService: ModalService\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n    if (platformUtilsService.isSelfHost()) {\n      // Cannot use Firefox Relay on self hosted web vaults due to CORS issues with Firefox Relay API\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"firefoxrelay\"),\n        1\n      );\n    }\n  }\n\n  async history() {\n    await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n  }\n\n  lengthChanged() {\n    document.getElementById(\"length\").focus();\n  }\n\n  minNumberChanged() {\n    document.getElementById(\"min-number\").focus();\n  }\n\n  minSpecialChanged() {\n    document.getElementById(\"min-special\").focus();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent implements OnInit {\n  canAccessPremium = false;\n\n  constructor(private stateService: StateService, private messagingService: MessagingService) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card mb-4\">\n        <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"generator\" | i18n }}\n          </a>\n          <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"importData\" | i18n }}\n          </a>\n          <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"exportVault\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipherWithIdRequest\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folderWithIdRequest\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/updateKeyRequest\";\n\n@Component({\n  selector: \"app-update-key\",\n  templateUrl: \"update-key.component.html\",\n})\nexport class UpdateKeyComponent {\n  masterPassword: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (hasEncKey) {\n      return;\n    }\n\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeRequest().then((request) => {\n        return this.apiService.postAccountKey(request);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 }\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async makeRequest(): Promise<UpdateKeyRequest> {\n    const key = await this.cryptoService.getKey();\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n    await this.syncService.fullSync(true);\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    return request;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"updateEncKeyTitle\">{{ \"updateEncryptionKey\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"updateEncryptionKeyShortDesc\" | i18n }} {{ \"updateEncryptionKeyDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <app-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</app-callout>\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appAutofocus\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"updateEncryptionKey\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"folderAddEditTitle\">{{ title }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"folder.name\"\n          required\n          appAutofocus\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"shareTitle\">\n          {{ \"moveToOrganization\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n        {{ \"noOrganizationsList\" | i18n }}\n      </div>\n      <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n        <p>{{ \"moveToOrgDesc\" | i18n }}</p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n          *ngIf=\"organizations && organizations.length\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <a\n          href=\"#\"\n          routerLink=\"/create-organization\"\n          class=\"btn btn-primary\"\n          *ngIf=\"!organizations || !organizations.length\"\n        >\n          {{ \"newOrganization\" | i18n }}\n        </a>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"verify-email.component.html\",\n})\nexport class VerifyEmailComponent {\n  actionPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async send() {\n    if (this.actionPromise != null) {\n      return;\n    }\n    try {\n      this.actionPromise = this.apiService.postAccountVerifyEmail();\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"checkInboxForVerification\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","<div class=\"card border-warning\">\n  <div class=\"card-header bg-warning text-white\">\n    <i class=\"bwi bwi-envelope bwi-fw\" aria-hidden=\"true\"></i> {{ \"verifyEmail\" | i18n }}\n  </div>\n  <div class=\"card-body\">\n    <p>{{ \"verifyEmailDesc\" | i18n }}</p>\n    <button\n      type=\"button\"\n      class=\"btn btn-block btn-outline-secondary btn-submit\"\n      #sendBtn\n      [appApiAction]=\"actionPromise\"\n      [disabled]=\"sendBtn.loading\"\n      (click)=\"send()\"\n    >\n      <i class=\"bwi bwi-spin bwi-spinner\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>\n        {{ \"sendEmail\" | i18n }}\n      </span>\n    </button>\n  </div>\n</div>\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onAddFolder)=\"addFolder()\"\n              (onEditFolder)=\"editFolder($event.id)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div [ngClass]=\"{ 'col-6': isShowingCards, 'col-9': !isShowingCards }\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"activeFilter.status === 'trash'\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addCipher()\"\n            *ngIf=\"activeFilter.status !== 'trash'\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout\n        type=\"warning\"\n        *ngIf=\"activeFilter.status === 'trash'\"\n        icon=\"bwi-exclamation-triangle\"\n      >\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onShareClicked)=\"shareCipher($event)\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n        (onOrganzationBadgeClicked)=\"applyOrganizationFilter($event)\"\n      >\n      </app-vault-ciphers>\n    </div>\n    <div class=\"col-3\">\n      <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateKeyTitle\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateEncryptionKeyShortDesc\" | i18n }}</p>\n          <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n            {{ \"updateEncryptionKey\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email>\n      <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateBrowser\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateBrowserDesc\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            target=\"_blank\"\n            href=\"https://browser-update.org/update-browser.html\"\n            rel=\"noopener\"\n          >\n            {{ \"updateBrowser\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n        <div class=\"card-header bg-success text-white\">\n          <i class=\"bwi bwi-star-f bwi-fw\" aria-hidden=\"true\"></i> {{ \"goPremium\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            routerLink=\"/settings/subscription/premium\"\n          >\n            {{ \"goPremium\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { FolderAddEditComponent } from \"./folder-add-edit.component\";\nimport { ShareComponent } from \"./share.component\";\nimport { VaultService } from \"./shared/vault.service\";\nimport { VaultFilterService } from \"./vault-filter/shared/vault-filter.service\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\n\nconst BroadcasterSubscriptionId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true }) filterComponent: VaultFilterComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"folderAddEdit\", { read: ViewContainerRef, static: true })\n  folderAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"share\", { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"updateKeyTemplate\", { read: ViewContainerRef, static: true })\n  updateKeyModalRef: ViewContainerRef;\n\n  folderId: string = null;\n  myVaultOnly = false;\n  showVerifyEmail = false;\n  showBrowserOutdated = false;\n  showUpdateKey = false;\n  showPremiumCallout = false;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  constructor(\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private tokenService: TokenService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n    this.showBrowserOutdated = window.navigator.userAgent.indexOf(\"MSIE\") !== -1;\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      await this.syncService.fullSync(false);\n      const canAccessPremium = await this.stateService.getCanAccessPremium();\n      this.showPremiumCallout =\n        !this.showVerifyEmail && !canAccessPremium && !this.platformUtilsService.isSelfHost();\n\n      this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n      this.filterComponent.reloadOrganizations();\n      this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n\n      const cipherId = getCipherIdFromParams(params);\n\n      if (cipherId) {\n        const cipherView = new CipherView();\n        cipherView.id = cipherId;\n        if (params.action === \"clone\") {\n          await this.cloneCipher(cipherView);\n        } else if (params.action === \"edit\") {\n          await this.editCipher(cipherView);\n        }\n      }\n      await this.ciphersComponent.reload();\n\n      this.route.queryParams.subscribe(async (params) => {\n        const cipherId = getCipherIdFromParams(params);\n        if (cipherId) {\n          if ((await this.cipherService.get(cipherId)) != null) {\n            this.editCipherId(cipherId);\n          } else {\n            this.platformUtilsService.showToast(\n              \"error\",\n              this.i18nService.t(\"errorOccurred\"),\n              this.i18nService.t(\"unknownCipher\")\n            );\n            this.router.navigate([], {\n              queryParams: { itemId: null, cipherId: null },\n              queryParamsHandling: \"merge\",\n            });\n          }\n        }\n      });\n\n      this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n        this.ngZone.run(async () => {\n          switch (message.command) {\n            case \"syncCompleted\":\n              if (message.successfully) {\n                await Promise.all([\n                  this.filterComponent.reloadCollectionsAndFolders(this.activeFilter),\n                  this.filterComponent.reloadOrganizations(),\n                  this.ciphersComponent.load(this.ciphersComponent.filter),\n                ]);\n                this.changeDetectorRef.detectChanges();\n              }\n              break;\n          }\n        });\n      });\n    });\n  }\n\n  get isShowingCards() {\n    return (\n      this.showBrowserOutdated ||\n      this.showPremiumCallout ||\n      this.showUpdateKey ||\n      this.showVerifyEmail\n    );\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.ciphersComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n    await this.ciphersComponent.reload(\n      this.activeFilter.buildFilter(),\n      vaultFilter.status === \"trash\"\n    );\n    this.filterComponent.searchPlaceholder = this.vaultService.calculateSearchBarLocalizationString(\n      this.activeFilter\n    );\n    this.go();\n  }\n\n  async applyOrganizationFilter(orgId: string) {\n    if (orgId == null) {\n      this.activeFilter.resetOrganization();\n      this.activeFilter.myVaultOnly = true;\n    } else {\n      this.activeFilter.selectedOrganizationId = orgId;\n    }\n    await this.vaultFilterService.ensureVaultFiltersAreExpanded();\n    await this.applyVaultFilter(this.activeFilter);\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (cipher.organizationId == null && !canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    } else if (cipher.organizationId != null) {\n      const org = await this.organizationService.get(cipher.organizationId);\n      if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n        this.messagingService.send(\"upgradeOrganization\", {\n          organizationId: cipher.organizationId,\n        });\n        return;\n      }\n    }\n\n    let madeAttachmentChanges = false;\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        comp.onReuploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async shareCipher(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      ShareComponent,\n      this.shareModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onSharedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addFolder() {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = null;\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async editFolder(folderId: string) {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = folderId;\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n        comp.onDeletedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.type = this.activeFilter.cipherType;\n    component.folderId = this.folderId === \"none\" ? null : this.folderId;\n    if (this.activeFilter.selectedCollectionId != null) {\n      const collection = this.filterComponent.collections.fullList.filter(\n        (c) => c.id === this.activeFilter.selectedCollectionId\n      );\n      if (collection.length > 0) {\n        component.organizationId = collection[0].organizationId;\n        component.collectionIds = [this.activeFilter.selectedCollectionId];\n      }\n    }\n    if (this.activeFilter.selectedFolderId && this.activeFilter.selectedFolder) {\n      component.folderId = this.activeFilter.selectedFolderId;\n    }\n    if (this.activeFilter.selectedOrganizationId) {\n      component.organizationId = this.activeFilter.selectedOrganizationId;\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(id: string) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = id;\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n  }\n\n  async updateKey() {\n    await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        favorites: this.activeFilter.status === \"favorites\" ? true : null,\n        type: this.activeFilter.cipherType,\n        folderId: this.activeFilter.selectedFolderId,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.activeFilter.status === \"trash\" ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { OrganizationBadgeModule } from \"./organization-badge/organization-badge.module\";\nimport { VaultSharedModule } from \"./shared/vault-shared.module\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule, OrganizationBadgeModule],\n  declarations: [VaultComponent, CiphersComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { flagEnabled, FlagName } from \"../utils/flags\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TrialInitiationComponent } from \"./accounts/trial-initiation/trial-initiation.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\nimport { HomeGuard } from \"./guards/home.guard\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { OrganizationsRoutingModule } from \"./organizations/organization-routing.module\";\nimport { AcceptFamilySponsorshipComponent } from \"./organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ReportsModule } from \"./reports\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { PreferencesComponent } from \"./settings/preferences.component\";\nimport { SecurityRoutingModule } from \"./settings/security-routing.module\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { SubscriptionRoutingModule } from \"./settings/subscription-routing.module\";\nimport { GeneratorComponent } from \"./tools/generator.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    data: { doNotSaveUrl: true },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        children: [], // Children lets us have an empty component.\n        canActivate: [HomeGuard], // Redirects either to vault, login or lock page.\n      },\n      { path: \"login\", component: LoginComponent, canActivate: [UnauthGuard] },\n      { path: \"2fa\", component: TwoFactorComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"register\",\n        component: RegisterComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"createAccount\" },\n      },\n      buildFlaggedRoute(\"showTrial\", {\n        path: \"trial\",\n        component: TrialInitiationComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"startTrial\" },\n      }),\n      {\n        path: \"sso\",\n        component: SsoComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"enterpriseSingleSignOn\" },\n      },\n      {\n        path: \"set-password\",\n        component: SetPasswordComponent,\n        data: { titleId: \"setMasterPassword\" },\n      },\n      {\n        path: \"hint\",\n        component: HintComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"passwordHint\" },\n      },\n      {\n        path: \"lock\",\n        component: LockComponent,\n        canActivate: [LockGuard],\n      },\n      { path: \"verify-email\", component: VerifyEmailTokenComponent },\n      {\n        path: \"accept-organization\",\n        component: AcceptOrganizationComponent,\n        data: { titleId: \"joinOrganization\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-emergency\",\n        component: AcceptEmergencyComponent,\n        data: { titleId: \"acceptEmergency\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-families-for-enterprise\",\n        component: AcceptFamilySponsorshipComponent,\n        data: { titleId: \"acceptFamilySponsorship\", doNotSaveUrl: false },\n      },\n      { path: \"recover\", pathMatch: \"full\", redirectTo: \"recover-2fa\" },\n      {\n        path: \"recover-2fa\",\n        component: RecoverTwoFactorComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"recoverAccountTwoStep\" },\n      },\n      {\n        path: \"recover-delete\",\n        component: RecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"verify-recover-delete\",\n        component: VerifyRecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"send/:sendId/:key\",\n        component: AccessComponent,\n        data: { title: \"Bitwarden Send\" },\n      },\n      {\n        path: \"update-temp-password\",\n        component: UpdateTempPasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updateTempPassword\" },\n      },\n      {\n        path: \"update-password\",\n        component: UpdatePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updatePassword\" },\n      },\n      {\n        path: \"remove-password\",\n        component: RemovePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"removeMasterPassword\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    component: UserLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      { path: \"sends\", component: SendComponent, data: { title: \"Send\" } },\n      {\n        path: \"create-organization\",\n        component: CreateOrganizationComponent,\n        data: { titleId: \"newOrganization\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myAccount\" } },\n          {\n            path: \"preferences\",\n            component: PreferencesComponent,\n            data: { titleId: \"preferences\" },\n          },\n          {\n            path: \"security\",\n            loadChildren: () => SecurityRoutingModule,\n          },\n          {\n            path: \"domain-rules\",\n            component: DomainRulesComponent,\n            data: { titleId: \"domainRules\" },\n          },\n          {\n            path: \"subscription\",\n            loadChildren: () => SubscriptionRoutingModule,\n          },\n          {\n            path: \"emergency-access\",\n            children: [\n              {\n                path: \"\",\n                component: EmergencyAccessComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n              {\n                path: \":id\",\n                component: EmergencyAccessViewComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n            ],\n          },\n          {\n            path: \"sponsored-families\",\n            component: SponsoredFamiliesComponent,\n            data: { titleId: \"sponsoredFamilies\" },\n          },\n        ],\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [AuthGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"generator\" },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/import-export.module\").then(\n                (m) => m.ImportExportModule\n              ),\n          },\n          {\n            path: \"generator\",\n            component: GeneratorComponent,\n            data: { titleId: \"generator\" },\n          },\n        ],\n      },\n      {\n        path: \"reports\",\n        loadChildren: () => ReportsModule,\n      },\n      { path: \"setup/families-for-enterprise\", component: FamiliesForEnterpriseSetupComponent },\n    ],\n  },\n  {\n    path: \"organizations\",\n    loadChildren: () => OrganizationsRoutingModule,\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      paramsInheritanceStrategy: \"always\",\n      // enableTracing: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class OssRoutingModule {}\n\nexport function buildFlaggedRoute(flagName: FlagName, route: Route): Route {\n  return flagEnabled(flagName)\n    ? route\n    : {\n        path: route.path,\n        redirectTo: \"/\",\n      };\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { VerticalStepContentComponent } from \"./vertical-step-content.component\";\nimport { VerticalStep } from \"./vertical-step.component\";\nimport { VerticalStepperComponent } from \"./vertical-stepper.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [VerticalStepperComponent, VerticalStep, VerticalStepContentComponent],\n  exports: [VerticalStepperComponent, VerticalStep],\n})\nexport class VerticalStepperModule {}\n","import { CdkStepperModule } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormFieldModule } from \"@bitwarden/components\";\n\nimport { OrganizationCreateModule } from \"../../organizations/create/organization-create.module\";\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { RegisterFormModule } from \"../register-form/register-form.module\";\n\nimport { BillingComponent } from \"./billing.component\";\nimport { ConfirmationDetailsComponent } from \"./confirmation-details.component\";\nimport { CnetEnterpriseContentComponent } from \"./content/cnet-enterprise-content.component\";\nimport { CnetIndividualContentComponent } from \"./content/cnet-individual-content.component\";\nimport { CnetTeamsContentComponent } from \"./content/cnet-teams-content.component\";\nimport { DefaultContentComponent } from \"./content/default-content.component\";\nimport { EnterpriseContentComponent } from \"./content/enterprise-content.component\";\nimport { Enterprise1ContentComponent } from \"./content/enterprise1-content.component\";\nimport { Enterprise2ContentComponent } from \"./content/enterprise2-content.component\";\nimport { LogoCnetComponent } from \"./content/logo-cnet.component\";\nimport { LogoForbesComponent } from \"./content/logo-forbes.component\";\nimport { LogoUSNewsComponent } from \"./content/logo-us-news.component\";\nimport { TeamsContentComponent } from \"./content/teams-content.component\";\nimport { Teams1ContentComponent } from \"./content/teams1-content.component\";\nimport { Teams2ContentComponent } from \"./content/teams2-content.component\";\nimport { TrialInitiationComponent } from \"./trial-initiation.component\";\nimport { VerticalStepperModule } from \"./vertical-stepper/vertical-stepper.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CdkStepperModule,\n    VerticalStepperModule,\n    FormFieldModule,\n    RegisterFormModule,\n    OrganizationCreateModule,\n    LooseComponentsModule,\n  ],\n  declarations: [\n    TrialInitiationComponent,\n    EnterpriseContentComponent,\n    TeamsContentComponent,\n    ConfirmationDetailsComponent,\n    BillingComponent,\n    DefaultContentComponent,\n    EnterpriseContentComponent,\n    Enterprise1ContentComponent,\n    Enterprise2ContentComponent,\n    TeamsContentComponent,\n    Teams1ContentComponent,\n    Teams2ContentComponent,\n    CnetEnterpriseContentComponent,\n    CnetIndividualContentComponent,\n    CnetTeamsContentComponent,\n    LogoCnetComponent,\n    LogoForbesComponent,\n    LogoUSNewsComponent,\n  ],\n  exports: [TrialInitiationComponent],\n  providers: [TitleCasePipe],\n})\nexport class TrialInitiationModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule],\n  declarations: [EntityUsersComponent],\n  exports: [EntityUsersComponent],\n})\nexport class OrganizationManageModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { EnrollMasterPasswordReset } from \"./enroll-master-password-reset.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule, LooseComponentsModule],\n  declarations: [EnrollMasterPasswordReset],\n  exports: [EnrollMasterPasswordReset],\n})\nexport class OrganizationUserModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { TrialInitiationModule } from \"./accounts/trial-initiation/trial-initiation.module\";\nimport { OrganizationCreateModule } from \"./organizations/create/organization-create.module\";\nimport { OrganizationManageModule } from \"./organizations/manage/organization-manage.module\";\nimport { OrganizationUserModule } from \"./organizations/users/organization-user.module\";\nimport { LooseComponentsModule, SharedModule } from \"./shared\";\nimport { OrganizationBadgeModule } from \"./vault/organization-badge/organization-badge.module\";\nimport { VaultFilterModule } from \"./vault/vault-filter/vault-filter.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationManageModule,\n    OrganizationUserModule,\n    OrganizationCreateModule,\n  ],\n  exports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n  ],\n  bootstrap: [],\n})\nexport class OssModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [{ path: \"**\", redirectTo: \"\" }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WildcardRoutingModule {}\n","export class ProviderAddOrganizationRequest {\n  organizationId: string;\n  key: string;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { ProviderAddOrganizationRequest } from \"@bitwarden/common/models/request/provider/providerAddOrganizationRequest\";\n\n@Injectable()\nexport class WebProviderService {\n  constructor(\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private apiService: ApiService\n  ) {}\n\n  async addOrganizationToProvider(providerId: string, organizationId: string) {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n    const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n    const request = new ProviderAddOrganizationRequest();\n    request.organizationId = organizationId;\n    request.key = encryptedOrgKey.encryptedString;\n\n    const response = await this.apiService.postProviderAddOrganization(providerId, request);\n    await this.syncService.fullSync(true);\n    return response;\n  }\n\n  async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n    await this.apiService.deleteProviderOrganization(providerId, organizationId);\n    await this.syncService.fullSync(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"addTitle\">\n          {{ \"addExistingOrganization\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <ng-container *ngIf=\"!loading\">\n          <table class=\"table table-hover table-list\">\n            <tr *ngFor=\"let o of organizations\">\n              <td width=\"30\">\n                <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n              </td>\n              <td>\n                {{ o.name }}\n              </td>\n              <td>\n                <button\n                  class=\"btn btn-outline-secondary pull-right\"\n                  (click)=\"add(o)\"\n                  [disabled]=\"formPromise\"\n                >\n                  Add\n                </button>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\n@Component({\n  selector: \"provider-add-organization\",\n  templateUrl: \"add-organization.component.html\",\n})\nexport class AddOrganizationComponent implements OnInit {\n  @Input() providerId: string;\n  @Input() organizations: Organization[];\n  @Output() onAddedOrganization = new EventEmitter();\n\n  provider: Provider;\n  formPromise: Promise<any>;\n  loading = true;\n\n  constructor(\n    private providerService: ProviderService,\n    private webProviderService: WebProviderService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private validationService: ValidationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    if (this.providerId == null) {\n      return;\n    }\n\n    this.provider = await this.providerService.get(this.providerId);\n\n    this.loading = false;\n  }\n\n  async add(organization: Organization) {\n    if (this.formPromise) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"addOrganizationConfirmation\", organization.name, this.provider.name),\n      organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.webProviderService.addOrganizationToProvider(\n        this.providerId,\n        organization.id\n      );\n      await this.formPromise;\n    } catch (e) {\n      this.validationService.showError(e);\n      return;\n    } finally {\n      this.formPromise = null;\n    }\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"organizationJoinedProvider\")\n    );\n    this.onAddedOrganization.emit();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Injectable()\nexport class ProviderPermissionsGuard implements CanActivate {\n  constructor(\n    private providerService: ProviderService,\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    if (provider == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!provider.isProviderAdmin && !provider.enabled) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"providerIsDisabled\"));\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (provider: Provider) => boolean = route.data?.providerPermissions;\n    const hasSpecifiedPermissions = permissionsCallback == null || permissionsCallback(provider);\n\n    if (!hasSpecifiedPermissions) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return this.router.createUrlTree([\"/providers\", provider.id]);\n    }\n\n    return true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header d-flex\">\n    <h1>{{ \"providers\" | i18n }}</h1>\n  </div>\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\">\n      <tbody>\n        <tr *ngFor=\"let p of providers\">\n          <td width=\"30\">\n            <app-avatar [data]=\"p.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{ p.name }}</a>\n            <ng-container *ngIf=\"!p.enabled\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-danger\"\n                title=\"{{ 'providerIsDisabled' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n            </ng-container>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-providers\",\n  templateUrl: \"providers.component.html\",\n})\nexport class ProvidersComponent implements OnInit {\n  providers: Provider[];\n  loaded = false;\n  actionPromise: Promise<any>;\n\n  constructor(private providerService: ProviderService, private i18nService: I18nService) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    await this.load();\n  }\n\n  async load() {\n    const providers = await this.providerService.getAll();\n    providers.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.providers = providers;\n    this.loaded = true;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"clients\" | i18n }}</h1>\n\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newClientOrganization\" | i18n }}\n    </a>\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"addExistingOrganization()\"\n      *ngIf=\"manageOrganizations && showAddExisting\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"addExistingOrganization\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container\n  *ngIf=\"!loading && (clients | search: searchText:'organizationName':'id') as searchedClients\"\n>\n  <p *ngIf=\"!searchedClients.length\">{{ \"noClientsInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedClients.length\">\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <thead>\n        <tr>\n          <th colspan=\"2\">{{ \"name\" | i18n }}</th>\n          <th>{{ \"numberOfUsers\" | i18n }}</th>\n          <th>{{ \"billingPlan\" | i18n }}</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let o of searchedClients\">\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"o.organizationName\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            ></app-avatar>\n          </td>\n          <td>\n            <a [routerLink]=\"['/organizations', o.organizationId]\">{{ o.organizationName }}</a>\n          </td>\n          <td>\n            <span>{{ o.userCount }}</span>\n            <span *ngIf=\"o.seats != null\"> / {{ o.seats }}</span>\n          </td>\n          <td>\n            <span>{{ o.plan }}</span>\n          </td>\n          <td class=\"table-list-options\" *ngIf=\"manageOrganizations\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n\n<ng-template #add></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ProviderOrganizationOrganizationDetailsResponse } from \"@bitwarden/common/models/response/provider/providerOrganizationResponse\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\nimport { AddOrganizationComponent } from \"./add-organization.component\";\n\nconst DisallowedPlanTypes = [\n  PlanType.Free,\n  PlanType.FamiliesAnnually2019,\n  PlanType.FamiliesAnnually,\n];\n\n@Component({\n  templateUrl: \"clients.component.html\",\n})\nexport class ClientsComponent implements OnInit {\n  @ViewChild(\"add\", { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n  providerId: string;\n  searchText: string;\n  addableOrganizations: Organization[];\n  loading = true;\n  manageOrganizations = false;\n  showAddExisting = false;\n\n  clients: ProviderOrganizationOrganizationDetailsResponse[];\n  pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected actionPromise: Promise<unknown>;\n  private pagedClientsCount = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private providerService: ProviderService,\n    private apiService: ApiService,\n    private searchService: SearchService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private validationService: ValidationService,\n    private webProviderService: WebProviderService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderClients(this.providerId);\n    this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n    this.manageOrganizations =\n      (await this.providerService.get(this.providerId)).type === ProviderUserType.ProviderAdmin;\n    const candidateOrgs = (await this.organizationService.getAll()).filter(\n      (o) => o.isOwner && o.providerId == null\n    );\n    const allowedOrgsIds = await Promise.all(\n      candidateOrgs.map((o) => this.organizationApiService.get(o.id))\n    ).then((orgs) =>\n      orgs.filter((o) => !DisallowedPlanTypes.includes(o.planType)).map((o) => o.id)\n    );\n    this.addableOrganizations = candidateOrgs.filter((o) => allowedOrgsIds.includes(o.id));\n\n    this.showAddExisting = this.addableOrganizations.length !== 0;\n    this.loading = false;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.clients && this.clients.length > this.pageSize;\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  async resetPaging() {\n    this.pagedClients = [];\n    this.loadMore();\n  }\n\n  loadMore() {\n    if (!this.clients || this.clients.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedClients.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n      pagedSize = this.pagedClientsCount;\n    }\n    if (this.clients.length > pagedLength) {\n      this.pagedClients = this.pagedClients.concat(\n        this.clients.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedClientsCount = this.pagedClients.length;\n    this.didScroll = this.pagedClients.length > this.pageSize;\n  }\n\n  async addExistingOrganization() {\n    const [modal] = await this.modalService.openViewRef(\n      AddOrganizationComponent,\n      this.addModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.organizations = this.addableOrganizations;\n        comp.onAddedOrganization.subscribe(async () => {\n          try {\n            await this.load();\n            modal.close();\n          } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n          }\n        });\n      }\n    );\n  }\n\n  async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"detachOrganizationConfirmation\"),\n      organization.organizationName,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.webProviderService.detachOrganizastion(\n      this.providerId,\n      organization.id\n    );\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"detachedOrganization\", organization.organizationName)\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationPlansComponent } from \"src/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  providerId: string;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newClientOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newClientOrganizationDesc\" | i18n }}</p>\n<app-organization-plans [providerId]=\"providerId\"></app-organization-plans>\n","export class ProviderUserAcceptRequest {\n  token: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ providerName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinProviderDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserAcceptRequest } from \"@bitwarden/common/models/request/provider/providerUserAcceptRequest\";\n\nimport { BaseAcceptComponent } from \"src/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-provider\",\n  templateUrl: \"accept-provider.component.html\",\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n  providerName: string;\n\n  failedMessage = \"providerInviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"providerUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private apiService: ApiService,\n    platformUtilService: PlatformUtilsService\n  ) {\n    super(router, platformUtilService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params) {\n    const request = new ProviderUserAcceptRequest();\n    request.token = qParams.token;\n\n    await this.apiService.postProviderUserAccept(\n      qParams.providerId,\n      qParams.providerUserId,\n      request\n    );\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"providerInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params) {\n    this.providerName = qParams.providerName;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/eventResponse\";\n\nimport { BaseEventsComponent } from \"src/app/common/base.events.component\";\nimport { EventService } from \"src/app/core\";\n\n@Component({\n  selector: \"provider-events\",\n  templateUrl: \"events.component.html\",\n})\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"provider-events\";\n  providerId: string;\n\n  private providerUsersUserIdMap = new Map<string, any>();\n  private providerUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    private providerService: ProviderService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n      if (provider == null || !provider.useEvents) {\n        this.router.navigate([\"/providers\", this.providerId]);\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderUsers(this.providerId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n      this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsProvider(\n      this.providerId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    return userId != null && this.providerUsersUserIdMap.has(userId)\n      ? this.providerUsersUserIdMap.get(userId)\n      : null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"provider\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"provider-manage\",\n  templateUrl: \"manage.component.html\",\n})\nexport class ManageComponent implements OnInit {\n  provider: Provider;\n  accessEvents = false;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.provider = await this.providerService.get(params.providerId);\n      this.accessEvents = this.provider.useEvents;\n    });\n  }\n}\n","export class ProviderUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class ProviderUserConfirmRequest {\n  key: string;\n}\n","type ProviderUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n  keys: ProviderUserBulkRequestEntry[];\n\n  constructor(keys: ProviderUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserBulkConfirmRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\n\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from \"src/app/organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkUserDetails } from \"src/app/organizations/manage/bulk/bulk-status.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n  @Input() providerId: string;\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === ProviderUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new ProviderUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getProviderKey(this.providerId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\n\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from \"src/app/organizations/manage/bulk/bulk-remove.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n  @Input() providerId: string;\n\n  async deleteUsers() {\n    const request = new ProviderUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeUsersWarning\");\n  }\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserInviteRequest {\n  emails: string[] = [];\n  type: ProviderUserType;\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserUpdateRequest {\n  type: ProviderUserType;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"providerInviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeServiceUser\"\n            [value]=\"userType.ServiceUser\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeServiceUser\">\n            {{ \"serviceUser\" | i18n }}\n            <small>{{ \"serviceUserDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeProviderAdmin\"\n            [value]=\"userType.ProviderAdmin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeProviderAdmin\">\n            {{ \"providerAdmin\" | i18n }}\n            <small>{{ \"providerAdminDesc\" | i18n }}</small>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissionsApi\";\nimport { ProviderUserInviteRequest } from \"@bitwarden/common/models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"@bitwarden/common/models/request/provider/providerUserUpdateRequest\";\n\n@Component({\n  selector: \"provider-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() providerUserId: string;\n  @Input() providerId: string;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  emails: string;\n  type: ProviderUserType = ProviderUserType.ServiceUser;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  userType = ProviderUserType;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.providerUserId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n        this.type = user.type;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new ProviderUserUpdateRequest();\n        request.type = this.type;\n        this.formPromise = this.apiService.putProviderUser(\n          this.providerId,\n          this.providerUserId,\n          request\n        );\n      } else {\n        const request = new ProviderUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.type = this.type;\n        this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"providerUsersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <app-avatar\n              [data]=\"u | userName\"\n              [email]=\"u.email\"\n              size=\"25\"\n              [circle]=\"true\"\n              [fontSize]=\"14\"\n            >\n            </app-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.ProviderAdmin\">{{ \"providerAdmin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.ServiceUser\">{{ \"serviceUser\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"@bitwarden/common/models/request/provider/providerUserConfirmRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { ProviderUserBulkResponse } from \"@bitwarden/common/models/response/provider/providerUserBulkResponse\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/providerUserResponse\";\n\nimport { BasePeopleComponent } from \"src/app/common/base.people.component\";\nimport { BulkStatusComponent } from \"src/app/organizations/manage/bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"src/app/organizations/manage/entity-events.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\n\n@Component({\n  selector: \"provider-people\",\n  templateUrl: \"people.component.html\",\n})\nexport class PeopleComponent\n  extends BasePeopleComponent<ProviderUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = ProviderUserType;\n  userStatusType = ProviderUserStatusType;\n  providerId: string;\n  accessEvents = false;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    stateService: StateService,\n    private providerService: ProviderService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n\n      if (!provider.canManageUsers) {\n        this.router.navigate([\"../\"], { relativeTo: this.route });\n        return;\n      }\n\n      this.accessEvents = provider.useEvents;\n\n      await this.load();\n\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    return this.apiService.getProviderUsers(this.providerId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteProviderUser(this.providerId, id);\n  }\n\n  revokeUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  restoreUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postProviderUserReinvite(this.providerId, id);\n  }\n\n  async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n    const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n    const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n    const request = new ProviderUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n  }\n\n  async edit(user: ProviderUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.providerId = this.providerId;\n        comp.providerUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async events(user: ProviderUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.providerId = this.providerId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === ProviderUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new ProviderUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  private async showBulkStatus(\n    users: ProviderUserUserDetailsResponse[],\n    filteredUsers: ProviderUserUserDetailsResponse[],\n    request: Promise<ListResponse<ProviderUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"provider\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <app-avatar [data]=\"provider.name\" size=\"45\" [circle]=\"true\"></app-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ provider.name }}</span>\n          <small class=\"text-muted\">{{ \"provider\" | i18n }}</small>\n        </div>\n        <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\">\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"providerIsDisabled\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i>\n            {{ \"clients\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"providers-layout\",\n  templateUrl: \"providers-layout.component.html\",\n})\nexport class ProvidersLayoutComponent {\n  provider: Provider;\n  private providerId: string;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.provider = await this.providerService.get(this.providerId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showSettingsTab;\n  }\n\n  get showManageTab() {\n    return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n  }\n\n  get showSettingsTab() {\n    return this.provider.isProviderAdmin;\n  }\n\n  get manageRoute(): string {\n    switch (true) {\n      case this.provider.canManageUsers:\n        return \"manage/people\";\n      case this.provider.canAccessEventLogs:\n        return \"manage/events\";\n    }\n  }\n}\n","export class ProviderUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myProvider\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"provider && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"provider.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"provider.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <app-avatar data=\"{{ provider.name }}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { ProviderUpdateRequest } from \"@bitwarden/common/models/request/provider/providerUpdateRequest\";\nimport { ProviderResponse } from \"@bitwarden/common/models/response/provider/providerResponse\";\n\n@Component({\n  selector: \"provider-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  selfHosted = false;\n  loading = true;\n  provider: ProviderResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private providerId: string;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      try {\n        this.provider = await this.apiService.getProvider(this.providerId);\n      } catch (e) {\n        this.logService.error(`Handled exception: ${e}`);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new ProviderUpdateRequest();\n      request.name = this.provider.name;\n      request.businessName = this.provider.businessName;\n      request.billingEmail = this.provider.billingEmail;\n\n      this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerUpdated\"));\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\n\n@Component({\n  selector: \"provider-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent {\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(async (params) => {\n      await this.providerService.get(params.providerId);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myProvider\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setupProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"setupProviderLoginDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"src/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-setup-provider\",\n  templateUrl: \"setup-provider.component.html\",\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/providers/setup\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    // Empty\n  }\n}\n","export class ProviderSetupRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  token: string;\n  key: string;\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"setupProvider\" | i18n }}</h1>\n  </div>\n  <p>{{ \"setupProviderDesc\" | i18n }}</p>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\">\n    <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n      </div>\n      <div class=\"form-group col-6\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"billingEmail\"\n          required\n        />\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"submit\" | i18n }}</span>\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ValidationService } from \"@bitwarden/angular/services/validation.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { ProviderSetupRequest } from \"@bitwarden/common/models/request/provider/providerSetupRequest\";\n\n@Component({\n  selector: \"provider-setup\",\n  templateUrl: \"setup.component.html\",\n})\nexport class SetupComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  formPromise: Promise<any>;\n\n  providerId: string;\n  token: string;\n  name: string;\n  billingEmail: string;\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"emergencyInviteAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.providerId = qParams.providerId;\n      this.token = qParams.token;\n\n      // Check if provider exists, redirect if it does\n      try {\n        const provider = await this.apiService.getProvider(this.providerId);\n        if (provider.name != null) {\n          this.router.navigate([\"/providers\", provider.id], { replaceUrl: true });\n        }\n      } catch (e) {\n        this.validationService.showError(e);\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit();\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  async doSubmit() {\n    try {\n      const shareKey = await this.cryptoService.makeShareKey();\n      const key = shareKey[0].encryptedString;\n\n      const request = new ProviderSetupRequest();\n      request.name = this.name;\n      request.billingEmail = this.billingEmail;\n      request.token = this.token;\n      request.key = key;\n\n      const provider = await this.apiService.postProviderSetup(this.providerId, request);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerSetup\"));\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/providers\", provider.id]);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { FrontendLayoutComponent } from \"src/app/layouts/frontend-layout.component\";\nimport { ProvidersComponent } from \"src/app/providers/providers.component\";\n\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: ProvidersComponent,\n  },\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      {\n        path: \"setup-provider\",\n        component: SetupProviderComponent,\n        data: { titleId: \"setupProvider\" },\n      },\n      {\n        path: \"accept-provider\",\n        component: AcceptProviderComponent,\n        data: { titleId: \"acceptProvider\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"setup\",\n        component: SetupComponent,\n      },\n      {\n        path: \":providerId\",\n        component: ProvidersLayoutComponent,\n        canActivate: [ProviderPermissionsGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"clients\" },\n          { path: \"clients/create\", component: CreateOrganizationComponent },\n          { path: \"clients\", component: ClientsComponent, data: { titleId: \"clients\" } },\n          {\n            path: \"manage\",\n            component: ManageComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"people\",\n              },\n              {\n                path: \"people\",\n                component: PeopleComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"people\",\n                  providerPermissions: (provider: Provider) => provider.canManageUsers,\n                },\n              },\n              {\n                path: \"events\",\n                component: EventsComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"eventLogs\",\n                  providerPermissions: (provider: Provider) => provider.canAccessEventLogs,\n                },\n              },\n            ],\n          },\n          {\n            path: \"settings\",\n            component: SettingsComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"account\",\n              },\n              {\n                path: \"account\",\n                component: AccountComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"myProvider\",\n                  providerPermissions: (provider: Provider) => provider.isProviderAdmin,\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProvidersRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { ComponentFactoryResolver, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\n\nimport { OssModule } from \"src/app/oss.module\";\n\nimport { AddOrganizationComponent } from \"./clients/add-organization.component\";\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { BulkConfirmComponent } from \"./manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./manage/bulk/bulk-remove.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { UserAddEditComponent } from \"./manage/user-add-edit.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { ProvidersRoutingModule } from \"./providers-routing.module\";\nimport { WebProviderService } from \"./services/webProvider.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, OssModule, JslibModule, ProvidersRoutingModule],\n  declarations: [\n    AcceptProviderComponent,\n    AccountComponent,\n    AddOrganizationComponent,\n    BulkConfirmComponent,\n    BulkRemoveComponent,\n    ClientsComponent,\n    CreateOrganizationComponent,\n    EventsComponent,\n    ManageComponent,\n    PeopleComponent,\n    ProvidersLayoutComponent,\n    SettingsComponent,\n    SetupComponent,\n    SetupProviderComponent,\n    UserAddEditComponent,\n  ],\n  providers: [WebProviderService, ProviderPermissionsGuard],\n})\nexport class ProvidersModule {\n  constructor(modalService: ModalService, componentFactoryResolver: ComponentFactoryResolver) {\n    modalService.registerComponentFactoryResolver(\n      AddOrganizationComponent,\n      componentFactoryResolver\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ProvidersModule } from \"./providers/providers.module\";\n\nconst routes: Routes = [\n  {\n    path: \"providers\",\n    loadChildren: () => ProvidersModule,\n  },\n  {\n    path: \"sm\",\n    loadChildren: async () => (await import(\"./sm/sm.module\")).SecretsManagerModule,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class DisableSendPolicy extends BasePolicy {\n  name = \"disableSend\";\n  description = \"disableSendPolicyDesc\";\n  type = PolicyType.DisableSend;\n  component = DisableSendPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-send\",\n  templateUrl: \"disable-send.component.html\",\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"disableSendExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minComplexity\">{{ \"minComplexityScore\" | i18n }}</label>\n      <select\n        id=\"minComplexity\"\n        name=\"minComplexity\"\n        formControlName=\"minComplexity\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"8\"\n        name=\"minLength\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireUpper\"\n      name=\"requireUpper\"\n      formControlName=\"requireUpper\"\n    />\n    <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireLower\"\n      name=\"requireLower\"\n      formControlName=\"requireLower\"\n    />\n    <label class=\"form-check-label\" for=\"requireLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireNumbers\"\n      name=\"requireNumbers\"\n      formControlName=\"requireNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireSpecial\"\n      name=\"requireSpecial\"\n      formControlName=\"requireSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class MasterPasswordPolicy extends BasePolicy {\n  name = \"masterPassPolicyTitle\";\n  description = \"masterPassPolicyDesc\";\n  type = PolicyType.MasterPassword;\n  component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-master-password\",\n  templateUrl: \"master-password.component.html\",\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    minComplexity: [null],\n    minLength: [null],\n    requireUpper: [null],\n    requireLower: [null],\n    requireNumbers: [null],\n    requireSpecial: [null],\n  });\n\n  passwordScores: { name: string; value: number }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {\n    super();\n\n    this.passwordScores = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"weak\") + \" (0)\", value: 0 },\n      { name: i18nService.t(\"weak\") + \" (1)\", value: 1 },\n      { name: i18nService.t(\"weak\") + \" (2)\", value: 2 },\n      { name: i18nService.t(\"good\") + \" (3)\", value: 3 },\n      { name: i18nService.t(\"strong\") + \" (4)\", value: 4 },\n    ];\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group mb-0\">\n      <label for=\"defaultType\">{{ \"defaultType\" | i18n }}</label>\n      <select\n        id=\"defaultType\"\n        name=\"defaultType\"\n        formControlName=\"defaultType\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n  </div>\n  <h3 class=\"mt-4\">{{ \"password\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minLength\"\n        min=\"5\"\n        max=\"128\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumbers\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"minNumbers\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumbers\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minNumbers\"\n      />\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minSpecial\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"minSpecial\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minSpecial\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minSpecial\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useUpper\"\n      formControlName=\"useUpper\"\n      name=\"useUpper\"\n    />\n    <label class=\"form-check-label\" for=\"useUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useLower\"\n      name=\"useLower\"\n      formControlName=\"useLower\"\n    />\n    <label class=\"form-check-label\" for=\"useLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useNumbers\"\n      name=\"useNumbers\"\n      formControlName=\"useNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"useNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useSpecial\"\n      name=\"useSpecial\"\n      formControlName=\"useSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label>\n  </div>\n  <h3 class=\"mt-4\">{{ \"passphrase\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumberWords\">{{ \"minimumNumberOfWords\" | i18n }}</label>\n      <input\n        id=\"minNumberWords\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumberWords\"\n        min=\"3\"\n        max=\"20\"\n        formControlName=\"minNumberWords\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"capitalize\"\n      name=\"capitalize\"\n      formControlName=\"capitalize\"\n    />\n    <label class=\"form-check-label\" for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"includeNumber\"\n      name=\"includeNumber\"\n      formControlName=\"includeNumber\"\n    />\n    <label class=\"form-check-label\" for=\"includeNumber\">{{ \"includeNumber\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n  name = \"passwordGenerator\";\n  description = \"passwordGeneratorPolicyDesc\";\n  type = PolicyType.PasswordGenerator;\n  component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    defaultType: [null],\n    minLength: [null],\n    useUpper: [null],\n    useLower: [null],\n    useNumbers: [null],\n    useSpecial: [null],\n    minNumbers: [null],\n    minSpecial: [null],\n    minNumberWords: [null],\n    capitalize: [null],\n    includeNumber: [null],\n  });\n\n  defaultTypes: { name: string; value: string }[];\n\n  constructor(private formBuilder: UntypedFormBuilder, i18nService: I18nService) {\n    super();\n\n    this.defaultTypes = [\n      { name: i18nService.t(\"userPreference\"), value: null },\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n  name = \"personalOwnership\";\n  description = \"personalOwnershipPolicyDesc\";\n  type = PolicyType.PersonalOwnership;\n  component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-personal-ownership\",\n  templateUrl: \"personal-ownership.component.html\",\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"personalOwnershipExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class RequireSsoPolicy extends BasePolicy {\n  name = \"requireSso\";\n  description = \"requireSsoPolicyDesc\";\n  type = PolicyType.RequireSso;\n  component = RequireSsoPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useSso;\n  }\n}\n\n@Component({\n  selector: \"policy-require-sso\",\n  templateUrl: \"require-sso.component.html\",\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n<app-callout type=\"warning\">\n  {{ \"requireSsoExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<app-callout type=\"warning\">\n  {{ \"resetPasswordPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"resetPasswordPolicyAutoEnroll\" | i18n }}</h3>\n  <p>{{ \"resetPasswordPolicyAutoEnrollDescription\" | i18n }}</p>\n  <app-callout type=\"warning\">\n    {{ \"resetPasswordPolicyAutoEnrollWarning\" | i18n }}\n  </app-callout>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"autoEnrollEnabled\"\n      name=\"AutoEnrollEnabled\"\n      formControlName=\"autoEnrollEnabled\"\n    />\n    <label class=\"form-check-label\" for=\"autoEnrollEnabled\">\n      {{ \"resetPasswordPolicyAutoEnrollCheckbox\" | i18n }}\n    </label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class ResetPasswordPolicy extends BasePolicy {\n  name = \"resetPasswordPolicy\";\n  description = \"resetPasswordPolicyDescription\";\n  type = PolicyType.ResetPassword;\n  component = ResetPasswordPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useResetPassword;\n  }\n}\n\n@Component({\n  selector: \"policy-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    autoEnrollEnabled: false,\n  });\n\n  defaultTypes: { name: string; value: string }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private organizationService: OrganizationService\n  ) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SendOptionsPolicy extends BasePolicy {\n  name = \"sendOptions\";\n  description = \"sendOptionsPolicyDesc\";\n  type = PolicyType.SendOptions;\n  component = SendOptionsPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-send-options\",\n  templateUrl: \"send-options.component.html\",\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    disableHideEmail: false,\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder) {\n    super();\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"sendOptionsExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"disableHideEmail\"\n      name=\"DisableHideEmail\"\n      formControlName=\"disableHideEmail\"\n    />\n    <label class=\"form-check-label\" for=\"disableHideEmail\">{{ \"disableHideEmail\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SingleOrgPolicy extends BasePolicy {\n  name = \"singleOrg\";\n  description = \"singleOrgDesc\";\n  type = PolicyType.SingleOrg;\n  component = SingleOrgPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-single-org\",\n  templateUrl: \"single-org.component.html\",\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    if (!this.enabled.value) {\n      if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"requireSso\"))\n        );\n      }\n\n      if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"maximumVaultTimeoutLabel\"))\n        );\n      }\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"singleOrgPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n  name = \"twoStepLoginPolicyTitle\";\n  description = \"twoStepLoginPolicyDesc\";\n  type = PolicyType.TwoFactorAuthentication;\n  component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-two-factor-authentication\",\n  templateUrl: \"two-factor-authentication.component.html\",\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"twoStepLoginPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { DOCUMENT } from \"@angular/common\";\nimport { Component, Inject, NgZone, OnDestroy, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport * as jq from \"jquery\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\n\nimport { PolicyListService, RouterService } from \"./core\";\nimport { DisableSendPolicy } from \"./organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicy } from \"./organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicy } from \"./organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicy } from \"./organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicy } from \"./organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicy } from \"./organizations/policies/reset-password.component\";\nimport { SendOptionsPolicy } from \"./organizations/policies/send-options.component\";\nimport { SingleOrgPolicy } from \"./organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicy } from \"./organizations/policies/two-factor-authentication.component\";\n\nconst BroadcasterSubscriptionId = \"AppComponent\";\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  private lastActivity: number = null;\n  private idleTimer: number = null;\n  private isIdle = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private broadcasterService: BroadcasterService,\n    private folderService: InternalFolderService,\n    private settingsService: SettingsService,\n    private syncService: SyncService,\n    private passwordGenerationService: PasswordGenerationService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private router: Router,\n    private toastrService: ToastrService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    private vaultTimeoutService: VaultTimeoutService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private sanitizer: DomSanitizer,\n    private searchService: SearchService,\n    private notificationsService: NotificationsService,\n    private routerService: RouterService,\n    private stateService: StateService,\n    private eventService: EventService,\n    private policyService: InternalPolicyService,\n    protected policyListService: PolicyListService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    this.i18nService.locale$.pipe(takeUntil(this.destroy$)).subscribe((locale) => {\n      this.document.documentElement.lang = locale;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousemove = () => this.recordActivity();\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"loggedIn\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"loggedOut\":\n            this.routerService.setPreviousUrl(null);\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"unlocked\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"authBlocked\":\n            this.routerService.setPreviousUrl(message.url);\n            this.router.navigate([\"/\"]);\n            break;\n          case \"logout\":\n            this.logOut(!!message.expired);\n            break;\n          case \"lockVault\":\n            await this.vaultTimeoutService.lock();\n            break;\n          case \"locked\":\n            this.notificationsService.updateConnection(false);\n            this.router.navigate([\"lock\"]);\n            break;\n          case \"lockedUrl\":\n            this.routerService.setPreviousUrl(message.url);\n            break;\n          case \"syncStarted\":\n            break;\n          case \"syncCompleted\":\n            break;\n          case \"upgradeOrganization\": {\n            const upgradeConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"upgradeOrganizationDesc\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (upgradeConfirmed) {\n              this.router.navigate([\n                \"organizations\",\n                message.organizationId,\n                \"settings\",\n                \"billing\",\n              ]);\n            }\n            break;\n          }\n          case \"premiumRequired\": {\n            const premiumConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"premiumRequiredDesc\"),\n              this.i18nService.t(\"premiumRequired\"),\n              this.i18nService.t(\"upgrade\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (premiumConfirmed) {\n              this.router.navigate([\"settings/subscription/premium\"]);\n            }\n            break;\n          }\n          case \"emailVerificationRequired\": {\n            const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"emailVerificationRequiredDesc\"),\n              this.i18nService.t(\"emailVerificationRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (emailVerificationConfirmed) {\n              this.platformUtilsService.launchUri(\n                \"https://bitwarden.com/help/create-bitwarden-account/\"\n              );\n            }\n            break;\n          }\n          case \"showToast\":\n            this.showToast(message);\n            break;\n          case \"setFullWidth\":\n            this.setFullWidth();\n            break;\n          case \"convertAccountToKeyConnector\":\n            this.router.navigate([\"/remove-password\"]);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const modals = Array.from(document.querySelectorAll(\".modal\"));\n        for (const modal of modals) {\n          (jq(modal) as any).modal(\"hide\");\n        }\n\n        if (document.querySelector(\".swal-modal\") != null) {\n          Swal.close(undefined);\n        }\n      }\n    });\n\n    this.policyListService.addPolicies([\n      new TwoFactorAuthenticationPolicy(),\n      new MasterPasswordPolicy(),\n      new ResetPasswordPolicy(),\n      new PasswordGeneratorPolicy(),\n      new SingleOrgPolicy(),\n      new RequireSsoPolicy(),\n      new PersonalOwnershipPolicy(),\n      new DisableSendPolicy(),\n      new SendOptionsPolicy(),\n    ]);\n\n    this.setFullWidth();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n\n  private async logOut(expired: boolean) {\n    await this.eventService.uploadEvents();\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.eventService.clearEvents(),\n      this.syncService.setLastSync(new Date(0)),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n      this.keyConnectorService.clear(),\n    ]);\n\n    this.searchService.clearIndex();\n    this.authService.logOut(async () => {\n      if (expired) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          this.i18nService.t(\"loggedOut\"),\n          this.i18nService.t(\"loginExpired\")\n        );\n      }\n\n      await this.stateService.clean({ userId: userId });\n      Swal.close();\n      this.router.navigate([\"/\"]);\n    });\n  }\n\n  private async recordActivity() {\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    this.stateService.setLastActive(now);\n    // Idle states\n    if (this.isIdle) {\n      this.isIdle = false;\n      this.idleStateChanged();\n    }\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idleTimer = window.setTimeout(() => {\n      if (!this.isIdle) {\n        this.isIdle = true;\n        this.idleStateChanged();\n      }\n    }, IdleTimeout);\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private idleStateChanged() {\n    if (this.isIdle) {\n      this.notificationsService.disconnectFromInactivity();\n    } else {\n      this.notificationsService.reconnectFromActivity();\n    }\n  }\n\n  private async setFullWidth() {\n    const enableFullWidth = await this.stateService.getEnableFullWidth();\n    if (enableFullWidth) {\n      document.body.classList.add(\"full-width\");\n    } else {\n      document.body.classList.remove(\"full-width\");\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"src/app/organizations/policies/base-policy.component\";\n\nexport class DisablePersonalVaultExportPolicy extends BasePolicy {\n  name = \"disablePersonalVaultExport\";\n  description = \"disablePersonalVaultExportDesc\";\n  type = PolicyType.DisablePersonalVaultExport;\n  component = DisablePersonalVaultExportPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-personal-vault-export\",\n  templateUrl: \"disable-personal-vault-export.component.html\",\n})\nexport class DisablePersonalVaultExportPolicyComponent extends BasePolicyComponent {}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\n\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"src/app/organizations/policies/base-policy.component\";\n\nexport class MaximumVaultTimeoutPolicy extends BasePolicy {\n  name = \"maximumVaultTimeout\";\n  description = \"maximumVaultTimeoutDesc\";\n  type = PolicyType.MaximumVaultTimeout;\n  component = MaximumVaultTimeoutPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-maximum-timeout\",\n  templateUrl: \"maximum-vault-timeout.component.html\",\n})\nexport class MaximumVaultTimeoutPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    hours: [null],\n    minutes: [null],\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder, private i18nService: I18nService) {\n    super();\n  }\n\n  loadData() {\n    const minutes = this.policyResponse.data?.minutes;\n\n    if (minutes == null) {\n      return;\n    }\n\n    this.data.patchValue({\n      hours: Math.floor(minutes / 60),\n      minutes: minutes % 60,\n    });\n  }\n\n  buildRequestData() {\n    if (this.data.value.hours == null && this.data.value.minutes == null) {\n      return null;\n    }\n\n    return {\n      minutes: this.data.value.hours * 60 + this.data.value.minutes,\n    };\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    const data = this.buildRequestData();\n    if (data?.minutes == null || data?.minutes <= 0) {\n      throw new Error(this.i18nService.t(\"invalidMaximumVaultTimeout\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <label for=\"hours\">{{ \"maximumVaultTimeoutLabel\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AppComponent as BaseAppComponent } from \"src/app/app.component\";\n\nimport { DisablePersonalVaultExportPolicy } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicy } from \"./policies/maximum-vault-timeout.component\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"../../../../apps/web/src/app/app.component.html\",\n})\nexport class AppComponent extends BaseAppComponent {\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.policyListService.addPolicies([\n      new MaximumVaultTimeoutPolicy(),\n      new DisablePersonalVaultExportPolicy(),\n    ]);\n  }\n}\n","import { ScimProviderType } from \"@bitwarden/common/enums/scimProviderType\";\n\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class ScimConfigApi extends BaseResponse {\n  enabled: boolean;\n  scimProvider: ScimProviderType;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.scimProvider = this.getResponseProperty(\"ScimProvider\");\n  }\n}\n","import { ScimProviderType } from \"@bitwarden/common/enums/scimProviderType\";\n\nexport class ScimConfigRequest {\n  constructor(private enabled: boolean, private scimProvider: ScimProviderType = null) {}\n}\n","<div class=\"page-header\">\n  <h1>{{ \"scim\" | i18n }}</h1>\n</div>\n\n<p>{{ \"scimDescription\" | i18n }}</p>\n\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  [formGroup]=\"formData\"\n  *ngIf=\"!loading\"\n>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n        aria-describedby=\"scimEnabledCheckboxDescHelpText\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"scimEnabledCheckboxDesc\" | i18n }}</label>\n      <div id=\"scimEnabledCheckboxDescHelpText\">\n        <small class=\"form-text text-muted\">{{ \"scimEnabledCheckboxDescHelpText\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimUrl\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"endpointUrl\" />\n    <button\n      type=\"button\"\n      bitSuffix\n      bitButton\n      (click)=\"copyScimUrl()\"\n      [appA11yTitle]=\"'copyScimUrl' | i18n\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-clone\"></i>\n    </button>\n  </bit-form-field>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimApiKey\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"clientSecret\" />\n    <ng-container #rotateButton [appApiAction]=\"rotatePromise\">\n      <button\n        [disabled]=\"rotateButton.loading\"\n        type=\"button\"\n        bitSuffix\n        bitButton\n        (click)=\"rotateScimKey()\"\n        [appA11yTitle]=\"'rotateScimKey' | i18n\"\n      >\n        <i\n          aria-hidden=\"true\"\n          class=\"bwi bwi-lg bwi-generate\"\n          [ngClass]=\"{ 'bwi-spin': rotateButton.loading }\"\n        ></i>\n      </button>\n    </ng-container>\n    <button\n      type=\"button\"\n      bitSuffix\n      bitButton\n      (click)=\"copyScimKey()\"\n      [appA11yTitle]=\"'copyScimKey' | i18n\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-clone\"></i>\n    </button>\n    <bit-hint>{{ \"scimApiKeyHelperText\" | i18n }}</bit-hint>\n  </bit-form-field>\n\n  <bit-submit-button buttonType=\"primary\" [loading]=\"form.loading\" [disabled]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </bit-submit-button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { ScimConfigApi } from \"@bitwarden/common/models/api/scimConfigApi\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organizationApiKeyRequest\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organizationConnectionRequest\";\nimport { ScimConfigRequest } from \"@bitwarden/common/models/request/scimConfigRequest\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/apiKeyResponse\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organizationConnectionResponse\";\n\n@Component({\n  selector: \"app-org-manage-scim\",\n  templateUrl: \"scim.component.html\",\n})\nexport class ScimComponent implements OnInit {\n  loading = true;\n  organizationId: string;\n  existingConnectionId: string;\n  formPromise: Promise<OrganizationConnectionResponse<ScimConfigApi>>;\n  rotatePromise: Promise<ApiKeyResponse>;\n  enabled = new FormControl(false);\n  showScimSettings = false;\n\n  formData = this.formBuilder.group({\n    endpointUrl: new FormControl({ value: \"\", disabled: true }),\n    clientSecret: new FormControl({ value: \"\", disabled: true }),\n  });\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private environmentService: EnvironmentService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    const connection = await this.apiService.getOrganizationConnection(\n      this.organizationId,\n      OrganizationConnectionType.Scim,\n      ScimConfigApi\n    );\n    await this.setConnectionFormValues(connection);\n  }\n\n  async loadApiKey() {\n    const apiKeyRequest = new OrganizationApiKeyRequest();\n    apiKeyRequest.type = OrganizationApiKeyType.Scim;\n    apiKeyRequest.masterPasswordHash = \"N/A\";\n    const apiKeyResponse = await this.organizationApiService.getOrCreateApiKey(\n      this.organizationId,\n      apiKeyRequest\n    );\n    this.formData.setValue({\n      endpointUrl: this.getScimEndpointUrl(),\n      clientSecret: apiKeyResponse.apiKey,\n    });\n  }\n\n  async copyScimUrl() {\n    this.platformUtilsService.copyToClipboard(this.getScimEndpointUrl());\n  }\n\n  async rotateScimKey() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"rotateScimKeyWarning\"),\n      this.i18nService.t(\"rotateScimKey\"),\n      this.i18nService.t(\"rotateKey\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    const request = new OrganizationApiKeyRequest();\n    request.type = OrganizationApiKeyType.Scim;\n    request.masterPasswordHash = \"N/A\";\n\n    this.rotatePromise = this.organizationApiService.rotateApiKey(this.organizationId, request);\n\n    try {\n      const response = await this.rotatePromise;\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: response.apiKey,\n      });\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimApiKeyRotated\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.rotatePromise = null;\n  }\n\n  async copyScimKey() {\n    this.platformUtilsService.copyToClipboard(this.formData.get(\"clientSecret\").value);\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.organizationId,\n        OrganizationConnectionType.Scim,\n        true,\n        new ScimConfigRequest(this.enabled.value)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(request, ScimConfigApi);\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          ScimConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this.formPromise) as OrganizationConnectionResponse<ScimConfigApi>;\n      await this.setConnectionFormValues(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimSettingsSaved\"));\n    } catch (e) {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  getScimEndpointUrl() {\n    return this.environmentService.getScimUrl() + \"/\" + this.organizationId;\n  }\n\n  private async setConnectionFormValues(connection: OrganizationConnectionResponse<ScimConfigApi>) {\n    this.existingConnectionId = connection?.id;\n    if (connection !== null && connection.config?.enabled) {\n      this.showScimSettings = true;\n      this.enabled.setValue(true);\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: \"\",\n      });\n      await this.loadApiKey();\n    } else {\n      this.showScimSettings = false;\n      this.enabled.setValue(false);\n    }\n    this.loading = false;\n  }\n}\n","import { AbstractControl, ValidationErrors, Validators } from \"@angular/forms\";\n\n/**\n * Runs Validators.required on a field only if it's dirty. This prevents error messages from being displayed\n * to the user prematurely.\n */\nexport function dirtyRequired(control: AbstractControl): ValidationErrors | null {\n  return control.dirty ? Validators.required(control) : null;\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\n\nexport class OrganizationSsoRequest {\n  enabled = false;\n  data: SsoConfigApi;\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { SsoConfigApi } from \"../api/ssoConfigApi\";\n\nimport { View } from \"./view\";\n\nexport class SsoConfigView extends View {\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  openId: {\n    authority: string;\n    clientId: string;\n    clientSecret: string;\n    metadataAddress: string;\n    redirectBehavior: OpenIdConnectRedirectBehavior;\n    getClaimsFromUserInfoEndpoint: boolean;\n    additionalScopes: string;\n    additionalUserIdClaimTypes: string;\n    additionalEmailClaimTypes: string;\n    additionalNameClaimTypes: string;\n    acrValues: string;\n    expectedReturnAcrValue: string;\n  };\n\n  saml: {\n    spNameIdFormat: Saml2NameIdFormat;\n    spOutboundSigningAlgorithm: string;\n    spSigningBehavior: Saml2SigningBehavior;\n    spMinIncomingSigningAlgorithm: boolean;\n    spWantAssertionsSigned: boolean;\n    spValidateCertificates: boolean;\n\n    idpEntityId: string;\n    idpBindingType: Saml2BindingType;\n    idpSingleSignOnServiceUrl: string;\n    idpSingleLogoutServiceUrl: string;\n    idpX509PublicCert: string;\n    idpOutboundSigningAlgorithm: string;\n    idpAllowUnsolicitedAuthnResponse: boolean;\n    idpAllowOutboundLogoutRequests: boolean;\n    idpWantAuthnRequestsSigned: boolean;\n  };\n\n  constructor(api: SsoConfigApi) {\n    super();\n    if (api == null) {\n      return;\n    }\n\n    this.configType = api.configType;\n\n    this.keyConnectorEnabled = api.keyConnectorEnabled;\n    this.keyConnectorUrl = api.keyConnectorUrl;\n\n    if (this.configType === SsoType.OpenIdConnect) {\n      this.openId = {\n        authority: api.authority,\n        clientId: api.clientId,\n        clientSecret: api.clientSecret,\n        metadataAddress: api.metadataAddress,\n        redirectBehavior: api.redirectBehavior,\n        getClaimsFromUserInfoEndpoint: api.getClaimsFromUserInfoEndpoint,\n        additionalScopes: api.additionalScopes,\n        additionalUserIdClaimTypes: api.additionalUserIdClaimTypes,\n        additionalEmailClaimTypes: api.additionalEmailClaimTypes,\n        additionalNameClaimTypes: api.additionalNameClaimTypes,\n        acrValues: api.acrValues,\n        expectedReturnAcrValue: api.expectedReturnAcrValue,\n      };\n    } else if (this.configType === SsoType.Saml2) {\n      this.saml = {\n        spNameIdFormat: api.spNameIdFormat,\n        spOutboundSigningAlgorithm: api.spOutboundSigningAlgorithm,\n        spSigningBehavior: api.spSigningBehavior,\n        spMinIncomingSigningAlgorithm: api.spMinIncomingSigningAlgorithm,\n        spWantAssertionsSigned: api.spWantAssertionsSigned,\n        spValidateCertificates: api.spValidateCertificates,\n\n        idpEntityId: api.idpEntityId,\n        idpBindingType: api.idpBindingType,\n        idpSingleSignOnServiceUrl: api.idpSingleSignOnServiceUrl,\n        idpSingleLogoutServiceUrl: api.idpSingleLogoutServiceUrl,\n        idpX509PublicCert: api.idpX509PublicCert,\n        idpOutboundSigningAlgorithm: api.idpOutboundSigningAlgorithm,\n        idpAllowUnsolicitedAuthnResponse: api.idpAllowUnsolicitedAuthnResponse,\n        idpWantAuthnRequestsSigned: api.idpWantAuthnRequestsSigned,\n\n        // Value is inverted in the view model (allow instead of disable)\n        idpAllowOutboundLogoutRequests:\n          api.idpDisableOutboundLogoutRequests == null\n            ? null\n            : !api.idpDisableOutboundLogoutRequests,\n      };\n    }\n  }\n}\n","export class View {}\n","import { Directive, ElementRef, OnDestroy, OnInit } from \"@angular/core\";\nimport { NgControl } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\n\n@Directive({\n  selector: \"[appA11yInvalid]\",\n})\nexport class A11yInvalidDirective implements OnDestroy, OnInit {\n  private sub: Subscription;\n\n  constructor(private el: ElementRef<HTMLInputElement>, private formControlDirective: NgControl) {}\n\n  ngOnInit() {\n    this.sub = this.formControlDirective.control.statusChanges.subscribe((status) => {\n      if (status === \"INVALID\") {\n        this.el.nativeElement.setAttribute(\"aria-invalid\", \"true\");\n      } else if (status === \"VALID\") {\n        this.el.nativeElement.setAttribute(\"aria-invalid\", \"false\");\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub?.unsubscribe();\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"input[appInputStripSpaces]\",\n})\nexport class InputStripSpacesDirective {\n  constructor(private el: ElementRef<HTMLInputElement>) {}\n\n  @HostListener(\"input\") onInput() {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/ /g, \"\");\n  }\n}\n","import { Directive, Input, OnInit, Self } from \"@angular/core\";\nimport { ControlValueAccessor, UntypedFormControl, NgControl, Validators } from \"@angular/forms\";\n\nimport { dirtyRequired } from \"@bitwarden/angular/validators/dirty.validator\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Directive()\nexport abstract class BaseCvaComponent implements ControlValueAccessor, OnInit {\n  get describedById() {\n    return this.showDescribedBy ? this.controlId + \"Desc\" : null;\n  }\n\n  get showDescribedBy() {\n    return this.helperText != null || this.controlDir.control.hasError(\"required\");\n  }\n\n  get isRequired() {\n    return (\n      this.controlDir.control.hasValidator(Validators.required) ||\n      this.controlDir.control.hasValidator(dirtyRequired)\n    );\n  }\n\n  @Input() label: string;\n  @Input() controlId: string;\n  @Input() helperText: string;\n\n  internalControl = new UntypedFormControl(\"\");\n\n  protected onChange: any;\n  protected onTouched: any;\n\n  constructor(@Self() public controlDir: NgControl) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit() {\n    this.internalControl.valueChanges.subscribe(this.onValueChangesInternal);\n  }\n\n  onBlurInternal() {\n    this.onTouched();\n  }\n\n  // CVA interfaces\n  writeValue(value: string) {\n    this.internalControl.setValue(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.internalControl.disable();\n    } else {\n      this.internalControl.enable();\n    }\n  }\n\n  protected onValueChangesInternal: any = (value: string) => this.onChange(value);\n  // End CVA interfaces\n}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [attr.id]=\"controlId\"\n      [attr.aria-describedby]=\"describedById\"\n      [formControl]=\"internalControl\"\n      (blur)=\"onBlurInternal()\"\n    />\n    <label class=\"form-check-label\" [attr.for]=\"controlId\">{{ label }}</label>\n  </div>\n  <small *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\" class=\"form-text text-muted\">{{\n    helperText\n  }}</small>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-checkbox\",\n  templateUrl: \"input-checkbox.component.html\",\n})\nexport class InputCheckboxComponent extends BaseCvaComponent {}\n","<div class=\"form-group\">\n  <label [attr.for]=\"controlId\">\n    {{ label }}\n    <small *ngIf=\"isRequired\" class=\"text-muted form-text d-inline\"\n      >({{ \"required\" | i18n }})</small\n    >\n  </label>\n  <input\n    [formControl]=\"internalControl\"\n    class=\"form-control\"\n    [attr.id]=\"controlId\"\n    [attr.aria-describedby]=\"describedById\"\n    [attr.aria-invalid]=\"controlDir.control.invalid\"\n    (blur)=\"onBlurInternal()\"\n  />\n  <div *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\">\n    <small\n      *ngIf=\"helperText != null && !controlDir.control.hasError(helperTextSameAsError)\"\n      class=\"form-text text-muted\"\n    >\n      {{ helperText }}\n    </small>\n    <small class=\"error-inline\" *ngIf=\"controlDir.control.hasError('required')\" role=\"alert\">\n      <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n      {{\n        controlDir.control.hasError(helperTextSameAsError)\n          ? helperText\n          : (\"fieldRequiredError\" | i18n: label)\n      }}\n    </small>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-text[label][controlId]\",\n  templateUrl: \"input-text.component.html\",\n})\nexport class InputTextComponent extends BaseCvaComponent implements OnInit {\n  @Input() helperTextSameAsError: string;\n  @Input() requiredErrorMessage: string;\n  @Input() stripSpaces = false;\n\n  transformValue: (value: string) => string = null;\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.stripSpaces) {\n      this.transformValue = this.doStripSpaces;\n    }\n  }\n\n  writeValue(value: string) {\n    this.internalControl.setValue(value == null ? \"\" : value);\n  }\n\n  protected onValueChangesInternal: any = (value: string) => {\n    let newValue = value;\n    if (this.transformValue != null) {\n      newValue = this.transformValue(value);\n      this.internalControl.setValue(newValue, { emitEvent: false });\n    }\n    this.onChange(newValue);\n  };\n\n  protected onValueChangeInternal(value: string) {\n    let newValue = value;\n    if (this.transformValue != null) {\n      newValue = this.transformValue(value);\n      this.internalControl.setValue(newValue, { emitEvent: false });\n    }\n  }\n\n  private doStripSpaces(value: string) {\n    return value.replace(/ /g, \"\");\n  }\n}\n","<div class=\"form-group\">\n  <label>{{ label }}</label>\n  <div class=\"input-group\">\n    <input class=\"form-control\" readonly [value]=\"controlValue\" />\n    <div class=\"input-group-append\" *ngIf=\"showLaunch\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        appA11yTitle=\"{{ 'launch' | i18n }}\"\n        (click)=\"launchUri(controlValue)\"\n      >\n        <i class=\"bwi bwi-lg bwi-external-link\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"input-group-append\" *ngIf=\"showCopy\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n        (click)=\"copy(controlValue)\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-text-readonly\",\n  templateUrl: \"input-text-readonly.component.html\",\n})\nexport class InputTextReadOnlyComponent {\n  @Input() controlValue: string;\n  @Input() label: string;\n  @Input() showCopy = true;\n  @Input() showLaunch = false;\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  copy(value: string) {\n    this.platformUtilsService.copyToClipboard(value);\n  }\n\n  launchUri(url: string) {\n    this.platformUtilsService.launchUri(url);\n  }\n}\n","<div class=\"form-group\">\n  <label [attr.for]=\"controlId\">\n    {{ label }}\n    <small *ngIf=\"isRequired\" class=\"text-muted form-text d-inline\"\n      >({{ \"required\" | i18n }})</small\n    >\n  </label>\n  <select\n    class=\"form-control\"\n    [attr.id]=\"controlId\"\n    [attr.aria-invalid]=\"controlDir.control.invalid\"\n    [formControl]=\"internalControl\"\n    (blur)=\"onBlurInternal()\"\n  >\n    <option *ngFor=\"let o of selectOptions\" [ngValue]=\"o.value\" disabled=\"{{ o.disabled }}\">\n      {{ o.name }}\n    </option>\n  </select>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-select\",\n  templateUrl: \"select.component.html\",\n})\nexport class SelectComponent extends BaseCvaComponent {\n  @Input() selectOptions: SelectOptions[];\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"singleSignOn\" | i18n }}</h1>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [formGroup]=\"ssoConfigForm\"\n  [appApiAction]=\"formPromise\"\n  *ngIf=\"!loading\"\n>\n  <p>\n    {{ \"ssoPolicyHelpStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"ssoPolicyHelpLink\" | i18n }}</a>\n    {{ \"ssoPolicyHelpEnd\" | i18n }}\n    <br />\n    {{ \"ssoPolicyHelpKeyConnector\" | i18n }}\n  </p>\n\n  <!-- Root form -->\n  <ng-container>\n    <app-input-checkbox\n      controlId=\"enabled\"\n      [formControl]=\"enabled\"\n      [label]=\"'allowSso' | i18n\"\n      [helperText]=\"'allowSsoDesc' | i18n\"\n    ></app-input-checkbox>\n\n    <div class=\"form-group\">\n      <label>{{ \"memberDecryptionOption\" | i18n }}</label>\n      <div class=\"form-check form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionPass\"\n          [value]=\"false\"\n          formControlName=\"keyConnectorEnabled\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionPass\">\n          {{ \"masterPass\" | i18n }}\n          <small>{{ \"memberDecryptionPassDesc\" | i18n }}</small>\n        </label>\n      </div>\n      <div class=\"form-check mt-2 form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionKey\"\n          [value]=\"true\"\n          formControlName=\"keyConnectorEnabled\"\n          [attr.disabled]=\"!organization.useKeyConnector || null\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionKey\">\n          {{ \"keyConnector\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/about-key-connector/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n          <small>{{ \"memberDecryptionKeyConnectorDesc\" | i18n }}</small>\n        </label>\n      </div>\n    </div>\n\n    <!-- Key Connector -->\n    <ng-container *ngIf=\"ssoConfigForm.get('keyConnectorEnabled').value\">\n      <app-callout type=\"warning\" [useAlertRole]=\"true\">\n        {{ \"keyConnectorWarning\" | i18n }}\n      </app-callout>\n\n      <div class=\"form-group\">\n        <label for=\"keyConnectorUrl\">\n          {{ \"keyConnectorUrl\" | i18n }}\n          <small class=\"text-muted form-text d-inline\">({{ \"required\" | i18n }})</small>\n        </label>\n        <div class=\"input-group\">\n          <input\n            class=\"form-control\"\n            formControlName=\"keyConnectorUrl\"\n            id=\"keyConnectorUrl\"\n            aria-describedby=\"keyConnectorUrlDesc\"\n            (change)=\"haveTestedKeyConnector = false\"\n            appInputStripSpaces\n            appA11yInvalid\n          />\n          <div class=\"input-group-append\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              (click)=\"validateKeyConnectorUrl()\"\n              [disabled]=\"!enableTestKeyConnector\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n                *ngIf=\"keyConnectorUrl.pending\"\n              ></i>\n              <span *ngIf=\"!keyConnectorUrl.pending\">\n                {{ \"keyConnectorTest\" | i18n }}\n              </span>\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"haveTestedKeyConnector\" id=\"keyConnectorUrlDesc\" aria-live=\"polite\">\n          <small\n            class=\"error-inline\"\n            *ngIf=\"keyConnectorUrl.hasError('invalidUrl'); else keyConnectorSuccess\"\n          >\n            <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n            {{ \"keyConnectorTestFail\" | i18n }}\n          </small>\n          <ng-template #keyConnectorSuccess>\n            <small class=\"text-success\">\n              <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n              {{ \"keyConnectorTestSuccess\" | i18n }}\n            </small>\n          </ng-template>\n        </div>\n      </div>\n    </ng-container>\n\n    <app-select\n      controlId=\"type\"\n      [label]=\"'type' | i18n\"\n      [selectOptions]=\"ssoTypeOptions\"\n      formControlName=\"configType\"\n    >\n    </app-select>\n  </ng-container>\n\n  <!-- OIDC -->\n  <div\n    *ngIf=\"ssoConfigForm.get('configType').value === ssoType.OpenIdConnect\"\n    [formGroup]=\"openIdForm\"\n  >\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"openIdConnectConfig\" | i18n }}</h2>\n\n      <app-input-text-readonly\n        [label]=\"'callbackPath' | i18n\"\n        [controlValue]=\"callbackPath\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'signedOutCallbackPath' | i18n\"\n        [controlValue]=\"signedOutCallbackPath\"\n      ></app-input-text-readonly>\n\n      <app-input-text\n        [label]=\"'authority' | i18n\"\n        controlId=\"authority\"\n        [stripSpaces]=\"true\"\n        formControlName=\"authority\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'clientId' | i18n\"\n        controlId=\"clientId\"\n        [stripSpaces]=\"true\"\n        formControlName=\"clientId\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'clientSecret' | i18n\"\n        controlId=\"clientSecret\"\n        [stripSpaces]=\"true\"\n        formControlName=\"clientSecret\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'metadataAddress' | i18n\"\n        controlId=\"metadataAddress\"\n        [stripSpaces]=\"true\"\n        [helperText]=\"'openIdAuthorityRequired' | i18n\"\n        formControlName=\"metadataAddress\"\n      ></app-input-text>\n\n      <app-select\n        controlId=\"redirectBehavior\"\n        [label]=\"'oidcRedirectBehavior' | i18n\"\n        [selectOptions]=\"connectRedirectOptions\"\n        formControlName=\"redirectBehavior\"\n      >\n      </app-select>\n\n      <app-input-checkbox\n        controlId=\"getClaimsFromUserInfoEndpoint\"\n        formControlName=\"getClaimsFromUserInfoEndpoint\"\n        [label]=\"'getClaimsFromUserInfoEndpoint' | i18n\"\n      ></app-input-checkbox>\n\n      <!-- Optional customizations -->\n      <div\n        class=\"section-header d-flex flex-row align-items-center mt-3 mb-3\"\n        (click)=\"toggleOpenIdCustomizations()\"\n      >\n        <h3 class=\"mb-0 mr-2\" id=\"customizations-header\">\n          {{ \"openIdOptionalCustomizations\" | i18n }}\n        </h3>\n        <button\n          class=\"mb-1 btn btn-link\"\n          type=\"button\"\n          appStopClick\n          role=\"button\"\n          aria-controls=\"customizations\"\n          [attr.aria-expanded]=\"showOpenIdCustomizations\"\n          aria-labelledby=\"customizations-header\"\n        >\n          <i\n            class=\"bwi\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-down': !showOpenIdCustomizations,\n              'bwi-chevron-up': showOpenIdCustomizations\n            }\"\n          ></i>\n        </button>\n      </div>\n      <div id=\"customizations\" [hidden]=\"!showOpenIdCustomizations\">\n        <app-input-text\n          [label]=\"'additionalScopes' | i18n\"\n          controlId=\"additionalScopes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalScopes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalUserIdClaimTypes' | i18n\"\n          controlId=\"additionalUserIdClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalUserIdClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalEmailClaimTypes' | i18n\"\n          controlId=\"additionalEmailClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalEmailClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalNameClaimTypes' | i18n\"\n          controlId=\"additionalNameClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalNameClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'acrValues' | i18n\"\n          controlId=\"acrValues\"\n          helperText=\"acr_values\"\n          formControlName=\"acrValues\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'expectedReturnAcrValue' | i18n\"\n          controlId=\"expectedReturnAcrValue\"\n          helperText=\"acr_validation\"\n          formControlName=\"expectedReturnAcrValue\"\n        ></app-input-text>\n      </div>\n    </div>\n  </div>\n\n  <!-- SAML2 SP -->\n  <div *ngIf=\"ssoConfigForm.get('configType').value === ssoType.Saml2\" [formGroup]=\"samlForm\">\n    <!-- SAML2 SP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlSpConfig\" | i18n }}</h2>\n\n      <app-input-text-readonly\n        [label]=\"'spEntityId' | i18n\"\n        [controlValue]=\"spEntityId\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'spMetadataUrl' | i18n\"\n        [controlValue]=\"spMetadataUrl\"\n        [showLaunch]=\"true\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'spAcsUrl' | i18n\"\n        [controlValue]=\"spAcsUrl\"\n      ></app-input-text-readonly>\n\n      <app-select\n        controlId=\"spNameIdFormat\"\n        [label]=\"'spNameIdFormat' | i18n\"\n        [selectOptions]=\"saml2NameIdFormatOptions\"\n        formControlName=\"spNameIdFormat\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spOutboundSigningAlgorithm\"\n        [label]=\"'spOutboundSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"spOutboundSigningAlgorithm\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spSigningBehavior\"\n        [label]=\"'spSigningBehavior' | i18n\"\n        [selectOptions]=\"saml2SigningBehaviourOptions\"\n        formControlName=\"spSigningBehavior\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spMinIncomingSigningAlgorithm\"\n        [label]=\"'spMinIncomingSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"spMinIncomingSigningAlgorithm\"\n      >\n      </app-select>\n\n      <app-input-checkbox\n        controlId=\"spWantAssertionsSigned\"\n        formControlName=\"spWantAssertionsSigned\"\n        [label]=\"'spWantAssertionsSigned' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"spValidateCertificates\"\n        formControlName=\"spValidateCertificates\"\n        [label]=\"'spValidateCertificates' | i18n\"\n      ></app-input-checkbox>\n    </div>\n\n    <!-- SAML2 IDP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlIdpConfig\" | i18n }}</h2>\n\n      <app-input-text\n        [label]=\"'idpEntityId' | i18n\"\n        controlId=\"idpEntityId\"\n        formControlName=\"idpEntityId\"\n      ></app-input-text>\n\n      <app-select\n        controlId=\"idpBindingType\"\n        [label]=\"'idpBindingType' | i18n\"\n        [selectOptions]=\"saml2BindingTypeOptions\"\n        formControlName=\"idpBindingType\"\n      >\n      </app-select>\n\n      <app-input-text\n        [label]=\"'idpSingleSignOnServiceUrl' | i18n\"\n        controlId=\"idpSingleSignOnServiceUrl\"\n        [helperText]=\"'idpSingleSignOnServiceUrlRequired' | i18n\"\n        [stripSpaces]=\"true\"\n        formControlName=\"idpSingleSignOnServiceUrl\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'idpSingleLogoutServiceUrl' | i18n\"\n        controlId=\"idpSingleLogoutServiceUrl\"\n        [stripSpaces]=\"true\"\n        formControlName=\"idpSingleLogoutServiceUrl\"\n      ></app-input-text>\n\n      <div class=\"form-group\">\n        <label for=\"idpX509PublicCert\">\n          {{ \"idpX509PublicCert\" | i18n }}\n          <small class=\"text-muted form-text d-inline\">({{ \"required\" | i18n }})</small>\n        </label>\n        <textarea\n          formControlName=\"idpX509PublicCert\"\n          class=\"form-control form-control-sm text-monospace\"\n          rows=\"6\"\n          id=\"idpX509PublicCert\"\n          appA11yInvalid\n          aria-describedby=\"idpX509PublicCertDesc\"\n        ></textarea>\n        <small\n          id=\"idpX509PublicCertDesc\"\n          class=\"error-inline\"\n          role=\"alert\"\n          *ngIf=\"samlForm.get('idpX509PublicCert').hasError('required')\"\n        >\n          <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n          {{ \"fieldRequiredError\" | i18n: (\"idpX509PublicCert\" | i18n) }}\n        </small>\n      </div>\n\n      <app-select\n        controlId=\"idpOutboundSigningAlgorithm\"\n        [label]=\"'idpOutboundSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"idpOutboundSigningAlgorithm\"\n      >\n      </app-select>\n\n      <!--TODO: Uncomment once Unsolicited IdP Response is supported-->\n      <!-- <app-input-checkbox\n        controlId=\"idpAllowUnsolicitedAuthnResponse\"\n        formControlName=\"idpAllowUnsolicitedAuthnResponse\"\n        [label]=\"'idpAllowUnsolicitedAuthnResponse' | i18n\"\n      ></app-input-checkbox> -->\n\n      <app-input-checkbox\n        controlId=\"idpAllowOutboundLogoutRequests\"\n        formControlName=\"idpAllowOutboundLogoutRequests\"\n        [label]=\"'idpAllowOutboundLogoutRequests' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"idpWantAuthnRequestsSigned\"\n        formControlName=\"idpWantAuthnRequestsSigned\"\n        [label]=\"'idpSignAuthenticationRequests' | i18n\"\n      ></app-input-checkbox>\n    </div>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <div\n    id=\"errorSummary\"\n    class=\"error-summary text-danger\"\n    *ngIf=\"this.getErrorCount(ssoConfigForm) as errorCount\"\n  >\n    <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n    {{\n      (errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\") | i18n: errorCount\n    }}\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, UntypedFormGroup } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\nimport { dirtyRequired } from \"@bitwarden/angular/validators/dirty.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"@bitwarden/common/enums/ssoEnums\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SsoConfigApi } from \"@bitwarden/common/models/api/ssoConfigApi\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSsoRequest } from \"@bitwarden/common/models/request/organization/organizationSsoRequest\";\nimport { OrganizationSsoResponse } from \"@bitwarden/common/models/response/organization/organizationSsoResponse\";\nimport { SsoConfigView } from \"@bitwarden/common/models/view/ssoConfigView\";\n\nconst defaultSigningAlgorithm = \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\";\n\n@Component({\n  selector: \"app-org-manage-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent implements OnInit {\n  readonly ssoType = SsoType;\n\n  readonly ssoTypeOptions: SelectOptions[] = [\n    { name: this.i18nService.t(\"selectType\"), value: SsoType.None, disabled: true },\n    { name: \"OpenID Connect\", value: SsoType.OpenIdConnect },\n    { name: \"SAML 2.0\", value: SsoType.Saml2 },\n  ];\n\n  readonly samlSigningAlgorithms = [\n    \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha384\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha512\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\n  ];\n\n  readonly saml2SigningBehaviourOptions: SelectOptions[] = [\n    {\n      name: \"If IdP Wants Authn Requests Signed\",\n      value: Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned,\n    },\n    { name: \"Always\", value: Saml2SigningBehavior.Always },\n    { name: \"Never\", value: Saml2SigningBehavior.Never },\n  ];\n  readonly saml2BindingTypeOptions: SelectOptions[] = [\n    { name: \"Redirect\", value: Saml2BindingType.HttpRedirect },\n    { name: \"HTTP POST\", value: Saml2BindingType.HttpPost },\n  ];\n  readonly saml2NameIdFormatOptions: SelectOptions[] = [\n    { name: \"Not Configured\", value: Saml2NameIdFormat.NotConfigured },\n    { name: \"Unspecified\", value: Saml2NameIdFormat.Unspecified },\n    { name: \"Email Address\", value: Saml2NameIdFormat.EmailAddress },\n    { name: \"X.509 Subject Name\", value: Saml2NameIdFormat.X509SubjectName },\n    { name: \"Windows Domain Qualified Name\", value: Saml2NameIdFormat.WindowsDomainQualifiedName },\n    { name: \"Kerberos Principal Name\", value: Saml2NameIdFormat.KerberosPrincipalName },\n    { name: \"Entity Identifier\", value: Saml2NameIdFormat.EntityIdentifier },\n    { name: \"Persistent\", value: Saml2NameIdFormat.Persistent },\n    { name: \"Transient\", value: Saml2NameIdFormat.Transient },\n  ];\n\n  readonly connectRedirectOptions: SelectOptions[] = [\n    { name: \"Redirect GET\", value: OpenIdConnectRedirectBehavior.RedirectGet },\n    { name: \"Form POST\", value: OpenIdConnectRedirectBehavior.FormPost },\n  ];\n\n  showOpenIdCustomizations = false;\n\n  loading = true;\n  haveTestedKeyConnector = false;\n  organizationId: string;\n  organization: Organization;\n  formPromise: Promise<OrganizationSsoResponse>;\n\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  enabled = this.formBuilder.control(false);\n\n  openIdForm = this.formBuilder.group(\n    {\n      authority: [\"\", dirtyRequired],\n      clientId: [\"\", dirtyRequired],\n      clientSecret: [\"\", dirtyRequired],\n      metadataAddress: [],\n      redirectBehavior: [OpenIdConnectRedirectBehavior.RedirectGet, dirtyRequired],\n      getClaimsFromUserInfoEndpoint: [],\n      additionalScopes: [],\n      additionalUserIdClaimTypes: [],\n      additionalEmailClaimTypes: [],\n      additionalNameClaimTypes: [],\n      acrValues: [],\n      expectedReturnAcrValue: [],\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  samlForm = this.formBuilder.group(\n    {\n      spNameIdFormat: [Saml2NameIdFormat.NotConfigured],\n      spOutboundSigningAlgorithm: [defaultSigningAlgorithm],\n      spSigningBehavior: [Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned],\n      spMinIncomingSigningAlgorithm: [defaultSigningAlgorithm],\n      spWantAssertionsSigned: [],\n      spValidateCertificates: [],\n\n      idpEntityId: [\"\", dirtyRequired],\n      idpBindingType: [Saml2BindingType.HttpRedirect],\n      idpSingleSignOnServiceUrl: [],\n      idpSingleLogoutServiceUrl: [],\n      idpX509PublicCert: [\"\", dirtyRequired],\n      idpOutboundSigningAlgorithm: [defaultSigningAlgorithm],\n      idpAllowUnsolicitedAuthnResponse: [],\n      idpAllowOutboundLogoutRequests: [true],\n      idpWantAuthnRequestsSigned: [],\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  ssoConfigForm = this.formBuilder.group({\n    configType: [SsoType.None],\n    keyConnectorEnabled: [false],\n    keyConnectorUrl: [\"\"],\n    openId: this.openIdForm,\n    saml: this.samlForm,\n  });\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.ssoConfigForm.get(\"configType\").valueChanges.subscribe((newType: SsoType) => {\n      if (newType === SsoType.OpenIdConnect) {\n        this.openIdForm.enable();\n        this.samlForm.disable();\n      } else if (newType === SsoType.Saml2) {\n        this.openIdForm.disable();\n        this.samlForm.enable();\n      } else {\n        this.openIdForm.disable();\n        this.samlForm.disable();\n      }\n    });\n\n    this.samlForm\n      .get(\"spSigningBehavior\")\n      .valueChanges.subscribe(() =>\n        this.samlForm.get(\"idpX509PublicCert\").updateValueAndValidity()\n      );\n\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    const ssoSettings = await this.organizationApiService.getSso(this.organizationId);\n    this.populateForm(ssoSettings);\n\n    this.callbackPath = ssoSettings.urls.callbackPath;\n    this.signedOutCallbackPath = ssoSettings.urls.signedOutCallbackPath;\n    this.spEntityId = ssoSettings.urls.spEntityId;\n    this.spMetadataUrl = ssoSettings.urls.spMetadataUrl;\n    this.spAcsUrl = ssoSettings.urls.spAcsUrl;\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.validateForm(this.ssoConfigForm);\n\n    if (this.ssoConfigForm.get(\"keyConnectorEnabled\").value) {\n      await this.validateKeyConnectorUrl();\n    }\n\n    if (!this.ssoConfigForm.valid) {\n      this.readOutErrors();\n      return;\n    }\n\n    const request = new OrganizationSsoRequest();\n    request.enabled = this.enabled.value;\n    request.data = SsoConfigApi.fromView(this.ssoConfigForm.value as SsoConfigView);\n\n    this.formPromise = this.organizationApiService.updateSso(this.organizationId, request);\n\n    try {\n      const response = await this.formPromise;\n      this.populateForm(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"ssoSettingsSaved\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  async validateKeyConnectorUrl() {\n    if (this.haveTestedKeyConnector) {\n      return;\n    }\n\n    this.keyConnectorUrl.markAsPending();\n\n    try {\n      await this.apiService.getKeyConnectorAlive(this.keyConnectorUrl.value);\n      this.keyConnectorUrl.updateValueAndValidity();\n    } catch {\n      this.keyConnectorUrl.setErrors({\n        invalidUrl: true,\n      });\n    }\n\n    this.haveTestedKeyConnector = true;\n  }\n\n  toggleOpenIdCustomizations() {\n    this.showOpenIdCustomizations = !this.showOpenIdCustomizations;\n  }\n\n  getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n\n  get enableTestKeyConnector() {\n    return (\n      this.ssoConfigForm.get(\"keyConnectorEnabled\").value &&\n      !Utils.isNullOrWhitespace(this.keyConnectorUrl?.value)\n    );\n  }\n\n  get keyConnectorUrl() {\n    return this.ssoConfigForm.get(\"keyConnectorUrl\");\n  }\n\n  get samlSigningAlgorithmOptions(): SelectOptions[] {\n    return this.samlSigningAlgorithms.map((algorithm) => ({ name: algorithm, value: algorithm }));\n  }\n\n  private validateForm(form: UntypedFormGroup) {\n    Object.values(form.controls).forEach((control: AbstractControl) => {\n      if (control.disabled) {\n        return;\n      }\n\n      if (control instanceof UntypedFormGroup) {\n        this.validateForm(control);\n      } else {\n        control.markAsDirty();\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  private populateForm(ssoSettings: OrganizationSsoResponse) {\n    this.enabled.setValue(ssoSettings.enabled);\n    if (ssoSettings.data != null) {\n      const ssoConfigView = new SsoConfigView(ssoSettings.data);\n      this.ssoConfigForm.patchValue(ssoConfigView);\n    }\n  }\n\n  private readOutErrors() {\n    const errorText = this.i18nService.t(\"error\");\n    const errorCount = this.getErrorCount(this.ssoConfigForm);\n    const errorCountText = this.i18nService.t(\n      errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\",\n      errorCount.toString()\n    );\n\n    const div = document.createElement(\"div\");\n    div.className = \"sr-only\";\n    div.id = \"srErrorCount\";\n    div.setAttribute(\"aria-live\", \"polite\");\n    div.innerText = errorText + \": \" + errorCountText;\n\n    const existing = document.getElementById(\"srErrorCount\");\n    if (existing != null) {\n      existing.remove();\n    }\n\n    document.body.append(div);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"src/app/organizations/guards/org-permissions.guard\";\nimport { OrganizationLayoutComponent } from \"src/app/organizations/layouts/organization-layout.component\";\nimport { ManageComponent } from \"src/app/organizations/manage/manage.component\";\nimport { canAccessManageTab } from \"src/app/organizations/navigation-permissions\";\n\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\n\nconst routes: Routes = [\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    children: [\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessManageTab,\n        },\n        children: [\n          {\n            path: \"sso\",\n            component: SsoComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageSso,\n            },\n          },\n          {\n            path: \"scim\",\n            component: ScimComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageScim,\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"src/app/shared/shared.module\";\n\nimport { InputCheckboxComponent } from \"./components/input-checkbox.component\";\nimport { InputTextReadOnlyComponent } from \"./components/input-text-readonly.component\";\nimport { InputTextComponent } from \"./components/input-text.component\";\nimport { SelectComponent } from \"./components/select.component\";\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\nimport { OrganizationsRoutingModule } from \"./organizations-routing.module\";\n\n// Form components are for use in the SSO Configuration Form only and should not be exported for use elsewhere.\n// They will be deprecated by the Component Library.\n@NgModule({\n  imports: [SharedModule, OrganizationsRoutingModule],\n  declarations: [\n    InputCheckboxComponent,\n    InputTextComponent,\n    InputTextReadOnlyComponent,\n    SelectComponent,\n    SsoComponent,\n    ScimComponent,\n  ],\n})\nexport class OrganizationsModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\n\nimport { CoreModule } from \"src/app/core\";\nimport { OssRoutingModule } from \"src/app/oss-routing.module\";\nimport { OssModule } from \"src/app/oss.module\";\nimport { WildcardRoutingModule } from \"src/app/wildcard-routing.module\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { OrganizationsModule } from \"./organizations/organizations.module\";\nimport { DisablePersonalVaultExportPolicyComponent } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicyComponent } from \"./policies/maximum-vault-timeout.component\";\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    OssModule,\n    JslibModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    InfiniteScrollModule,\n    DragDropModule,\n    AppRoutingModule,\n    OssRoutingModule,\n    OrganizationsModule, // Must be after OssRoutingModule for competing routes to resolve properly\n    RouterModule,\n    WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n  ],\n  declarations: [\n    AppComponent,\n    DisablePersonalVaultExportPolicyComponent,\n    MaximumVaultTimeoutPolicyComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport \"bootstrap\";\nimport \"jquery\";\nimport \"popper.js\";\n\nrequire(\"src/scss/styles.scss\");\nrequire(\"src/scss/tailwind.css\");\n\nimport { AppModule } from \"./app/app.module\";\n\nif (process.env.NODE_ENV === \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: Utils.isNullOrWhitespace(secret) ? null : secret,\n    });\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Mir: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 17, blocks: [5, 4, 4, 4] },\n    { cardLength: 18, blocks: [6, 4, 4, 4] },\n    { cardLength: 19, blocks: [7, 4, 4, 4] },\n  ],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AvatarComponent } from \"./components/avatar.component\";\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"./pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"./pipes/color-password.pipe\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\nimport { PasswordStrengthComponent } from \"./shared/components/password-strength/password-strength.component\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BitwardenToastModule,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { firstValueFrom, from, mergeMap, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  async buildOrganizations(): Promise<Organization[]> {\n    return await this.organizationService.getAll();\n  }\n\n  buildNestedFolders(organizationId?: string): Observable<DynamicTreeNode<FolderView>> {\n    const transformation = async (storedFolders: FolderView[]) => {\n      let folders: FolderView[];\n      if (organizationId != null) {\n        const ciphers = await this.cipherService.getAllDecrypted();\n        const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n        folders = storedFolders.filter(\n          (f) =>\n            orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n            ciphers.filter((c) => c.folderId == f.id).length < 1\n        );\n      } else {\n        folders = storedFolders;\n      }\n      const nestedFolders = await this.getAllFoldersNested(folders);\n      return new DynamicTreeNode<FolderView>({\n        fullList: folders,\n        nestedList: nestedFolders,\n      });\n    };\n\n    return this.folderService.folderViews$.pipe(\n      mergeMap((folders) => from(transformation(folders)))\n    );\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership);\n  }\n\n  protected async getAllFoldersNested(folders: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getFolderNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllFoldersNested(\n      await firstValueFrom(this.folderService.folderViews$)\n    );\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n}\n","import { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationExportResponse } from \"../models/response/organizationExportResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<any>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<void>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postConvertToKeyConnector: () => Promise<void>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<void>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  revokeOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  revokeManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  restoreOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  restoreManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<void>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n  getOrganizationExport: (organizationId: string) => Promise<OrganizationExportResponse>;\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  getKeyForUserEncryption: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuffer: EncArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (\n    eventType: EventType,\n    cipherId?: string,\n    uploadImmediately?: boolean,\n    organizationId?: string\n  ) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n}\n","import { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: (userId?: string) => Promise<boolean>;\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport abstract class PolicyService {\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n\nexport abstract class InternalPolicyService extends PolicyService {\n  upsert: (policy: PolicyData) => Promise<any>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount$: Observable<string>;\n  activeAccountUnlocked$: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecodedToken: (options?: StorageOptions) => Promise<any>;\n  setDecodedToken: (value: any, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<any>;\n  setLocalData: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  getSettings: (options?: StorageOptions) => Promise<any>;\n  setSettings: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { Verification } from \"../../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","export function getDomain(host: string): string | null {\n  return null;\n}\n\nexport function isValid(host: string): boolean {\n  return true;\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (typeof window !== \"undefined\") {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = Utils.global.bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IEncrypted } from \"@bitwarden/common/interfaces/IEncrypted\";\n\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = Utils.global.bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = encType + \".\" + iv + \"|\" + data;\n    } else {\n      this.encryptedString = encType + \".\" + data;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString += \"|\" + mac;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n\n  static fromJSON(obj: Jsonify<Folder>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new Folder(), obj, { name: EncString.fromJSON(obj.name), revisionDate });\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUriExport } from \"./loginUriExport\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CardExport } from \"./cardExport\";\nimport { FieldExport } from \"./fieldExport\";\nimport { IdentityExport } from \"./identityExport\";\nimport { LoginExport } from \"./loginExport\";\nimport { SecureNoteExport } from \"./secureNoteExport\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CipherExport } from \"./cipherExport\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { CollectionExport } from \"./collectionExport\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { FolderExport } from \"./folderExport\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Collection } from \"../domain/collection\";\n\nimport { SelectionReadOnlyRequest } from \"./selectionReadOnlyRequest\";\n\nexport class CollectionRequest {\n  name: string;\n  externalId: string;\n  groups: SelectionReadOnlyRequest[] = [];\n\n  constructor(collection?: Collection) {\n    if (collection == null) {\n      return;\n    }\n    this.name = collection.name ? collection.name.encryptedString : null;\n    this.externalId = collection.externalId;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (status === 429) {\n      this.message = \"Rate limit exceeded. Try again later.\";\n    } else if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n\n  static fromJSON(obj: Jsonify<FolderView>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new FolderView(), obj, { revisionDate });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\ntype BadgeTypes = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\";\n\nconst styles: Record<BadgeTypes, string[]> = {\n  primary: [\"tw-bg-primary-500\"],\n  secondary: [\"tw-bg-text-muted\"],\n  success: [\"tw-bg-success-500\"],\n  danger: [\"tw-bg-danger-500\"],\n  warning: [\"tw-bg-warning-500\"],\n  info: [\"tw-bg-info-500\"],\n};\n\nconst hoverStyles: Record<BadgeTypes, string[]> = {\n  primary: [\"hover:tw-bg-primary-700\"],\n  secondary: [\"hover:tw-bg-secondary-700\"],\n  success: [\"hover:tw-bg-success-700\"],\n  danger: [\"hover:tw-bg-danger-700\"],\n  warning: [\"hover:tw-bg-warning-700\"],\n  info: [\"hover:tw-bg-info-700\"],\n};\n\n@Directive({\n  selector: \"span[bitBadge], a[bitBadge], button[bitBadge]\",\n})\nexport class BadgeDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-inline\",\n      \"tw-py-0.5\",\n      \"tw-px-1.5\",\n      \"tw-font-bold\",\n      \"tw-text-center\",\n      \"!tw-text-contrast\",\n      \"tw-rounded\",\n      \"tw-border-none\",\n      \"tw-box-border\",\n      \"tw-whitespace-no-wrap\",\n      \"tw-text-xs\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n    ]\n      .concat(styles[this.badgeType])\n      .concat(this.hasHoverEffects ? hoverStyles[this.badgeType] : []);\n  }\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n\n  private hasHoverEffects = false;\n\n  constructor(el: ElementRef<Element>) {\n    this.hasHoverEffects = el?.nativeElement?.nodeName != \"SPAN\";\n  }\n}\n","import { Input, HostBinding, Directive } from \"@angular/core\";\n\nexport type ButtonTypes = \"primary\" | \"secondary\" | \"danger\";\n\nconst buttonStyles: Record<ButtonTypes, string[]> = {\n  primary: [\n    \"tw-border-primary-500\",\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"focus:tw-bg-primary-700\",\n    \"focus:tw-border-primary-700\",\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"tw-border-text-muted\",\n    \"!tw-text-muted\",\n    \"hover:tw-bg-secondary-500\",\n    \"hover:tw-border-secondary-500\",\n    \"hover:!tw-text-contrast\",\n    \"focus:tw-bg-secondary-500\",\n    \"focus:tw-border-secondary-500\",\n    \"focus:!tw-text-contrast\",\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"tw-border-danger-500\",\n    \"!tw-text-danger\",\n    \"hover:tw-bg-danger-500\",\n    \"hover:tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"focus:tw-bg-danger-500\",\n    \"focus:tw-border-danger-500\",\n    \"focus:!tw-text-contrast\",\n  ],\n};\n\n@Directive({\n  selector: \"button[bitButton], a[bitButton]\",\n})\nexport class ButtonDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-py-1.5\",\n      \"tw-px-3\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-text-center\",\n      \"hover:tw-no-underline\",\n      \"disabled:tw-bg-secondary-100\",\n      \"disabled:tw-border-secondary-100\",\n      \"disabled:!tw-text-main\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n    ]\n      .concat(this.block ? [\"tw-w-full\", \"tw-block\"] : [\"tw-inline-block\"])\n      .concat(buttonStyles[this.buttonType ?? \"secondary\"]);\n  }\n\n  @Input()\n  buttonType: ButtonTypes = null;\n\n  @Input()\n  block = false;\n}\n","<div\n  class=\"tw-mb-4 tw-box-border tw-rounded tw-border tw-border-l-8 tw-border-solid tw-border-secondary-300 tw-bg-background-alt tw-py-3 tw-px-5 tw-leading-5 tw-text-main\"\n  [ngClass]=\"calloutClass\"\n>\n  <h3\n    class=\"tw-mt-0 tw-mb-2 tw-text-base tw-font-bold tw-uppercase\"\n    [ngClass]=\"headerClass\"\n    *ngIf=\"title\"\n  >\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\ntype CalloutTypes = \"success\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<CalloutTypes, string> = {\n  success: \"bwi-check\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\nconst defaultI18n: Partial<Record<CalloutTypes, string>> = {\n  warning: \"warning\",\n  danger: \"error\",\n};\n\n@Component({\n  selector: \"bit-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type: CalloutTypes = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() useAlertRole = false;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.icon ??= defaultIcon[this.type];\n    if (this.title == null && defaultI18n[this.type] != null) {\n      this.title = this.i18nService.t(defaultI18n[this.type]);\n    }\n  }\n\n  get calloutClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"tw-border-l-danger-500\";\n      case \"info\":\n        return \"tw-border-l-info-500\";\n      case \"success\":\n        return \"tw-border-l-success-500\";\n      case \"warning\":\n        return \"tw-border-l-warning-500\";\n    }\n  }\n\n  get headerClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"!tw-text-danger\";\n      case \"info\":\n        return \"!tw-text-info\";\n      case \"success\":\n        return \"!tw-text-success\";\n      case \"warning\":\n        return \"!tw-text-warning\";\n    }\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { AbstractControl, UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"bit-error-summary\",\n  template: ` <ng-container *ngIf=\"errorCount > 0\">\n    <i class=\"bwi bwi-error\"></i> {{ \"fieldsNeedAttention\" | i18n: errorString }}\n  </ng-container>`,\n  host: {\n    class: \"tw-block tw-text-danger tw-mt-2\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorSummary {\n  @Input()\n  formGroup: UntypedFormGroup;\n\n  get errorCount(): number {\n    return this.getErrorCount(this.formGroup);\n  }\n\n  get errorString() {\n    return this.errorCount.toString();\n  }\n\n  private getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-error\",\n  template: `<i class=\"bwi bwi-error\"></i> {{ displayError }}`,\n  host: {\n    class: \"tw-block tw-mt-1 tw-text-danger\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorComponent {\n  @HostBinding() id = `bit-error-${nextId++}`;\n\n  @Input() error: [string, any];\n\n  constructor(private i18nService: I18nService) {}\n\n  get displayError() {\n    switch (this.error[0]) {\n      case \"required\":\n        return this.i18nService.t(\"inputRequired\");\n      case \"email\":\n        return this.i18nService.t(\"inputEmail\");\n      case \"minlength\":\n        return this.i18nService.t(\"inputMinLength\", this.error[1]?.requiredLength);\n      default:\n        // Attempt to show a custom error message.\n        if (this.error[1]?.message) {\n          return this.error[1]?.message;\n        }\n\n        return this.error;\n    }\n  }\n}\n","<label class=\"tw-mb-1 tw-block tw-font-semibold tw-text-main\" [attr.for]=\"input.id\">\n  <ng-content select=\"bit-label\"></ng-content>\n  <span *ngIf=\"input.required\" class=\"tw-text-xs tw-font-normal\"> ({{ \"required\" | i18n }})</span>\n</label>\n<div class=\"tw-flex\">\n  <div *ngIf=\"prefixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitPrefix]\"></ng-content>\n  </div>\n  <ng-content></ng-content>\n  <div *ngIf=\"suffixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitSuffix]\"></ng-content>\n  </div>\n</div>\n<ng-container [ngSwitch]=\"input.hasError\">\n  <ng-content select=\"bit-hint\" *ngSwitchCase=\"false\"></ng-content>\n  <bit-error [error]=\"input.error\" *ngSwitchCase=\"true\"></bit-error>\n</ng-container>\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  ContentChildren,\n  QueryList,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { BitInputDirective } from \"../input/input.directive\";\n\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@Component({\n  selector: \"bit-form-field\",\n  templateUrl: \"./form-field.component.html\",\n  host: {\n    class: \"tw-mb-6 tw-block\",\n  },\n})\nexport class BitFormFieldComponent implements AfterContentChecked {\n  @ContentChild(BitInputDirective) input: BitInputDirective;\n  @ContentChild(BitHintComponent) hint: BitHintComponent;\n\n  @ViewChild(BitErrorComponent) error: BitErrorComponent;\n\n  @ContentChildren(BitPrefixDirective) prefixChildren: QueryList<BitPrefixDirective>;\n  @ContentChildren(BitSuffixDirective) suffixChildren: QueryList<BitSuffixDirective>;\n\n  ngAfterContentChecked(): void {\n    if (this.error) {\n      this.input.ariaDescribedBy = this.error.id;\n    } else if (this.hint) {\n      this.input.ariaDescribedBy = this.hint.id;\n    } else {\n      this.input.ariaDescribedBy = undefined;\n    }\n  }\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"bit-hint\",\n  host: {\n    class: \"tw-text-muted tw-inline-block tw-mt-1\",\n  },\n})\nexport class BitHintComponent {\n  @HostBinding() id = `bit-hint-${nextId++}`;\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\nexport const PrefixClasses = [\n  \"tw-block\",\n  \"tw-px-3\",\n  \"tw-py-1.5\",\n  \"tw-bg-background-alt\",\n  \"tw-border\",\n  \"tw-border-solid\",\n  \"tw-border-secondary-500\",\n  \"tw-text-muted\",\n  \"tw-rounded-none\",\n  \"disabled:!tw-text-muted\",\n  \"disabled:tw-border-secondary-500\",\n];\n\n@Directive({\n  selector: \"[bitPrefix]\",\n})\nexport class BitPrefixDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\"tw-border-r-0\", \"first:tw-rounded-l\"]);\n  }\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\nimport { PrefixClasses } from \"./prefix.directive\";\n\n@Directive({\n  selector: \"[bitSuffix]\",\n})\nexport class BitSuffixDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\"tw-border-l-0\", \"last:tw-rounded-r\"]);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeDirective } from \"./badge.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BadgeDirective],\n  declarations: [BadgeDirective],\n})\nexport class BadgeModule {}\n","<div\n  class=\"tw-flex tw-items-center tw-gap-2 tw-py-2.5 tw-px-4 tw-text-contrast\"\n  [ngClass]=\"bannerClass\"\n  [attr.role]=\"useAlertRole ? 'status' : null\"\n  [attr.aria-live]=\"useAlertRole ? 'polite' : null\"\n>\n  <i class=\"bwi tw-align-middle\" [ngClass]=\"icon\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n  <span class=\"tw-grow tw-text-base\">\n    <ng-content></ng-content>\n  </span>\n  <button class=\"tw-border-0 tw-bg-transparent tw-p-0 tw-text-contrast\" (click)=\"onClose.emit()\">\n    <i class=\"bwi bwi-close tw-text-sm\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n  </button>\n</div>\n","import { Component, Input, OnInit, Output, EventEmitter } from \"@angular/core\";\n\ntype BannerTypes = \"premium\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<BannerTypes, string> = {\n  premium: \"bwi-star\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\n@Component({\n  selector: \"bit-banner\",\n  templateUrl: \"./banner.component.html\",\n})\nexport class BannerComponent implements OnInit {\n  @Input(\"bannerType\") bannerType: BannerTypes = \"info\";\n  @Input() icon: string;\n  @Input() useAlertRole = true;\n\n  @Output() onClose = new EventEmitter<void>();\n\n  ngOnInit(): void {\n    this.icon ??= defaultIcon[this.bannerType];\n  }\n\n  get bannerClass() {\n    switch (this.bannerType) {\n      case \"danger\":\n        return \"tw-bg-danger-500\";\n      case \"info\":\n        return \"tw-bg-info-500\";\n      case \"premium\":\n        return \"tw-bg-success-500\";\n      case \"warning\":\n        return \"tw-bg-warning-500\";\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BannerComponent } from \"./banner.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BannerComponent],\n  declarations: [BannerComponent],\n})\nexport class BannerModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonDirective } from \"./button.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ButtonDirective],\n  declarations: [ButtonDirective],\n})\nexport class ButtonModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CalloutComponent } from \"./callout.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CalloutComponent],\n  declarations: [CalloutComponent],\n})\nexport class CalloutModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"./input.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitInputDirective],\n  exports: [BitInputDirective],\n})\nexport class InputModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule, Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitInputDirective } from \"../input/input.directive\";\nimport { InputModule } from \"../input/input.module\";\n\nimport { BitErrorSummary } from \"./error-summary.component\";\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldComponent } from \"./form-field.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitLabel } from \"./label.directive\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n/**\n * Temporarily duplicate this pipe\n */\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n\n@NgModule({\n  imports: [CommonModule, InputModule],\n  exports: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitHintComponent,\n    BitInputDirective,\n    BitLabel,\n    BitPrefixDirective,\n    BitSuffixDirective,\n  ],\n  declarations: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitHintComponent,\n    BitLabel,\n    BitPrefixDirective,\n    BitSuffixDirective,\n    I18nPipe,\n  ],\n})\nexport class FormFieldModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconComponent } from \"./icon.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconComponent],\n  exports: [BitIconComponent],\n})\nexport class IconModule {}\n","import { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { MenuDividerComponent } from \"./menu-divider.component\";\nimport { MenuItemDirective } from \"./menu-item.directive\";\nimport { MenuTriggerForDirective } from \"./menu-trigger-for.directive\";\nimport { MenuComponent } from \"./menu.component\";\n\n@NgModule({\n  imports: [CommonModule, OverlayModule],\n  declarations: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n  exports: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n})\nexport class MenuModule {}\n","import { Dialog, DialogConfig, DialogRef } from \"@angular/cdk/dialog\";\nimport { ComponentType } from \"@angular/cdk/overlay\";\nimport { Injectable, TemplateRef } from \"@angular/core\";\n\n@Injectable()\nexport class DialogService extends Dialog {\n  override open<R = unknown, D = unknown, C = unknown>(\n    componentOrTemplateRef: ComponentType<C> | TemplateRef<C>,\n    config?: DialogConfig<D, DialogRef<R, C>>\n  ): DialogRef<R, C> {\n    config = {\n      backdropClass: [\"tw-fixed\", \"tw-bg-black\", \"tw-bg-opacity-30\", \"tw-inset-0\", \"tw-z-40\"],\n      ...config,\n    };\n\n    return super.open(componentOrTemplateRef, config);\n  }\n}\n","import { DialogModule as CdkDialogModule } from \"@angular/cdk/dialog\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { DialogCloseDirective } from \"./dialog-close.directive\";\nimport { DialogService } from \"./dialog.service\";\nimport { DialogComponent } from \"./dialog/dialog.component\";\nimport { SimpleDialogComponent } from \"./simple-dialog/simple-dialog.component\";\n\n@NgModule({\n  imports: [CommonModule, CdkDialogModule],\n  declarations: [DialogCloseDirective, DialogComponent, SimpleDialogComponent],\n  exports: [CdkDialogModule, DialogComponent, SimpleDialogComponent],\n  providers: [DialogService],\n})\nexport class DialogModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonModule } from \"../button\";\n\nimport { SubmitButtonComponent } from \"./submit-button.component\";\n\n@NgModule({\n  imports: [CommonModule, ButtonModule],\n  exports: [SubmitButtonComponent],\n  declarations: [SubmitButtonComponent],\n})\nexport class SubmitButtonModule {}\n","import { Input, HostBinding, Directive } from \"@angular/core\";\n\nexport type LinkType = \"primary\" | \"secondary\" | \"contrast\";\n\nconst linkStyles: Record<LinkType, string[]> = {\n  primary: [\n    \"!tw-text-primary-500\",\n    \"hover:!tw-text-primary-500\",\n    \"focus-visible:tw-ring-primary-700\",\n    \"disabled:!tw-text-primary-500/60\",\n  ],\n  secondary: [\n    \"!tw-text-main\",\n    \"hover:!tw-text-main\",\n    \"focus-visible:tw-ring-primary-700\",\n    \"disabled:!tw-text-muted/60\",\n  ],\n  contrast: [\n    \"!tw-text-contrast\",\n    \"hover:!tw-text-contrast\",\n    \"focus-visible:tw-ring-text-contrast\",\n    \"disabled:!tw-text-contrast/60\",\n  ],\n};\n\n@Directive({\n  selector: \"button[bitLink], a[bitLink]\",\n})\nexport class LinkDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-py-0.5\",\n      \"tw-px-0\",\n      \"tw-bg-transparent\",\n      \"tw-border-0\",\n      \"tw-border-none\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"hover:tw-underline\",\n      \"hover:tw-decoration-1\",\n      \"focus-visible:tw-outline-none\",\n      \"focus-visible:tw-underline\",\n      \"focus-visible:tw-decoration-1\",\n      \"focus-visible:tw-ring-2\",\n      \"focus-visible:tw-z-10\",\n      \"disabled:tw-no-underline\",\n      \"disabled:tw-cursor-not-allowed\",\n    ].concat(linkStyles[this.linkType] ?? []);\n  }\n\n  @Input()\n  linkType: LinkType = \"primary\";\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { LinkDirective } from \"./link.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [LinkDirective],\n  declarations: [LinkDirective],\n})\nexport class LinkModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { TabGroupComponent } from \"./tab-group.component\";\nimport { TabItemComponent } from \"./tab-item.component\";\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  exports: [TabGroupComponent, TabItemComponent],\n  declarations: [TabGroupComponent, TabItemComponent],\n})\nexport class TabsModule {}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-tab-group\",\n  templateUrl: \"./tab-group.component.html\",\n})\nexport class TabGroupComponent {}\n","<ng-container [ngSwitch]=\"disabled\">\n  <a\n    *ngSwitchCase=\"false\"\n    role=\"tab\"\n    [class]=\"baseClassList\"\n    [routerLink]=\"route\"\n    [routerLinkActive]=\"activeClassList\"\n    #rla=\"routerLinkActive\"\n    [attr.aria-selected]=\"rla.isActive\"\n  >\n    <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n  </a>\n  <button\n    *ngSwitchCase=\"true\"\n    type=\"button\"\n    role=\"tab\"\n    [class]=\"baseClassList\"\n    disabled\n    aria-disabled=\"true\"\n  >\n    <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n  </button>\n</ng-container>\n<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>\n","<div\n  role=\"tablist\"\n  class=\"tw-inline-flex tw-flex-wrap tw-border-0 tw-border-b tw-border-solid tw-border-secondary-300 tw-leading-5\"\n>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-tab-item\",\n  templateUrl: \"./tab-item.component.html\",\n})\nexport class TabItemComponent {\n  @Input() route: string; // ['/route']\n  @Input() disabled = false;\n\n  get baseClassList(): string[] {\n    return [\n      \"tw-block\",\n      \"tw-relative\",\n      \"tw-py-2\",\n      \"tw-px-4\",\n      \"tw-font-semibold\",\n      \"tw-transition\",\n      \"tw-rounded-t\",\n      \"tw-border-0\",\n      \"tw-border-x\",\n      \"tw-border-t-4\",\n      \"tw-border-transparent\",\n      \"tw-border-solid\",\n      \"!tw-text-main\",\n      \"hover:tw-underline\",\n      \"hover:!tw-text-main\",\n      \"focus-visible:tw-z-10\",\n      \"focus-visible:tw-outline-none\",\n      \"focus-visible:tw-ring-2\",\n      \"focus-visible:tw-ring-primary-700\",\n      \"disabled:tw-bg-transparent\",\n      \"disabled:!tw-text-muted/60\",\n      \"disabled:tw-no-underline\",\n      \"disabled:tw-cursor-not-allowed\",\n    ];\n  }\n\n  get activeClassList(): string {\n    return [\n      \"tw--mb-px\",\n      \"tw-border-x-secondary-300\",\n      \"tw-border-t-primary-500\",\n      \"tw-border-b\",\n      \"tw-border-b-background\",\n      \"tw-bg-background\",\n      \"!tw-text-primary-500\",\n      \"hover:tw-border-t-primary-700\",\n      \"hover:!tw-text-primary-700\",\n      \"focus-visible:tw-border-t-primary-700\",\n      \"focus-visible:!tw-text-primary-700\",\n    ].join(\" \");\n  }\n}\n","import { Component, EventEmitter, HostBinding, Input, Output } from \"@angular/core\";\n\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-toggle-group\",\n  templateUrl: \"./toggle-group.component.html\",\n  preserveWhitespaces: false,\n})\nexport class ToggleGroupComponent {\n  private id = nextId++;\n  name = `bit-toggle-group-${this.id}`;\n\n  @Input() selected?: unknown;\n  @Output() selectedChange = new EventEmitter<unknown>();\n\n  @HostBinding(\"attr.role\") role = \"radiogroup\";\n  @HostBinding(\"class\") classList = [\"tw-flex\"];\n\n  onInputInteraction(value: unknown) {\n    this.selected = value;\n    this.selectedChange.emit(value);\n  }\n}\n","<ng-content></ng-content>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeModule } from \"../badge\";\n\nimport { ToggleGroupComponent } from \"./toggle-group.component\";\nimport { ToggleComponent } from \"./toggle.component\";\n\n@NgModule({\n  imports: [CommonModule, BadgeModule],\n  exports: [ToggleGroupComponent, ToggleComponent],\n  declarations: [ToggleGroupComponent, ToggleComponent],\n})\nexport class ToggleGroupModule {}\n","import { Directive, HostBinding, Input, Optional, Self } from \"@angular/core\";\nimport { NgControl, Validators } from \"@angular/forms\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"input[bitInput], select[bitInput], textarea[bitInput]\",\n})\nexport class BitInputDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return [\n      \"tw-block\",\n      \"tw-w-full\",\n      \"tw-px-3\",\n      \"tw-py-1.5\",\n      \"tw-bg-background-alt\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      this.hasError ? \"tw-border-danger-500\" : \"tw-border-secondary-500\",\n      \"tw-text-main\",\n      \"tw-placeholder-text-muted\",\n      // Rounded\n      \"tw-rounded-none\",\n      \"first:tw-rounded-l\",\n      \"last:tw-rounded-r\",\n      // Focus\n      \"focus:tw-outline-none\",\n      \"focus:tw-border-primary-700\",\n      \"focus:tw-ring-1\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n      \"disabled:tw-bg-secondary-100\",\n    ].filter((s) => s != \"\");\n  }\n\n  @HostBinding() @Input() id = `bit-input-${nextId++}`;\n\n  @HostBinding(\"attr.aria-describedby\") ariaDescribedBy: string;\n\n  @HostBinding(\"attr.aria-invalid\") get ariaInvalid() {\n    return this.hasError ? true : undefined;\n  }\n\n  @HostBinding()\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  @Input() hasPrefix = false;\n  @Input() hasSuffix = false;\n\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl.errors)[0];\n    return [key, this.ngControl.errors[key]];\n  }\n  constructor(@Optional() @Self() private ngControl: NgControl) {}\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-menu-divider\",\n  templateUrl: \"./menu-divider.component.html\",\n})\nexport class MenuDividerComponent {}\n","<div\n  class=\"tw-my-2 tw-border-0 tw-border-t tw-border-solid tw-border-t-secondary-500\"\n  role=\"separator\"\n></div>\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding } from \"@angular/core\";\n\n@Directive({\n  selector: \"[bitMenuItem]\",\n})\nexport class MenuItemDirective implements FocusableOption {\n  @HostBinding(\"class\") classList = [\n    \"tw-block\",\n    \"tw-py-1\",\n    \"tw-px-4\",\n    \"!tw-text-main\",\n    \"!tw-no-underline\",\n    \"tw-cursor-pointer\",\n    \"tw-border-none\",\n    \"tw-bg-background\",\n    \"tw-text-left\",\n    \"hover:tw-bg-secondary-100\",\n    \"focus:tw-bg-secondary-100\",\n    \"focus:tw-z-50\",\n    \"focus:tw-outline-none\",\n    \"focus:tw-ring\",\n    \"focus:tw-ring-offset-2\",\n    \"focus:tw-ring-primary-700\",\n    \"active:!tw-ring-0\",\n    \"active:!tw-ring-offset-0\",\n  ];\n  @HostBinding(\"attr.role\") role = \"menuitem\";\n  @HostBinding(\"tabIndex\") tabIndex = \"-1\";\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { filter, mergeWith } from \"rxjs/operators\";\n\nimport { MenuComponent } from \"./menu.component\";\n\n@Directive({\n  selector: \"[bitMenuTriggerFor]\",\n})\nexport class MenuTriggerForDirective implements OnDestroy {\n  @HostBinding(\"attr.aria-expanded\") isOpen = false;\n  @HostBinding(\"attr.aria-haspopup\") hasPopup = \"menu\";\n  @HostBinding(\"attr.role\") role = \"button\";\n\n  @Input(\"bitMenuTriggerFor\") menu: MenuComponent;\n\n  private overlayRef: OverlayRef;\n  private defaultMenuConfig: OverlayConfig = {\n    panelClass: \"bit-menu-panel\",\n    hasBackdrop: true,\n    backdropClass: \"cdk-overlay-transparent-backdrop\",\n    scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    positionStrategy: this.overlay\n      .position()\n      .flexibleConnectedTo(this.elementRef)\n      .withPositions([\n        {\n          originX: \"start\",\n          originY: \"bottom\",\n          overlayX: \"start\",\n          overlayY: \"top\",\n        },\n        {\n          originX: \"end\",\n          originY: \"bottom\",\n          overlayX: \"end\",\n          overlayY: \"top\",\n        },\n      ])\n      .withLockedPosition(true)\n      .withFlexibleDimensions(false)\n      .withPush(false),\n  };\n  private closedEventsSub: Subscription;\n  private keyDownEventsSub: Subscription;\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private viewContainerRef: ViewContainerRef,\n    private overlay: Overlay\n  ) {}\n\n  @HostListener(\"click\") toggleMenu() {\n    this.isOpen ? this.destroyMenu() : this.openMenu();\n  }\n\n  ngOnDestroy() {\n    this.disposeAll();\n  }\n\n  private openMenu() {\n    if (this.menu == null) {\n      throw new Error(\"Cannot find bit-menu element\");\n    }\n\n    this.isOpen = true;\n    this.overlayRef = this.overlay.create(this.defaultMenuConfig);\n\n    const templatePortal = new TemplatePortal(this.menu.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n\n    this.closedEventsSub = this.getClosedEvents().subscribe((event: KeyboardEvent | undefined) => {\n      if (event?.key === \"Tab\") {\n        // Required to ensure tab order resumes correctly\n        this.elementRef.nativeElement.focus();\n      }\n      this.destroyMenu();\n    });\n    this.keyDownEventsSub = this.overlayRef\n      .keydownEvents()\n      .subscribe((event: KeyboardEvent) => this.menu.keyManager.onKeydown(event));\n  }\n\n  private destroyMenu() {\n    if (this.overlayRef == null || !this.isOpen) {\n      return;\n    }\n\n    this.isOpen = false;\n    this.disposeAll();\n  }\n\n  private getClosedEvents(): Observable<any> {\n    const detachments = this.overlayRef.detachments();\n    const escKey = this.overlayRef\n      .keydownEvents()\n      .pipe(filter((event: KeyboardEvent) => event.key === \"Escape\" || event.key === \"Tab\"));\n    const backdrop = this.overlayRef.backdropClick();\n    const menuClosed = this.menu.closed;\n\n    return detachments.pipe(mergeWith(escKey, backdrop, menuClosed));\n  }\n\n  private disposeAll() {\n    this.closedEventsSub?.unsubscribe();\n    this.overlayRef?.dispose();\n    this.keyDownEventsSub?.unsubscribe();\n  }\n}\n","<ng-template>\n  <div\n    (click)=\"closed.emit()\"\n    class=\"tw-flex tw-shrink-0 tw-flex-col tw-rounded tw-border tw-border-solid tw-border-secondary-500 tw-bg-background tw-bg-clip-padding tw-py-2\"\n    role=\"menu\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  Component,\n  Output,\n  TemplateRef,\n  ViewChild,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n} from \"@angular/core\";\n\nimport { MenuItemDirective } from \"./menu-item.directive\";\n\n@Component({\n  selector: \"bit-menu\",\n  templateUrl: \"./menu.component.html\",\n  exportAs: \"menuComponent\",\n})\nexport class MenuComponent implements AfterContentInit {\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @Output() closed = new EventEmitter<void>();\n  @ContentChildren(MenuItemDirective, { descendants: true })\n  menuItems: QueryList<MenuItemDirective>;\n  keyManager: FocusKeyManager<MenuItemDirective>;\n\n  ngAfterContentInit() {\n    this.keyManager = new FocusKeyManager(this.menuItems).withWrap();\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + {\"182\":\"908a6243a602579442f6\",\"477\":\"eb4d3b8313512b1b882a\",\"584\":\"238f402a694e2a33f299\",\"754\":\"bceaee638484f2dc0753\",\"929\":\"7cd8fd86e1ef3bbd487c\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t148: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [734], () => (__webpack_require__(46386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","inProgress","dataWebpackPrefix","RegisterFormModule","OrganizationCreateModule","OrganizationPermissionsGuard","constructor","router","organizationService","platformUtilsService","i18nService","syncService","canActivate","route","state","this","getLastSync","fullSync","org","get","params","organizationId","createUrlTree","isOwner","enabled","showToast","t","permissionsCallback","data","organizationPermissions","cipherId","root","queryParamMap","queryParams","itemId","id","canAccessToolsTab","canAccessImportExport","canAccessReports","canAccessSettingsTab","canAccessManageTab","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canEditAssignedCollections","canDeleteAssignedCollections","canAccessEventLogs","canManageGroups","canManageUsers","canManagePolicies","canManageSso","canManageScim","canAccessOrgAdmin","LooseComponentsModule","SharedModule","OrganizationBadgeModule","VaultFilterSharedModule","VaultFilterService","stateService","folderService","cipherService","collectionService","policyService","apiService","super","_collapsedFilterNodes","collapsedFilterNodes$","asObservable","buildCollapsedFilterNodes","nodes","next","storeCollapsedFilterNodes","collapsedFilterNodes","ensureVaultFiltersAreExpanded","has","delete","buildAdminCollections","result","collectionResponse","getCollections","length","collectionDomains","map","r","decryptMany","noneCollection","name","push","nestedCollections","getAllNested","fullList","nestedList","VaultFilterModule","ThemeType","ThemeBuilder","configuredTheme","systemTheme","effectiveTheme","System","updateSystemTheme","updateConfiguredTheme","ThemingService","window","document","_theme","BehaviorSubject","theme$","pipe","filter","x","monitorThemeChanges","getTheme","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","getValue","theme","setTheme","subscribe","documentElement","classList","remove","Light","Dark","Nord","SolarizedDark","add","matchMedia","matches","fromEvent","event","WINDOW","AbstractThemingService","AbstractEncryptService","AccountApiService","AccountService","AppIdService","AuditService","AuthService","BroadcasterService","CryptoFunctionService","EnvironmentService","FileUploadService","FolderApiServiceAbstraction","FormValidationErrorsService","MessagingService","NotificationsService","OrganizationApiServiceAbstraction","PasswordGenerationService","PasswordRepromptService","PolicyApiServiceAbstraction","ProviderService","SearchService","indexedEntityId","SendService","SettingsService","StateMigrationService","AbstractStorageService","TokenService","TotpService","TwoFactorService","UserVerificationApiServiceAbstraction","StateVersion","UsernameGenerationService","VaultTimeoutService","AccountFactory","accountConstructor","create","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","EnvironmentUrls","base","api","identity","icons","notifications","events","webVault","keyConnector","EncryptionPair","DataEncryptionPair","TemporaryDataEncryption","AccountData","ciphers","folders","sends","collections","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","AccountProfile","environmentUrls","pinProtected","vaultTimeoutAction","AccountTokens","init","keys","profile","settings","tokens","Object","assign","WindowState","stateVersion","One","DeviceType","DeviceRequest","appId","type","getDevice","getDeviceString","identifier","pushToken","TokenRequest","twoFactor","device","alterIdentityTokenHeaders","headers","setTwoFactor","toIdentityToken","clientId","obj","scope","client_id","deviceType","deviceIdentifier","deviceName","token","provider","twoFactorToken","twoFactorProvider","twoFactorRemember","remember","ApiTokenRequest","clientSecret","startsWith","grant_type","client_secret","TokenRequestTwoFactor","ApiKeyResponse","response","apiKey","getResponseProperty","revisionDate","Date","AttachmentResponse","url","fileName","key","size","sizeName","PasswordHistoryResponse","password","lastUsedDate","CipherResponse","folderId","notes","favorite","edit","viewPassword","organizationUseTotp","collectionIds","deletedDate","login","card","secureNote","fields","f","attachments","a","passwordHistory","h","reprompt","AttachmentUploadDataResponse","attachmentId","fileUploadType","cipherResponse","cipherMiniResponse","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","i","BillingInvoiceResponse","cardBrand","description","needsVerification","pdfUrl","number","paid","date","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","details","BillingHistoryResponse","hasNoHistory","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","domain","isActive","isVerified","logoPath","modifiedDate","pwnCount","title","SelectionReadOnlyResponse","readOnly","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","g","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","email","status","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","kdf","kdfIterations","EmergencyAccessViewResponse","c","EventResponse","userId","providerId","collectionId","groupId","policyId","organizationUserId","providerUserId","providerOrganizationId","actingUserId","ipAddress","installationId","GroupResponse","accessAll","GroupDetailsResponse","IdentityCaptchaResponse","siteKey","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","resetMasterPassword","forcePasswordReset","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders2","Map","captchaToken","twoFactorProviders","prop","hasOwnProperty","set","parseInt","KeyConnectorUserKeyResponse","ListResponse","dr","continuationToken","OrganizationConnectionResponse","configType","rawConfig","config","OrganizationExportResponse","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","error","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","manageScim","OrganizationUserResponse","permissions","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","usesKeyConnector","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","resetPasswordKey","encryptedPrivateKey","ProfileOrganizationResponse","usePolicies","useGroups","useDirectory","useEvents","useTotp","use2fa","useApi","useSso","useKeyConnector","useScim","useResetPassword","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","hasPublicAndPrivateKeys","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","keyConnectorEnabled","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","organizations","providers","providerOrganizations","emailVerified","masterPasswordHint","premiumPersonally","premiumFromOrganization","culture","securityStamp","o","PaymentResponse","userProfile","paymentIntentClientSecret","success","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","hasTotp","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","legacyYear","disabled","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","userCount","plan","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderResponse","businessName","billingEmail","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendFileApi","SendTextApi","text","hidden","SendAccessResponse","file","expirationDate","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","accessId","maxAccessCount","accessCount","deletionDate","disable","hideEmail","SendFileUploadDataResponse","sendResponse","SsoPreValidateResponse","SubscriptionResponse","storageName","storageGb","license","expiration","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","items","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","interval","sponsoredSubscriptionItem","FolderResponse","SyncResponse","p","s","TaxInfoResponse","taxId","taxIdType","line1","line2","city","postalCode","country","TaxRateResponse","rate","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","host","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","code","TwoFactorWebAuthnResponse","k","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","excludeCredentials","buffer","extensions","pubKeyCredParams","rp","timeout","user","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","publicKey","HtmlStorageLocation","cryptoFunctionService","passwordLeaked","hashBytes","hash","toUpperCase","hashStart","substr","hashEnding","nativeFetch","Request","match","split","find","v","breachedAccounts","username","getHibpBreach","e","statusCode","Error","limit","throttleKey","AuthenticationStatus","KeySuffixOptions","TwoFactorProviderType","target","propertyKey","descriptor","originalMethod","value","allThrottles","throttles","getThrottles","argsThrottleKey","queue","Promise","resolve","reject","exec","onFinally","splice","indexOf","apply","then","val","catch","err","AuthenticationType","AuthResult","captchaSiteKey","requiresCaptcha","requiresTwoFactor","KeysRequest","LogInStrategy","cryptoService","tokenService","appIdService","messagingService","logService","twoFactorService","captchaBypassToken","logInTwoFactor","captchaResponse","tokenRequest","startLogIn","clearSelectedProvider","postIdentityToken","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","onSuccessfulLogin","buildDeviceRequest","getAppId","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","tokenResponse","accountInformation","decodeToken","addAccount","sub","hasPremiumPersonally","premium","kdfType","setTwoFactorToken","setEncKey","setEncPrivateKey","createKeyPairForOldAccount","send","setProviders","makeKeyPair","postAccountKeys","encryptedString","HashPurpose","ApiLogInStrategy","environmentService","keyConnectorService","getKeyConnectorUrl","getAndSetKey","logIn","credentials","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","masterPasswordHash","PasswordLogInStrategy","authService","setKey","setKeyHash","localHashedPassword","masterPassword","makePreloginKey","hashPassword","LocalAuthorization","hashedPassword","SsoTokenRequest","codeVerifier","redirectUri","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","orgId","redirectUrl","PreloginRequest","sequentialize","cacheKey","caches","cache","getCache","argsCacheKey","EncArrayBuffer","encryptionType","dataBytes","ivBytes","macBytes","encBytes","Uint8Array","encType","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","slice","static","arrayBuffer","b64","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","sort","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","clear","clearTimeout","setTimeout","lastUsedIndex","Math","max","cipher","localData","lastLaunched","y","valueOf","getNextIndex","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","CipherWithIdRequest","CipherBulkShareRequest","forEach","CipherCollectionsRequest","CipherCreateRequest","CipherShareRequest","DomainMatchBlacklist","Set","CipherService","settingsService","fileUploadService","searchService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","encrypt","model","originalCipher","existingCipher","decrypt","ph","passwordRevisionDate","hasFields","existingHiddenFields","hiddenFields","ef","matchedField","getOrgKey","all","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","promises","encAttachments","attachment","promise","fieldsModel","self","encFields","reduce","field","encField","encryptField","fieldModel","linkedId","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","getAll","getAllDecrypted","getUserId","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","folder","isDeleted","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","eqDomain","concat","matchingDomains","getDefaultUriMatch","uris","u","uri","domainUrlHost","urlHost","RegExp","test","getAllFromApiForOrganization","getCiphersOrganization","getLastUsedForUrl","autofillOnPageLoad","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","getTime","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","saveWithServer","request","postCipherCreate","postCipher","putCipher","upsert","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","putShareCipher","shareManyWithServer","encCiphers","putShareCiphers","toCipherData","saveAttachmentWithServer","unencryptedFile","admin","reader","FileReader","readAsArrayBuffer","onload","evt","cData","saveAttachmentRawWithServer","onerror","filename","encFileName","dataEncKey","makeEncKey","encData","encryptToBytes","fileSize","byteLength","adminRequest","uploadDataResponse","postCipherAttachment","uploadCipherAttachment","getSingleMessage","legacyServerAttachmentFileUpload","fd","FormData","blob","Blob","append","Buffer","from","filepath","contentType","postCipherAttachmentAdminLegacy","postCipherAttachmentLegacy","saveCollectionsWithServer","putCipherCollections","replace","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","putMoveCiphers","deleteWithServer","deleteCipher","deleteManyWithServer","deleteManyCiphers","deleteAttachment","deleteAttachmentWithServer","deleteCipherAttachment","b","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","collator","compare","localeCompare","softDelete","setDeletedDate","toISOString","softDeleteWithServer","putDeleteCipher","softDeleteManyWithServer","putDeleteManyCiphers","restore","clearDeletedDate","Array","restoreWithServer","putRestoreCipher","restoreManyWithServer","putRestoreManyCiphers","restores","attachmentView","attachmentResponse","toString","encBuf","fromResponse","decBuf","decryptFromBytes","postShareCipherAttachment","theProp","theObj","modelProp","totp","loginUri","cardholderName","brand","expMonth","expYear","firstName","middleName","lastName","address1","address2","address3","company","phone","ssn","passportNumber","licenseNumber","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","EEFLongWordList","BaseEncryptedOrganizationKey","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","decValue","rsaDecrypt","toData","providerKey","getProviderKey","decryptToBytes","CryptoService","encryptService","platformUtilService","setCryptoMasterKey","storeKey","keyHash","encKey","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","orgs","providerOrgs","encOrgKeyData","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","getKey","keySuffix","inMemoryKey","getCryptoMasterKey","Auto","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","warning","clearSecretKeyStore","getKeyHash","compareAndUpdateKeyHash","storedKeyHash","localKeyHash","serverKeyHash","ServerAuthorization","getEncKey","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","getFingerprint","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","orgKeys","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","hasKeyStored","Biometric","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","hasEncKey","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","makeKey","salt","pbkdf2","makeKeyFromPin","pin","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","pinKey","makePinKey","decKey","makeShareKey","shareKey","randomBytes","rsaEncrypt","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForUserEncryption","buildEncKey","remakeEncKey","plainValue","encValue","privateKeyValue","headerPieces","encPieces","alg","encString","keyForEnc","decryptToUtf8","encBuffer","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","keyB64","getVaultTimeout","getBiometricUnlock","supportsSecureStorage","getCryptoMasterKeyBiometric","newKey","macKey","minimumEntropy","entropyPerWord","log","numWords","hashArr","phrase","hashNumber","remainder","mod","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","EncryptedObject","EventData","EventRequest","EventExport","message","humanReadableMessage","appIcon","appName","userName","userEmail","ip","FileUploadType","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","Headers","toUTCString","searchParams","body","method","blobResponse","fetch","baseUrl","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","start","blockData","blockHeaders","blockRequest","blockResponse","json","blockListUrl","blockListXml","expiry","isNaN","setTime","now","utfBlockId","blockIdList","xml","version","Version","year","month","day","parts","Number","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","FolderData","OrganizationUserType","SetKeyConnectorKeyRequest","orgIdentifier","KeyConnectorUserKeyRequest","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","OrganizationUserStatusType","Organization","isProviderUser","canAccess","Owner","Confirmed","isManager","Manager","Admin","isAdmin","canViewAllCollections","canViewAssignedCollections","canManageUsersPassword","isExemptFromPolicies","canManageBilling","hasProvider","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","SsoConfigApi","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","view","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","urls","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","resetPasswordEnabled","KeysResponse","OrganizationKeysResponse","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","planType","maxAutoscaleSeats","OrganizationSubscriptionResponse","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","minLength","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","ambiguous","minNumber","uppercase","minUppercase","lowercase","minLowercase","special","minSpecial","wordSeparator","PolicyData","Policy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","Provider","isProviderAdmin","canCreateOrganizations","ProviderAdmin","SendType","indexing","index","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","locale$","locale","registeredPipeline","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","isSearchable","query","normalizeSearchQuery","builder","Builder","pipeline","ref","boost","extractor","subTitle","uriExtractor","fieldExtractor","attachmentExtractor","build","info","searchCiphers","results","trim","toLowerCase","isArray","every","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","search","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","deleted","hasUris","some","searchSends","toLocaleLowerCase","sendsMatched","lowPriorityMatched","joined","join","hasAttachments","lastIndexOf","hostname","protocolIndex","queryIndex","substring","searchableFields","metadata","includes","normalize","SendFileData","SendTextData","SendData","Text","File","SendFileView","SendTextView","maskedText","SendView","urlB64Key","maxAccessCountReached","expired","pendingDelete","SendFile","buildDomainModel","decryptObj","SendText","Send","containerService","getCryptoService","cryptoKey","SendRequest","fileLength","Keys","StorageLocation","ProviderData","State","globals","accounts","authenticatedAccounts","accountActivity","partialKeys","storageService","secureStorageService","memoryStorageService","stateMigrationService","stateFactory","useAccountCache","activeAccountSubject","activeAccount$","activeAccountUnlockedSubject","activeAccountUnlocked$","hasBeenInited","isRecoveredSession","accountDiskCache","needsMigration","migrate","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","save","scaffoldNewAccountStorage","setLastActive","setActiveUser","clearDecryptedDataForActiveUser","clean","options","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAddEditCipherInfo","addEditCipherInfo","setAddEditCipherInfo","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","autoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","setBiometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricText","biometricText","setBiometricText","biometricUnlock","setBiometricUnlock","getCanAccessPremium","getIsAuthenticated","getHasPremiumPersonally","getHasPremiumFromOrganization","setHasPremiumPersonally","hasPremiumFromOrganization","getOrganizations","setHasPremiumFromOrganization","getClearClipboard","defaultOnDiskLocalOptions","clearClipboard","setClearClipboard","getCollapsedGroupings","collapsedGroupings","setCollapsedGroupings","getConvertAccountToKeyConnector","convertAccountToKeyConnector","setConvertAccountToKeyConnector","cryptoMasterKey","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecodedToken","decodedToken","setDecodedToken","decrypted","getDecryptedCollections","setDecryptedCollections","getDecryptedPasswordGenerationHistory","setDecryptedPasswordGenerationHistory","getDecryptedPinProtected","setDecryptedPinProtected","getDecryptedPolicies","setDecryptedPolicies","decryptedSerialized","getDecryptedSends","setDecryptedSends","defaultUriMatch","setDefaultUriMatch","getDisableAddLoginNotification","disableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","disableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","getDisableAutoTotpCopy","disableAutoTotpCopy","setDisableAutoTotpCopy","getDisableBadgeCounter","disableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","disableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","disableContextMenuItem","setDisableContextMenuItem","getDisableFavicon","disableFavicon","setDisableFavicon","getDisableGa","disableGa","setDisableGa","getDontShowCardsCurrentTab","dontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","dontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","getEmail","setEmail","getEmailVerified","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","enableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableGravitars","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","encrypted","getEncryptedCollections","setEncryptedCollections","getEncryptedFolders","setEncryptedFolders","getEncryptedPasswordGenerationHistory","setEncryptedPasswordGenerationHistory","getEncryptedPolicies","setEncryptedPolicies","getEncryptedSends","setEncryptedSends","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getEnvironmentUrls","getGlobalEnvironmentUrls","setEnvironmentUrls","setEquivalentDomains","getEventCollection","eventCollection","setEventCollection","getEverBeenUnlocked","everBeenUnlocked","setEverBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getKdfIterations","setKdfIterations","getKdfType","setKdfType","getLastActive","lastSync","setLastSync","getLocale","setLocale","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","getOrganizationInvitation","organizationInvitation","setOrganizationInvitation","setOrganizations","getPasswordGenerationOptions","passwordGenerationOptions","setPasswordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","getGeneratorOptions","generatorOptions","setGeneratorOptions","getProtectedPin","protectedPin","setProtectedPin","getProviders","publicKeySerialized","getRefreshToken","setRefreshToken","getRememberedEmail","rememberedEmail","setRememberedEmail","getSecurityStamp","setSecurityStamp","getSettings","setSettings","getSsoCodeVerifier","ssoCodeVerifier","setSsoCodeVerifier","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","getSsoState","ssoState","setSsoState","getUsesKeyConnector","setUsesKeyConnector","vaultTimeout","setVaultTimeout","getVaultTimeoutAction","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","htmlStorageLocation","Local","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","JSON","parse","stringify","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","stateUpdater","updatedState","withPrototype","converter","originalResult","String","prototype","getOwnPropertyDescriptors","withPrototypeForArrayMembers","memberConstructor","memberConverter","withPrototypeForObjectValues","valuesConstructor","valuesConverter","entries","withPrototypeForMap","decoded","setTokens","clientIdClientSecret","setToken","setClientId","setClientSecret","getClientId","getClientSecret","getToken","clearTwoFactorToken","clearToken","storedToken","getTokenExpirationDate","exp","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","round","tokenNeedsRefresh","minutes","email_verified","getName","getIssuer","iss","getIsExternal","amr","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encOrgKeys","encPrivate","history","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","getAuthenticatedAccounts","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","migrateAccountFrom5To6","Six","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","legacyEtmKey","authenticationStatus","authenticatedUserIds","encryptedOrgKeys","newVersion","OrganizationData","SyncService","sendService","providerService","folderApiService","logoutCallback","syncInProgress","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","refreshIdentityToken","getSync","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","syncUpsertFolder","notification","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","getFullCipherDetails","syncDeleteCipher","syncUpsertSend","localSend","remoteSend","getSend","sendId","syncDeleteSend","successfully","getAccountRevisionDate","userNeedsMigration","setConvertAccountRequired","removeConvertAccountRequired","global","B32Chars","SteamChars","TwoFactorProviders","Authenticator","priority","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","VerifyOTPRequest","OTP","SecretVerificationRequest","AnonAddyForwarder","generate","anonaddy","requestInit","redirect","Authorization","website","DuckDuckGoForwarder","address","FastmailForwarder","fastmail","accountId","using","methodCalls","emailPrefix","prefix","methodResponses","created","FirefoxRelayForwarder","generated_for","full_address","ForwarderOptions","FastmailForwarderOptions","AnonAddyForwarderOptions","SimpleLoginForwarder","Authentication","note","alias","wordCapitalize","wordIncludeNumber","subaddressType","catchallType","forwardedService","forwardedAnonAddyDomain","DecryptParameters","AuthGuard","routerState","authStatus","getAuthStatus","LoggedOut","Locked","promptBiometric","getConvertAccountRequired","LockGuard","homepage","loginpage","UnauthGuard","subscribers","messageCallback","unsubscribe","ModalRef","_onCreated","Subject","_onClose","_onClosed","_onShow","_onShown","onCreated","onClose","onClosed","onShow","onShown","show","shown","close","lastResult","closed","el","onClosedPromise","first","toPromise","DynamicModalComponent","modalService","cd","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","detectChanges","nativeElement","focusTrap","querySelector","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","createComponent","ngOnDestroy","destroy","getFocus","autoFocusEl","focus","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","flags","ModalConfig","componentFactoryResolver","applicationRef","injector","modalList","factoryResolvers","addEventListener","modalCount","topModal","openViewRef","viewContainerRef","modalComponentRef","openInternal","insert","hostView","open","replaceTopModal","allowMultipleModals","registerComponentFactoryResolver","closeAll","modal","attachToDom","createModalComponent","attachView","domElem","rootNodes","appendChild","detachView","pop","setupHandlers","backdrop","modalEl","dialogEl","createElement","className","style","zIndex","prepend","stopPropagation","modals","querySelectorAll","closeElement","WeakMap","showPassword","togglePassword","submit","component","protectedFields","showPasswordPrompt","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","JslibServicesModule","provide","useValue","useFactory","translationLocale","deps","navigator","language","useClass","makeAndGetAppId","getAnonymousAppId","existingId","guid","logInStrategy","strategy","clearState","saveState","logOut","callback","authingWithApiKey","authingWithSso","authingWithPassword","Unlocked","preloginResponse","postPrelogin","startSessionTimeout","clearSessionTimeout","sessionTimeout","P","_folders","_folderViews","folders$","folderViews$","unlocked","updateObservables","getAllDecryptedFromState","values","decryptFolders","updates","cId","foldersMap","decryptFolderPromises","decryptedFolders","noneFolder","useExisting","postFolder","putFolder","deleteFolder","deleteAccount","accountApiService","userVerificationService","verification","verificationRequest","buildRequest","collection","decCollections","decryptedCollections","collectionCopy","getNested","urlsSubject","scimUrl","setUrlsFromStorage","hasBaseUrl","getNotificationsUrl","notificationsUrl","getWebVaultUrl","webVaultUrl","getSendUrl","getIconsUrl","iconsUrl","getApiUrl","apiUrl","getIdentityUrl","identityUrl","getEventsUrl","eventsUrl","getScimUrl","envUrls","setUrls","formatUrl","scim","getUrls","getCode","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","floor","timeBytes","keyBytes","b32ToBytes","sign","offset","binary","otp","fullCode","trunc","getTimeInterval","l","b32ToHex","cleanedInput","bits","hex","byteIndex","charAt","chunk","signature","hmac","generatePassword","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","enforcedPolicyOptions","getPasswordGeneratorPolicyOptions","currentPolicy","useUpper","useLower","minNumbers","saveOptions","getHistory","decryptHistory","addHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","passwordStrength","userInputs","globalUserInputs","finalUserInputs","normalizeOptions","str","num","item","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","generateUsername","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","subaddressEmail","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwarder","forwarderOptions","forwardedSimpleLoginApiKey","forwardedAnonAddyApiToken","forwardedFirefoxApiToken","forwardedFastmailApiToken","forwardedFastmailAccountId","forwardedDuckDuckGoToken","charSet","width","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","Accept","identityToken","getClientType","qsStringify","getCredentials","responseJson","isJsonResponse","TwoFactorProviders2","HCaptcha_SiteKey","doAuthRefresh","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","isDev","postEmailToken","postEmail","postPassword","setPassword","postSetKeyConnectorKey","postSecurityStamp","postPasswordHint","postRegister","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountVerifyPassword","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","getSsoUserIdentifier","postUserApiKey","postUserRotateApiKey","putUpdateTempPassword","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","postCipherAdmin","putCipherAdmin","deleteCipherAdmin","deleteManyCiphersAdmin","putCipherCollectionsAdmin","postPurgeCiphers","path","postImportCiphers","postImportOrganizationCiphers","putDeleteCipherAdmin","putDeleteManyCiphersAdmin","putRestoreCipherAdmin","getAttachmentData","emergencyAccessId","deleteCipherAttachmentAdmin","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPasswordEnrollment","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","revokeOrganizationUser","revokeManyOrganizationUsers","restoreOrganizationUser","restoreManyOrganizationUsers","getPlans","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","btoa","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","postTwoFactorEmail","getDeviceVerificationSettings","putDeviceVerificationSettings","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","end","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","getUserPublicKey","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getOrganizationExport","getApplicationVersion","preValidateSso","encodeURIComponent","postCreateSponsorship","sponsoredOrgId","isSelfHost","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","doRefreshToken","doApiTokenRefresh","deviceRequest","authed","hasResponse","alterHeaders","requestUrl","URL","href","tokenError","isTextResponse","Message","typeHeader","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","getSettingsKey","setSettingsKey","lockedCallback","loggedOutCallback","inited","checkOnInterval","startCheck","checkVaultTimeout","setInterval","isViewOpen","shouldLock","executeTimeoutAction","lock","allowSoftLock","pinSet","isPinLockSet","isBiometricLockSet","setVaultTimeoutOptions","action","currentAction","policyAppliesToUser","policy","vaultTimeoutSeconds","getExport","format","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","getFileName","extension","getFullYear","padNumber","getMonth","getDate","getHours","getMinutes","getSeconds","decFolders","firstValueFrom","exportCiphers","buildCommonCipher","exportData","exportPromises","decCol","decCipher","collectionsMap","orgKey","padCharacter","numString","login_uri","login_username","login_password","login_totp","connected","inactive","reconnectTimer","signalrConnection","off","stop","withUrl","accessTokenFactory","skipNegotiation","transport","withHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","isAuthenticated","payloadUserId","UserId","myUserId","random","win","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","n","okm","md","valueBytes","toByteString","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","hmacFast","bytes","getBytes","compareFast","rand","Uint32Array","putInt32","aesEncrypt","iv","aesDecryptFastParameters","mac","meta","encKeyByteString","macKeyByteString","encKeyB64","macData","macKeyB64","aesDecryptFast","parameters","dataBuffer","decipher","finish","output","aesDecrypt","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","arr","getRandomValues","buf","logMacFailures","plainBuf","encObj","macLen","resolveLegacyKey","fastParams","computedMac","logMacFailed","encThing","msg","uploadEvents","collect","eventType","uploadImmediately","orgIds","req","clearEvents","decryptedPolicies","diskPolicies","getMasterPasswordPolicyOptions","minComplexity","requireUpper","requireLower","requireNumbers","requireSpecial","evaluateMasterPassword","newPassword","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","mapPoliciesFromToken","policiesResponse","policyType","policyFilter","filteredPolicies","policySet","Accepted","isExcemptFromPolicies","organization","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","getPolicyForOrganization","getMasterPasswordPoliciesForInvitedUsers","putPolicy","fileData","passwordHash","ArrayBuffer","encryptFileData","parseFile","decSends","sendData","legacyServerSendFileUpload","removePasswordWithServer","loggedInUsingSso","requiredByOrganization","getManagingOrganization","userIsNotUsingKeyConnector","migrateUser","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","pubKey","privKey","setPasswordRequest","userVerificationApiService","requestClass","alreadyHashed","validateInput","secret","verifyUser","postAccountVerifyOTP","requestOTP","postAccountRequestOTP","getByIdentifier","canManageSponsorships","hasOrganizations","selectedTwoFactorProviderType","getSupportedProviders","twoFactorProvidersData","supportsDuo","supportsWebAuthn","getDefaultProvider","webAuthnSupported","providerType","providerPriority","_value","setSelectedProvider","clearProviders","getFormValidationErrors","controls","errors","control","controlErrors","keyError","controlName","errorName","getBilling","getSubscription","getLicense","getAutoEnrollStatus","createLicense","updatePayment","upgrade","updateSubscription","updateSeats","updateStorage","verifyBank","cancel","reinstate","leave","updateLicense","importDirectory","getOrCreateApiKey","getApiKeyInformation","organizationApiKeyType","rotateApiKey","updateTaxInfo","getKeys","updateKeys","getSso","updateSso","MemoryStorageService","store","BroadcasterMessagingService","broadcasterService","subscriber","arg","command","getDefaultDateFilters","setDate","toDateTimeLocalString","formatDateFilters","filterStart","filterEnd","getEventInfo","ev","EventOptions","appInfo","getAppInfo","getEventMessage","humanReadableMsg","formatCipherId","getShortId","formatCollectionId","formatGroupId","formatOrgUserId","formatPolicyId","p1","formatProviderUserId","formatProviderOrganizationId","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","shortId","cipherInfo","makeAnchor","setAttribute","outerHTML","innerHTML","pad","norm","abs","HtmlStorageService","localStorage","getItem","sessionStorage","setItem","removeItem","ContainerService","attachToGlobal","bitwardenContainerService","InitService","notificationsService","vaultTimeoutService","eventLoggingService","themingService","location","origin","ModalService","modalOpen","A11yTitleDirective","renderer","appA11yTitle","ngOnInit","hasAttribute","PasswordRepromptComponent","PolicyListService","addPolicies","RouterService","activatedRoute","titleService","previousUrl","undefined","currentUrl","child","firstChild","titleId","snapshot","rawTitle","updateUrl","doNotSaveUrl","newTitle","setTitle","setPreviousUrl","getPreviousUrl","AccountSettings","Account","StateService","getRememberEmail","rememberEmail","setRememberEmail","FileDownloadBuilder","_request","blobOptions","fileType","blobData","downloadMethod","fileNameLower","endsWith","WebFileDownloadService","download","isSafari","createObjectURL","position","click","removeChild","ClientType","WebPlatformUtilsService","browserCache","userAgent","chrome","Web","isFirefox","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","launchUri","sameWindow","rel","PublicKeyCredential","showDialog","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","removeAttribute","iconHtmlStr","confirmed","heightAuto","buttonsStyling","icon","iconHtml","html","titleText","showCancelButton","cancelButtonText","showConfirmButton","confirmButtonText","copyToClipboard","doc","clipboardData","setData","queryCommandSupported","textarea","textContent","copyEl","contains","select","execCommand","debug","console","warn","readFromClipboard","supportsBiometric","authenticateBiometric","CoreModule","parentModule","envFlags","initService","multi","systemLanguage","localesDirectory","getLocalesJson","_locale","ReplaySubject","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","p2","p3","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","filePath","localesResult","migrationStateFrom1To2","EmergencyAccessAcceptRequest","BaseAcceptComponent","loading","requiredParameters","failedShortMessage","failedMessage","qParams","errorMessage","authedHandler","unauthedHandler","navigate","AcceptEmergencyComponent","actionPromise","OrganizationUserAcceptRequest","AcceptOrganizationComponent","policyApiService","organizationApiService","prepareAcceptRequest","orgName","performResetPasswordAutoEnroll","encryptedKey","policyList","PasswordHintRequest","HintComponent","successRoute","formPromise","onSuccessfulSubmit","ngZone","pinLock","webVaultHostname","invalidPinAttempts","activeAccountSubscription","load","handlePinRequiredUnlock","handleMasterPasswordRequiredUnlock","unlockBiometric","biometricLock","doContinue","input","getElementById","isStable","onStable","take","doUnlockWithPin","failed","setKeyAndContinue","doUnlockWithMasterPassword","passwordValid","decPin","hideInput","vaultUrl","LockComponent","routerService","navigateByUrl","PasswordLogInCredentials","SsoLogInCredentials","CaptchaIFrame","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","sendMessage","iframe","src","contentWindow","postMessage","base64Encode","fromCharCode","cleanup","removeEventListener","createParams","URLSearchParams","parent","initComponent","validMessage","parsedMessage","height","CaptchaProtectedComponent","setupCaptcha","captcha","showCaptcha","handleCaptchaRequired","passwordGenerationService","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","selfHostedDomain","focusInput","onSuccessfulLoginTwoFactorNavigate","onSuccessfulLoginForceResetNavigate","onSuccessfulLoginNavigate","launchSsoBrowser","ssoRedirectUri","passwordOptions","numbers","codeVerifierHash","codeChallenge","webUrl","LoginComponent","showResetPasswordAutoEnrollWarning","goAfterLogIn","invite","resetPasswordPolicy","enforcedPasswordPolicyOptions","strengthResult","getPasswordStrengthUserInput","masterPasswordScore","score","policiesData","userInput","atPosition","DeleteRecoverRequest","RecoverDeleteComponent","TwoFactorRecoveryRequest","RecoverTwoFactorComponent","recoveryCode","InputsFieldMatch","matchTo","inputsMatchError","inputsDoesntMatchError","fieldMatchTo","formGroup","fieldCtrl","fieldMatchToCtrl","setErrors","RegisterRequest","referenceData","formValidationErrorService","formBuilder","isInTrialFlow","createdAccount","showTerms","showErrorSummary","group","confirmMasterPassword","hint","validateInputsDoesntMatch","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","markAllAsTouched","hasError","invalid","errorText","getErrorToastMessage","passwordStrengthResult","orgInvite","emit","getStrengthResult","getPasswordScoreText","color","shift","errorTag","required","ReferenceEventRequest","PasswordStrengthComponent","showText","passwordScoreColor","scoreWidth","updatePasswordStrength","masterPasswordScoreColor","masterPasswordScoreText","ngOnChanges","masterPasswordStrengthTimeout","setPasswordScoreText","BitLabel","SubmitButtonComponent","buttonType","RegisterFormComponent","referenceDataValue","queryParamEmail","setValue","RegisterComponent","showCreateOrgMessage","layout","flow","reference","cookie","continuing","leaving","convert","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","strongPassword","setupSubmitActions","performSubmitActions","masterPasswordRetype","syncLoading","resetPasswordAutoEnroll","onSetPasswordSuccess","userEncKey","resetRequest","onSuccessfulChangePassword","confirmField","SetPasswordComponent","loggingIn","changePasswordRoute","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","authorizeUrl","buildAuthorizeUrl","userIdentifier","orgIdFromState","sso","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","PlanType","ProductType","SsoComponent","storedIdentifier","VerticalStep","subLabel","applyBorder","VerticalStepContentComponent","onSelectStep","selected","selectStep","selectStepByIndex","VerticalStepperComponent","activeClass","isNextButtonHidden","steps","selectedIndex","isStepDisabled","_","completed","changedBusinessOwned","OrganizationInformationComponent","nameOnly","createOrganization","isProvider","acceptingSponsorship","LogoForbesComponent","LogoUSNewsComponent","EnterpriseContentComponent","TeamsContentComponent","ConfirmationDetailsComponent","PaymentMethodType","OrganizationCreateRequest","OrganizationKeysRequest","OrganizationUpgradeRequest","ProviderOrganizationCreateRequest","clientOwnerEmail","organizationCreateRequest","changeMethod","bank","lightInputColor","lightInputPlaceholderColor","darkInputColor","darkInputPlaceholderColor","PaymentComponent","showMethods","showOptions","Card","hideBank","hidePaypal","hideCredit","trialFlow","destroy$","routing_number","account_number","account_holder_name","account_holder_type","currency","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","async","Stripe","elements","setStripeElement","btScript","StripeElementStyle","fontFamily","fontSize","fontSmoothing","StripeElementClasses","empty","PayPal","BankAccount","Credit","head","complete","btStylesheet","braintree","dropin","authorization","container","paymentOptionPriority","paypal","buttonStyle","label","shape","tagline","createErr","createPaymentToken","requestPaymentMethod","nonce","handleCardSetup","setupIntent","payment_method","createToken","handleStripeCardPayment","handleCardPayment","paymentIntent","classes","placeholder","mount","takeUntil","TaxInfoUpdateRequest","OrganizationTaxInfoUpdateRequest","taxInfo","TaxInfoComponent","onCountryChanged","includeTaxId","pristine","taxRates","taxRate","localTaxRate","getTaxInfoRequest","submitTaxInfo","hasChanged","changeCountry","changedProduct","changedCountry","changedOwnedBusiness","OrganizationPlansComponent","showFree","showCancel","Free","onSuccess","onCanceled","onTrialBillingSuccess","selfHosted","productTypes","singleOrgPolicyBlock","discount","businessOwned","premiumAccessAddon","additionalStorage","additionalSeats","plans","Enterprise","Teams","Families","addValidators","selectedPlan","selectedPlanInterval","selectableProducts","validPlans","Custom","familyPlan","FamiliesAnnually","selectablePlans","additionalStoragePriceMonthly","seatPriceMonthly","additionalStorageTotal","seatTotal","subtotal","subTotal","freeTrial","taxCharges","taxComponent","total","paymentDesc","TeamsAnnually","paymentComponent","userHasBlockingSingleOrgPolicy","doSubmit","collectionCt","createSelfHosted","createCloudHosted","updateOrganization","subLabelText","billingSubLabelText","additionalStorageGb","billingAddressCountry","billingAddressPostalCode","orgShareKey","collectionName","tokenResult","paymentToken","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","files","price","BillingComponent","previousStep","patchValue","orgInfoForm","stepBack","DefaultContentComponent","Enterprise1ContentComponent","Enterprise2ContentComponent","Teams1ContentComponent","Teams2ContentComponent","LogoCnetComponent","CnetEnterpriseContentComponent","CnetIndividualContentComponent","CnetTeamsContentComponent","billingSuccess","stepSelectionChange","navigateToOrgVault","navigateToOrgInvite","TrialInitiationComponent","titleCasePipe","orgInfoSubLabel","orgLabel","billingSubLabel","accountCreateOnly","validOrgs","orgInfoFormGroup","referenceDataId","referenceId","setupFamilySponsorship","transform","EnterpriseAnnually","previouslySelectedIndex","verticalStepper","previous","WebAuthnIFrame","webAuthnNewTab","btnText","allow","TwoFactorEmailRequest","webAuthnReady","selectedProviderType","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","cleanupWebAuthn","providerData","authWebAuthn","Host","sig_request","Signature","submit_callback","sig","sendEmail","doToast","emailPromise","Window","onProviderSelected","onRecoverSelected","choose","recover","TwoFactorOptionsComponent","StopClickDirective","onClick","$event","preventDefault","TwoFactorComponent","anotherMethod","twoFactorOptionsModal","comp","PasswordRequest","currentMasterPassword","newMasterPasswordHash","UpdatePasswordComponent","OrganizationUserResetPasswordRequest","UpdateTempPasswordRequest","newPasswordHash","newEncKey","UpdateTempPasswordComponent","VerifyEmailRequest","VerifyEmailTokenComponent","VerifyDeleteRecoverRequest","VerifyRecoverDeleteComponent","HomeGuard","FrontendLayoutComponent","FooterComponent","AvatarComponent","sanitizer","charCount","textColor","fontWeight","dynamic","circle","chars","upperData","getFirstLetters","unicodeSafeSubstring","charObj","getCharText","stringToColor","svg","getSvg","svgHtml","unescape","charCodeAt","count","svgTag","backgroundColor","character","textTag","characters","StopPropDirective","NavbarComponent","buildOrganizations","run","UserLayoutComponent","OrganizationSwitcherComponent","activeOrganization","loaded","BroadcasterSubscriptionId","OrganizationLayoutComponent","showManageTab","showToolsTab","showSettingsTab","toolsRoute","manageRoute","SelectionReadOnlyRequest","selectAll","check","CollectionAddEditComponent","onSavedCollection","onDeletedCollection","editMode","accessGroups","groupsResponse","checked","deletePromise","selectedChanged","filterSelected","EntityUsersComponent","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","allUsers","loadUsers","users","searchedUsers","searchText","scrollViewportStyle","entity","selections","loadMore","CollectionsComponent","canCreate","didScroll","pageSize","pagedCollectionsCount","decryptCollections","assignedCollections","resetPaging","pagedLength","pagedCollections","pagedSize","canEdit","canDelete","addEditModalRef","canSave","removeCollection","usersModalRef","entityName","isSearching","isPaging","searching","EventView","BaseEventsComponent","eventService","exportService","fileDownloadService","dirtyDates","defaultDates","exportEvents","appApiPromiseUnfulfilled","dates","parseDates","exportPromise","export","loadEvents","clearExisting","loadAndParseEvents","refreshPromise","morePromise","startDate","endDate","requestEvents","eventInfo","getUserName","exportFileName","EventsComponent","userNamePipe","orgUsersUserIdMap","GroupRequest","GroupAddEditComponent","onSavedGroup","onDeletedGroup","access","loadCollections","GroupsComponent","pagedGroupsCount","pagedGroups","removeGroup","ManageComponent","OrganizationUserBulkRequest","OrganizationUserConfirmRequest","UserConfirmComponent","onConfirmedUser","dontAskAgain","fingerprint","BasePeopleComponent","validationService","searchPipe","statusMap","pagedUsers","activeUsers","pagedUsersCount","allCount","invitedCount","userStatusType","Invited","acceptedCount","confirmedCount","revokedCount","Revoked","showConfirmUsers","showBulkConfirmUsers","getUsers","checkUser","filteredUsers","selectCount","removeUserConfirmationDialog","deleteUser","removeUser","showError","revoke","revokeWarningMessage","revokeUser","restoreUser","reinvite","reinviteUser","confirm","confirmUser","mapIndex","updateUser","publicKeyResponse","autoConfirm","confirmModalRef","getCheckedUsers","OrganizationUserBulkConfirmRequest","publicKeys","fingerprints","statuses","done","excludedUsers","isAccepted","getPublicKeys","entry","getCryptoKey","userIdsWithKeys","postConfirmRequest","deleteUsers","removeUsersWarning","BulkRestoreRevokeComponent","isRevoking","bulkTitle","titleKey","performBulkUserAction","bulkMessage","BulkStatusComponent","EntityEventsComponent","showUser","orgUsersIdMap","ResetPasswordComponent","onPasswordReset","loggedOutWarningName","passwordStrengthComponent","copy","orgSymKey","decPrivateKey","OrganizationUserInviteRequest","emails","OrganizationUserUpdateRequest","NestedCheckboxComponent","onSavedUser","onDeletedUser","parentIndeterminate","parentChecked","checkboxes","pascalize","handleDependentPermissions","UserAddEditComponent","onRevokedUser","onRestoredUser","isRevoked","User","showCustom","manageAllCollectionsCheckboxes","manageAssignedCollectionsCheckboxes","customUserTypeSelected","setRequestPermissions","clearPermissions","OrganizationUserUpdateGroupsRequest","groupIds","UserGroupsComponent","userGroups","ug","bulkConfirm","resetPassword","PeopleComponent","userType","accessEvents","canResetPassword","orgUseResetPassword","orgHasKeys","orgResetPasswordPolicyEnabled","callingUserType","viewEvents","allowResetPassword","orgUser","callingUserHasPermission","showEnrolledStatus","groupsModalRef","bulkRemove","bulkRemoveModalRef","bulkRevoke","bulkRevokeOrRestore","bulkRestore","bulkReinvite","showBulkStatus","bulkConfirmModalRef","eventsModalRef","resetPasswordModalRef","warningMessage","successfullMessage","childComponent","bulkStatusModalRef","keyedErrors","keyedFilteredUsers","PolicyRequest","BasePolicy","display","BasePolicyComponent","policyResponse","loadData","buildRequestData","policiesEnabledMap","PolicyEditComponent","cdr","onSavedPolicy","factory","policyComponent","policyFormRef","Enabled","PoliciesComponent","policyListService","policyIdFromEvents","orgPolicy","orgPolicies","op","editModalRef","OrganizationUpdateRequest","ApiKeyComponent","postKey","PurgeVaultComponent","CountBasedLocalizationKey","singular","plural","OrganizationContentSummaryItem","localizationKeyOptions","localizationKey","OrganizationContentSummary","totalItemCount","itemCountByType","DeleteOrganizationComponent","deleteOrganizationRequestType","organizationContentSummary","buildOrganizationContentSummary","organizationItems","cipherType","getOrganizationItemCountByType","getOrganizationItemLocalizationKeysByType","viewApiKey","AccountComponent","canUseApi","taxFormPromise","deleteOrganization","deleteModalRef","purgeVault","purgeModalRef","apiKeyModalRef","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKeyModalRef","isRotation","TransactionType","VerifyBankRequest","BitPayInvoiceRequest","AddCreditComponent","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","BitPay","credit","creditAmountNumber","bitPayUrl","formatAmount","floatAmount","parseFloat","toFixed","PaymentRequest","AdjustPaymentComponent","onAdjusted","taxInfoComponent","addCredit","closeAddCredit","changePayment","closePayment","OrganizationBillingComponent","firstLoaded","showAdjustPayment","showAddCredit","transactionType","billing","amount1","verifyAmount1","amount2","verifyAmount2","verifyBankPromise","paymentSourceInApp","isCreditBalance","creditOrBalance","AppleInApp","GoogleInApp","OrganizationApiKeyType","OrganizationConnectionType","BillingSyncConfigApi","billingSyncKey","BillingSyncConfigRequest","OrganizationConnectionRequest","BillingSyncKeyComponent","CloudBillingSync","existingConnectionId","setParentConnection","deleteConnection","OrganizationApiKeyRequest","Default","cancelRotate","rotateToken","BillingSyncApiKeyComponent","showRotateScreen","BillingSync","keyRevisionDate","hasBillingToken","syncStatus","dayDiff","date1","date2","diffTime","submitButtonText","showLastSyncText","showAwaitingSyncText","daysBetween","StorageRequest","AdjustStorageComponent","storageGbPrice","storageAdjustment","storageGbAdjustment","paymentFailed","relativeTo","adjustedStorageTotal","OrganizationSubscriptionUpdateRequest","seatAdjustment","AdjustSubscription","limitSubscription","newSeatCount","currentSeatCount","newMaxSeats","limitSubscriptionChanged","adjustedSeatTotal","maxSeatTotal","ChangePlanComponent","onChanged","defaultUpgradePlan","defaultUpgradeProduct","DownloadLicenseComponent","onDownloaded","licenseString","ImageSubscriptionHiddenComponent","UpdateLicenseComponent","onUpdated","updatePromise","changePlan","closeChangePlan","subscriptionAdjusted","removeSponsorship","adjustStorage","closeStorage","downloadLicense","manageBillingSync","closeDownloadLicense","closeUpdateLicense","manageBillingSyncSelfHosted","OrganizationSubscriptionComponent","adjustSeatsAdd","showAdjustSeats","showAdjustSeatAutoscale","adjustStorageAdd","showAdjustStorage","showUpdateLicense","showBillingSyncKey","showDownloadLicense","showChangePlan","userOrg","apiKeyResponse","hasBillingSyncToken","existingBillingSyncConnection","reinstatePromise","cancelPromise","changed","setupBillingSyncModalRef","updated","removeSponsorshipPromise","billingSyncKeyRef","billingSyncKeyViewContainerRef","connection","isExpired","subscriptionMarkedForCancel","nextInvoice","storagePercentage","storageProgressWidth","billingInterval","canAdjustSeats","isSponsoredSubscription","canDownloadLicense","canManageBillingSync","EnterpriseMonthly","EnterpriseAnnually2019","EnterpriseMonthly2019","subscriptionDesc","FamiliesAnnually2019","showChangePlanButton","billingSyncSetUp","SettingsComponent","access2fa","showBilling","UpdateTwoFactorDuoRequest","TwoFactorProviderRequest","TwoFactorBaseComponent","twoFactorProviderType","auth","authResponse","hashedSecret","verificationType","enable","enableFunction","buildRequestModel","TwoFactorVerifyComponent","onAuthed","TwoFactorDuoComponent","processResponse","ikey","skey","DeviceVerificationRequest","UpdateTwoFactorAuthenticatorRequest","TwoFactorAuthenticatorComponent","qrScript","QRious","element","UpdateTwoFactorEmailRequest","TwoFactorEmailComponent","sentEmail","print","TwoFactorRecoveryComponent","w","write","onafterprint","formatString","UpdateTwoFactorWebAuthnDeleteRequest","UpdateTwoFactorWebAuthnRequest","readKey","TwoFactorWebAuthnComponent","keyIdAvailable","keysConfiguredCount","webAuthnResponse","removePromise","challengePromise","readDevice","webAuthnChallenge","resetWebAuthn","webAuthnListening","webAuthnError","listening","configured","UpdateTwoFactorYubioOtpRequest","TwoFactorYubiKeyComponent","disablePromise","existingKey","padRight","NotPremiumDirective","templateRef","viewContainer","createEmbeddedView","premiumRequired","PremiumBadgeComponent","manage","showPolicyWarning","canAccessPremium","deviceVerificationSettings","enableDeviceVerification","filterProvider","evaluatePolicies","openModal","authenticatorModalRef","updateStatus","yubikeyModalRef","duoModalRef","emailModalRef","webAuthnModalRef","recoveryModalRef","TwoFactorSetupComponent","duoComp","auditService","passwordRepromptService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","showCardNumber","showCardCode","ownershipOptions","currentDate","allowPersonal","canUseReprompt","typeOptions","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","autofillOnPageLoadOptions","myEmail","writeableCollections","loadCipher","organizationChanged","previousCipherId","encryptCipher","saveCipher","addUri","removeUri","trackByFunction","share","editCollections","restorePromise","restoreCipher","toggleCardNumber","toggleCardCode","toggleUriOptions","loginUriMatchChanged","checkPassword","checkPasswordPromise","repromptChanged","addFieldType","linkedFieldOptions","fieldType","addFieldTypeOptions","addFieldLinkedTypeOption","changes","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","newField","removeField","toggleFieldValue","showValue","drop","previousIndex","currentIndex","linkedFieldOption","i18nKey","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","onHostChange","writeValue","setProperty","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","AddEditCustomFieldsComponent","upgradeOrganization","launch","viewHistory","toggleFavorite","totpService","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","viewOnly","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","totpTick","totpInterval","canLaunch","typeI18nKey","aType","showGetPremium","clearInterval","totpCode","half","totpCodeFormatted","allowOwnershipAssignment","intervalSeconds","totpSec","totpDash","totpLow","AddEditComponent","CipherReportComponent","requiresPaid","hasLoaded","setCiphers","selectCipher","repromptCipher","cipherAddEditModalRef","checkAccess","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","RuPay","Mir","IconComponent","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","isWebsite","exposedPasswordMap","allCiphers","getAllCiphers","exposedPasswordCiphers","exposedCount","canManageCipher","ExposedPasswordsReportComponent","manageableCiphers","services","cipherDocs","load2fa","inactive2faCiphers","docs","service","serviceData","documentation","additionalDomain","InactiveTwoFactorReportComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","ReusedPasswordsReportComponent","ToolsComponent","unsecuredCiphers","UnsecuredWebsitesReportComponent","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","scoreKey","WeakPasswordsReportComponent","PipesModule","VaultService","calculateSearchBarLocalizationString","vaultFilter","selectedFolderId","selectedCollection","selectedOrganizationId","myVaultOnly","VaultSharedModule","VaultFilter","selectedFolder","refreshCollectionsAndFolders","resetFilter","selectedCollectionId","resetOrganization","buildFilter","cipherPassesFilter","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","downloading","canAccessAttachments","reuploadCipherAttachment","foundAttachment","a2","reupload","showFixOldAttachments","AttachmentsComponent","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","searchPlaceholder","searchPending","searchTimeout","deletedFilter","applyFilter","reload","refresh","indexedCiphers","doSearch","rightClickCipher","addCipher","addCipherOptions","EllipsisPipe","completeWords","ellipsis","OrganizationNameBadgeComponent","onOrganizationClicked","profileName","pickTextColorBasedOnBgColor","emitOnOrganizationClicked","GetOrgNameFromIdPipe","clone","checkCipher","showAddNew","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","onOrganzationBadgeClicked","pagedCiphers","userHasPremiumAccess","pagedCiphersCount","refreshing","permanent","displayTotpCopyButton","getSelected","getSelectedIds","hasOldAttachments","CiphersComponent","onEventsClicked","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","vaultFilterService","activeFilter","hideFolders","hideCollections","hideFavorites","hideTrash","hideOrganizations","onFilterChange","onAddFolder","onEditFolder","isLoaded","displayCollections","activePersonalOwnershipPolicy","checkForPersonalOwnershipPolicy","activeSingleOrganizationPolicy","checkForSingleOrganizationPolicy","buildNestedFolders","initCollections","buildCollections","toggleFilterNodeCollapseState","node","reloadCollectionsAndFolders","pruneInvalidatedFilterSelections","reloadOrganizations","addFolder","editFolder","pruneInvalidFolderSelection","pruneInvalidCollectionSelection","hasId","hide","onNodeCollapseStateChange","collectionsGrouping","collectionNodes","isCollapsed","toggleCollapse","CollectionFilterComponent","foldersGrouping","folderNodes","nestedFolders","FolderFilterComponent","cipherStatus","StatusFilterComponent","selectedCipherType","typesNode","cipherTypeEnum","TypeFilterComponent","organizationGrouping","displayMode","hasActiveFilter","applyOrganizationFilter","applyMyVaultFilter","clearFilter","EnrollMasterPasswordReset","toastStringRef","keyString","LinkSsoComponent","ngAfterContentInit","toggleResetPasswordEnrollment","unlinkSso","OrganizationOptionsComponent","allowEnrollmentChanges","OrganizationFilterComponent","displayText","searchTextChanged","onSearchTextChanged","VaultFilterComponent","BulkDeleteComponent","cipherIds","onDeleted","deleteCiphersAdmin","deleteCiphers","deleteRequest","BulkMoveComponent","onMoved","BulkRestoreComponent","onRestored","BulkShareComponent","onShared","nonShareableCount","shareableCiphers","allCollections","filterCollections","checkedCollectionIds","bulkMove","bulkShare","BulkActionsComponent","bulkDelete","promptPassword","selectedIds","ciphersComponent","bulkDeleteModalRef","bulkRestoreModalRef","selectedCiphers","bulkShareModalRef","bulkMoveModalRef","VaultComponent","changeDetectorRef","vaultService","trashCleanupWarning","vaultFilterComponent","getCipherIdFromParams","editCipherId","queryParamsHandling","applyVaultFilter","go","filterSearchText","editCipherAttachments","madeAttachmentChanges","attachmentsModalRef","editCipherCollections","collectionsModalRef","editCipher","cloneCipher","replaceUrl","routes","VaultRoutingModule","VaultModule","children","pathMatch","redirectTo","loadChildren","m","OrganizationImportExportModule","OrganizationsRoutingModule","PlanSponsorshipType","AcceptFamilySponsorshipComponent","register","OrganizationSponsorshipRedeemRequest","FamiliesForEnterpriseSetupComponent","badToken","showNewOrganization","_selectedFamilyOrganizationId","organizationPlansComponent","onOrganizationCreateSuccess","existingFamilyOrganizations","selectedFamilyOrganizationId","planSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","HasPremiumGuard","userHasPremium","ReportVariant","ReportType","BreachReportComponent","checkedUsername","reports","ExposedPasswords","ReusedPasswords","WeakPasswords","UnsecuredWebsites","Inactive2fa","DataBreach","IconSvg","reportExposedPasswords","reportReusedPasswords","reportWeakPasswords","reportUnsecuredWebsites","reportInactiveTwoFactor","reportBreach","BitIconComponent","domSanitizer","innerHtml","bypassSecurityTrustHtml","ReportCardComponent","variant","requiresPremium","RequiresPremium","ReportListComponent","ReportsHomeComponent","reportRequiresPremium","ReportsLayoutComponent","ReportsRoutingModule","ReportsModule","SendAccessView","SendAccess","SendAccessRequest","toggleText","copyText","AccessComponent","sendType","passwordRequired","unavailable","sendText","downloadData","accessRequest","keyArray","sendAccess","disableSend","filteredSends","hasSearched","onSuccessfulLoad","applyTextSearch","removePassword","onSuccessfulRemovePassword","onSuccessfulDelete","link","clearSelections","selectedAll","selectType","selectedType","BrowserPath","DateField","DatePreset","datePipe","onSavedSend","onDeletedSend","copyLink","disableHideEmail","alertShown","sendLinkBaseUrl","isDateTimeLocalSupported","setDates","loadSend","hasPassword","encryptSend","encSend","uploadPromise","copySuccess","copyLinkToClipboard","typeChanged","toggleOptions","togglePasswordVisible","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","expirationDatePresets","Never","browserPath","Firefox","Safari","formattedDeletionDate","miliseconds","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","hour","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","EffluxDatesComponent","editSend","addSend","SendComponent","sendAddEditModalRef","DeauthorizeSessionsComponent","DeleteAccountComponent","accountService","deleteForm","EmailTokenRequest","EmailRequest","reset","ChangeEmailComponent","tokenSent","showTwoFactorEmailWarning","newEmail","UpdateProfileRequest","ProfileComponent","showChangeEmail","deauthorizeSessions","deauthModalRef","CreateOrganizationComponent","orgPlansComponent","UpdateDomainsRequest","toggleExcluded","customize","DomainRulesComponent","custom","globalDomain","excludedGlobalEquivalentDomains","d2","indexTrackBy","EmergencyAccessAttachmentsComponent","EmergencyAddEditComponent","viewAttachments","EmergencyAccessViewComponent","oldKeyBuffer","oldEncKey","cipherData","EmergencyAccessStatusType","EmergencyAccessType","EmergencyAccessConfirmRequest","EmergencyAccessInviteRequest","EmergencyAccessUpdateRequest","EmergencyAccessAddEditComponent","onSaved","View","emergencyAccessType","waitTimes","emergencyAccess","waitTime","EmergencyAccessConfirmComponent","onConfirmed","EmergencyAccessPasswordRequest","EmergencyAccessTakeoverComponent","onDone","takeoverResponse","approve","requestAccess","takeover","EmergencyAccessComponent","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","grantedContacts","contact","doConfirmation","removeGrantee","removeGrantor","RecoveryInitiated","RecoveryApproved","takeoverModalRef","form","hours","CUSTOM_VALUE","exceedsMinimumTimout","customTimeInMinutes","MIN_CUSTOM_MINUTES","vaultTimeoutPolicy","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","onChange","current","onTouched","validate","policyError","minTimeoutError","registerOnValidatorChange","VaultTimeoutInputComponent","PreferencesComponent","localeOptions","themeOptions","enableFavicons","startingLocale","startingTheme","valid","vaultTimeoutActionChanged","newValue","FolderWithIdRequest","SendWithIdRequest","UpdateKeyRequest","ChangePasswordComponent","rotateEncKey","rotateEncKeyClicked","updateKey","updateEmergencyAccesses","updateAllResetPasswordKeys","allowedStatuses","filteredAccesses","updateRequest","KdfRequest","ChangeKdfComponent","kdfOptions","recommendedKdfIterations","SecurityKeysComponent","showChangeKdf","viewUserApiKey","viewUserApiKeyModalRef","rotateUserApiKey","rotateUserApiKeyModalRef","SecurityComponent","showChangePassword","SecurityRoutingModule","hasFamilySponsorshipAvailable","hasPremiumFromOrg","hideSubscription","notAllowedValueAsync","valueGetter","caseInsensitive","notAllowedValue","controlValue","resendEmail","SponsoringOrgRowComponent","sponsoringOrg","isSelfHosted","sponsorshipRemoved","statusMessage","statusClass","setStatus","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmailPromise","isSentAwaitingSync","toDelete","validUntil","SponsoredFamiliesComponent","availableSponsorshipOrgs","activeSponsorshipOrgs","sponsorshipForm","selectedSponsorshipOrgId","validators","sponsorshipEmail","asyncValidators","updateOn","sponsoredEmail","friendlyName","resetForm","forceReload","allOrgs","sponsorshipEmailControl","anyActiveSponsorships","anyOrgsAvailable","PaymentMethodComponent","PremiumComponent","premiumPrice","finalizePremium","paymentResponse","SubscriptionComponent","hasPremium","subscriptionRoute","UserBillingHistoryComponent","UserSubscriptionComponent","SubscriptionRoutingModule","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","avoidAmbiguous","usernameWebsite","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","forwardOptions","passwordOptionsResponse","websiteOption","regenerateWithoutButtonPress","regenerate","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","sliderInput","normalizePasswordOptions","saveUsernameOptions","usernameGeneratingPromise","copyOptions","SelectCopyDirective","onCopy","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","ColorPasswordPipe","generateTemplate","templateGenerator","passwordArray","colorizedPassword","isSpecial","PasswordGeneratorHistoryComponent","lengthChanged","minNumberChanged","minSpecialChanged","GeneratorComponent","findIndex","historyModalRef","UpdateKeyComponent","makeRequest","onSavedFolder","onDeletedFolder","FolderAddEditComponent","onSharedCipher","cipherView","ShareComponent","VerifyEmailComponent","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","filterComponent","isShowingCards","shareCipher","shareModalRef","folderAddEditModalRef","updateKeyModalRef","favorites","flagName","flag","ImportExportModule","OssRoutingModule","useHash","paramsInheritanceStrategy","VerticalStepperModule","TrialInitiationModule","OrganizationManageModule","OrganizationUserModule","OssModule","WildcardRoutingModule","ProviderAddOrganizationRequest","WebProviderService","addOrganizationToProvider","encryptedOrgKey","detachOrganizastion","AddOrganizationComponent","webProviderService","onAddedOrganization","ProviderPermissionsGuard","providerPermissions","ProvidersComponent","addExistingOrganization","DisallowedPlanTypes","ClientsComponent","manageOrganizations","showAddExisting","pagedClientsCount","clients","candidateOrgs","allowedOrgsIds","addableOrganizations","pagedClients","addModalRef","ProviderUserAcceptRequest","AcceptProviderComponent","providerUsersUserIdMap","providerUsersIdMap","ProviderUserBulkRequest","ProviderUserConfirmRequest","ProviderUserBulkConfirmRequest","BulkConfirmComponent","BulkRemoveComponent","ProviderUserInviteRequest","ProviderUserUpdateRequest","ServiceUser","ProvidersLayoutComponent","showMenuBar","ProviderUpdateRequest","SetupProviderComponent","ProviderSetupRequest","SetupComponent","ProvidersRoutingModule","ProvidersModule","SecretsManagerModule","AppRoutingModule","DisableSendPolicy","DisableSendPolicyComponent","MasterPasswordPolicy","MasterPasswordPolicyComponent","showKeyConnectorInfo","passwordScores","PasswordGeneratorPolicy","PasswordGeneratorPolicyComponent","defaultTypes","PersonalOwnershipPolicy","PersonalOwnershipPolicyComponent","RequireSsoPolicy","RequireSsoPolicyComponent","singleOrgEnabled","ResetPasswordPolicy","ResetPasswordPolicyComponent","SendOptionsPolicy","SendOptionsPolicyComponent","SingleOrgPolicy","SingleOrgPolicyComponent","TwoFactorAuthenticationPolicy","TwoFactorAuthenticationPolicyComponent","toastrService","lastActivity","idleTimer","isIdle","lang","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","setFullWidth","idleStateChanged","sanitize","enableHtml","trustedHtml","timeOut","DisablePersonalVaultExportPolicy","DisablePersonalVaultExportPolicyComponent","MaximumVaultTimeoutPolicy","MaximumVaultTimeoutPolicyComponent","AppComponent","ScimConfigApi","scimProvider","ScimConfigRequest","copyScimUrl","rotateScimKey","copyScimKey","ScimComponent","showScimSettings","formData","endpointUrl","Scim","setConnectionFormValues","loadApiKey","apiKeyRequest","getScimEndpointUrl","rotatePromise","dirtyRequired","dirty","OrganizationSsoRequest","SsoConfigView","A11yInvalidDirective","formControlDirective","statusChanges","InputStripSpacesDirective","onInput","BaseCvaComponent","controlDir","internalControl","onValueChangesInternal","valueAccessor","describedById","showDescribedBy","controlId","helperText","isRequired","hasValidator","onBlurInternal","InputCheckboxComponent","InputTextComponent","stripSpaces","transformValue","emitEvent","doStripSpaces","onValueChangeInternal","InputTextReadOnlyComponent","showCopy","showLaunch","SelectComponent","validateKeyConnectorUrl","toggleOpenIdCustomizations","defaultSigningAlgorithm","ssoType","ssoTypeOptions","None","samlSigningAlgorithms","saml2SigningBehaviourOptions","IfIdpWantAuthnRequestsSigned","Always","saml2BindingTypeOptions","HttpRedirect","HttpPost","saml2NameIdFormatOptions","NotConfigured","Unspecified","EmailAddress","X509SubjectName","WindowsDomainQualifiedName","KerberosPrincipalName","EntityIdentifier","Persistent","Transient","connectRedirectOptions","RedirectGet","FormPost","showOpenIdCustomizations","haveTestedKeyConnector","openIdForm","samlForm","ssoConfigForm","newType","updateValueAndValidity","ssoSettings","populateForm","validateForm","readOutErrors","fromView","markAsPending","invalidUrl","getErrorCount","acc","enableTestKeyConnector","samlSigningAlgorithmOptions","markAsDirty","markAsTouched","ssoConfigView","errorCount","errorCountText","div","innerText","existing","OrganizationsModule","AppModule","bootstrapModule","preserveWhitespaces","CalloutComponent","useAlertRole","calloutStyle","enforcedPolicyMessage","getPasswordScoreAlertDisplay","UserVerificationComponent","disableRequestOTP","sentCode","processChanges","opacity","ApiActionDirective","appApiAction","captchaRequired","AutofocusDirective","appAutofocus","condition","autofocus","InputVerbatimDirective","appInputVerbatim","disableComplete","BitwardenToast","toastPackage","BitwardenToastGlobalConfig","toastComponent","BitwardenToastModule","ngModule","default","numberFormats","cardLength","blocks","Other","CreditCardNumberPipe","creditCardNumber","rules","matchingRule","chunks","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","I18nPipe","SearchPipe","prop1","prop2","prop3","UserNamePipe","ValidationService","defaultErrorMessage","validationErrors","getAllMessages","DynamicTreeNode","transformation","storedFolders","orgCiphers","oc","getAllFoldersNested","storedCollections","folderCopy","getFolderNested","ApiService","CollectionService","EventService","ExportService","FileDownloadService","FolderService","InternalFolderService","I18nService","KeyConnectorService","LogService","OrganizationService","PlatformUtilsService","PolicyService","InternalPolicyService","UserVerificationService","CipherRepromptType","CipherType","EncryptionType","EventType","FieldType","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","SEND_KDF_ITERATIONS","LoginLinkedId","CardLinkedId","IdentityLinkedId","PolicyType","SecureNoteType","UriMatchType","VerificationType","LinkedMetadata","_i18nKey","TreeNode","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","getDomain","isValid","nodeURL","Utils","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","binaryString","atob","fromB64ToArray","fromUrlB64ToB64","strUtf8","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","decodeURIComponent","escape","call","urlB64Str","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","uriString","getUrl","httpUrl","tldEndingRegex","getUrlObject","validIpAddress","urlDomain","pair","source","ipString","mobile","vendor","opera","hasProtocol","anchor","regexpEmojiPresentation","CardApi","FieldApi","IdentityApi","LoginApi","LoginUriApi","SecureNoteApi","AttachmentData","CardData","CipherData","CollectionData","FieldData","IdentityData","LoginData","LoginUriData","PasswordHistoryData","SecureNoteData","Attachment","toAttachmentData","buildDataModel","toCardData","Cipher","decAttachment","decField","decPh","toLoginData","toSecureNoteData","toIdentityData","toFieldData","toPasswordHistoryData","Collection","Domain","dataObj","notEncList","objProp","notEncStringList","viewModel","mapProp","EncString","encryptedStringOrType","initFromData","initFromEncryptedString","decryptedValue","parseEncryptedString","Field","Folder","Identity","Login","toLoginUriData","LoginUri","MasterPasswordPolicyOptions","Password","SecureNote","SymmetricCryptoKey","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","CipherWithIdExport","CollectionExport","CollectionWithIdExport","FolderExport","FolderWithIdExport","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CollectionRequest","FolderRequest","BaseResponse","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","messages","lastSep","AttachmentView","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","formatYear","CipherView","linkedFieldValue","linkedFieldI18nKey","CollectionView","FieldView","showCount","maskedValue","FolderView","IdentityView","_firstName","_lastName","fullName","fullAddress","fullAddressPart2","addressPart2","ItemView","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","hostnameOrUri","hostOrUri","LoginView","maskedPassword","PasswordHistoryView","SecureNoteView","LogLevelType","ConsoleLogService","timersMap","Debug","Info","Warning","level","styles","primary","secondary","danger","hoverStyles","BadgeDirective","badgeType","hasHoverEffects","nodeName","buttonStyles","ButtonDirective","block","defaultIcon","defaultI18n","calloutClass","headerClass","BitErrorSummary","errorString","nextId","BitErrorComponent","displayError","requiredLength","BitFormFieldComponent","ngAfterContentChecked","ariaDescribedBy","BitHintComponent","PrefixClasses","BitPrefixDirective","BitSuffixDirective","BadgeModule","BannerComponent","bannerType","bannerClass","BannerModule","ButtonModule","CalloutModule","InputModule","FormFieldModule","IconModule","MenuModule","DialogService","componentOrTemplateRef","backdropClass","DialogModule","SubmitButtonModule","linkStyles","contrast","LinkDirective","linkType","LinkModule","TabsModule","TabGroupComponent","TabItemComponent","baseClassList","activeClassList","ToggleGroupComponent","selectedChange","role","onInputInteraction","ToggleGroupModule","BitInputDirective","ngControl","hasPrefix","hasSuffix","ariaInvalid","_required","touched","MenuDividerComponent","MenuItemDirective","tabIndex","MenuTriggerForDirective","overlay","isOpen","hasPopup","defaultMenuConfig","panelClass","hasBackdrop","scrollStrategy","scrollStrategies","reposition","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","withLockedPosition","withFlexibleDimensions","withPush","toggleMenu","destroyMenu","openMenu","disposeAll","menu","overlayRef","templatePortal","attach","closedEventsSub","getClosedEvents","keyDownEventsSub","keydownEvents","keyManager","onKeydown","detachments","escKey","backdropClick","menuClosed","dispose","MenuComponent","menuItems","withWrap","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","chunkId","miniCssF","globalThis","Function","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","prev","doneFns","parentNode","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}